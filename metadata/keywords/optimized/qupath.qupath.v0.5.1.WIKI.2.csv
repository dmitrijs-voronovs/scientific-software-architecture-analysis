quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8449,efficient,efficient,8449,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['efficient'],['efficient']
Energy Efficiency,"d; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hema",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:1212,green,green,1212,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"d; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvolutionHelper. java.lang.Object; qupath.lib.color.ColorDeconvolutionHelper. public class ColorDeconvolutionHelper; extends Object; Static methods to assist with color deconvolution. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvolutionHelper();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT). For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values. static double[]; estimateWhiteValues(int[] rgb). Estimate white (background) values for a brightfield image. static StainVector; generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax). Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. static float[]; getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static float[]; getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static int; getMedianRGB(int[] rgb). Determine median of RGB values. static float[]; getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static final double; makeOD(double val,; double max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:1223,green,greenMax,1223,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['green'],['greenMax']
Energy Efficiency,"dImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Specified by:; getTileRequestManager in interface ImageServer<T>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:12351,efficient,efficiently,12351,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['efficient'],['efficiently']
Energy Efficiency,"de. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:559570,green,green,559570,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['green'],['green']
Energy Efficiency,"detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774709,power,power,774709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['power'],['power']
Energy Efficiency,"dual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vector. Returns:. getGreen; public double getGreen(); Get the green component of the (normalized) stain vector. Returns:. getBlue; public double getBlue(); Get the blue component of the (normalized) stain vector. Returns:. getArray; public double[] getArray(); Get the stain vector as a 3 element array (red, green, blue). Returns:. getColor; public int getColor(); Get a Color that (roughly) corresponds to color represented by this stain vector.; It may be used to create a color lookup table. Returns:. arrayAsString; public String arrayAsString(Locale locale);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:3061,green,green,3061,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['green'],['green']
Energy Efficiency,"d Hematoxylin_H_DAB_8_bit; Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. DAB_H_DAB_8_bit; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB_8_bit; DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Red_chromaticity; public static final ColorTransformer.ColorTransformMethod Red_chromaticity; Red chromaticity value, red / max(1, red + green + blue). Green_chromaticity; public static final ColorTransformer.ColorTransformMethod Green_chromaticity; Green chromaticity value, green / max(1, red + green + blue). Blue_chromaticity; public static final ColorTransformer.ColorTransformMethod Blue_chromaticity; Blue chromaticity value, blue / max(1, red + green + blue). Green_divided_by_blue; public static final ColorTransformer.ColorTransformMethod Green_divided_by_blue; Green value divided by blue value. OD_Normalized; public static final ColorTransformer.ColorTransformMethod OD_Normalized; RGB values normalized to OD vector (to reduce intensity information). Brown; public static final ColorTransformer.ColorTransformMethod Brown; Brown value, (blue - (red + green)*0.3f). White; public static final ColorTransformer.ColorTransformMethod White; All pixels white. Black; public static final ColorTransformer.ColorTransformMethod Black; All pixels black. Method Details. values; public static ColorTransformer.ColorTransformMethod[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorTransformer.ColorTransformMethod valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:7331,reduce,reduce,7331,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['reduce'],['reduce']
Energy Efficiency,"e, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Specified by:; pluginCompleted in interface SimpleProgressMonitor; Parameters:; message - message to show upon completion. cancelled; public boolean cancelled(); Description copied from interface: SimpleProgressMonitor; Returns true if cancel has been requested, for example by the user ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:2665,monitor,monitor,2665,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['monitor'],['monitor']
Energy Efficiency,"e; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Parameters:; server - ; request - ; cache - ; ensureTileReturned - ; Returns:. createTileWorker; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage> createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). getThumbnail; public BufferedImage getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache). clearCache; public void clearCache(); Clear the cache, including thumbnails, and cancel any pending requests. clearCache; public void clearCache(boolean clearThumbnails,; boolean stopWaiting); Clear the cache, optionally including thumbnails and stopping any pending requests. Parameters:; clearThumbnails - ; stopWaiting - . clearCacheForServer; public void clearC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:8277,charge,charged,8277,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['charge'],['charged']
Energy Efficiency,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:5116,reduce,reduces,5116,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['reduce'],['reduces']
Energy Efficiency,"ecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain,; boolean whiteBackground); Get an IndexColorModel representing a color deconvolution stain.; The color is just an approximation for visualization purposes, it does not perfectly match the stain itself. Parameters:; stain - the stain to use; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. createIndexColorModel; public static IndexColorModel createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground); Get an IndexColorModel representing a linear LUT based on a RGB color. Parameters:; red - the red value of the color for the maximum value; green - the green value of the color for the maximum value; blue - the blue value of the color for the maximum value; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain); Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). Parameters:; stain - ; Returns:. getMoreTranslucentColor; public static Color getMoreTranslucentColor(Color color); Get a (slightly more) translucent version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:; See Also:. getTranslucentColor(java.awt.Color). darkenColor; public static Color darkenColor(Color color); Get a (slightly) darker vers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:4598,green,green,4598,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['green'],['green']
Energy Efficiency,"ed - red lookup table to aid with fast optical density calculations; od_lut_green - green lookup table to aid with fast optical density calculations; od_lut_blue - blue lookup table to aid with fast optical density calculations; Returns:. rgbMean; public static float rgbMean(int rgb); Extract mean of RGB values from a packed RGB pixel. Parameters:; rgb - ; Returns:. redChromaticity; public static float redChromaticity(int rgb); Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). Parameters:; rgb - ; Returns:. greenChromaticity; public static float greenChromaticity(int rgb); Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). Parameters:; rgb - ; Returns:. blueChromaticity; public static float blueChromaticity(int rgb); Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). Parameters:; rgb - ; Returns:. greenOverBlue; public static float greenOverBlue(int rgb); Extract green over blue value from a packed RGB pixel, green / max(1, blue). Parameters:; rgb - ; Returns:. brown; public static float brown(int rgb); Extract brown value, (blue - (red + green)*0.3f). Parameters:; rgb - ; Returns:. hue; public static float hue(int rgb); Extract hue value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. saturation; public static float saturation(int rgb); Extract saturation value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. brightness; public static float brightness(int rgb); Extract brightness value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. getPixelValue; public static float getPixelValue(int rgb,; ColorTransformer.ColorTransformMethod method); Get the value of a single packed RGB pixel after applying a specified color transform method. Parameters:; rgb - ; method - ; Returns:. getPixelValue; public static float getPixelValue(int rgb,; ColorTransformer.ColorTransformMethod method,; ColorDeconvolutionStains stains); Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:10697,green,greenOverBlue,10697,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,4,['green'],"['green', 'greenOverBlue']"
Energy Efficiency,"ed channel, for use when no channel colors are already known. static List<ImageChannel>; getDefaultChannelList(int nChannels). Get default channel list for an image with a specified number of channels. static List<ImageChannel>; getDefaultRGBChannels(). Get default channel list for RGB images. static ImageChannel; getInstance(String name,; Integer color). Get a channel instance with the specified name and color. String; getName(). Name of the output channel. int; hashCode();  ; boolean; isTransparent(). Check if the color is 'transparent'; this is used for background/ignored channels. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. TRANSPARENT; public static final Integer TRANSPARENT; Special color indicating pixel values for a channel indicate levels of transparency. RED; public static final ImageChannel RED; Default red channel for RGB images. GREEN; public static final ImageChannel GREEN; Default green channel for RGB images. BLUE; public static final ImageChannel BLUE; Default blue channel for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may diff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:2410,green,green,2410,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,1,['green'],['green']
Energy Efficiency,"elType(ImageServerMetadata.ChannelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of channels. Charts - Class in qupath.lib.gui.charts. Helper class for generating interactive charts. Charts() - Constructor for class qupath.lib.gui.charts.Charts;  ; Charts.BarChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. Charts.PieChartBuilder - Class in qupath.lib.gui.charts. Builder for creating pie charts. Charts.ScatterChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. ChartThresholdPane - Class in qupath.lib.gui.charts. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartThresholdPane(XYChart<Number, Number>) - Constructor for class qupath.lib.gui.charts.ChartThresholdPane. Note: xAxis and yAxis must be instances of NumberAxis. ChartTools - Class in qupath.lib.gui.charts. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:97379,adapt,adapting,97379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['adapt'],['adapting']
Energy Efficiency,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:15639,efficient,efficient,15639,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['efficient'],['efficient']
Energy Efficiency,"enable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:9860,efficient,efficient,9860,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['efficient'],['efficient']
Energy Efficiency,"equire post-processing on a specific thread ; (i.e. PathTileObject - Class in qupath.lib.objects. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Perform PCA to reduce features. pearsonsCorrelation() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate Pearson's correlation coefficient. PENDING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile waiting to be processed. PERCENT - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Maps contain at least two channels. percentile(double) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate a percentile. percentile(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image, per channel, using low and high percentiles. percentile(double, double, boolean, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image using low and high percentiles. percentiles(Mat, double...) - Static method in class qupath.opencv.tools.OpenCVTools. Get perce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:761050,reduce,reduce,761050,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['reduce'],['reduce']
Energy Efficiency,"erProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/wri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769778,monitor,monitor,769778,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['monitor'],['monitor']
Energy Efficiency,"eractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:1571,reduce,reduce,1571,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['reduce'],['reduce']
Energy Efficiency,"ersion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hematoxylin_H_E_8_bit. Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Hue. Hue value (from RGB-HSB transform). OD_Normalized. RGB values normalized to OD vector (to reduce intensity information). Optical_density_sum. Sum of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransform",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:2682,green,green,2682,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"esizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI boundaries within a specified distance. BoundaryStrategy - Class in qupath.process.gui.commands.ml. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BRIGHTFIELD_H_DAB - Enum constant in enum class qupath.lib.images.ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:60532,green,green,60532,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractTileableImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. Direct Known Subclasses:; BioFormatsImageServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RenderedImageServer, SparseImageServer, WrappedBufferedImageServer. public abstract class AbstractTileableImageServer; extends AbstractImageServer<BufferedImage>; Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles.; ; The actual request is then handled by assembling the tiles, resizing as required.; This makes it possible to cache tiles and reuse them more efficiently, and often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:1174,efficient,efficiently,1174,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['efficient'],['efficiently']
Energy Efficiency,"ethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hematoxylin_H_E_8_bit. Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Hue. Hue value (from RGB-HSB transform). OD_Normalized. RGB values normalized to OD vector (to reduce intensity information). Optical_density_sum. Sum of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:1777,green,green,1777,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,2,['green'],['green']
Energy Efficiency,"g for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathIO.GeoJsonExportOptions valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:2151,reduce,reduce,2151,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,1,['reduce'],['reduce']
Energy Efficiency,"ge(ImageServer<BufferedImage>, ImagePlus, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Create a PathImage from an ImagePlus and region. createPathObjectIcon(PathObject, int, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a PathObject. createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Deprecated.; use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). createPCAProjectFeatureExtractor(FeatureExtractor<T>, Preprocessing.PCAProjector) - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. createPCAProjector(Mat, double, boolean) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Create a principle components analysis projection to reduce features. createPersistentPreference(String, boolean) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, double) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, int) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, long) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, String) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:207304,reduce,reduce,207304,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['reduce'],['reduce']
Energy Efficiency,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,adapt,adapters,19845,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['adapt'],['adapters']
Energy Efficiency,"he lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metadata. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Get an array of downsample factors supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. Collection<URI>; getURIs(). Get the URIs for images required for this server. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:3756,efficient,efficiently,3756,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['efficient'],['efficiently']
Energy Efficiency,"he system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1843,monitor,monitor,1843,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,2,['monitor'],"['monitor', 'monitoring']"
Energy Efficiency,"he vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6651,efficient,efficient,6651,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['efficient'],['efficient']
Energy Efficiency,"his has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3981,adapt,adapt,3981,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['adapt'],['adapt']
Energy Efficiency,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2053,adapt,adapt,2053,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,2,"['adapt', 'reduce']","['adapt', 'reduce']"
Energy Efficiency,"ic static Mat div(Mat m1,; Mat m2); Per-element division of two arrays. Parameters:; m1 - ; m2 - ; Returns:. div; public static Mat div(Mat m1,; double s); Divide array elements by a constant. Parameters:; m1 - ; s - ; Returns:. abs; public static Mat abs(Mat mat); Compute the absolute value of all elements in an array. Parameters:; mat - ; Returns:. negative; public static Mat negative(Mat m1); Multiply elements of an array by -1. Parameters:; m1 - ; Returns:. or; public static Mat or(Mat m1,; Mat m2); Compute the bitwise OR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. and; public static Mat and(Mat m1,; Mat m2); Compute the bitwise AND of two arrays. Parameters:; m1 - ; m2 - ; Returns:. xor; public static Mat xor(Mat m1,; Mat m2); Compute the bitwise XOR of two arrays. Parameters:; m1 - ; m2 - ; Returns:. bitwiseNegate; public static Mat bitwiseNegate(Mat m1); Compute the bitwise NOT of an array. Parameters:; m1 - ; Returns:. power; public static Mat power(Mat m1,; double power); Raise elements of an array to a specified power. Parameters:; m1 - ; power - ; Returns:. splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels of an array. Parameters:; mat - ; Returns:. gt; public static Mat gt(Mat m1,; double threshold); Apply a greater than threshold. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; threshold - ; Returns:. gt; public static Mat gt(Mat m1,; Mat m2); Apply a greater than threshold between two arrays. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; m2 - ; Returns:. eq; public static Mat eq(Mat m1,; double value); Create a binary image showing where an array has a specific value. The output is an 8-bit unsigned array with values 0 and 255. Parameters:; m1 - ; value - ; Returns:. eq; public static Mat eq(Mat m1,; Mat m2); Create a binary image showing where two arrays have matching values.; The output is an 8-bit unsigned array with values 0 and 255. Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:8808,power,power,8808,javadoc/docs/qupath/opencv/tools/GroovyCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html,4,['power'],['power']
Energy Efficiency,"iew; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingData - ; applyToTraining - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html:1667,reduce,reduce,1667,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,1,['reduce'],['reduce']
Energy Efficiency,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorMaps. java.lang.Object; qupath.lib.color.ColorMaps. public class ColorMaps; extends Object; Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:1102,green,green,1102,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['green'],['green']
Energy Efficiency,"inal String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with two stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(); Default constructor, for Externalizable. Should not be used directly. Method Details. makeDefaultColorDeconvolutionStains; public static ColorDeconvolutionStains makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains); Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). Parameters:; stains - ; Returns:. isHematoxylin; public static boolean isHematoxylin(StainVector stain); Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). Parameters:; stain - ; Returns:. isEosin; public static boolean isEosin(StainVector stain); Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). Parameters:; stain - ; Returns:. isDAB; public static boolean isDAB(StainVector stain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:6158,green,green,6158,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['green'],['green']
Energy Efficiency,"ineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Specified by:; pluginCompleted in interface SimpleProgressMonitor; Parameters:; message - message to show upon completion. cancelled; public boolean cancelled(); Description copied from interface: SimpleProgressMonitor; Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. Specified by:; cancelled in interface SimpleProgressMonitor; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:3151,monitor,monitor,3151,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['monitor'],['monitor']
Energy Efficiency,"ing the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double newValue); Create an op that replaces one pixel value in an image with another. Parameters:; originalValue - the value in the input image to replace; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6410,power,power,6410,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['power'],['power']
Energy Efficiency,"ion). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2301,adapt,adapt,2301,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,2,"['adapt', 'efficient']","['adapt', 'efficient']"
Energy Efficiency,"it red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green component from a packed (A)RGB int value. MASK_BLUE; public static final Integer MASK_BLUE; Mask for use when extracting the blue component from a packed (A)RGB int value. Method Details. makeRGB; @Deprecated; public static int makeRGB(int r,; int g,; int b); Deprecated.; Use packRGB(int, int, int) or packClippedRGB(i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:4251,green,green,4251,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['green'],['green']
Energy Efficiency,"ith default H-DAB stains. DAB_H_DAB; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB; DAB after color deconvolution with default H-DAB stains. Hematoxylin_H_E_8_bit; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_E_8_bit; Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Eosin_H_E_8_bit; public static final ColorTransformer.ColorTransformMethod Eosin_H_E_8_bit; Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Hematoxylin_H_DAB_8_bit; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_DAB_8_bit; Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. DAB_H_DAB_8_bit; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB_8_bit; DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Red_chromaticity; public static final ColorTransformer.ColorTransformMethod Red_chromaticity; Red chromaticity value, red / max(1, red + green + blue). Green_chromaticity; public static final ColorTransformer.ColorTransformMethod Green_chromaticity; Green chromaticity value, green / max(1, red + green + blue). Blue_chromaticity; public static final ColorTransformer.ColorTransformMethod Blue_chromaticity; Blue chromaticity value, blue / max(1, red + green + blue). Green_divided_by_blue; public static final ColorTransformer.ColorTransformMethod Green_divided_by_blue; Green value divided by blue value. OD_Normalized; public static final ColorTransformer.ColorTransformMethod OD_Normalized; RGB values normalized to OD vector (to reduce intensity information). Brown; public static final ColorTransformer.ColorTransformMethod Brown; Brown value, (blue - (red + green)*0.3f). White; public static final ColorTransformer.ColorTransformMethod White; All pixels white. Black; public static final ColorTransformer.ColorTransformMethod Black; All pixels black. Method Details. values; public static ColorT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:6734,green,green,6734,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"ith three stain vectors. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ColorDeconvolutionStains; changeMaxValues(double maxRed,; double maxGreen,; double maxBlue). Create a new stains object with the same StainVectors but new max (background) values. ColorDeconvolutionStains; changeName(String name). Create a new stains object with the same StainVectors but a new name. ColorDeconvolutionStains; changeStain(StainVector stainNew,; int stainNumber). Create a new stains object, identical to this one but for one StainVector having been changed. static String; getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces). Get a String representation of the stains and background. double[][]; getMatrixInverse(). Get matrix inverse, as useful for color deconvolution. double; getMaxBlue(). Get the maximum value for the blue channel (default = 255). double; getMaxGreen(). Get the maximum value for the green channel (default = 255). double; getMaxRed(). Get the maximum value for the red channel (default = 255). String; getName(). Get the stains name. StainVector; getStain(int n). Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). int; getStainNumber(StainVector stain). Get the number for a specific stain (1, 2 or 3). Collection<StainVector>; getStains(boolean includeResidual). Get a collection of all the stains. static boolean; isDAB(StainVector stain). Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). static boolean; isEosin(StainVector stain). Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). boolean; isH_DAB(). Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:2929,green,green,2929,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['green'],['green']
Energy Efficiency,"ixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap. createColorModel(PixelType, ColorMaps.ColorMap, int, double, double, int, DoubleToIntFunction) - Static method in class qupath.lib.color.ColorModelFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:168542,green,green,168542,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"kRunnerFX. public abstract class AbstractTaskRunner; extends Object; implements TaskRunner; Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to upd",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:1523,monitor,monitor,1523,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['monitor'],['monitor']
Energy Efficiency,"l objects, rather than classifications.; If this flag is set, all other label requests are ignored. Parameters:; instanceLabels - ; Returns:; Since:; v0.4.0; See Also:. useInstanceLabels(); shuffleInstanceLabels(boolean). shuffleInstanceLabels; public LabeledImageServer.Builder shuffleInstanceLabels(boolean doShuffle); Optionally request that instance labels are shuffled.; Default is true.; Only has an effect if useInstanceLabels(boolean) is called with true. Parameters:; doShuffle - ; Returns:; Since:; v0.4.0; See Also:. useInstanceLabels(); useInstanceLabels(boolean). multichannelOutput; public LabeledImageServer.Builder multichannelOutput(boolean doMultichannel); If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification.; If false, the output image is a single-channel indexed image so that each pixel value relates to ; a classification.; Indexed images are much more efficient, but are unable to support more than one classification per pixel. Parameters:; doMultichannel - ; Returns:. backgroundLabel; public LabeledImageServer.Builder backgroundLabel(int label); Specify the background label (0 by default). Parameters:; label - ; Returns:. backgroundLabel; public LabeledImageServer.Builder backgroundLabel(int label,; Integer color); Specify the background label (0 by default) and color. Parameters:; label - ; color - ; Returns:. addLabelsByName; public LabeledImageServer.Builder addLabelsByName(Map<String,Integer> labelMap); Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. Parameters:; labelMap - ; Returns:. addLabels; public LabeledImageServer.Builder addLabels(Map<PathClass,Integer> labelMap); Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:10233,efficient,efficient,10233,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['efficient'],['efficient']
Energy Efficiency,"l, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3354,green,green,3354,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['green'],['green']
Energy Efficiency,"le for use as a stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HEMATOXYLIN; public static final String HEMATOXYLIN; Default name (and spelling) for hematoxylin stain. See Also:. Constant Field Values. EOSIN; public static final String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with two stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(); Default constructor, for Externalizable. Should not be used directly. Method Details. makeDefaultColorDeconvolutionStains; public static ColorDeconvolutionStains makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains); Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). Parameters:; stains ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:5725,green,green,5725,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['green'],['green']
Energy Efficiency,"leX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6788,efficient,efficient,6788,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['efficient'],['efficient']
Energy Efficiency,"lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTran",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1060379,green,green,1060379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"llredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40989,adapt,adapt,40989,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['adapt'],['adapt']
Energy Efficiency,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63619,adapt,adapt,63619,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['adapt'],['adapt']
Energy Efficiency,"loat maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayIn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6489,green,green,6489,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['green'],['green']
Energy Efficiency,"lors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap; public static ColorMaps.ColorMap getDefaultColorMap(); Get a default, general-purpose ColorMaps.ColorMap. Returns:; See Also:. setDefaultColorMap(ColorMap). setDefaultColorMap; public static void setDefaultColorMap(ColorMaps.ColorMap colorMap); Set the default ColorMaps.ColorMap. Parameters:; colorMap - ; See Also:. getDefaultColorMap(). getColorMaps; public static Map<String,ColorMaps.ColorMap> getColorMaps(); Get an unmodifiable map representing all the currently-available colormaps. Returns:; the available colormaps. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; double[] r,; double[] g,; double[] b); Create a colormap using floating point values for red, green and blue.; These should be in the range 0-1. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int[] r,; int[] g,; int[] b); Create a colormap using integer values for red, green and blue.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int r,; int g,; int b); Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. gammaColorMap; public static ColorMaps.ColorMap gammaColorMap(ColorMaps.ColorMap map,; double gamma); Apply gamma to a colormap.; The resulting colormap normalizes the input value according to the specified min and max, ; then applies value = Math.pow(value, gamm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:4023,green,green,4023,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['green'],['green']
Energy Efficiency,"ls, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green component from a packed (A)RGB int value. MASK_BLUE; public static final Integer MASK_BLUE; Mask for use when extracting the blue component from a packed (A)RGB int value. Method Details. makeRGB; @Deprecated; public static int makeRGB(int r,; int g,; int b); Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. Make a packed RGB value from specified input values.; ; Input r, g and b should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are.; ; The alpha value is 255. Parameters:; r - ; g - ; b - ; Returns:. packRGB; public static int packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:4896,green,green,4896,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['green'],['green']
Energy Efficiency,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53262,monitor,monitoring,53262,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['monitor'],['monitoring']
Energy Efficiency,"ltStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vector. Returns:. getGreen; public double getGreen(); Get the green component of the (normalized) stain vector. Returns:. getBlue; public double getBlue(); Get the blue component of the (normalized) stain vector. Returns:. getArray; public double[] getArray(); Get the stain vector as a 3 element array (red, green, blue). Returns:. getColor; public int getColor(); Get a Color that (roughly) corresponds to color represented by this stain vector.; It may be used to create a color lookup table. Returns:. arrayAsString; public String arrayAsString(Locale locale); Get a String representation of the stain vector array, formatting according to the specified Locale. Parameters:; locale - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. computeAngle; public static double computeAngle(StainVector s1,; StainVector s2); Calculate the angle between two stain vectors, in degrees. Parameters:; s1 - ; s2 - ; Returns:. cross3; public static double[] cross3(double[] u,; double[] v); Compute the cross product of two vectors. Parameters:; u - ; v - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:3787,green,green,3787,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['green'],['green']
Energy Efficiency,"ly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an array.; ; Why? Well perhaps you want to iterate through it and getChildObjects() may result in synchronization problems if ; the list is modified by another thread. In such a case a defensive copy may already be required, and it is more efficient to request ; it here. Returns:. getPathClass; public abstract PathClass getPathClass(); Get the classification of the object. Returns:. setPathClass; public void setPathClass(PathClass pc); Set the classification of the object, without specifying any classification probability. Parameters:; pc - . resetPathClass; public boolean resetPathClass(); Reset the classification (i.e. set it to null). Returns:; true if the classification has changed, false otherwise (i.e. it was already null). setClassifications; public void setClassifications(Collection<String> classifications); Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived PathClass with each ; unique element the name of a PathClass component. The uniqueness is equivalent to copying the elements into ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:15539,efficient,efficient,15539,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['efficient'],['efficient']
Energy Efficiency,"mImages(Mat...) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from one or more mats. blobFromImages(Mat, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:60232,green,green,60232,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"mage. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976855,monitor,monitoring,976855,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['monitor'],['monitoring']
Energy Efficiency,"map. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap; public static ColorMaps.ColorMap getDefaultColorMap(); Get a default, general-purpose ColorMaps.ColorMap. Returns:; See Also:. setDefaultColorMap(ColorMap). setDefaultColorMap; public static void setDefaultColorMap(ColorMaps.ColorMap colorMap); Set the default ColorMaps.ColorMap. Parameters:; colorMap - ; See Also:. getDefaultColorMap(). getColorMaps; public static Map<String,ColorMaps.ColorMap> getColorMaps(); Get an unmodifiable map representing all the currently-available colormaps. Returns:; the available colormaps. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; double[] r,; double[] g,; double[] b); Create a colormap using floating point values for red, green and blue.; These should be in the range 0-1. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int[] r,; int[] g,; int[] b); Create a colormap using integer values for red, green and blue.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int r,; int g,; int b); Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. gammaColorMap; public static ColorMaps.ColorMap gammaColorMap(ColorMaps.ColorMap map,; double gamma); Apply gamma to a colormap.; The resulting colormap normalizes the input value according to the specified min and max, ; then applies value = Math.pow(value, gamma) before passing this to the ; wrapped ColorMaps.ColorMap. Parameters:; map - base colormap; gamma - gamma value; Returns:; transformed colormap. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:4280,green,green,4280,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,2,['green'],['green']
Energy Efficiency,"markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672314,green,green,672314,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"mbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3021,efficient,efficiently,3021,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['efficient'],['efficiently']
Energy Efficiency,"meter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; maxEntries - ; Returns:. smoothImage; public static BufferedImage smoothImage(BufferedImage img); Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). Parameters:; img - ; Returns:. getModeRGB; public static int[] getModeRGB(int[] rgb); Get the mode from an array of (packed) RGB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3703,green,greenOD,3703,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['green'],['greenOD']
Energy Efficiency,"mmand. Constructor. BrightnessContrastHistogramPane - Class in qupath.lib.gui.commands.display. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastHistogramPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane;  ; BrightnessContrastSettingsPane - Class in qupath.lib.gui.commands.display. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:64154,green,green,64154,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"nType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted from the original; A local weighted variance estimate image is generated from the original image (by squaring, Gaussian filtering, ; subtracting the square of the smoothed image previously generated); The square root of the weighted variance image is taken to give a normalization image, approximating a local standard deviation); The subtracted image is divided by the value of the normalization image. The resulting image can be thought of as having a local mean of approximately zero and unit variance, ; although this is not exactly true; in practice there can be substantial differences.; However, the approach aims to be simple, efficient and yield an image that does not ; introduce sharp discontinuities by is reliance on Gaussian filters. Parameters:; stack - image z-stack, in which each element is a 2D (x,y) slice; sigmaX - horizontal Gaussian filter sigma; sigmaY - vertical Gaussian filter sigma; sigmaZ - z-dimension Gaussian filter sigma; varianceSigmaX - horizontal Gaussian filter sigma for variance estimation; varianceSigmaY - vertical Gaussian filter sigma for variance estimation; varianceSigmaZ - z-dimension Gaussian filter sigma for variance estimation; border - border padding method to use (see OpenCV for definitions). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:3501,efficient,efficient,3501,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html,1,['efficient'],['efficient']
Energy Efficiency,"nal ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ColorTransformer.ColorTransformMethod Hue; Hue value (from RGB-HSB transform). Saturation; public static final ColorTransformer.ColorTransformMethod Saturation; Saturation value (from RGB-HSB transform). Brightness; public static final ColorTransformer.ColorTransformMethod Brightness; Brightness value (from RGB-HSB transform). Stain_1; public static final ColorTransformer.ColorTransformMethod Stain_1; First stain after color deconvolution. Stain_2; public static final ColorTransformer.ColorTransformMethod Stain_2; Second stain after color deconvolution. Stain_3; public static final ColorTransformer.ColorTransformMethod Stain_3; Third stain after color deconvolution. Optical_density_sum; public static final ColorTransformer.ColorTransformMethod Optical_density_sum; Sum of red, green and blue optical densities. Hematoxylin_H_E; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_E; Hematoxylin after color deconvolution with default H&E stains. Eosin_H_E; public static final ColorTransformer.ColorTransformMethod Eosin_H_E; Eosin after color deconvolution with default H&E stains. Hematoxylin_H_DAB; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_DAB; Hematoxylin after color deconvolution with default H-DAB stains. DAB_H_DAB; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB; DAB after color deconvolution with default H-DAB stains. Hematoxylin_H_E_8_bit; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_E_8_bit; Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Eosin_H_E_8_bit; public static final ColorTransformer.ColorTransformMethod Eosin_H_E_8_bit; Eosin after color deconvolution with default H&E stains and conversion to 8-bit. He",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:5239,green,green,5239,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"ng. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774812,power,power,774812,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['power'],['power']
Energy Efficiency,"ng.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ColorTransformer.ColorTransformMethod Hue; Hue value (from RGB-HSB transform). Saturation; public static final ColorTransformer.ColorTransformMethod Saturation; Saturation value (from RGB-HSB transform). Brightness; public static final ColorTransformer.ColorTransformMethod Brightness; Brightness value (from RGB-HSB transform). Stain_1; public static final ColorTransformer.ColorTransformMethod Stain_1; First stain after color deconvolution. Stain_2; public static final ColorTransformer.ColorTransformMethod Stain_2; Second stain after color deconvolution. Stain_3; public static final ColorTransformer.ColorTransformMethod Stain_3; Third stain after color deconvolution. Optical_density_sum; public static final ColorTransformer.ColorTransformMethod Optical_density_sum; Sum of red, green and blue optical densities. Hematoxylin_H_E; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_E; Hematoxylin after color dec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:4402,green,green,4402,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"nitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or Sw",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:2524,monitor,monitor,2524,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['monitor'],['monitor']
Energy Efficiency,"ns). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). Create a new packed-int representation of an RGB color.; . Parameters:; v - A value between 0 and 255. If a single value is give, the result will be; a shade of gray (RGB all with that value). Otherwise, 3 or 4 values may be given to generate ; either an RGB or RGBA color. Note: values are expected in order RGBA, but Java's packed ints are really ARGB.; Returns:. makeRGB; public static Integer makeRGB(int r,; int g,; int b); Make a packed int representation of an RGB color.; Alpha defaults to 255.; Red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; r - ; g - ; b - ; Returns:. makeARGB; public static Integer makeARGB(int a,; int r,; int g,; int b); Make a packed int representation of an ARGB color.; Alpha, red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; a - ; r - ; g - ; b - ; Returns:. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:50499,green,green,50499,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['green'],['green']
Energy Efficiency,"nstr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.Core. java.lang.Object; qupath.opencv.ops.ImageOps.Core. Enclosing class:; ImageOps. public static class ImageOps.Core; extends Object; Core operations. Constructor Summary; Constructors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1201,power,power,1201,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['power'],['power']
Energy Efficiency,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53110,adapt,adapted,53110,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['adapt'],['adapted']
Energy Efficiency,"ntException; Set the metadata to use, e.g. to change the pixel size in microns. Parameters:; metadata - ; Throws:; IllegalArgumentException - if the metadata is incompatible (e.g. different image path, different bit-depth). getOriginalMetadata; ImageServerMetadata getOriginalMetadata(); Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. getMetadata(). getDefaultThumbnail; T getDefaultThumbnail(int z,; int t); throws IOException; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; TileRequestManager getTileRequestManager(); Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Returns:. getImageClass; Class<T> getImageClass(); Get the class of the image representation returned by this ImageServer. Returns:. getBuilder; default ImageServerBuilder.ServerBuilder<T> getBuilder(); Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:14627,efficient,efficiently,14627,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['efficient'],['efficiently']
Energy Efficiency,"ocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1060724,green,green,1060724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"olean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2882,green,green,2882,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['green'],['green']
Energy Efficiency,"olor.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to show a (counting) grid on top of an image. GridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.GridOverlay. Constructor. gridScale",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:560141,green,green,560141,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['green'],['green']
Energy Efficiency,"olutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:667458,monitor,monitor,667458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['monitor'],['monitor']
Energy Efficiency,"on probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Parameters:; pathClass - ; classProbability - . getClassProbability; public abstract double getClassProbability(); Request the classification probability, or Double.NaN if no probability is available. Returns:. getDisplayedName; public String getDisplayedName(); Request an object name in a form suitable for displaying.; ; This may combine various properties of the object. Returns:. getName; public String getName(); Request the stored object name. Returns:. setName; public void setName(String name); Set the stored object name. Parameters:; name - . getROI; public abstract ROI getROI(); Get the region of interest (ROI) for the object. Returns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); Deprecated.; since v0.4.0, use setColor(Integer) instead. Set the display color. Parameters:; color - . setColor; public void setColor(Integer color); Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). Parameters:; color - packed (A)RGB value, or null if a color should not stored; Since:; v0.4.0; See Also:. setColor(int, int, int); ColorTools.packRGB(int, int, int). setColor; public void setColor(int red,; int green,; int blue); Set the display color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getID; public UUID getID(); Get the ID for this object. Returns:; See Also:. setID(UUID); refreshID(). setID; public void setID(U",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:19199,green,green,19199,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['green'],['green']
Energy Efficiency,"on). retainHessian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Optionally retain the Hessian matrix per pixel. retrieveMetadataKeys() - Method in class qupath.lib.objects.PathObject. Get the set of metadata keys. retrieveMetadataValue(String) - Method in class qupath.lib.objects.PathObject. Get a metadata value. returnToMove - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; returnToMoveModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the GUI returns to using the PAN tool after a ROI is drawn. rgb(boolean) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify that the image stores pixels in (A)RGB form. RGB - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image (default behavior in v0.1.2 and before). RGB_mean - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Mean of red, green and blue channels. rgbMean(int) - Static method in class qupath.lib.color.ColorTransformer. Extract mean of RGB values from a packed RGB pixel. RichScriptEditor - Class in qupath.lib.gui.scripting.richtextfx. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Constructor. RichScriptEditorExtension - Class in qupath.lib.gui.scripting.richtextfx. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). RichScriptEditorExtension() - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; RIGID_OBJECT_EDITOR - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ROI - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a ROI. ROI - Int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:868280,green,green,868280,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"onBuilder. Set the graphic property of the action. GRAY - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Grayscale image. grayscale() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use grayscale LUT, rather than deriving colors from classifications. grayscale(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, gree",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:559001,green,green,559001,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap. createColorModel(PixelType, ColorMaps.ColorMap, int, double, double, int, DoubleToIntFunction) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap, scaled within a defined range and with an optional additional alpha channel used to ; determine opacity. createColorModelBuilder(Colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:168693,green,green,168693,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"orDeconvolutionStains stains). Apply a color transform to all pixels in a packed (A)RGB array. static float; greenChromaticity(int rgb). Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). static float; greenOverBlue(int rgb). Extract green over blue value from a packed RGB pixel, green / max(1, blue). static float; hue(int rgb). Extract hue value from RGB-to-HSB transform. static int; makeScaledRGBwithRangeCheck(float v,; float offset,; float scale,; ColorModel cm). Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT). Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformer; public ColorTransformer(). Method Details. getODNormalizedColor; public static int getODNormalizedColor(int rgb,; double minOD,; float offset,; float scale); Create a 'normalized' color for visualization.; ; This is achieved by converting RGB values to optical densities, putting the RGB ODs into; a 3x1 vector and normalizing this to unit length, then rescal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:5397,green,green,5397,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['green'],['green']
Energy Efficiency,"ote that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3627,adapt,adapt,3627,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['adapt'],['adapt']
Energy Efficiency,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1044,monitor,monitor,1044,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['monitor'],['monitor']
Energy Efficiency,"packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, int). unpackRGB; public static int[] unpackRGB(int rgb); Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackRGB; public static int[] unpackRGB(int rgb,; int[] array); Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. unpackARGB; public static int[] unpackARGB(int rgb); Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackARGB; public static int[] unpackARGB(int rgb,; int[] array); Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the alpha, red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. packClippedRGB; public static int packClippedRGB(int r,; int g,; int b); Make a packed RGB value from specified input values, clipping to the range 0-255.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; // * @see #packRGB(int, int, int). makeRGBA; @Deprecated; public static int makeRGBA(int r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:6538,green,green,6538,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['green'],['green']
Energy Efficiency,"path.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1060564,green,green,1060564,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"per class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. missing) feature values; Returns:; a Normalizer that may be applied to new data. normalize; public static void normalize(Mat samples,; Normalizer normalizer); Apply a Normalizer to new training data samples.; Features may be either columns or channels. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1801,reduce,reduce,1801,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['reduce'],['reduce']
Energy Efficiency,"precated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. Make a packed RGB value from specified input values.; ; Input r, g and b should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are.; ; The alpha value is 255. Parameters:; r - ; g - ; b - ; Returns:. packRGB; public static int packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, int). unpackRGB; public static int[] unpackRGB(int rgb); Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackRGB; public static int[] unpackRGB(int rgb,; int[] array); Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. unpackARGB; public static int[] unpackARGB(int rgb); Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackARGB; public static int[] unpackARGB(int rgb,; int[] array); Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the alpha, red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. packClippedRGB; public static int packClippedRGB(int r,; int g,; int b); Make a packed RGB value from specified input values, clipping to t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:6190,green,green,6190,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['green'],['green']
Energy Efficiency,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:7628,green,green,7628,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['green'],['green']
Energy Efficiency,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:4212,adapt,adapt,4212,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['adapt'],['adapt']
Energy Efficiency,"r class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774819,power,power,774819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['power'],['power']
Energy Efficiency,"r current PathClasses. createClassifier(OpenCVClassifiers.OpenCVStatModel, ImageDataOp, PixelClassifierMetadata, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a Color",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:168381,green,green,168381,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"r deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hematoxylin_H_E_8_bit. Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Hue. Hue value (from RGB-HSB transform). OD_Normalized. RGB values normalized to OD vector (to reduce intensity information). Optical_density_sum. Sum of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:2461,green,green,2461,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"r directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static method in class qupath.lib.color.ColorTransformer. Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. makeSnapshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the current GUI. makeSnapshot(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. makeSnapshot(QuPathGUI, QuPathViewer, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:668244,green,green,668244,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"ransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform that applies color deconvolution. Parameters:; stains - the stains (this will be 'fixed', and not adapted for each image); stainNumber - number of the stain (1, 2 or 3); Returns:. createMaximumChannelTransform; public static ColorTransforms.ColorTransform createMaximumChannelTransform(); Create a ColorTransform that calculates the maximum of all channels. Returns:. createMinimumChannelTransform; public static ColorTransforms.ColorTransform createMinimumChannelTransform(); Create a ColorTransform that calculates the minimum of all channels. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html:3369,adapt,adapted,3369,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,1,['adapt'],['adapted']
Energy Efficiency,"recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be applied to the control. isRedoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isResidual() - Method in class qupath.lib.color.StainVector. Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. isResizable() - Method in class qupath.lib.gui.ColorMapCanvas;  ; isRGB() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; isRGB() - Method in interface qupath.lib.images.servers.ImageServer. True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. isRGB() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if the pixels are stored in (A)RGB form. isRootObject() - Method in class qupath.lib.objects.PathObject. Returns true if the object is the 'root' of an object hierarchy. isRootObject() - Method in class qupath.lib.objects.PathRootObject;  ; isRotated() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if viewer.getRotation() != 0. isScalebarVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the scalebar is visible, false otherwise. isSelectable(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Specify that an Action has a meaningful 'selected' status. isSelected() - Method in class qupath.lib.gui.SelectableItem. Returns true if the value of the selected property equals SelectableItem.getItem(). isSelected(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:631287,green,green,631287,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9122,efficient,efficient,9122,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['efficient'],['efficient']
Energy Efficiency,"ressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2038,monitor,monitor,2038,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['monitor'],['monitor']
Energy Efficiency,"rfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:330197,green,green,330197,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"rgb,; double scale). Scale the RGB channels for a color by a fixed amount. static int; packARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values. static int; packClippedARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3608,green,green,3608,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['green'],['green']
Energy Efficiency,"rs.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified file. OpenSlideJNA - Interface in qupath.lib.images.servers.openslide.jna. JNA interface for OpenSlide. OpenSlideLoader - Class in qupath.lib.images.servers.openslide.jna. Static helper class to manage loading the OpenSlide library. OpenSlideLoader() - Constructor for class qupath.lib.images.servers.openslide.jna.OpenSlideLoader;  ; openslidePathProperty - Variable in class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideServerBuilder - Class in qupath.lib.images.servers.openslide. Builder for Openslide ImageServer. OpenslideServerBuilder() - Constructor for class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. options(OverlayOptions) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the overlay options to control display. or(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise OR of two arrays. or(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:730818,green,green,730818,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"s provided. static float[]; getSimpleTransformedPixels(int[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels). Apply a color transform to all pixels in a packed (A)RGB array. static float; getStainProjection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of projection of pixel OD onto stain OD. static float; getStainRejection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of rejection of pixel OD onto stain OD. static float[]; getTransformedPixels(int[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels,; ColorDeconvolutionStains stains). Apply a color transform to all pixels in a packed (A)RGB array. static float; greenChromaticity(int rgb). Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). static float; greenOverBlue(int rgb). Extract green over blue value from a packed RGB pixel, green / max(1, blue). static float; hue(int rgb). Extract hue value from RGB-to-HSB transform. static int; makeScaledRGBwithRangeCheck(float v,; float offset,; float scale,; ColorModel cm). Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:4611,green,greenOverBlue,4611,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['green'],['greenOverBlue']
Energy Efficiency,"ser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html:1081,reduce,reduce,1081,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,1,['reduce'],['reduce']
Energy Efficiency,"sing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:559877,green,greenChromaticity,559877,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['greenChromaticity']
Energy Efficiency,"ss(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774935,power,power,774935,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['power'],['power']
Energy Efficiency,"ss/contrast adjustment, allowing the user to select min/max values. BrightnessContrastHistogramPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane;  ; BrightnessContrastSettingsPane - Class in qupath.lib.gui.commands.display. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:64288,green,green,64288,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1187,monitor,monitor,1187,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['monitor'],['monitor']
Energy Efficiency,"t; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB_8_bit; DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Red_chromaticity; public static final ColorTransformer.ColorTransformMethod Red_chromaticity; Red chromaticity value, red / max(1, red + green + blue). Green_chromaticity; public static final ColorTransformer.ColorTransformMethod Green_chromaticity; Green chromaticity value, green / max(1, red + green + blue). Blue_chromaticity; public static final ColorTransformer.ColorTransformMethod Blue_chromaticity; Blue chromaticity value, blue / max(1, red + green + blue). Green_divided_by_blue; public static final ColorTransformer.ColorTransformMethod Green_divided_by_blue; Green value divided by blue value. OD_Normalized; public static final ColorTransformer.ColorTransformMethod OD_Normalized; RGB values normalized to OD vector (to reduce intensity information). Brown; public static final ColorTransformer.ColorTransformMethod Brown; Brown value, (blue - (red + green)*0.3f). White; public static final ColorTransformer.ColorTransformMethod White; All pixels white. Black; public static final ColorTransformer.ColorTransformMethod Black; All pixels black. Method Details. values; public static ColorTransformer.ColorTransformMethod[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorTransformer.ColorTransformMethod valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:7462,green,green,7462,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"t[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels). Apply a color transform to all pixels in a packed (A)RGB array. static float; getStainProjection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of projection of pixel OD onto stain OD. static float; getStainRejection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of rejection of pixel OD onto stain OD. static float[]; getTransformedPixels(int[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels,; ColorDeconvolutionStains stains). Apply a color transform to all pixels in a packed (A)RGB array. static float; greenChromaticity(int rgb). Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). static float; greenOverBlue(int rgb). Extract green over blue value from a packed RGB pixel, green / max(1, blue). static float; hue(int rgb). Extract hue value from RGB-to-HSB transform. static int; makeScaledRGBwithRangeCheck(float v,; float offset,; float scale,; ColorModel cm). Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:4643,green,green,4643,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,2,['green'],['green']
Energy Efficiency,"ta - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:26319,monitor,monitor,26319,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['monitor'],['monitor']
Energy Efficiency,"ta<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. getTilesToRequest(ImageServer<?>, Shape, double, int, int, List<RegionRequest>) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). getTileWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile at the tile resolution. getTileWidth() - Method in class qupath.lib.objects.utils.Tiler. Get the width",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:535180,efficient,efficiently,535180,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['efficient'],['efficiently']
Energy Efficiency,"tails. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vector. Returns:. getGreen; public double getGreen(); Get the green component of the (normalized) stain vector. Returns:. getBlue; public double getBlue(); Get the blue component of the (normalized) stain vector. Returns:. getArray; public double[] getArray(); Get the stain vector as a 3 element array (red, green, blue). Returns:. getColor; public int getColor(); Get a Color that (roughly) corresponds to color represented by this stain vector.; It may be used to create a color lookup table. Returns:. arrayAsString; public String arrayAsString(Locale locale); Get a String representation of the stain vector array, formatting according to the specified Locale. Parameters:; locale - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. computeAngle; public static double computeAngle(StainVector s1,; StainVector s2); Calculate the angle between two stain vectors, in degrees. Parameters:; s1 - ; s2 - ; Returns:. cross3; public static double[] cross3(double[] u,; double[] v); Compute the cross product of two vectors. Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:3540,green,green,3540,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['green'],['green']
Energy Efficiency,"tants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hematoxylin_H_E_8_bit. Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Hue. Hue value (from RGB-HSB transform). OD_No",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:1358,green,green,1358,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"th.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get al",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:398525,green,green,398525,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['green'],['green']
Energy Efficiency,"tions; od_lut_blue - blue lookup table to aid with fast optical density calculations; Returns:. rgbMean; public static float rgbMean(int rgb); Extract mean of RGB values from a packed RGB pixel. Parameters:; rgb - ; Returns:. redChromaticity; public static float redChromaticity(int rgb); Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). Parameters:; rgb - ; Returns:. greenChromaticity; public static float greenChromaticity(int rgb); Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). Parameters:; rgb - ; Returns:. blueChromaticity; public static float blueChromaticity(int rgb); Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). Parameters:; rgb - ; Returns:. greenOverBlue; public static float greenOverBlue(int rgb); Extract green over blue value from a packed RGB pixel, green / max(1, blue). Parameters:; rgb - ; Returns:. brown; public static float brown(int rgb); Extract brown value, (blue - (red + green)*0.3f). Parameters:; rgb - ; Returns:. hue; public static float hue(int rgb); Extract hue value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. saturation; public static float saturation(int rgb); Extract saturation value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. brightness; public static float brightness(int rgb); Extract brightness value from RGB-to-HSB transform. Parameters:; rgb - ; Returns:. getPixelValue; public static float getPixelValue(int rgb,; ColorTransformer.ColorTransformMethod method); Get the value of a single packed RGB pixel after applying a specified color transform method. Parameters:; rgb - ; method - ; Returns:. getPixelValue; public static float getPixelValue(int rgb,; ColorTransformer.ColorTransformMethod method,; ColorDeconvolutionStains stains); Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. Parameters:; rg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:10943,green,green,10943,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['green'],['green']
Energy Efficiency,"tors. Constructor; Description; Core();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; add(double... values). Add a constant to all pixels. static ImageOp; ceil(). Create an op that ceils floating point values. static ImageOp; clip(double min,; double max). Create an op that clips Mat values to the specified minimum and maximum. static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1551,power,power,1551,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['power'],['power']
Energy Efficiency,"ublic interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; messag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1476,monitor,monitor,1476,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,2,['monitor'],"['monitor', 'monitoring']"
Energy Efficiency,"ult H&E stains and conversion to 8-bit. Eosin_H_E_8_bit; public static final ColorTransformer.ColorTransformMethod Eosin_H_E_8_bit; Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Hematoxylin_H_DAB_8_bit; public static final ColorTransformer.ColorTransformMethod Hematoxylin_H_DAB_8_bit; Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. DAB_H_DAB_8_bit; public static final ColorTransformer.ColorTransformMethod DAB_H_DAB_8_bit; DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Red_chromaticity; public static final ColorTransformer.ColorTransformMethod Red_chromaticity; Red chromaticity value, red / max(1, red + green + blue). Green_chromaticity; public static final ColorTransformer.ColorTransformMethod Green_chromaticity; Green chromaticity value, green / max(1, red + green + blue). Blue_chromaticity; public static final ColorTransformer.ColorTransformMethod Blue_chromaticity; Blue chromaticity value, blue / max(1, red + green + blue). Green_divided_by_blue; public static final ColorTransformer.ColorTransformMethod Green_divided_by_blue; Green value divided by blue value. OD_Normalized; public static final ColorTransformer.ColorTransformMethod OD_Normalized; RGB values normalized to OD vector (to reduce intensity information). Brown; public static final ColorTransformer.ColorTransformMethod Brown; Brown value, (blue - (red + green)*0.3f). White; public static final ColorTransformer.ColorTransformMethod White; All pixels white. Black; public static final ColorTransformer.ColorTransformMethod Black; All pixels black. Method Details. values; public static ColorTransformer.ColorTransformMethod[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorTransformer.ColorTransformMethod valueOf(String name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:7050,green,green,7050,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"ult H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hematoxylin_H_E_8_bit. Hematoxylin after color deconvolution with default H&E stains and conversion to 8-bit. Hue. Hue value (from RGB-HSB transform). OD_Normalized. RGB values normalized to OD vector (to reduce intensity information). Optical_density_sum. Sum of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:2605,green,green,2605,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['green'],['green']
Energy Efficiency,"urns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); Deprecated.; since v0.4.0, use setColor(Integer) instead. Set the display color. Parameters:; color - . setColor; public void setColor(Integer color); Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). Parameters:; color - packed (A)RGB value, or null if a color should not stored; Since:; v0.4.0; See Also:. setColor(int, int, int); ColorTools.packRGB(int, int, int). setColor; public void setColor(int red,; int green,; int blue); Set the display color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getID; public UUID getID(); Get the ID for this object. Returns:; See Also:. setID(UUID); refreshID(). setID; public void setID(UUID id); throws IllegalArgumentException; Set the ID for this object.; ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:19964,green,green,19964,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['green'],['green']
Energy Efficiency,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Specified by:; isCancelled in interface TaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:3351,monitor,monitor,3351,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['monitor'],['monitor']
Energy Efficiency,"void colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; maxEntries - ; Returns:. smoothImage; public static BufferedImage smoothImage(BufferedImage img); Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). Parameters:; img - ; Returns:. getModeRGB; public static int[] getModeRGB(int[] rgb); Get the mode from an array of (packed) RGB pixel values. Parameters:; rgb - ; Returns:; an array with 3 entries giving the Red, Green & Blue values (in order) corresponding to the mode; of each channel from the packed RGB pixel array. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3937,green,greenOD,3937,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['green'],['greenOD']
Energy Efficiency,"width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image width and height. This may either be a hint or strictly enforced. Parameters:; width - ; height - ; Returns:. outputPixelType; public PixelClassifierMetadata.Builder outputPixelType(PixelType pixelType); Output pixel type. Parameters:; pixelType - ; Returns:. outputChannels; public PixelClassifierMetadata.Builder outputChannels(ImageChannel... channels); Specify channels for output. Parameters:; channels - ; Returns:. outpu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:2407,reduce,reduce,2407,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,1,['reduce'],['reduce']
Energy Efficiency,"y; Constructors. Constructor; Description; StainVector(). Default constructor, required for Externalizable interface. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; arrayAsString(Locale locale). Get a String representation of the stain vector array, formatting according to the specified Locale. static double; computeAngle(StainVector s1,; StainVector s2). Calculate the angle between two stain vectors, in degrees. static StainVector; createStainVector(String name,; double r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static Stain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:1846,green,green,1846,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['green'],['green']
Energy Efficiency,"ylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools() - Constructor for class qupath.lib.io.GsonTools;  ; GsonTools.SubTypeAdapterFactory<T> - Class in qupath.lib.io. A TypeAdapterFactory that is suitable for handling class hierarchies. gt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold. gt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold between two arrays. GuiTools - Class in qupath.lib.gui.tools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools() - Constructor for class qupath.lib.gui.tools.GuiTools;  ; GuiTools.SnapshotType - Enum Class in qupath.lib.gui.tools. Kinds of snapshot image that can be created for QuPath. H. H_DAB - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:563247,adapt,adapters,563247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['adapt'],['adapters']
Energy Efficiency,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1101,efficient,efficient,1101,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['efficient'],['efficient']
Energy Efficiency," boolean isDerivedClass(); Returns true if #getParentClass() != null. Returns:. isDerivedFrom; public boolean isDerivedFrom(PathClass parentClass); Returns true if this class, or any ancestor class, is equal to the specified parent class. Parameters:; parentClass - ; Returns:. isAncestorOf; public boolean isAncestorOf(PathClass childClass); Returns true if this class is equal to the specified child class, ; or an ancestor of that class. Parameters:; childClass - ; Returns:. getBaseClass; public PathClass getBaseClass(); Get the 'base' class, i.e. trace back through getParentClass() until no parent is available.; ; For a PathClass with no parent, this just returns itself. Returns:. setColor; public void setColor(Integer colorRGB); Set the color that should be used to display objects with this classification. Parameters:; colorRGB - color, as a packed (A)RGB value. setColor; public void setColor(int red,; int green,; int blue); Set the color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getColor; public Integer getColor(); Get the color that should be used to display objects with this classification. Returns:; packed (A)RGB value representing the classification color. getName; public String getName(); Get the name of this classification. ; Note that this does not incorporate information from any parent classifications; to access this, ; use toString() instead. Returns:. toString; public String toString(). Overrides:; toString in class Object. toString; public String toString(String delimiter); Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:8546,green,green,8546,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['green'],['green']
Energy Efficiency," stains). Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. static float[]; getSimpleTransformedPixels(int[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels). Apply a color transform to all pixels in a packed (A)RGB array. static float; getStainProjection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of projection of pixel OD onto stain OD. static float; getStainRejection(int rgb,; double rStain,; double gStain,; double bStain,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Calculate magnitude of rejection of pixel OD onto stain OD. static float[]; getTransformedPixels(int[] buf,; ColorTransformer.ColorTransformMethod method,; float[] pixels,; ColorDeconvolutionStains stains). Apply a color transform to all pixels in a packed (A)RGB array. static float; greenChromaticity(int rgb). Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). static float; greenOverBlue(int rgb). Extract green over blue value from a packed RGB pixel, green / max(1, blue). static float; hue(int rgb). Extract hue value from RGB-to-HSB transform. static int; makeScaledRGBwithRangeCheck(float v,; float offset,; float scale,; ColorModel cm). Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a pac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:4475,green,greenChromaticity,4475,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['green'],['greenChromaticity']
Integrability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1032,interface,interfaces,1032,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,1,['interface'],['interfaces']
Integrability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1529,message,messages,1529,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,3,['message'],"['message', 'messages']"
Integrability," (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:56659,interface,interface,56659,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability," (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the convex hull for point annotations within the viewer. showProjectMetadataEditor(Project<?>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Show the metadata editor for the specified project. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the scalebar. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the scalebar. showScript(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, opening an existing script file. showScript(String, String) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(String, String) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, including a new script with the specified name. showScript(ScriptEditor, Workflow) - Static method in class qupath.lib.gui.panes.WorkflowCommandLogView. Show a script in the script editor based on the specified workflow. showScriptEditor(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show the script editor, or bring the window to the front if it is already open. showScriptInterpreter(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a script interpreter window for a Qupath instance. showSelection(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether selected objects are displayed.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:970429,interface,interface,970429,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2029,message,messages,2029,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['message'],['messages']
Integrability," - Class in qupath.lib.analysis.heatmaps. Class for constructing and using density maps. DensityMaps() - Constructor for class qupath.lib.analysis.heatmaps.DensityMaps;  ; DensityMaps.DensityMapBuilder - Class in qupath.lib.analysis.heatmaps. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters - Class in qupath.lib.analysis.heatmaps. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType - Enum Class in qupath.lib.analysis.heatmaps. Density map types. DensityMapUI - Class in qupath.process.gui.commands.density. UI elements associated with density maps. DensityMapUI() - Constructor for class qupath.process.gui.commands.density.DensityMapUI;  ; deregister() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Deregister listeners. deregisterTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; deregisterTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Deregister the tool from the viewer. describe(Class<?>) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified class. describe(Object) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified object. deselect() - Method in interface qupath.lib.gui.scripting.EditableText. Deselect any currently-selected text. deselect() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deselect() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; deselectAll() - Static method in class qupath.lib.scripting.QP. Clear the selection for the current hierarchy, so that no objects of any kind are selected. deselectAll(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the selection, so that no objects of any kind are selected. deselectObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:250114,interface,interface,250114,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.Norma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453958,interface,interface,453958,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scale",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:504920,interface,interface,504920,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:455660,interface,interface,455660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability, - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Returns false (the default value). supportsMulticlass() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier is able to handle more than one outputs for a single sample. supportsPixelSize() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPixelSize() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPixelSize() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPixelSize() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPixelSize() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of storing pixel size information. supportsPixelSize() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVM,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1010889,interface,interface,1010889,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6864,interface,interface,6864,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.server",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728026,interface,interface,728026,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:5751,depend,depending,5751,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['depend'],['depending']
Integrability," @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:5723,interface,interface,5723,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1539,message,messages,1539,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['message'],['messages']
Integrability," BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9218,interface,interface,9218,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability, Class with static methods to fetch all the available ScriptLanguages. ScriptLanguageProvider() - Constructor for class qupath.lib.gui.scripting.languages.ScriptLanguageProvider;  ; ScriptParameters - Class in qupath.lib.scripting. Class that stores key information that is useful for running scripts. ScriptParameters.Builder - Class in qupath.lib.scripting. Builder class for ScriptParameters. scriptRunning() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Observable value indicating whether a script is currently running or not. scriptsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the shared scripts directory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ;,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:889820,interface,interface,889820,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for this request. int; getImageWidth(). Get the width of the bounding box for this tile in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:1179,wrap,wrap,1179,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['wrap'],['wrap']
Integrability," Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... ext",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10211,message,message,10211,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:4521,interface,interface,4521,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['interface'],['interface']
Integrability," Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:9713,interface,interface,9713,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7219,interface,interface,7219,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:5286,interface,interface,5286,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:3615,interface,interface,3615,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['interface'],['interface']
Integrability," DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:35803,wrap,wrapper,35803,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrapper']
Integrability," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4296,interface,interface,4296,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['interface'],['interface']
Integrability," Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:5123,interface,interface,5123,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['interface'],['interface']
Integrability," Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566132,interface,interface,566132,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2555,interface,interface,2555,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['interface'],['interface']
Integrability," Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; mat - ; Returns:. batchPredict; public List<Mat> batchPredict(List<? extends Mat> mats); Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats.; This method is intended for cases where the batch size should be greater than one; for a batch size of one, predict(Mat) can; be used instead. Specified by:; batchPredict in interface DnnModel; Parameters:; mats - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3944,interface,interface,3944,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,3,['interface'],['interface']
Integrability," Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTask",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:3411,interface,interface,3411,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['interface'],['interface']
Integrability," Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:5421,interface,interface,5421,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability," Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:448709,interface,interface,448709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.El",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615926,interface,interface,615926,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:388846,interface,interface,388846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Specified by:; isCancelled in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:2777,interface,interface,2777,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['interface'],['interface']
Integrability," Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8321,message,message,8321,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9649,interface,interface,9649,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorCont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10230,interface,interface,10230,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2255,interface,interface,2255,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,2,['interface'],['interface']
Integrability," ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9523,interface,interface,9523,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4128,interface,interface,4128,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability," ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4215,interface,interface,4215,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability," ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprecated.; use PathIO.getObjectFileExtensions(boolean) instead. getObjectFileExtensions(boolean) - Static method in class qupath.lib.io.PathIO. Get a list of known file extensions that may contain objects, optionally including compressed files. getObjects(Collection<PathObject>, Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. getObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the current hierarchy according to a specified predicate. getObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:461119,interface,interface,461119,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4574,interface,interface,4574,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5273,interface,interface,5273,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['interface'],['interface']
Integrability," Replace a specific value in an array. requestAutomaticUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request an automated update check in a background thread. requestCancelDirection(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Requests that the viewer cancels either the x- or y-axis direction. requestDecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns tru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:857337,interface,interface,857337,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<org.fxmisc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11489,interface,interface,11489,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability," Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10377,interface,interface,10377,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability," Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWrite",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3980,interface,interface,3980,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability," Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorContr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6517,interface,interface,6517,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability," Show using color LUT with an inverted background. INVERTED_GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using an inverted grayscale LUT (white to black). invertScrolling - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; invertScrollingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Invert the scrolling direction of the mouse applied to the viewer. invertZSlider - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; invertZSliderProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Invert the z-slider for the viewer. is8bitColorType(int) - Static method in class qupath.lib.awt.common.BufferedImageTools. Returns true if a BufferedImage type represents an 8-bit color image. isAddedOrRemovedEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if objects have been added or removed from the hierarchy. isAdditive() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. isAdditive() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isAncestor(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Query if one object is the ancestor of another. isAncestorOf(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class is equal to the specified child class, ; or an ancestor of that class. isAnnotation() - Method in class qupath.lib.objects.PathObject. Returns true if the object is an annotation. isArea() - Method in class qupath.lib.roi.AreaROI;  ; isArea() - Method in class qupath.lib.roi.EllipseROI;  ; isArea() - Method in class qupath.lib.roi.GeometryROI;  ; isArea() - Method in class qupath.lib.roi.LineROI;  ; isArea() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:613921,interface,interface,613921,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5154,interface,interface,5154,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability," Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6793,interface,interface,6793,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scalin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6962,interface,interface,6962,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractChannels(String...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractDoubles(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:294485,interface,interface,294485,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:1860,interface,interfaces,1860,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability," String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7008,interface,interface,7008,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability," String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3359,interface,interface,3359,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['interface'],['interface']
Integrability," The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9154,interface,interface,9154,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Parameters:; message - message to show upon completion. cancelled; boolean cancelled(); Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:2156,message,message,2156,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,6,['message'],['message']
Integrability," WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103805,message,message,1103805,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability," a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an iden",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:5499,interface,interface,5499,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability," a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:10313,interface,interface,10313,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider - Class in qupath.lib.images.servers. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServerProvider() - Constructor for class qupath.lib.images.servers.ImageServerProvider;  ; ImageServers - Class in qupath.lib.images.servers. Helper class for working with ImageServer objects. ImageServers() - Constructor for class qupath.lib.images.servers.ImageServers;  ; imagesFromBlob(Mat) - Static method in class qupath.opencv.dnn.DnnTools. Extract images from an OpenCV blob. imageSubDir(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a subdirectory within which image tiles should be saved. imageSupplier(ImageSupplier<S>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the image supplier. ImageSupplier<S> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying an image region for processing. imageToMat(BufferedImage) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a BufferedImage to an OpenCV Mat. imageToMatBGR(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. imageToMatRGB(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. imageTypeSettingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify how setting the image type should be handled for images when they are opened for the first time. imageUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). ImageWriter<T> - Interface in qupath.lib.images.writers. Interface for defining class that can write ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:596577,interface,interface,596577,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<Buffered",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109638,wrap,wrap,1109638,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability," action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; name - ; Returns:; the action. createMeasurementMapDialog; public static Stage createMeasurementMapDialog(QuPathGUI qupath); Create a dialog for displaying measurement maps. Parameters:; qupath - the QuPathGUI instance to which the maps refer; Returns:; a measurement map dialog. showScriptInterpreter; public static void showScriptInterpreter(QuPathGUI qupath); Show a script interpreter window for a Qupath instance. Parameters:; qupath - the QuPath instance. createLicensesWindow; public static Stage createLicensesWindow(QuPathGUI qupath); Create a window summarizing license information for QuPath and its third party dependencies. Parameters:; qupath - the current QuPath instance; Returns:; a window to display license information. createShowSystemInfoDialog; public static Stage createShowSystemInfoDialog(QuPathGUI qupath); Create a window summarizing key system information relevant for QuPath. Parameters:; qupath - the current QuPath instance; Returns:; a window to display license information. createPreferencesDialog; public static Stage createPreferencesDialog(QuPathGUI qupath); Show a dialog to adjust QuPath preferences. Parameters:; qupath - the QuPath instance; Returns:; window to use to display preferences. createRotateImageDialog; public static void createRotateImageDialog(QuPathGUI qupath); Create a dialog for rotating the image in the current viewer (for display only). Parameters:; qupath - the QuPathGUI instance. createZoomCommand; public static org.controlsfx.control.action.Action createZoomCommand(QuPathGUI qupath,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:16288,depend,dependencies,16288,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['depend'],['dependencies']
Integrability," affine transform to all objects in the current hierarchy, retaining parent-child relationships between objects. transformSelectedObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all objects in the specified hierarchy, retaining parent-child relationships between objects. transformsToOp(Collection<? extends BioimageIoSpec.Processing>) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms sequentially. transformToOp(BioimageIoSpec.Processing) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms, if possible. translate(double, double) - Method in class qupath.lib.roi.AreaROI;  ; translate(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; translate(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; translate(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a translated version of this ROI. translate(double, double) - Method in class qupath.lib.roi.LineROI;  ; translate(double, double) - Method in class qupath.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.Colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1052917,interface,interfaces,1052917,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability," allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:37027,interface,interface,37027,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1835,message,message,1835,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability," and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4064,interface,interfaces,4064,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interfaces']
Integrability," and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:5507,depend,depending,5507,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['depend'],['depending']
Integrability," and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5912,interface,interface,5912,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability," as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7400,interface,interface,7400,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4393,interface,interface,4393,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['interface'],['interface']
Integrability," associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11033,interface,interface,11033,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9123,interface,interface,9123,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3678,interface,interface,3678,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['interface'],['interface']
Integrability," box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5014,interface,interface,5014,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3451,interface,interface,3451,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,5,['interface'],['interface']
Integrability," by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:422578,interface,interface,422578,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:1543,interface,interfaces,1543,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability," by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6971,interface,interface,6971,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8056,interface,interface,8056,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. getCentroidDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the centroids of two ROIs. getCentroidDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. getCentroidX() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:348509,interface,interface,348509,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9641,interface,interface,9641,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability," class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:405429,wrap,wrapped,405429,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapped']
Integrability," class qupath.lib.gui.QuPathGUI. Try to launch a browser window for a specified URL. opening(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727532,interface,interface,727532,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.lib.gui.charts.ChartTools. Make it possible to select chart regions to zoom in, and scroll to navigate around it. makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). makeDefaultStainVector(StainVector.DefaultStains) - Static method in class qupath.lib.color.StainVector. Get a default stain vector. makeDoubleArrayWrapper(double[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a double array, returning values (predictably) as doubles. makeFileInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file path relative to the current project, and create a File object. makeFloatArrayWrapper(float[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a float array, returning values as doubles. makeFullScreenshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the full screen. makeIntArrayWrapper(int[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for an int array, returning values as doubles. makeInverseAnnotation() - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:664225,wrap,wrapper,664225,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability," class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the name of the command. getTextField(Parameter<?>, int) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; getThickStrokeWidth(double) - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). getThis() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getThreadPoolManager() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:530347,interface,interface,530347,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractChannels(String...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractDoubles(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:293862,interface,interface,293862,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.lib.gui.tools.ColorToolsFX. Get the color with which an object should be displayed, as a packaged ARGB integer. getDisplayedImageName(ImageData<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Get the image name to display for a specified image. getDisplayedName() - Method in class qupath.lib.objects.PathObject. Request an object name in a form suitable for displaying. getDisplayedRegionShape() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a shape corresponding to the region of the image currently visible in this viewer. getDisplayMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the last color in the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:384726,interface,interface,384726,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWrit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381504,interface,interface,381504,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Return the PathTool corresponding to the specified String. getToolAction(PathTool) - Method in class qupath.lib.gui.ToolManager. Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible time point. getTrainData() - Method in class qupath.process.gui.commands.ml.Pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:538696,interface,interface,538696,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current ce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346510,interface,interface,346510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," class qupath.opencv.tools.OpenCVTools. Create a 1x1 single-channel Mat with a specific value. scalarMatWithType(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 Mat with a specific value, with 1 or more channels. scale - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian subtraction. scale(double) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. scale(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.AreaROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.EllipseROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.GeometryROI;  ; scale(double, double, double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.LineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PointsROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolygonROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolylineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.RectangleROI;  ; scaleAllObjects(double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all objects in the current object hierarchy. scaleAllObjects(PathObjectHierarchy, double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all objects in the specified object hierarchy. scalebarFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scalebarFontSizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font size for the scalebar in the vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:884628,interface,interfaces,884628,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability," classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3468,interface,interface,3468,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['interface'],['interface']
Integrability," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:1819,depend,dependent,1819,javadoc/docs/qupath/opencv/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html,1,['depend'],['dependent']
Integrability," class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:3688,interface,interface,3688,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['interface'],['interface']
Integrability," clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3661,interface,interface,3661,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled lengt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6765,interface,interface,6765,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7503,interface,interface,7503,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10511,interface,interface,10511,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5769,interface,interface,5769,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5138,message,message,5138,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability," defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are al",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:1853,interface,interface,1853,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,2,['interface'],['interface']
Integrability," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2632,interface,interface,2632,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2689,interface,interface,2689,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['interface'],['interface']
Integrability," description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:4810,interface,interface,4810,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['interface'],['interface']
Integrability," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable. All Known Subinterfaces:; GeneratingImageServer<T>, ImageDataServer<T>. All Known Implementing Classes:; AbstractImageServer, AbstractTileableImageServer, AffineTransformImageServer, BioFormatsImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, ImageJServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RearrangeRGBImageServer, RenderedImageServer, RotatedImageServer, SparseImageServer, TransformingImageServer, WrappedBufferedImageServer. public interface ImageServer<T>; extends AutoCloseable; Generic ImageServer, able to return pixels and metadata.; ; The idea behind making this generic was that it could be used on various platforms and with different UIs, e.g. Swing, JavaFX, ; or with different kinds of image reader.; In practice, the generic parameter is almost always BufferedImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:995,interface,interface,995,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['interface'],['interface']
Integrability," display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:5847,depend,depending,5847,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['depend'],['depending']
Integrability," displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36551,interface,interface,36551,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability," double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7078,interface,interface,7078,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6542,interface,interface,6542,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," drawing tool (closed). POLYGON_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYGON_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolygonROI - Class in qupath.lib.roi. ROI representing an arbitrary closed polygon. POLYLINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polyline drawing tool (open). POLYLINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYLINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolylineROI - Class in qupath.lib.roi. ROI representing an arbitrary open polyline. populateAnnotationsMenu(QuPathGUI, ContextMenu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a ContextMenu with standard options to operate on selected annotation objects. populateAnnotationsMenu(QuPathGUI, Menu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to operate on selected annotation objects. positionCaret(int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the caret position to the specified index. positionCaret(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:772626,interface,interface,772626,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6878,interface,interface,6878,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readPathObjects; public Collection<PathObject> readPathObjects(); throws IOException; Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:5809,interface,interface,5809,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,6,['interface'],['interface']
Integrability," equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:3613,interface,interface,3613,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['interface'],['interface']
Integrability," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3380,interface,interface,3380,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,5,['interface'],['interface']
Integrability," fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand. OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers. OMETiffWriter. ImageWriter for writing OME-TIFF images. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:33790,wrap,wrappers,33790,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrappers']
Integrability," finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4458,interface,interface,4458,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:7167,interface,interface,7167,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,3,['interface'],['interface']
Integrability," for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3429,interface,interface,3429,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability," for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:7024,interface,interface,7024,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability," from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5629,interface,interface,5629,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['interface'],['interface']
Integrability," from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4701,interface,interface,4701,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,9,['interface'],['interface']
Integrability," getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:379388,interface,interface,379388,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnota",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:379539,interface,interface,379539,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," getMean; public Scalar getMean(); Get means which should be subtracted for preprocessing. Returns:; the mean value if specified, or null if OpenCV's default should be used (likely to be zero); See Also:. getScale(). getModelUri; public URI getModelUri(); Get the path to the model. Returns:. getConfigUri; public URI getConfigUri(); Get the path to the model configuration, if required. Returns:. getFramework; public String getFramework(); Get the framework used to create the model. Returns:. builder; public static OpenCVDnn.Builder builder(String pathModel); Create a new builder. Parameters:; pathModel - ; Returns:. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or onl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:5802,interface,interface,5802,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['interface'],['interface']
Integrability," getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10587,interface,interface,10587,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10985,interface,interface,10985,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability," grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.TMAGridOverlay. Constructor. TMAMenuActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.AddActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.RemoveActions - Class in qupath.lib.gui.actions.menus;  ; tmaMissingColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMAScoreImporter - Class in qupath.lib.io. Helper class for importing data in connection with TMA slides. TMAScoreImporter() - Constructor for class qupath.lib.io.TMAScoreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(Stage) - Constructor for class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Constructor. toBlob(Mat...) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1033776,interface,interface,1033776,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for images when they are opened for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:4838,interface,interface,4838,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability," if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7773,interface,interface,7773,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2408,interface,interface,2408,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['interface'],['interface']
Integrability," if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3914,interface,interface,3914,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability," image before a memoization file is generated. setMemoryThreshold(double) - Static method in class qupath.imagej.tools.IJTools;  ; setMetadata(ImageServerMetadata) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Not allowed - throws an UnsupportedOperationException. setMetadata(ImageServerMetadata) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; setMetadata(ImageServerMetadata) - Method in interface qupath.lib.images.servers.ImageServer. Set the metadata to use, e.g. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.LabeledImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMinDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMinDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the min display value for this channel. setMinHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the min height property for the specified regions. setMinimumRepaintSpacingMillis(long) - Method in class qupath.lib.gui.viewer.QuPathViewer. Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. setMinMaxAllowed(float, float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMinMaxAllowed(float, float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the maximum permissible range for the image display. setMinMaxDisplay(ChannelDisplayInfo, float, float) - Method in class qupath.lib.display.ImageDisplay. Set the min/max display values for a specified ChannelDisplayInfo. setMinWidth(doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:936072,interface,interface,936072,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," image in the specified viewer. BufferedImageOverlay(QuPathViewer, Map<ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. bufferedImageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the buffered image. BufferedImageTools - Class in qupath.lib.awt.common. Static methods for working with BufferedImages and QuPath objects. BUGS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; build() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Build the DelaunayTools.Subdivision with the current parameters. build() - Method in interface qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Build the classifier defined by the parameters of this builder. build() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Build a new PixelClassifierMetadata object. build() - Method in interface qupath.lib.color.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Build the parameters. build() - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:67803,interface,interface,67803,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:5425,interface,interface,5425,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability," images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typical",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:2588,interface,interface,2588,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['interface'],['interface']
Integrability," implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7524,interface,interface,7524,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability," in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:481819,interface,interface,481819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:339458,interface,interface,339458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:547165,interface,interface,547165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:509085,interface,interface,509085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from the hierarchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:506649,interface,interface,506649,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Returns the value of ChartThresholdPane.isInteractiveProperty(). isInteractiveProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Property indicating whether thresholds can be adjusted interactively. isInterleaved(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; isLastFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the specified frame is the last one recorded. isLine() - Method in class qupath.lib.roi.AreaROI;  ; isLine() - Method in class qupath.lib.roi.EllipseROI;  ; isLine() - Method in class qupath.lib.roi.GeometryROI;  ; isLine() - Method in class qupath.lib.roi.LineROI;  ; isLine() - Method in class qupath.lib.roi.PointsROI;  ; isLine() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:624576,interface,interface,624576,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic() - Method in interface qupath.lib.measurements.Measurement. Deprecated. isEditable() - Method in class qupath.lib.objects.PathDetectionObject. Always returns false - detection objects shouldn't be edited. isEditable() - Method in class qupath.lib.objects.PathObject. Flag indicating that the object is editable. isEditable() - Method in class qupath.lib.objects.PathROIObject. Deprecated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any measurements. isEmpty() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:619586,interface,interface,619586,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstance(LocalNormalization.SmoothingScale, LocalNormalization.SmoothingScale) - Static method in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get a mapping between objects and instance labels. getInterpolation() - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Get the preferred method of interpolation to use for display. getIntParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a integer parameter value (or its default) for the specified key. getItem() - Method in class qupath.lib.gui.SelectableItem. Get the current item. getItems() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getItems() - Method in interface qupath.lib.gui.measure.PathTableData. Get internal list of the items used to provide measurements. getItems(UriUpdater.UriStatus) - Method in class qupath.lib.io.UriUpdater. Get all items with the specified status, or all items is status is null. getKeyValueParameters(boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameter values. getLabelMap() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get the map of classifications to labels. getLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding labels. getLanguageFromExtension(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). getLanguageFromName(String) - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:419320,interface,interface,419320,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3681,interface,interface,3681,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['interface'],['interface']
Integrability," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2180,interface,interface,2180,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,4,['interface'],['interface']
Integrability," instead use PathObjects.createTMACoreObject(double, double, double, boolean). Method Details. isMissing; public boolean isMissing(); Query the 'missing' flag for this core. Returns:. setMissing; public void setMissing(boolean missing); Set the missing flag for this core, for example because insufficient tissue is present.; 'Missing' cores are typically ignored during analysis. Parameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:5859,interface,interface,5859,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability," int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getRotatedBuilder; public static ImageServerBuilder.ServerBuilder<BufferedImage> getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedImageServer.Rotation rotation); Get a ServerBuilder that applies a rotation to another server. Parameters:; builder - ; rotation - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:6190,interface,interface,6190,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability," int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3833,interface,interface,3833,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability," int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3327,interface,interface,3327,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['interface'],['interface']
Integrability," interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Check if the script editor supports a particular file. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Query whether the classifier supports a particular image. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Query whether this transform can be applied to the specified image. supportsImage(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific image server, or false ; if it is incompatible. supportsImage(ImageServer<BufferedImage>) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Query whether this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.PngWriter;  ; supportsImageType(ImageServer<T>) - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1006777,interface,interface,1006777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the ImageData. Parameters:; viewer - ; file - ; keepExistingServer - if true and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19487,message,message,19487,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['message'],['message']
Integrability," is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8987,interface,interface,8987,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5937,interface,interface,5937,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability," java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1350,message,message,1350,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,['message'],['message']
Integrability," java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in interface ImageRenderer; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1741,interface,interface,1741,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,4,['interface'],['interface']
Integrability," known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:5068,interface,interface,5068,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,8,['interface'],['interface']
Integrability," labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:56345,interface,interface,56345,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability," list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:4079,interface,interface,4079,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['interface'],['interface']
Integrability," logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:425215,interface,interface,425215,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.stats.RunningStatistics;  ; size() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Number of entries in the array. size() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of non-NaN values added. size() - Method in interface qupath.lib.measurements.MeasurementList. Returns the number of measurements in the list. size() - Method in class qupath.lib.plugins.workflow.Workflow. Total number of steps in the workflow. size() - Method in class qupath.opencv.dnn.DnnShape. Total number of elements in a blob with this shape; This is the product of the lengths returned by DnnShape.getShape() or DnnShape.UNKNOWN_SHAPE. size(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog height. size(int, int) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Export image size. size(int, in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:980322,interface,interface,980322,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493650,interface,interface,493650,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADear",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:446392,interface,interface,446392,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4075,interface,interface,4075,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['interface'],['interface']
Integrability," needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2336,interface,interface,2336,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['interface'],['interface']
Integrability," not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5317,depend,depend,5317,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['depend'],['depend']
Integrability," notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4520,interface,interface,4520,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6486,interface,interface,6486,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability," of the class is ""1+"", indicating a weakly-positive staining. isOpenSlideAvailable() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Query whether OpenSlide has already been loaded. isOverviewVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the image overview is visible, false otherwise. isPathClassHidden(PathClass) - Method in class qupath.lib.gui.viewer.OverlayOptions. Query whether objects with a specified classification should be displayed or hidden. isPoint() - Method in class qupath.lib.roi.AreaROI;  ; isPoint() - Method in class qupath.lib.roi.EllipseROI;  ; isPoint() - Method in class qupath.lib.roi.GeometryROI;  ; isPoint() - Method in class qupath.lib.roi.LineROI;  ; isPoint() - Method in class qupath.lib.roi.PointsROI;  ; isPoint() - Method in class qupath.lib.roi.PolygonROI;  ; isPoint() - Method in class qupath.lib.roi.PolylineROI;  ; isPoint() - Method in class qupath.lib.roi.RectangleROI;  ; isPoint() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI represents distinct (unconnected) points. isPositiveClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Positive"". isPositiveOrGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""Positive"", ""1+"", ""2+"" or ""3+"", indicating positive staining. isProcessing() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setIsProcessing(true) has recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:629714,interface,interface,629714,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:5508,interface,interface,5508,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['interface'],['interface']
Integrability," on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled vers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4402,interface,interface,4402,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability," opacity based upon pixel values. createGeometries(Geometry) - Method in class qupath.lib.objects.utils.Tiler. Create a list of Geometry tiles from the input. createGridView(QuPathGUI, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.ImageJServer;  ; createID() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Returns a random UUID. createID() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; createID() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns a UUID. createID() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createID() - Method in class qupath.lib.images.servers.AbstractImageServer. Create a unique ID for the server, which can be returned as the default value of AbstractI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:182645,wrap,wrap,182645,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability," or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpTe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4363,interface,interface,4363,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability," output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2759,interface,interface,2759,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability," parameter (may be null if no unit is available). Returns:. setValueWithBoundsCheck; public abstract boolean setValueWithBoundsCheck(S lastValue); Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Parameters:; lastValue - ; Returns:. setDoubleLastValue; public abstract boolean setDoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:5661,interface,interface,5661,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability," parameter has a valid lower bound. Returns:. hasUpperBound; public boolean hasUpperBound(); Returns true if the parameter has a valid upper bound. Returns:. getUnit; public String getUnit(); Get the unit to display for this parameter (may be null if no unit is available). Returns:. setValueWithBoundsCheck; public abstract boolean setValueWithBoundsCheck(S lastValue); Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Parameters:; lastValue - ; Returns:. setDoubleLastValue; public abstract boolean setDoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:5445,interface,interface,5445,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability," parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:3177,interface,interface,3177,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['interface'],['interface']
Integrability, performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty ke,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52043,depend,depends,52043,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability," plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878232,interface,interface,878232,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10593,interface,interface,10593,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,9,['interface'],['interface']
Integrability," power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775713,interface,interface,775713,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1743,message,message,1743,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability," property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3369,wrap,wrapTextProperty,3369,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrapTextProperty']
Integrability," protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssocia",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9496,interface,interface,9496,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color informati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6975,interface,interface,6975,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability," put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:801472,interface,interface,801472,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features - package qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps - package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images - package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats - package qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival - package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object - package qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:807233,interface,interfaces,807233,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability," qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(ImageProcessor, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. asType(BufferedImage, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. asType(Number, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. asType(Mat, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's '",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:47185,interface,interface,47185,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Ha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:609005,message,message,609005,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability," qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:638196,interface,interface,638196,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:330314,interface,interface,330314,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of any accelerator for the command. getActionProperty(MenuItem) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:322304,interface,interface,322304,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8509,interface,interface,8509,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:43597,wrap,wrapper,43597,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrapper']
Integrability," scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4632,interface,interface,4632,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," script file. showScript(String, String) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(String, String) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, including a new script with the specified name. showScript(ScriptEditor, Workflow) - Static method in class qupath.lib.gui.panes.WorkflowCommandLogView. Show a script in the script editor based on the specified workflow. showScriptEditor(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show the script editor, or bring the window to the front if it is already open. showScriptInterpreter(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a script interpreter window for a Qupath instance. showSelection(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether selected objects are displayed. showStartupMessageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show a startup message when QuPath is launched. showTable(ImageData<BufferedImage>, Class<? extends PathObject>) - Method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Show a measurement table for the specified image data. showTextWindow(Window, String, String, Modality, boolean) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a window containing plain text, with the specified properties. showTMACommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showTMACoreGridView(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a grid view for TMA core objects. showTMACoreLabelsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showTMAGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showTMAMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all TMA core objects. showTMAOptionsProperty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:971513,message,message,971513,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability," script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a name that may be used for this entry. getImageObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getImagePlane() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:406336,interface,interface,406336,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10737,interface,interface,10737,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,8,['interface'],['interface']
Integrability," server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOExcepti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5598,interface,interface,5598,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability," setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4089,interface,interface,4089,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability," setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2805,interface,interface,2805,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['interface'],['interface']
Integrability," showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4549,message,message,4549,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8307,interface,interface,8307,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability," such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1110482,wrap,wraps,1110482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wraps']
Integrability," superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:16832,interface,interface,16832,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability," supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5637,interface,interface,5637,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability," the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by this viewer for tile caching and painting. getImages() - Method in interface qupath.lib.projects.ProjectImageEntry. Access additional images associated with the project entry, e.g. getImageServer() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:408130,interface,interface,408130,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3033,interface,interface,3033,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['interface'],['interface']
Integrability," the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsample",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:385445,interface,interface,385445,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOpt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27793,interface,interface,27793,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability," the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:3921,interface,interface,3921,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability," the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:6072,interface,interface,6072,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability," the output will return the same PathClass object.; ; var pathClass = ...;; var pathClass2 = PathClass.getInstance(pathClass.toSet());; assert pathClass == pathClass2; // This may or may not be true!; . However the PathClass objects should be the same if the name components are all valid and ; there are no duplicates (which should normally be the case). Returns:. compareTo; public int compareTo(PathClass o); This is now equivalent to this.toString().compareTo(o.toString()).; ; Note that in previous versions (< 0.1.2), the comparison was made based on the name only.; ; This could result in unexpected behavior whenever comparing with equality and using ; derived PathClass objects, because only the (final) name part was being compared ; and this could potentially result in classifications (wrongly) being considered equal ; (e.g. ""Tumor: Positive"" and ""Stroma: Positive"").; ; This was most significant when working with Groovy, where == is replaced by compareTo. Specified by:; compareTo in interface Comparable<PathClass>. getNullClass; public static PathClass getNullClass(); Get the value of NULL_CLASS, used to represent no classification.; In most cases, null should be used instead; this exists only as a ; representation in cases where null is not permitted (e.g. in some collection ; implementations). Returns:. fromString; public static PathClass fromString(String string); Get a PathClass instance from a string representation, without specifying a default color.; ; This calls fromString(String, Integer) with the second argument as null. Parameters:; string - ; Returns:. fromString; public static PathClass fromString(String string,; Integer color); Get a PathClass instance from a string representation, optionally providing a default color ; if a new instance needs to be created.; ; This ultimately calls getInstance(PathClass, String, Integer) but differs in that it ; accepts a string representation that may include the DELIMITER.; If so, this is used to split the string in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:11000,interface,interface,11000,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['interface'],['interface']
Integrability," the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3769,interface,interface,3769,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," the processor. Processor<S,T,U> - Interface in qupath.lib.experimental.pixels. A generic processor designed to work with Parameters and provide an output. project(ObjectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; ProjectBrowser - Class in qupath.lib.gui.panes. Component for previewing and selecting images within a project. ProjectBrowser(QuPathGUI) - Constructor for clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:785252,interface,interface,785252,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5716,depend,depend,5716,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['depend'],['depend']
Integrability," the version is not known. Constructor Details. QP; public QP(). Method Details. describe; public static String describe(Object o); List the fields and methods of a specified object. Parameters:; o - ; Returns:. describe; public static String describe(Class<?> cls); List the fields and methods of a specified class. Parameters:; cls - ; Returns:. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. setDefaultProject; public static void setDefaultProject(Project<BufferedImage> project); Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current project in the user interface, when running interactively. Parameters:; project - . setDefaultImageData; public static void setDefaultImageData(ImageData<BufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:47131,interface,interface,47131,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['interface'],['interface']
Integrability," the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8397,interface,interface,8397,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability," the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not encl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9606,interface,interface,9606,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability," this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6096,interface,interface,6096,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability," to the viewer grid, if possible. attemptOperation(Geometry, Function<Geometry, Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Attempt to apply a function to a geometry, returning the input unchanged if there was an exception. AUTO_ESTIMATE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Automatically estimate the image type. autoBrightnessContrastSaturationPercentProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. AutoCompletions - Class in qupath.lib.scripting.languages. Class to deal with script auto-completions. AutoCompletions() - Constructor for class qupath.lib.scripting.languages.AutoCompletions;  ; AutoCompletions.Completion - Interface in qupath.lib.scripting.languages. A single completion. AutoCompletions.CompletionTokenizer - Interface in qupath.lib.scripting.languages. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions - Class in qupath.lib.gui.actions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.AutomateActions;  ; AutomateMenuActions - Class in qupath.lib.gui.actions.menus;  ; AutomateMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; autoSaturationPercent - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; autoSetAnnotationClassProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:49590,interface,interface,49590,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102493,depend,depending,102493,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability," true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:6064,interface,interface,6064,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['interface'],['interface']
Integrability," unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7959,interface,interface,7959,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:5343,interface,interface,5343,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability," used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:10425,depend,dependent,10425,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['depend'],['dependent']
Integrability," using createClassificationMap(Collection). Parameters:; classificationMap - the map containing objects and the classifications that should be applied; Returns:; a collection containing all objects with classifications that were changed. This can be used to fire update events.; See Also:. createClassificationMap(Collection). getRepresentedPathClasses; public static Set<PathClass> getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Get a set of the represented path classes, i.e. those with at least 1 manually-labelled object. Parameters:; hierarchy - ; cls - ; Returns:. setIntensityClassification; public static PathClass setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds); Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins.; ; An IllegalArgumentException is thrown if < 1 or > 3 intensity thresholds are provided.; If the object does not have the required measurement, its PathClass will be set to its ; first 'non-intensity' ancestor PathClass.; ; Note that as of v0.3.0, all ignored classes (see PathClassTools.isIgnoredClass(PathClass) are ignored and therefore ; will not be 'intensity classified'. Parameters:; pathObject - the object to classify.; measurementName - the name of the measurement to use for thresholding.; thresholds - between 1 and 3 intensity thresholds, used to indicate negative/positive, or negative/1+/2+/3+; Returns:; the PathClass of the object after running this method. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:55529,depend,depending,55529,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['depend'],['depending']
Integrability," valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6300,interface,interface,6300,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability," value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Feat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:4049,interface,interface,4049,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,"['depend', 'interface']","['depending', 'interface']"
Integrability," value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:4170,interface,interface,4170,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,"['depend', 'interface']","['depending', 'interface']"
Integrability," void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4033,synchroniz,synchronizeViewers,4033,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability," z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by this viewer for tile caching and painting. getImages() - Method in interface qupath.lib.projects.ProjectImageEntry. Access additional images associated with the project entry, e.g. getImageServer() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageServerTypeAdapterFactory(boolean) - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. getImageSupport(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. getImageSupport(ImageServerBuilder<BufferedImage>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. getImageType() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getImageType() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:408922,interface,interface,408922,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6584,interface,interface,6584,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:340728,interface,interfaces,340728,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:425075,interface,interface,425075,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interfa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5076,interface,interface,5076,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4719,interface,interface,4719,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['interface'],['interface']
Integrability,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html:2488,adapter,adapter,2488,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,1,['adapter'],['adapter']
Integrability,"() - Method in class qupath.lib.objects.PathObject. Request an object name in a form suitable for displaying. getDisplayedRegionShape() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a shape corresponding to the region of the image currently visible in this viewer. getDisplayMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the last color in the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the reques",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:385012,interface,interface,385012,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3743,interface,interface,3743,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:4387,interface,interface,4387,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['interface'],['interface']
Integrability,"(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:104028,interface,interface,104028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2373,interface,interface,2373,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['interface'],['interface']
Integrability,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2607,interface,interface,2607,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['interface'],['interface']
Integrability,"(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(Region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:3877,interface,interface,3877,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"(background) values for a brightfield image. EVERYWHERE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests. exactClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if a PathObject has at least one of the specified PathClasses. EXCLUDE_MEASUREMENTS - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Optionally exclude measurements from objects. excludeColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be excluded during the export. ExecutableLanguage - Interface in qupath.lib.scripting.languages. Functional interface for scripting languages that are runnable (e.g. execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; execute(ScriptParameters) - Method in interface qupath.lib.scripting.languages.ExecutableLanguage. Execute the given script String. EXISTS - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that is known to exist. exp() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns Euler's number e raise to the power of the Mat values. EXPAND_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; expandableContent(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. expandChartClip(Chart, double) - Static method in class qupath.lib.gui.charts.ChartTools. Expand the clip region for a chart. expandToWindowProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). EXP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:287194,interface,interface,287194,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"(e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:4699,interface,interface,4699,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,1,['interface'],['interface']
Integrability,"(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:351160,interface,interface,351160,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10109,depend,depend,10109,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['depend'],['depend']
Integrability,"(so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:2846,interface,interface,2846,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['interface'],['interface']
Integrability,") - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to prompt the user to specify an annotation to add. createStainVector(String, double, double, double) - Static method in class qupath.lib.color.StainVector. Create a stain vector. createStatModel(Class<? extends StatModel>) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. createStringMeasurement(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Deprecated. createStructureChangeEvent(Object, PathObjectHierarchy, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating that the hierarchy structure has been changed. createSubProject(String, Collection<ProjectImageEntry<T>>) - Method in interface qupath.lib.projects.Project. Create a sub-project that provides a view on the specified entries. createSubTypeAdapterFactory(Class<T>, String) - Static method in class qupath.lib.io.GsonTools. Create a TypeAdapterFactory that is suitable for handling class hierarchies. createTaskRunner() - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). createTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createTaskRunner(int) - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the specified number of threads. createTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance with the specified number of threads. createThreadFactory(String, boolean) - Static method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:226697,interface,interface,226697,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,") - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:421600,interface,interface,421600,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,") - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473982,interface,interface,473982,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,") - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Get a TypeAdapterFactory to handle ObjectClassifier instances. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriIt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:542672,interface,interface,542672,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,") - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCVDnn. Initialize the model with the same preprocessing defined here (i.e. input(String, long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape as a long array for a single input with a specified name. input(String, DnnShape) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single input with a specified name. INPUT_DISPLAY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; inputChannels(int...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the input c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601930,message,message,601930,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,") points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4830,interface,interface,4830,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7413,interface,interface,7413,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vector. Returns:. getGreen; public double getGreen(); Get the green component of the (normalized) stain vector. Returns:. getBlue; public double getBlue(); Get the blue component of the (normalized) stain vector. Returns:. getArray; public double[] getArray(); Get the stain vector as a 3 element array (red, green, blue). Returns:. getColor; public int getColor(); Get a Color that (roughly) corresponds to color represented by this stain vector.; It may be used to create a color lookup table. Returns:. arrayAsString; public String arrayAsString(Locale locale); Get a String representation of the stain vector array, formatting according to the specified Locale. Parameters:; locale - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. computeAngle; public static double computeAngle(StainVector s1,; StainVector s2); Calculate the angle between two stain vectors, in degrees. Parameters:; s1 - ; s2 - ; Returns:. cross3; public static double[] cross3(double[] u,; double[] v); Compute the cross product of two vectors. Parameters:; u - ; v - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:4683,interface,interface,4683,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,2,['interface'],['interface']
Integrability,"); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2961,interface,interface,2961,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['interface'],['interface']
Integrability,"); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. promptForDirectory; public static File promptForDirectory(String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10725,message,message,10725,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4789,interface,interface,4789,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9121,interface,interface,9121,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9203,interface,interface,9203,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6197,interface,interface,6197,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability,");  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1863,message,message,1863,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,2,"['interface', 'message']","['interface', 'message']"
Integrability,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1618,message,message,1618,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,12,['message'],"['message', 'messages']"
Integrability,", but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:; See Also:. isSelected(); setSelected(boolean). getItem; public T getItem(); Get the current item. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:2012,wrap,wrapped,2012,javadoc/docs/qupath/lib/gui/SelectableItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html,1,['wrap'],['wrapped']
Integrability,", finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to chang",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:5284,interface,interface,5284,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,", getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2947,interface,interface,2947,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['interface'],['interface']
Integrability,", getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:3540,wrap,wrap,3540,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['wrap'],['wrap']
Integrability,", if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11432,interface,interface,11432,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,", notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3520,interface,interface,3520,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['interface'],['interface']
Integrability,", notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:3465,interface,interface,3465,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['interface'],['interface']
Integrability,", showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1017593,interface,interface,1017593,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,", whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30935,depend,depends,30935,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"- ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10728,interface,interface,10728,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"- Method in class qupath.lib.display.DirectServerChannelInfo;  ; isAncestor(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Query if one object is the ancestor of another. isAncestorOf(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class is equal to the specified child class, ; or an ancestor of that class. isAnnotation() - Method in class qupath.lib.objects.PathObject. Returns true if the object is an annotation. isArea() - Method in class qupath.lib.roi.AreaROI;  ; isArea() - Method in class qupath.lib.roi.EllipseROI;  ; isArea() - Method in class qupath.lib.roi.GeometryROI;  ; isArea() - Method in class qupath.lib.roi.LineROI;  ; isArea() - Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615176,interface,interfaces,615176,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"- Method in class qupath.lib.roi.RectangleROI;  ; isPoint() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI represents distinct (unconnected) points. isPositiveClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Positive"". isPositiveOrGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""Positive"", ""1+"", ""2+"" or ""3+"", indicating positive staining. isProcessing() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setIsProcessing(true) has recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be applied to the control. isRedoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isResidual() - Method in class qupath.lib.color.StainVector. Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. isResizable() - Method in class qupath.lib.gui.ColorMapCanvas;  ; isRGB() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; isRGB() - Method in interface qupath.lib.images.servers.ImageServer. True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. isRGB() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if the pixels are stored in (A)RGB form. isRootObject() - Method in class qupath.lib.objects.PathObject. Returns true if the object is the 'root' of an object hierarchy. isRootObject() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:630656,interface,interface,630656,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"- Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a node, or null if no action is found. getActions() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getActions() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get all the actions to include in the menu, in order. getActions() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getActiveTool() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the active PathTool for this viewer. getActiveToolIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the value of ViewerManager.activeViewerProperty(). getAlignment() - Method in class qupath.lib.objects.utils.Tiler. Get the tiling alignment. getAllFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the collection of recorded frames. getAllImageSupports(URI, String...) - Static method in class qupath.lib.images.servers.ImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:324118,interface,interface,324118,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"- initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9616,message,message,9616,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"- or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109363,interface,interface,1109363,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. su",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3043,interface,interface,3043,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['interface'],['interface']
Integrability,"-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1762,interface,interface,1762,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,1,['interface'],['interface']
Integrability,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:884,interface,interface,884,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['interface'],['interface']
Integrability,". AbstractOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; AbstractImageOverlay, GridOverlay, HierarchyOverlay, TMAGridOverlay. public abstract class AbstractOverlay; extends Object; implements PathOverlay; Abstract class to help with implementing PathOverlays. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected AlphaComposite; getAlphaComposite();  ; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:838,interface,interface,838,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['interface'],['interface']
Integrability,". AbstractOverlay.LocationStringFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface AbstractOverlay.LocationStringFunction. Enclosing class:; AbstractOverlay. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface AbstractOverlay.LocationStringFunction; Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). See PathOverlay.getLocationString(ImageData, double, double, int, int). Method Details. getLocationString; String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); See PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; imageData - ; x - ; y - ; z - ; t - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html:522,interface,interface,522,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,2,['interface'],['interface']
Integrability,". ActionAccelerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionAccelerator. @Documented; @Retention(RUNTIME); @Target({METHOD,FIELD,TYPE}); public @interface ActionAccelerator; Annotation used to specify a preferred accelerator for an an action.; Examples include ""m"" (Move tool) or ""shortcut+c"" (Copy). Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String; value. String form of an accelerator, compatible with KeyCombination.valueOf(String). Element Details. value; String value; String form of an accelerator, compatible with KeyCombination.valueOf(String). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionAccelerator.html:460,interface,interface,460,javadoc/docs/qupath/lib/gui/actions/annotations/ActionAccelerator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionAccelerator.html,1,['interface'],['interface']
Integrability,". ActionConfig (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionConfig. @Documented; @Retention(RUNTIME); @Target({TYPE,METHOD,FIELD}); public @interface ActionConfig; Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String; value. Key to external properties file. Optional Element Summary; Optional Elements. Modifier and Type; Optional Element; Description; boolean; bindLocale;  ; String; bundle;  ; String[]; menu;  . Element Details. bundle; String bundle. Default:; """". menu; String[] menu. Default:; {""""}. bindLocale; boolean bindLocale. Default:; true. value; String value; Key to external properties file. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionConfig.html:450,interface,interface,450,javadoc/docs/qupath/lib/gui/actions/annotations/ActionConfig.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionConfig.html,1,['interface'],['interface']
Integrability,". ActionIcon (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionIcon. @Documented; @Retention(RUNTIME); @Target({METHOD,FIELD}); public @interface ActionIcon; Default icon for an action. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; IconFactory.PathIcons; value. Icon to associate with the action's graphic property. Element Details. value; IconFactory.PathIcons value; Icon to associate with the action's graphic property. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionIcon.html:441,interface,interface,441,javadoc/docs/qupath/lib/gui/actions/annotations/ActionIcon.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionIcon.html,1,['interface'],['interface']
Integrability,". ActionMenu (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionMenu. @Documented; @Retention(RUNTIME); @Target({TYPE,METHOD,FIELD}); public @interface ActionMenu; Annotation indicating the menu path where an action should be installed.; This may be used by QuPath to be able to assign the action automatically to the correct place, ; in the absence of further information. Required Element Summary; Required Elements. Modifier and Type; Required Element; Description; String[]; value. Menu path, in the form ""Menu>Submenu>Command name"". Element Details. value; String[] value; Menu path, in the form ""Menu>Submenu>Command name"". Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html:446,interface,interface,446,javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMenu.html,1,['interface'],['interface']
Integrability,". ActionMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Field; Required; Optional. Detail:. Field; Element. Summary: ; Field | ; Required | ; Optional. Detail: ; Field | ; Element. SEARCH. Package qupath.lib.gui.actions.annotations; Annotation Interface ActionMethod. @Documented; @Retention(RUNTIME); @Target(METHOD); public @interface ActionMethod; Annotation indicating that a method should be converted to an Action if possible.; Currently, only methods taking zero parameters may be converted automatically. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMethod.html:437,interface,interface,437,javadoc/docs/qupath/lib/gui/actions/annotations/ActionMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/annotations/ActionMethod.html,1,['interface'],['interface']
Integrability,". AffineTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AffineTransforms. java.lang.Object; qupath.lib.awt.common.AffineTransforms. public class AffineTransforms; extends Object; Helper class for working with affine transforms.; ; QuPath's core dependencies have two affine transform implementations: AffineTransform from Java itself ; and AffineTransformation from Java Topology Suite.; Inconveniently, both are initialized from flattened double arrays using a different ordering (assuming ; columns-first or rows-first) - so it is easy to make mistakes.; ; QuPath primarily uses AffineTransform from Java.; This class exists to make creating a transform more explicit, and facilitate conversion when needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AffineTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AffineTransform; from2D(double[][] mat). Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. static AffineTransform; fromColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static Affin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:557,depend,dependencies,557,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,1,['depend'],['dependencies']
Integrability,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:611,interface,interface,611,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,1,['interface'],['interface']
Integrability,". AnalyzeMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions. All Implemented Interfaces:; MenuActions. public class AnalyzeMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AnalyzeMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html:1208,interface,interface,1208,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,4,['interface'],['interface']
Integrability,". Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:3174,interface,interface,3174,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,". AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:41507,interface,interface,41507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,. Apply acceleration/deceleration effects when holding and releasing navigation key. navigationSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale navigation speed. nBins() - Method in class qupath.lib.analysis.stats.Histogram. Total number of histogram bins. nCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of censored events. nChannels() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nChannels() - Method in interface qupath.lib.images.servers.ImageServer. Number of channels (3 for RGB). nChildObjects() - Method in class qupath.lib.objects.PathObject. Total number of child objects. nComponents() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Number of output components. nCores() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate;  ; negative(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Multiply elements of an array by -1. NEGATIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:708512,interface,interface,708512,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:877,depend,dependency,877,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['depend'],['dependency']
Integrability,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:494,wrap,wrappers,494,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,3,"['interface', 'wrap']","['interface', 'wrapper', 'wrappers']"
Integrability,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html:461,interface,interface,461,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,4,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,". Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3357,wrap,wrap,3357,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['wrap'],['wrap']
Integrability,". AutoCompletions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Class AutoCompletions. java.lang.Object; qupath.lib.scripting.languages.AutoCompletions. public class AutoCompletions; extends Object; Class to deal with script auto-completions. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AutoCompletions.Completion. A single completion. static interface ; AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. Field Summary; Fields. Modifier and Type; Field; Description; static final AutoCompletions.CompletionTokenizer; JAVA_TOKENIZER. A completion tokenizer that extracts a token used to determine Java completions. static final AutoCompletions.CompletionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion tex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:673,interface,interface,673,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,3,['interface'],['interface']
Integrability,". AutoCompletions.Completion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface AutoCompletions.Completion. Enclosing class:; AutoCompletions. public static interface AutoCompletions.Completion; A single completion.; Instances must be able to determine whether they can provide a valid autocompletion, ; given an input string and a caret position - and, if so, also supply the completion text to insert. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getCompletionText(). Get the text that should be inserted for the full completion. String; getDisplayText(). Get the text that should be displayed for this completion. String; getInsertion(String text,; int pos,; String lastToken). Get the string to insert, given the provided text and position. default AutoCompletions.CompletionTokenizer; getTokenizer(). Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. boolean; isCompatible(String text,; int pos,; String lastToken). Test if this completion is compatible with the provided text. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html:468,interface,interface,468,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,1,['interface'],['interface']
Integrability,". AutoCompletions.CompletionTokenizer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface AutoCompletions.CompletionTokenizer. Enclosing class:; AutoCompletions. public static interface AutoCompletions.CompletionTokenizer; Functional interface to extract a token from a string needed to determine ; a completion.; For example, given the string var pathObject = PathObjects.crea ; the token would be ""PathObjects.crea"". Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getToken(String text,; int pos). Get the token needed for the completion. Method Details. getToken; String getToken(String text,; int pos); Get the token needed for the completion. Parameters:; text - ; pos - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.CompletionTokenizer.html:486,interface,interface,486,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.CompletionTokenizer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.CompletionTokenizer.html,2,['interface'],['interface']
Integrability,". AutomateMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions. All Implemented Interfaces:; MenuActions. public class AutomateMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AutomateMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html:1213,interface,interface,1213,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,4,['interface'],['interface']
Integrability,". BioFormatsServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsServerBuilder. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class BioFormatsServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that make use of the Bio-Formats library. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:787,interface,interfaces,787,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html:453,interface,interface,453,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html,1,['interface'],['interface']
Integrability,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:1376,interface,interface,1376,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,1,['interface'],['interface']
Integrability,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:1390,interface,interface,1390,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,1,['interface'],['interface']
Integrability,". ChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo. All Known Subinterfaces:; ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an exi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:557,interface,interface,557,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['interface'],['interface']
Integrability,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:559,interface,interface,559,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,5,['interface'],"['interface', 'interfaces']"
Integrability,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:888,interface,interfaces,888,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,1,['interface'],['interfaces']
Integrability,". ClassifyMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions. All Implemented Interfaces:; MenuActions. public class ClassifyMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ClassifyMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html:1213,interface,interface,1213,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,4,['interface'],['interface']
Integrability,". Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2803,interface,interface,2803,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['interface'],['interface']
Integrability,". ColorMaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorMaps. java.lang.Object; qupath.lib.color.ColorMaps. public class ColorMaps; extends Object; Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:665,interface,interface,665,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['interface'],['interface']
Integrability,". ColorMaps.ColorMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Interface ColorMaps.ColorMap. Enclosing class:; ColorMaps. public static interface ColorMaps.ColorMap; colormap, which acts as an interpolating lookup table with an arbitrary range. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Integer; getColor(double value,; double minValue,; double maxValue). Get a packed ARGB representation of the (interpolated) color at the specified value,. String; getName(). Get the name of the colormap. Method Details. getName; String getName(); Get the name of the colormap. Returns:. getColor; Integer getColor(double value,; double minValue,; double maxValue); Get a packed ARGB representation of the (interpolated) color at the specified value,. Parameters:; value - value that should be colorized; minValue - minimum display value, corresponding to the first color in the lookup table of this map; maxValue - maximum display value, corresponding to the first last in the lookup table of this map; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.ColorMap.html:432,interface,interface,432,javadoc/docs/qupath/lib/color/ColorMaps.ColorMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.ColorMap.html,1,['interface'],['interface']
Integrability,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html:669,interface,interface,669,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,1,['interface'],['interface']
Integrability,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels. java.lang.Object; qupath.lib.color.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html:645,interface,interface,645,javadoc/docs/qupath/lib/color/ColorModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html,1,['interface'],['interface']
Integrability,. ColorModels.ColorModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Interface ColorModels.ColorModelBuilder. Enclosing class:; ColorModels. public static interface ColorModels.ColorModelBuilder; Simple builder to create a ColorModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ColorModel; build(). Build a ColorModel. Method Details. build; ColorModel build(); Build a ColorModel. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html:468,interface,interface,468,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html,1,['interface'],['interface']
Integrability,. ColorModels.ColorModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Interface ColorModels.ColorModelBuilder. Enclosing class:; ColorModels. public static interface ColorModels.ColorModelBuilder; Simple builder to create a ColorModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ColorModel; build(). Build a ColorModel. Method Details. build; ColorModel build(); Build a ColorModel. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.ColorModelBuilder.html:456,interface,interface,456,javadoc/docs/qupath/lib/color/ColorModels.ColorModelBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.ColorModelBuilder.html,1,['interface'],['interface']
Integrability,". ColorTransformer.ColorTransformMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:949,interface,interfaces,949,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['interface'],['interfaces']
Integrability,". ColorTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms. java.lang.Object; qupath.lib.images.servers.ColorTransforms. public class ColorTransforms; extends Object; Color transforms that may be used to extract single-channel images from BufferedImages.; These are JSON-serializable, and therefore can be used with pixel classifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. static class ; ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorTransforms.ColorTransform; createChannelExtractor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html:771,interface,interface,771,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,1,['interface'],['interface']
Integrability,". ColorTransforms.ColorTransform (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ColorTransforms.ColorTransform. Enclosing class:; ColorTransforms. public static interface ColorTransforms.ColorTransform; Interface defining a color transform that can extract a float values from a BufferedImage.; ; The simplest example of this is to extract a single channel (band) from an image. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels). Extract a (row-wise) array containing the pixels extracted from a BufferedImage. String; getName(). Get a displayable name for the transform. boolean; supportsImage(ImageServer<BufferedImage> server). Query whether this transform can be applied to the specified image. Method Details. extractChannel; float[] extractChannel(ImageServer<BufferedImage> server,; BufferedImage img,; float[] pixels); Extract a (row-wise) array containing the pixels extracted from a BufferedImage. Parameters:; server - the server from which the image was read; can be necessary for some transforms (e.g. to request color deconvolution stains); img - the image; pixels - optional preallocated array; will be used if it is long enough to hold the transformed pixels; Returns:. supportsImage; boolean supportsImage(ImageServer<BufferedImage> server); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; server - ; Returns:. getName; String getName(); Get a displayable name for the transform. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html:471,interface,interface,471,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransform.html,1,['interface'],['interface']
Integrability,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:929,interface,interfaces,929,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,1,['interface'],['interfaces']
Integrability,". CommandFinderTools.CommandEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools.CommandEntry. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Enclosing class:; CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:610,wrap,wrap,610,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['wrap'],['wrap']
Integrability,". Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html:2130,interface,interface,2130,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,6,['interface'],['interface']
Integrability,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:529,depend,dependent,529,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,5,"['depend', 'message']","['dependent', 'message', 'messages']"
Integrability,". ConvertCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class ConvertCommand. java.lang.Object; qupath.lib.images.writers.ome.ConvertCommand. All Implemented Interfaces:; Runnable, Subcommand. public class ConvertCommand; extends Object; implements Runnable, Subcommand; Allows command line option to convert an input image to OME-TIFF. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ConvertCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvertCommand; public ConvertCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html:1136,interface,interface,1136,javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,1,['interface'],['interface']
Integrability,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1507,interface,interface,1507,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,2,['interface'],['interface']
Integrability,". Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3575,wrap,wrapInPointerScope,3575,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['wrap'],['wrapInPointerScope']
Integrability,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:1540,interface,interface,1540,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,1,['interface'],['interface']
Integrability,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:1338,interface,interface,1338,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,1,['interface'],['interface']
Integrability,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:1341,interface,interface,1341,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,1,['interface'],['interface']
Integrability,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html:1317,interface,interface,1317,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,2,['interface'],['interface']
Integrability,". DefaultScriptLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class DefaultScriptLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage. All Implemented Interfaces:; ExecutableLanguage. Direct Known Subclasses:; GroovyLanguage. public class DefaultScriptLanguage; extends ScriptLanguage; implements ExecutableLanguage; Default implementation for a ScriptLanguage, based on a ScriptEngine. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; protected static interface ; DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. Field Summary; Fields. Modifier and Type; Field; Description; protected static final DefaultScriptLanguage.ImportStatementGenerator; JAVA_IMPORTER. Java-like import statements. protected static final DefaultScriptLanguage.ImportStatementGenerator; PYTHON_IMPORTER. Pythonic import statements. Constructor Summary; Constructors. Constructor; Description; DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor). Constructor for a ExecutableLanguage. DefaultScriptLanguage(ScriptEngineFactory factory). Constructor for a ExecutableLanguage based on a ScriptEngineFactory. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ScriptContext; createContext(ScriptParameters params). Create a ScriptContext containing information from the ScriptParameters. Object; execute(ScriptParameters params). Execute the given script String. Scr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:934,interface,interface,934,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['interface'],['interface']
Integrability,. DefaultScriptLanguage.ImportStatementGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Interface DefaultScriptLanguage.ImportStatementGenerator. Enclosing class:; DefaultScriptLanguage. protected static interface DefaultScriptLanguage.ImportStatementGenerator; Interface defining how the import statements should be generated for the language.; The purpose of this is to enable standard methods for common languages (currently Java and Python). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getImportStatments(Collection<Class<?>> classes);  ; String; getStaticImportStatments(Collection<Class<?>> classes);  . Method Details. getImportStatments; String getImportStatments(Collection<Class<?>> classes). getStaticImportStatments; String getStaticImportStatments(Collection<Class<?>> classes). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.ImportStatementGenerator.html:521,interface,interface,521,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.ImportStatementGenerator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.ImportStatementGenerator.html,1,['interface'],['interface']
Integrability,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:1206,interface,interface,1206,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,1,['interface'],['interface']
Integrability,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:839,interface,interfaces,839,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,1,['interface'],['interfaces']
Integrability,". Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:1202,interface,interface,1202,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['interface'],['interface']
Integrability,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:814,interface,interfaces,814,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,1,['interface'],['interfaces']
Integrability,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:476,interface,interface,476,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,2,['interface'],['interface']
Integrability,". DnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModelBuilder. All Known Implementing Classes:; OpenCVDnnModelBuilder. public interface DnnModelBuilder; Builder to create a DnnModel from DnnModelParams.; This exists to allow different implementations to be added via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Method Details. buildModel; DnnModel buildModel(DnnModelParams params); Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Parameters:; params - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelBuilder.html:447,interface,interface,447,javadoc/docs/qupath/opencv/dnn/DnnModelBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelBuilder.html,1,['interface'],['interface']
Integrability,". DnnObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.DnnObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:915,interface,interface,915,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['interface'],['interface']
Integrability,". DnnTools.DNNLayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools.DNNLayer. java.lang.Object; qupath.opencv.dnn.DnnTools.DNNLayer. Enclosing class:; DnnTools. public static class DnnTools.DNNLayer; extends Object; Helper class to summarize a DNN layer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getID(). Layer ID. List<DnnShape>; getInputShapes(). Layer input shape. String; getName(). Layer name. List<DnnShape>; getOutputShapes(). Layer output shape. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Layer name. Returns:. getID; public int getID(); Layer ID. Returns:. getInputShapes; public List<DnnShape> getInputShapes(); Layer input shape. This may depend on the input shape provided when summarizing the model. Returns:. getOutputShapes; public List<DnnShape> getOutputShapes(); Layer output shape. This may depend on the input shape provided when summarizing the model. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html:1180,depend,depend,1180,javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,2,['depend'],['depend']
Integrability,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:1122,interface,interface,1122,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,1,['interface'],['interface']
Integrability,". DragDropImportListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class DragDropImportListener. java.lang.Object; qupath.lib.gui.viewer.DragDropImportListener. All Implemented Interfaces:; EventListener, EventHandler<DragEvent>. public class DragDropImportListener; extends Object; implements EventHandler<DragEvent>; Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:834,interface,interface,834,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,1,['interface'],['interface']
Integrability,". DragDropImportListener.DropHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface DragDropImportListener.DropHandler<T>. Type Parameters:; T - . Enclosing class:; DragDropImportListener. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface DragDropImportListener.DropHandler<T>; Interface to define a new drop handler. Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; handleDrop(QuPathViewer viewer,; List<T> list). Handle drop onto a viewer. Method Details. handleDrop; boolean handleDrop(QuPathViewer viewer,; List<T> list); Handle drop onto a viewer.; This makes it possible to drop images (for example) onto a specific viewer to open them in that viewer, ; irrespective of whether the viewer is active currently. Parameters:; viewer - the active viewer, or the viewer only which the object were dropped; list - the dropped objects; Returns:; true if the handler processed the drop event. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html:539,interface,interface,539,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html,2,['interface'],['interface']
Integrability,". EditMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions. All Implemented Interfaces:; MenuActions. public class EditMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; EditMenuActions.Actions;  ; class ; EditMenuActions.CopyActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html:1233,interface,interface,1233,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,4,['interface'],['interface']
Integrability,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:509,interface,interface,509,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html,2,['interface'],['interface']
Integrability,". EllipseROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:666,interface,interfaces,666,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". ExecutableLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface ExecutableLanguage. All Known Subinterfaces:; HtmlRenderer. All Known Implementing Classes:; DefaultScriptLanguage, GroovyLanguage, MarkdownLanguage. public interface ExecutableLanguage; Functional interface for scripting languages that are runnable (e.g. Groovy, JavaScript). Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. Method Details. execute; Object execute(ScriptParameters params); throws ScriptException; Execute the given script String. Parameters:; params - ; Returns:; Throws:; ScriptException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ExecutableLanguage.html:540,interface,interface,540,javadoc/docs/qupath/lib/scripting/languages/ExecutableLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ExecutableLanguage.html,2,['interface'],['interface']
Integrability,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:1395,interface,interface,1395,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,1,['interface'],['interface']
Integrability,". ExtensionsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions. All Implemented Interfaces:; MenuActions. public class ExtensionsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ExtensionsMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html:1223,interface,interface,1223,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,4,['interface'],['interface']
Integrability,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:488,wrap,wrap,488,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,3,['wrap'],"['wrap', 'wrapped']"
Integrability,". FeatureExtractor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Interface FeatureExtractor<T>. Type Parameters:; T - generic parameter related to the ImageData (not always required). public interface FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:500,interface,interface,500,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,1,['interface'],['interface']
Integrability,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:628,message,message,628,javadoc/docs/qupath/lib/gui/FileCopier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html,1,['message'],['message']
Integrability,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html:951,interface,interface,951,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,1,['interface'],['interface']
Integrability,". FileFormatInfo.ImageCheckType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface FileFormatInfo.ImageCheckType. Enclosing class:; FileFormatInfo. public static interface FileFormatInfo.ImageCheckType; Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get the image description, as stored in a TIFF, or null if no description is available. File; getFile(). Get a File object representing the local image file - or null if no file could be found. long; getLargestImageHeight(). Get the height of the largest image, if known. long; getLargestImageWidth(). Get the width of the largest image, if known. boolean; isBigTiff(). Returns true if URI is for a local file known/expected to be a BigTIFF image. boolean; isNotRGB(). Returns true if we can say with reasonable confidence that the image is not RGB. boolean; isTiff(). Returns true if URI is for a local file known/expected to be a TIFF image. boolean; isURL(). Return true if URI has a scheme beginning with http. int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html:468,interface,interface,468,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,1,['interface'],['interface']
Integrability,". FileMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions. All Implemented Interfaces:; MenuActions. public class FileMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; FileMenuActions.Actions;  ; class ; FileMenuActions.ExportImageActions;  ; class ; FileMenuActions.ExportSnapshotActions;  ; class ; FileMenuActions.ProjectActions;  ; class ; FileMenuActions.TmaActions;  . Constructor Summary; Constructors. Constructor; Description; FileMenuActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileMenuActions; public FileMenuActions(QuPathGUI qupath). Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html:1551,interface,interface,1551,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,4,['interface'],['interface']
Integrability,". GeneratingImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface GeneratingImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. All Known Implementing Classes:; LabeledImageServer, PathHierarchyImageServer, RenderedImageServer. public interface GeneratingImageServer<T>; extends ImageServer<T>; Marker interface to indicate that this ImageServer generates tiles on request. Author:; Pete Bankhead. Method Summary. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html:591,interface,interface,591,javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/GeneratingImageServer.html,4,['interface'],['interface']
Integrability,. GitHubProject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface GitHubProject. public interface GitHubProject; Helper class to represent a project hosted on GitHub.; May be used in combination with UpdateChecker to query new releases. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; GitHubProject.GitHubRepo; getRepository(). Get the GitHub repository associated with the project. Method Details. getRepository; GitHubProject.GitHubRepo getRepository(); Get the GitHub repository associated with the project. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html:395,interface,interface,395,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,1,['interface'],['interface']
Integrability,". GitHubProject.GitHubRepo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:486,interface,interface,486,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,1,['interface'],['interface']
Integrability,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:591,wrap,wraps,591,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html,1,['wrap'],['wraps']
Integrability,". GridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check ove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:711,interface,interfaces,711,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['interface'],['interfaces']
Integrability,". GroovyLanguage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class GroovyLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage; qupath.lib.gui.scripting.languages.GroovyLanguage. All Implemented Interfaces:; ExecutableLanguage. public class GroovyLanguage; extends DefaultScriptLanguage; implements ExecutableLanguage; Class for the representation of the Groovy programming language in QuPath.; ; This class stores the QuPath implementation of Groovy syntaxing and Groovy auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.Scr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:972,interface,interfaces,972,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['interface'],['interfaces']
Integrability,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:495,adapter,adapters,495,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['adapter'],['adapters']
Integrability,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:822,interface,interfaces,822,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,1,['interface'],['interfaces']
Integrability,". HelpMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions. All Implemented Interfaces:; MenuActions. public class HelpMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; HelpMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html:1193,interface,interface,1193,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,4,['interface'],['interface']
Integrability,". HierarchyOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:787,interface,interfaces,787,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['interface'],['interfaces']
Integrability,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:911,interface,interfaces,911,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['interface'],['interfaces']
Integrability,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:841,interface,interfaces,841,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,1,['interface'],['interfaces']
Integrability,. HtmlRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Interface HtmlRenderer. All Superinterfaces:; ExecutableLanguage. All Known Implementing Classes:; MarkdownLanguage. public interface HtmlRenderer; extends ExecutableLanguage; Marker interface that indicates an executable language renders HTML.; This really exists to support markdown rendering. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html:495,interface,interface,495,javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/HtmlRenderer.html,3,['interface'],['interface']
Integrability,". IJExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension. java.lang.Object; qupath.imagej.gui.IJExtension. All Implemented Interfaces:; QuPathExtension. public class IJExtension; extends Object; implements QuPathExtension; QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static StringProperty; imageJPath. Property representing the path to a local ImageJ installation, or null if no path has been set. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. Constructor Summary; Constructors. Constructor; Description; IJExtension();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Overlay; extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter). Extract an ImageJ overlay for the specified region. static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; PathObject pathObject,; RegionRequest request,; boolean setROI). Similar to extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI). Extract a region of interest from an image as an ImageJ ImagePlus. static PathImage<ImagePlus>; extractROIWithOverlay(ImageServer<Buffe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:605,integrat,integration,605,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['integrat'],['integration']
Integrability,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:804,interface,interfaces,804,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,1,['interface'],['interfaces']
Integrability,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:922,depend,depending,922,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['depend'],['depending']
Integrability,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:885,interface,interfaces,885,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html,1,['interface'],['interfaces']
Integrability,". ImageDataOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:418,interface,interface,418,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html,1,['interface'],['interface']
Integrability,". ImageDataServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable, ImageServer<T>. public interface ImageDataServer<T>; extends ImageServer<T>; An ImageServer that wraps an ImageData.; This can be used if the server requires additional information within the ImageData, such as ColorDeconvolutionStains.; ; Warning: because many properties of the ImageData are mutable, yet ImageServers generally are not (apart from their metadata), ; this interface should be used sparingly - and only temporarily (e.g. during a single processing operation). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageData<T>; getImageData(). Get the ImageData wrapped by the ImageDataServer. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getOriginalMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getServerType, getTileRequestManager, getURIs, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. getImageData; ImageData<T> getImageData(); Get the ImageData wrapped by the ImageDataServer. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html:471,interface,interface,471,javadoc/docs/qupath/opencv/ops/ImageDataServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataServer.html,7,"['interface', 'wrap']","['interface', 'wrapped', 'wraps']"
Integrability,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:792,interface,interfaces,792,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,1,['interface'],['interfaces']
Integrability,". ImageJServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.servers; Class ImageJServerBuilder. java.lang.Object; qupath.imagej.images.servers.ImageJServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class ImageJServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that use ImageJ to read images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Detail",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:745,interface,interfaces,745,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". ImageOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageOp. All Superinterfaces:; UriResource. All Known Implementing Classes:; ImageOps.PaddedOp. public interface ImageOp; extends UriResource; An operation that may be applied to a Mat.; ; This is intended to apply simple transforms to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:462,interface,interface,462,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,1,['interface'],['interface']
Integrability,". ImageRegionRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:468,interface,interface,468,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['interface'],['interface']
Integrability,". ImageRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRenderer. All Known Implementing Classes:; AbstractImageRenderer, ColorModelRenderer, ImageDisplay. public interface ImageRenderer; Interface for objects capable of converting a BufferedImage for rendering using Graphics2D.; This typically means applying any color transforms to produce an (A)RGB image.; ; A timestamp and ID are supplied to help with caching. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Method Details. applyTransforms; BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. getLastChangeTimestamp; long getLastChangeTimestamp(); Timestamp of the last change (probably in milliseconds).; ; This can be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRenderer.html:488,interface,interface,488,javadoc/docs/qupath/lib/gui/images/stores/ImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRenderer.html,1,['interface'],['interface']
Integrability,". ImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; BioFormatsServerBuilder, ImageJServerBuilder, JsonImageServerBuilder, OpenslideServerBuilder. public interface ImageServerBuilder<T>; Helper class for creating ImageServers from a given URI and optional argument list. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. static class ; ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. static interface ; ImageServerBuilder.ServerBuilder<T>. Interface that defines a class encapsulating all that is required to build an ImageServer. static class ; ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ImageServer<T>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<T>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<T>; getImageType(). Returns the base class for the images supported by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html:559,interface,interface,559,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,1,['interface'],['interface']
Integrability,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html:702,interface,interface,702,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,4,['interface'],['interface']
Integrability,". ImageServerBuilder.DefaultImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.DefaultImageServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.DefaultImageServerBuilder<T>; extends ImageServerBuilder.AbstractServerBuilder<T>; Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:713,interface,interface,713,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['interface'],['interface']
Integrability,". ImageServerBuilder.ServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder.ServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; ImageServerBuilder.AbstractServerBuilder, ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public static interface ImageServerBuilder.ServerBuilder<T>; Interface that defines a class encapsulating all that is required to build an ImageServer.; ; Instances should be sufficiently lightweight that they can be easily serialized to/from JSON ; for storage within projects.; ; Instances should also be immutable. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. Collection<URI>; getURIs(). Get a list of URIs required by this builder. ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Method Details. build; ImageServer<T> build(); throws Exception; Build a new ImageServer instance. Returns:; Throws:; Exception. getURIs; Collection<URI> getURIs(); Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. updateURIs(Map). updateURIs; ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. getURIs(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html:584,interface,interface,584,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.ServerBuilder.html,2,['interface'],['interface']
Integrability,". ImageServerBuilder.UriImageSupport (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.UriImageSupport<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.UriImageSupport<T>. Type Parameters:; T - . Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.UriImageSupport<T>; extends Object; Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:546,interface,interface,546,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['interface'],['interface']
Integrability,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:481,interface,interface,481,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,3,['interface'],['interface']
Integrability,". ImageWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Interface ImageWriter<T>. Type Parameters:; T - . All Known Implementing Classes:; JpegWriter, OMETiffWriter, PngWriter, TiffWriterIJ, ZipWriterIJ. public interface ImageWriter<T>; Interface for defining class that can write images.; ; This may not have been a particularly good idea and may change in the future... (e.g. using services?).; ; As it is, it's best to avoid using it because the design is rather clumsy (and goes back to a day whenever ; external dependencies were avoided with an enthusiasm that may have been a bit too much). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getDefaultExtension(). Get the default extension. String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<T>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<T> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImageServer<T> server,; OutputS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html:516,interface,interface,516,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:488,message,message,488,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,3,['message'],['message']
Integrability,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:762,message,message,762,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,". InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2769,message,message,2769,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,". Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27990,interface,interface,27990,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,". JsonImageServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class JsonImageServerBuilder. java.lang.Object; qupath.lib.images.servers.JsonImageServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class JsonImageServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; ImageServerBuilder that constructs an ImageServer from a JSON representation. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:772,interface,interfaces,772,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:1628,interface,interface,1628,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,1,['interface'],['interface']
Integrability,". LineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class LineROI. java.lang.Object; qupath.lib.roi.LineROI. All Implemented Interfaces:; Serializable, ROI. public class LineROI; extends Object; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is define",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:664,interface,interfaces,664,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1942,interface,interface,1942,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,1,['interface'],['interface']
Integrability,". LocalNormalization.NormalizationType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class LocalNormalization.NormalizationType. java.lang.Object; java.lang.Enum<LocalNormalization.NormalizationType>; qupath.opencv.tools.LocalNormalization.NormalizationType. All Implemented Interfaces:; Serializable, Comparable<LocalNormalization.NormalizationType>, Constable. Enclosing class:; LocalNormalization. public static enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:905,interface,interfaces,905,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,1,['interface'],['interfaces']
Integrability,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:780,interface,interfaces,780,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,3,"['interface', 'message']","['interfaces', 'messages']"
Integrability,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:749,message,message,749,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,5,['message'],['message']
Integrability,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:512,message,messages,512,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,3,['message'],['messages']
Integrability,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:767,message,messages,767,javadoc/docs/qupath/lib/scripting/LoggingTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html,2,['message'],['messages']
Integrability,". MEDIAN - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Median value. MEDIUM - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; MEDIUM - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; MEMBRANE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Cell boundary, with interior removed. memoizationTimeMillis - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; MEMORY_MONITORY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; memoryReport(CharSequence) - Static method in class qupath.opencv.tools.OpenCVTools. Create a brief report on memory use, based on JavaCPP's Pointer class. menu() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; MenuActions - Interface in qupath.lib.gui.actions.menus. Common interface to define the contents of a menu in terms of actions. menuPathProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getMenuPath(). Menus - Class in qupath.lib.gui.actions.menus. Generate actions for installation in QuPath's main menubar. Menus() - Constructor for class qupath.lib.gui.actions.menus.Menus;  ; menusToMarkdown() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. menusToMarkdown(QuPathGUI, Writer) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Write a markdown representation of the menus for inclusion in the documentation. MenuTools - Class in qupath.lib.gui.tools. Static methods to help with creating and populating JavaFX menus. MenuTools() - Constructor for class qupath.lib.gui.tools.MenuTools;  ; merge(Collection<? extends PathObject>) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:686220,interface,interface,686220,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:503,interface,interface,503,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,3,['interface'],['interface']
Integrability,". MeasureMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions. All Implemented Interfaces:; MenuActions. public class MeasureMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; MeasureMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html:1166,interface,interface,1166,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,4,['interface'],['interface']
Integrability,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html:425,interface,interface,425,javadoc/docs/qupath/lib/measurements/Measurement.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html,2,['interface'],['interface']
Integrability,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:1284,interface,interface,1284,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,1,['interface'],['interface']
Integrability,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:448,interface,interface,448,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['interface'],['interface']
Integrability,". MeasurementList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:708,interface,interface,708,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['interface'],['interface']
Integrability,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:979,interface,interface,979,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['interface'],['interface']
Integrability,". MeasurementProcessor.CustomMeasurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MeasurementProcessor.CustomMeasurement<S,T>. Type Parameters:; S - ; T - . Enclosing class:; MeasurementProcessor. public static interface MeasurementProcessor.CustomMeasurement<S,T>; Interface for calculating one custom measurement from an image, using Parameters. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName();  ; double; getValue(Parameters<S,T> params);  . Method Details. getName; String getName(). getValue; double getValue(Parameters<S,T> params); throws IOException. Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html:532,interface,interface,532,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html,1,['interface'],['interface']
Integrability,". MenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Interface MenuActions. All Known Implementing Classes:; AnalyzeMenuActions, AutomateMenuActions, ClassifyMenuActions, EditMenuActions, ExtensionsMenuActions, FileMenuActions, HelpMenuActions, MeasureMenuActions, ObjectsMenuActions, TMAMenuActions, ViewMenuActions. public interface MenuActions; Common interface to define the contents of a menu in terms of actions.; This can be used to generate the actual menu by using the actions to configure the menu items. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Method Details. getActions; List<org.controlsfx.control.action.Action> getActions(); Get all the actions to include in the menu, in order. Returns:. getName; String getName(); Get the name of the menu. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html:636,interface,interface,636,javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MenuActions.html,2,['interface'],['interface']
Integrability,". MetadataStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface MetadataStore. All Known Implementing Classes:; TMACoreObject. public interface MetadataStore; Interface that may be used to indicate that a PathObject (or other object) can store metadata.; ; Implementing classes should ensure that entries are stored in insertion order. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. Object; putMetadataValue(String key,; String value). Store a new metadata value. Method Details. putMetadataValue; Object putMetadataValue(String key,; String value); Store a new metadata value. Parameters:; key - ; value - ; Returns:. getMetadataString; String getMetadataString(String key); Get a metadata value, cast as a String if possible. Parameters:; key - ; Returns:. getMetadataValue; Object getMetadataValue(String key); Get a metadata value of any kind. Parameters:; key - ; Returns:. getMetadataKeys; Set<String> getMetadataKeys(); Get all metadata keys. Returns:. getMetadataMap; Map<String,String> getMetadataMap(); Returns an unmodifiable map containing the metadata. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/MetadataStore.html:436,interface,interface,436,javadoc/docs/qupath/lib/objects/MetadataStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/MetadataStore.html,1,['interface'],['interface']
Integrability,". Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3424,depend,depending,3424,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['depend'],['depending']
Integrability,". Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:2358,interface,interface,2358,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['interface'],['interface']
Integrability,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:563,depend,depending,563,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,1,['depend'],['depending']
Integrability,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:653,interface,interface,653,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,". MultiscaleFeatures.Hessian (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors correspon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:590,interface,interface,590,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,1,['interface'],['interface']
Integrability,". MultiscaleFeatures.MultiscaleFeature (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.tools; Enum Class MultiscaleFeatures.MultiscaleFeature. java.lang.Object; java.lang.Enum<MultiscaleFeatures.MultiscaleFeature>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. All Implemented Interfaces:; Serializable, Comparable<MultiscaleFeatures.MultiscaleFeature>, Constable. Enclosing class:; MultiscaleFeatures. public static enum MultiscaleFeatures.MultiscaleFeature; extends Enum<MultiscaleFeatures.MultiscaleFeature>; Image features, dependent on Gaussian scale. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian filter. GRADIENT_MAGNITUDE. Gradient magnitude. HESSIAN_DETERMINANT. Determinant of the Hessian matrix, calculated per pixel. HESSIAN_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). LAPLACIAN. Laplacian of Gaussian filter. STRUCTURE_TENSOR_COHERENCE. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Mid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:858,depend,dependent,858,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,2,"['depend', 'interface']","['dependent', 'interfaces']"
Integrability,". NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. newInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Create a new instance. nFeatures() - Method in class qupath.lib.analysis.features.HaralickFeatures. Total number of Haralick features. nFeatures() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; nFeatures() - Method in class qupath.opencv.ml.objects.features.Normalizer. The total number of features supported by this Normalizer. nFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the number of recorded frames. nImages() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return an estimate of the number of images if known, or -1 if unknown. nImagesLargest() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return the number of images with the largest image size, if known, or -1 if unknown. nLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the number of resolution levels. nMissingValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of NaNs in the input array. NO - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""No"" option. nObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Number of objects in the hierarchy, excluding the root. nObjects() - Static method in class qupath.lib.scripting.QP. Get a count of the total number of objects in the current hierarchy. nObserved() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:710718,interface,interface,710718,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,". Normalization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.classifiers; Enum Class Normalization. java.lang.Object; java.lang.Enum<Normalization>; qupath.lib.classifiers.Normalization. All Implemented Interfaces:; Serializable, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html:737,interface,interfaces,737,javadoc/docs/qupath/lib/classifiers/Normalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html,1,['interface'],['interfaces']
Integrability,". OMEPyramidWriter.ChannelExportType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.ChannelExportType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.ChannelExportType>; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.ChannelExportType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.ChannelExportType; extends Enum<OMEPyramidWriter.ChannelExportType>; Enum representing different ways in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, noti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:960,interface,interfaces,960,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,1,['interface'],['interfaces']
Integrability,". OMEPyramidWriter.CompressionType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.CompressionType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.CompressionType>; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.CompressionType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.CompressionType; extends Enum<OMEPyramidWriter.CompressionType>; Preferred compression type when using Bio-Formats. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). J2K. Lossless JPEG-2000 compression. J2K_LOSSY. Lossy JPEG-2000 compression. JPEG. JPEG compression (only for single channel or RGB 8-bit images). LZW. LZW compression. UNCOMPRESSED. No compression (faster to write, no loss of information, but large file sizes). ZLIB. ZLIB compression. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; fromFriendlyString(String friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; suppo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html:920,interface,interfaces,920,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,1,['interface'],['interfaces']
Integrability,". ObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Interface ObjectClassifier<T>. Type Parameters:; T - . All Known Implementing Classes:; AbstractObjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:561,interface,interface,561,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['interface'],['interface']
Integrability,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:1431,interface,interface,1431,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,1,['interface'],['interface']
Integrability,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:1279,interface,interface,1279,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,1,['interface'],['interface']
Integrability,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1633,interface,interface,1633,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,1,['interface'],['interface']
Integrability,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html:417,interface,interface,417,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html,2,['interface'],['interface']
Integrability,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:881,interface,interfaces,881,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,1,['interface'],['interfaces']
Integrability,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:896,interface,interfaces,896,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,1,['interface'],['interfaces']
Integrability,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:925,interface,interfaces,925,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['interface'],['interfaces']
Integrability,". ObjectsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions. All Implemented Interfaces:; MenuActions. public class ObjectsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ObjectsMenuActions.Actions;  ; class ; ObjectsMenuActions.AnnotationActions;  ; class ; ObjectsMenuActions.DeleteActions;  ; class ; ObjectsMenuActions.LockActions;  ; class ; ObjectsMenuActions.SelectActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html:1390,interface,interface,1390,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,4,['interface'],['interface']
Integrability,". OpenCVClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers. public class OpenCVClassifiers; extends Object; QuPath wrappers for OpenCV classifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:492,wrap,wrappers,492,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,2,['wrap'],['wrappers']
Integrability,". OpenCVDnn.ModelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.dnn; Enum Class OpenCVDnn.ModelType. java.lang.Object; java.lang.Enum<OpenCVDnn.ModelType>; qupath.opencv.dnn.OpenCVDnn.ModelType. All Implemented Interfaces:; Serializable, Comparable<OpenCVDnn.ModelType>, Constable. Enclosing class:; OpenCVDnn. public static enum OpenCVDnn.ModelType; extends Enum<OpenCVDnn.ModelType>; Enum representing different classes of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:877,interface,interfaces,877,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,1,['interface'],['interfaces']
Integrability,". OpenCVDnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnnModelBuilder. java.lang.Object; qupath.opencv.dnn.OpenCVDnnModelBuilder. All Implemented Interfaces:; DnnModelBuilder. public class OpenCVDnnModelBuilder; extends Object; implements DnnModelBuilder; A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenCVDnnModelBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVDnnModelBuilder; public OpenCVDnnModelBuilder(). Method Details. buildModel; public DnnModel buildModel(DnnModelParams params); Description copied from interface: DnnModelBuilder; Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Specified by:; buildModel in interface DnnModelBuilder; Parameters:; params - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html:1307,interface,interface,1307,javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,2,['interface'],['interface']
Integrability,". OpenCVMLClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:816,interface,interface,816,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['interface'],['interface']
Integrability,". OpenCVModelObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVModelObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.OpenCVModelObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:938,interface,interface,938,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['interface'],['interface']
Integrability,". OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; OpenCVTypeAdapters. public static class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdaptorFactory();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdaptorFactory; public OpenCVTypeAdaptorFactory(). Method Details. create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html:1423,interface,interface,1423,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,1,['interface'],['interface']
Integrability,". OpenSlide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlide. All Implemented Interfaces:; Closeable, AutoCloseable. public final class OpenSlide; extends Object; implements Closeable; Minimal Java wrapper for OpenSlide. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROPERTY_NAME_BACKGROUND_COLOR;  ; static final String; PROPERTY_NAME_BOUNDS_HEIGHT;  ; static final String; PROPERTY_NAME_BOUNDS_WIDTH;  ; static final String; PROPERTY_NAME_BOUNDS_X;  ; static final String; PROPERTY_NAME_BOUNDS_Y;  ; static final String; PROPERTY_NAME_COMMENT;  ; static final String; PROPERTY_NAME_MPP_X;  ; static final String; PROPERTY_NAME_MPP_Y;  ; static final String; PROPERTY_NAME_OBJECTIVE_POWER;  ; static final String; PROPERTY_NAME_QUICKHASH1;  ; static final String; PROPERTY_NAME_VENDOR;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:595,wrap,wrapper,595,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,1,['wrap'],['wrapper']
Integrability,". OpenSlideJNA (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Interface OpenSlideJNA. All Superinterfaces:; com.sun.jna.Library. public interface OpenSlideJNA; extends com.sun.jna.Library; JNA interface for OpenSlide. Nested Class Summary. Nested classes/interfaces inherited from interface com.sun.jna.Library; com.sun.jna.Library.Handler. Field Summary. Fields inherited from interface com.sun.jna.Library; OPTION_ALLOW_OBJECTS, OPTION_CALLING_CONVENTION, OPTION_CLASSLOADER, OPTION_FUNCTION_MAPPER, OPTION_INVOCATION_MAPPER, OPTION_OPEN_FLAGS, OPTION_STRING_ENCODING, OPTION_STRUCTURE_ALIGNMENT, OPTION_SYMBOL_PROVIDER, OPTION_TYPE_MAPPER. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; openslide_close(long osr);  ; String; openslide_detect_vendor(String file);  ; void; openslide_get_associated_image_dimensions(long osr,; String name,; long[] w,; long[] h);  ; String[]; openslide_get_associated_image_names(long osr);  ; String; openslide_get_error(long osr);  ; long; openslide_get_icc_profile_size(long osr);  ; int; openslide_get_level_count(long osr);  ; void; openslide_get_level_dimensions(long osr,; int level,; long[] w,; long[] h);  ; double; openslide_get_level_downsample(long osr,; int level);  ; String[]; openslide_get_property_names(long osr);  ; String; openslide_get_property_value(long osr,; String name);  ; String; openslide_get_version();  ; long; openslide_open(String file);  ; void; openslide_read_associated_image(long osr,; String name,; int[] dest);  ; void; openslide_read_icc_profile(long osr,; byte[] bytes);  ; void; openslide_read_region(long osr,; int[] dest,; long x,; long y,; int leve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html:450,interface,interface,450,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideJNA.html,5,['interface'],"['interface', 'interfaces']"
Integrability,". OpenslideServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide; Class OpenslideServerBuilder. java.lang.Object; qupath.lib.images.servers.openslide.OpenslideServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class OpenslideServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for Openslide ImageServer. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:749,interface,interfaces,749,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:599,interface,interface,599,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,3,['interface'],['interface']
Integrability,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:588,interface,interface,588,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,6,['interface'],"['interface', 'interfaces']"
Integrability,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:458,interface,interface,458,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,3,['interface'],['interface']
Integrability,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:918,interface,interfaces,918,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['interface'],['interfaces']
Integrability,". Overview (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index.html:600,interface,interface,600,javadoc/docs/index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html,1,['interface'],['interface']
Integrability,". ParallelTileObject.Status (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins; Enum Class ParallelTileObject.Status. java.lang.Object; java.lang.Enum<ParallelTileObject.Status>; qupath.lib.plugins.ParallelTileObject.Status. All Implemented Interfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html:840,interface,interfaces,840,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,1,['interface'],['interfaces']
Integrability,". Parameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameter<S>. Type Parameters:; S - . All Superinterfaces:; Serializable. All Known Implementing Classes:; BooleanParameter, ChoiceParameter, DoubleParameter, EmptyParameter, IntParameter, NumericParameter, StringParameter. public interface Parameter<S>; extends Serializable; Interface defining algorithm parameters, which need to be displayed to users somehow. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Deta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:604,interface,interface,604,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,1,['interface'],['interface']
Integrability,". ParameterChangeListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface ParameterChangeListener. All Known Implementing Classes:; HistogramDisplay. public interface ParameterChangeListener; Interface for objects that need to be notified when parameters have their values changed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. Method Details. parameterChanged; void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Notify listener that a parameter value has changed. Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html:470,interface,interface,470,javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterChangeListener.html,1,['interface'],['interface']
Integrability,. Parameterizable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Interface Parameterizable. public interface Parameterizable; Interface for indicating that the implementing class takes adjustable parameters. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ParameterList; getParameterList(). Get the parameter list associated with the class. Method Details. getParameterList; ParameterList getParameterList(); Get the parameter list associated with the class. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html:403,interface,interface,403,javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameterizable.html,1,['interface'],['interface']
Integrability,". Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3591,interface,interface,3591,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['interface'],['interface']
Integrability,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:851,interface,interfaces,851,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,1,['interface'],['interfaces']
Integrability,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:406,interface,interface,406,javadoc/docs/qupath/lib/images/PathImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html,1,['interface'],['interface']
Integrability,". PathObjectConnectionGroup (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectConnectionGroup. All Known Implementing Classes:; DefaultPathObjectConnectionGroup, DelaunayTriangulation. public interface PathObjectConnectionGroup; Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy.; ; Example applications would be Delaunay triangulation.; ; Such connections can be represented on an overlay by drawing lines between object centroids. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. default Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. Method Details. containsObject; boolean containsObject(PathObject pathObject); Returns true if the specified PathObject is contained within this group. Parameters:; pathObject - ; Returns:. getPathObjects; Collection<PathObject> getPathObjects(); Get an unmodifiable collection containing all the PathObjects contained within this group. Returns:. getConnectedObjects; List<PathObject> getConnectedObjects(PathObject pathObject); Get all the connections to a specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html:502,interface,interface,502,javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html,1,['interface'],['interface']
Integrability,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:978,interface,interfaces,978,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['interface'],['interfaces']
Integrability,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:873,interface,interfaces,873,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,1,['interface'],['interfaces']
Integrability,". PathObjectHierarchyListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectHierarchyListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, ImageData, PathObjectGridView, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView, UndoRedoManager. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface PathObjectHierarchyListener; extends EventListener; A listener for modifications to a PathObjectHierarchy (i.e. objects added, removed, classified etc.). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. Method Details. hierarchyChanged; void hierarchyChanged(PathObjectHierarchyEvent event); Notify listeners of a change in the hierarchy or its objects. Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html:691,interface,interface,691,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyListener.html,2,['interface'],['interface']
Integrability,". PathObjectPredicates (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectPredicates. java.lang.Object; qupath.lib.objects.PathObjectPredicates. public class PathObjectPredicates; extends Object; Classes to define JSON-serializable Predicates for PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. Constructor Summary; Constructors. Constructor; Description; PathObjectPredicates();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectPredicates.PathObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:673,interface,interface,673,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,1,['interface'],['interface']
Integrability,". PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:534,interface,interface,534,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,1,['interface'],['interface']
Integrability,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html:472,interface,interface,472,javadoc/docs/qupath/lib/objects/PathObjectReader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html,1,['interface'],['interface']
Integrability,". PathObjectSelectionListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Interface PathObjectSelectionListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; AnnotationPane, PathObjectHierarchyView, QuPathViewer, QuPathViewerPlus, SelectedMeasurementTableView. public interface PathObjectSelectionListener; extends EventListener; A listener to selection changes within a PathObjectSelectionModel. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Method Details. selectedPathObjectChanged; void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Fired when the selected objects have changed. Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html:606,interface,interface,606,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionListener.html,1,['interface'],['interface']
Integrability,". PathOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface PathOverlay. All Known Implementing Classes:; AbstractImageOverlay, AbstractOverlay, BufferedImageOverlay, GridOverlay, HierarchyOverlay, PixelClassificationOverlay, TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thickness",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:565,interface,interface,565,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,1,['interface'],['interface']
Integrability,". PathPrefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class PathPrefs. java.lang.Object; qupath.lib.gui.prefs.PathPrefs. public class PathPrefs; extends Object; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created acciden",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:560,depend,dependent,560,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['dependent']
Integrability,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:857,interface,interfaces,857,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,1,['interface'],['interfaces']
Integrability,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:773,interface,interfaces,773,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,1,['interface'],['interfaces']
Integrability,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:877,interface,interfaces,877,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,1,['interface'],['interfaces']
Integrability,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html:484,interface,interface,484,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,". PathTask (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathTask. All Superinterfaces:; Runnable. public interface PathTask; extends Runnable; Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. the EDT, or JavaFX Platform equivalent). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLastResultsDescription(). Get a description of the results from running this task, which may be used e.g. default void; taskComplete(boolean wasCancelled). Perform optional post-processing after a task has completed. Methods inherited from interface java.lang.Runnable; run. Method Details. taskComplete; default void taskComplete(boolean wasCancelled); Perform optional post-processing after a task has completed.; ; When processing a collection of tasks with a TaskRunner, this method; should be called on the same thread. The choice of thread depends on the runner, but ; may be the Event Dispatch Thread when using Swing or Application thread for JavaFX. Parameters:; wasCancelled - . getLastResultsDescription; default String getLastResultsDescription(); Get a description of the results from running this task, which may be used e.g. in a progress monitor or output to the command line.; Default implementation returns null. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathTask.html:410,interface,interface,410,javadoc/docs/qupath/lib/plugins/PathTask.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathTask.html,4,"['depend', 'interface']","['depends', 'interface']"
Integrability,". PathTool (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Interface PathTool. All Known Implementing Classes:; ExtendedPathTool. public interface PathTool; Interface defining how a toolbar tool interacts with a viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. default Node; getIcon(). Get the icon of the tool. default String; getName(). Get the name of the tool. ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. Property Details. name; ReadOnlyStringProperty nameProperty; Property giving the name of the tool. See Also:. getName(); nameProperty(). icon; ReadOnlyObjectProperty<Node> iconProperty; Property giving the icon that should be used for the tool. See Also:. getIcon(); iconProperty(). Method Details. registerTool; void registerTool(QuPathViewer viewer); Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; void deregisterTool(QuPathViewer viewer); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTool.html:438,interface,interface,438,javadoc/docs/qupath/lib/gui/viewer/tools/PathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTool.html,1,['interface'],['interface']
Integrability,". PixelClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Interface PixelClassifier. public interface PixelClassifier; Interface defining a pixel classifier.; ; Pixel classifiers can be applied directly to an image, typically using colors and textures. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a Buf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:402,interface,interface,402,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,1,['interface'],['interface']
Integrability,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:1162,interface,interface,1162,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,1,['interface'],['interface']
Integrability,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:531,interface,interface,531,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,1,['interface'],['interface']
Integrability,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:582,wrap,wrapper,582,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['wrap'],['wrapper']
Integrability,". PixelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class PixelType. java.lang.Object; java.lang.Enum<PixelType>; qupath.lib.images.servers.PixelType. All Implemented Interfaces:; Serializable, Comparable<PixelType>, Constable. public enum PixelType; extends Enum<PixelType>; Image bit-depths and types. Not all may be well-supported; in general, ; expected image types are UINT8, UINT16 and FLOAT32. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLOAT32. 32-bit floating point. FLOAT64. 64-bit floating point. INT16. 16-bit signed integer. INT32. 32-bit signed integer. INT8. 8-bit signed integer. UINT16. 16-bit unsigned integer. UINT32. 32-bit unsigned integer (not supported by BufferedImage). UINT8. 8-bit unsigned integer. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html:806,interface,interfaces,806,javadoc/docs/qupath/lib/images/servers/PixelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html,1,['interface'],['interfaces']
Integrability,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html:410,interface,interface,410,javadoc/docs/qupath/lib/geom/Point.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html,2,['interface'],['interface']
Integrability,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:682,interface,interfaces,682,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:674,interface,interfaces,674,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:676,interface,interfaces,676,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". PredictionFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface PredictionFunction<T>. Type Parameters:; T - . public interface PredictionFunction<T>; Prediction function, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:424,interface,interface,424,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,3,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:1358,interface,interface,1358,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,1,['interface'],['interface']
Integrability,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:472,interface,interface,472,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html,2,['interface'],['interface']
Integrability,". Project (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface Project<T>. Type Parameters:; T - . public interface Project<T>; Data structure to manage images and associated data in QuPath. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated wit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:404,interface,interface,404,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['interface'],['interface']
Integrability,". ProjectImageEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ProjectImageEntry<T>. Type Parameters:; T - Depends upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.Serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:524,interface,interface,524,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['interface'],['interface']
Integrability,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:585,interface,interfaces,585,javadoc/docs/qupath/lib/gui/QuPathApp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html,1,['interface'],['interfaces']
Integrability,". QuPathExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extens",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:555,interface,interface,555,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,2,['interface'],['interface']
Integrability,". QuPathPenManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class QuPathPenManager. java.lang.Object; qupath.lib.gui.viewer.tools.QuPathPenManager. public class QuPathPenManager; extends Object; Helper class for managing pressure-sensitive input. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. Constructor Summary; Constructors. Constructor; Description; QuPathPenManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static QuPathPenManager.PenInputManager; getPenManager(). Get the current PenInputManager. static void; setPenManager(QuPathPenManager.PenInputManager manager). Set the PenInputManager. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathPenManager; public QuPathPenManager(). Method Details. getPenManager; public static QuPathPenManager.PenInputManager getPenManager(); Get the current PenInputManager. This is guaranteed to return a PenInputManager even if no ; pen is present - in this case, a default manager will be returned. Returns:. setPenManager; public static void setPenManager(QuPathPenManager.PenInputManager manager); Set the PenInputManager. If null, a default PenInputManager will be used. Parameters:; manager - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html:663,interface,interface,663,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,1,['interface'],['interface']
Integrability,". QuPathPenManager.PenInputManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Interface QuPathPenManager.PenInputManager. Enclosing class:; QuPathPenManager. public static interface QuPathPenManager.PenInputManager; Interface defining minimal behavior for a pen input device. ; This can be used to support pressure sensitivity for some commands (e.g. brush). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getPressure(). Returns a pressure value, between 0 and 1. boolean; isEraser(). Query if there is a pen currently being used as an eraser. Method Details. isEraser; boolean isEraser(); Query if there is a pen currently being used as an eraser. Returns:; true if there is an active pen currently being used as an eraser, false otherwise. getPressure; double getPressure(); Returns a pressure value, between 0 and 1. Returns:; 1 if there is no pen or a pen being used with maximum pressure, otherwise a pressure value for the current pen. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.PenInputManager.html:478,interface,interface,478,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.PenInputManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.PenInputManager.html,1,['interface'],['interface']
Integrability,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:822,interface,interfaces,822,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,1,['interface'],['interfaces']
Integrability,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:469,interface,interface,469,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,1,['interface'],['interface']
Integrability,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:633,interface,interfaces,633,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,1,['interface'],['interfaces']
Integrability,". QuPathViewerListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface QuPathViewerListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; UndoRedoManager, ViewerManager, ViewTracker. public interface QuPathViewerListener; extends EventListener; Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Method Details. imageDataChanged; void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Called with the image data within a viewer has changed. Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Called when the visible region has changed in a viewer. Parameters:; viewer - the viewer whose visible region has c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html:520,interface,interface,520,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,1,['interface'],['interface']
Integrability,". QuPath_Send_ROI_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_ROI_to_QuPath. java.lang.Object; qupathj.QuPath_Send_ROI_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_ROI_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back the active ROI from ImageJ to QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_ROI_to_QuPath();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_ROI_to_QuPath; public QuPath_Send_ROI_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html:1163,interface,interface,1163,javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,1,['interface'],['interface']
Integrability,". Query the set of file extensions for which Bio-Formats should not be used. getSkipBoundaryStrategy() - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that ignores boundaries, not using them for classifier training. getSkipMissingCoresProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. getSolidity() - Method in class qupath.lib.roi.AreaROI;  ; getSolidity() - Method in class qupath.lib.roi.EllipseROI;  ; getSolidity() - Method in class qupath.lib.roi.GeometryROI;  ; getSolidity() - Method in class qupath.lib.roi.LineROI;  ; getSolidity() - Method in class qupath.lib.roi.PointsROI;  ; getSolidity() - Method in class qupath.lib.roi.PolygonROI;  ; getSolidity() - Method in class qupath.lib.roi.PolylineROI;  ; getSolidity() - Method in class qupath.lib.roi.RectangleROI;  ; getSolidity() - Method in interface qupath.lib.roi.interfaces.ROI. Calculate the solidity, defined as ROI area / convex hull area. getSource() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the source that triggered the event. getSpaceX() - Method in class qupath.lib.gui.viewer.GridLines. Horizontal spacing between lines for any counting grid. getSpaceY() - Method in class qupath.lib.gui.viewer.GridLines. Vertical spacing between lines for any counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStage() - Method in class qupath.lib.gui.scripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:518777,interface,interfaces,518777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,". ROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Interface ROI. All Known Implementing Classes:; AreaROI, EllipseROI, GeometryROI, LineROI, PointsROI, PolygonROI, PolylineROI, RectangleROI. public interface ROI; Base interface for defining regions of interest (ROIs) within QuPath.; ; In general, anything that returns a coordinate should be defined in terms of pixels ; from the top left of the full-resolution image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; ROI.RoiType. Enum representing the major different types of ROI. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Get a ROI representing the convex hull of this ROI. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html:341,interface,interfaces,341,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". ROI.RoiType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi.interfaces; Enum Class ROI.RoiType. java.lang.Object; java.lang.Enum<ROI.RoiType>; qupath.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html:381,interface,interfaces,381,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,4,['interface'],"['interface', 'interfaces']"
Integrability,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:675,interface,interfaces,675,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:521,interface,interface,521,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,2,['interface'],['interface']
Integrability,". RegionFilter.StandardRegionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:754,interface,interface,754,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['interface'],['interface']
Integrability,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html:789,depend,depending,789,javadoc/docs/qupath/lib/projects/ResourceManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,". ResourceManager.Manager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ResourceManager.Manager<T>. Type Parameters:; T - the generic type of the resource being managed. Enclosing class:; ResourceManager. public static interface ResourceManager.Manager<T>; Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory.; ; Examples of resources are scripts or classifiers. Several of these may be stored per project, ; and may be identified by name. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default boolean; contains(String name). Returns true if the manager knows a resource with the specified name exists. T; get(String name). Retrieve a resource by name. Collection<String>; getNames(). Get a list of the available resources. void; put(String name,; T resource). Save a resource within the project. boolean; remove(String name). Remove a resource within the project. Method Details. getNames; Collection<String> getNames(); throws IOException; Get a list of the available resources. Returns:; Throws:; IOException. get; T get(String name); throws IOException; Retrieve a resource by name. Parameters:; name - ; Returns:; Throws:; IOException. put; void put(String name,; T resource); throws IOException; Save a resource within the project. Parameters:; name - ; resource - ; Throws:; IOException. remove; boolean remove(String name); throws IOException; Remove a resource within the project. Parameters:; name - ; Returns:; true if a resource was successfully removed, false otherwise; Throws:; IOException. contains; default boole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html:524,interface,interface,524,javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,1,['interface'],['interface']
Integrability,". Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image space of the starting point for the new object; yy - y-coordinate in the image space of the starting point for the new object; exclusions - objects not to consider (e.g. the new ROI being created). resetConstrainingObjects; protected void resetConstrainingObjects(); Reset the constraining objects.; These should be done as soon as they are no longer required, to prevent a memory leak by inadvertently; holding on to an object hierarchy too long. getCurrentParent; protected PathObject getCurrentParent(). mouseClicked; public void mouseClicked(MouseEvent e). handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:12419,interface,interface,12419,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,2,['interface'],['interface']
Integrability,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:764,interface,interfaces,764,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,1,['interface'],['interfaces']
Integrability,". RotatedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class RotatedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.RotatedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class RotatedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. Constructor Summary; Constructors. Constructor; Description; RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation). Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. static ImageServerBuilder.ServerBuilder<BufferedImage>; getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:756,wrap,wraps,756,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['wrap'],['wraps']
Integrability,". RotatedImageServer.Rotation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class RotatedImageServer.Rotation. java.lang.Object; java.lang.Enum<RotatedImageServer.Rotation>; qupath.lib.images.servers.RotatedImageServer.Rotation. All Implemented Interfaces:; Serializable, Comparable<RotatedImageServer.Rotation>, Constable. Enclosing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html:876,interface,interfaces,876,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,1,['interface'],['interfaces']
Integrability,". ScriptAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting.languages; Interface ScriptAutoCompletor. All Known Implementing Classes:; DefaultAutoCompletor, GroovyAutoCompletor, PythonAutoCompletor. public interface ScriptAutoCompletor; Interface for classes that implement auto-completion (e.g. styling classes). Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Method Details. getCompletions; List<AutoCompletions.Completion> getCompletions(String text,; int pos); Get a list of possible auto-completions for the given text ; with the caret at the specified position. Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptAutoCompletor.html:509,interface,interface,509,javadoc/docs/qupath/lib/scripting/languages/ScriptAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptAutoCompletor.html,1,['interface'],['interface']
Integrability,". ScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditor. All Known Implementing Classes:; DefaultScriptEditor, RichScriptEditor. public interface ScriptEditor; Minimal interface for a script editor that the GUI can call. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Check if the script editor supports a particular file. Method Details. showEditor; void showEditor(); Show the script editor. showScript; void showScript(String name,; String script); Show the script editor, including a new script with the specified name. Parameters:; name - name of the script to show; script - content of the script. showScript; void showScript(File file); Show the script editor, opening an existing script file. Parameters:; file - the script file. supportsFile; boolean supportsFile(File file); Check if the script editor supports a particular file. Parameters:; file - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html:464,interface,interface,464,javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html,2,['interface'],['interface']
Integrability,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:605,interface,interface,605,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,". ScriptStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Interface ScriptStyler. All Known Implementing Classes:; GroovyStyler, JsonStyler, MarkdownStyler, PlainStyler, PropertiesStyler, PythonStyler, XmlStyler, YamlStyler. public interface ScriptStyler; Interface for classes that apply some styling to a RichTextFX's CodeArea. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. default String; getBaseStyle(). Optionally return a base style for the code area. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Method Details. getLanguageNames; Set<String> getLanguageNames(); Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Returns:. computeEditorStyles; org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Compute styling for the specified text, considering it will be used in the main editor. Parameters:; text - the text to process styling for; Returns:; sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html:554,interface,interface,554,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStyler.html,1,['interface'],['interface']
Integrability,". ScriptSyntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Interface ScriptSyntax. public interface ScriptSyntax; Interface for classes that apply some syntax formatting to an EditableText. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; beautify(String text). Beautifies the specified text, according to the syntax. default boolean; canBeautify(). Returns true if beautify(String) is capable of beautifying the text, false otherwise. default boolean; canCompress(). Returns true if compress(String) is capable of compressing the text, false otherwise. default String; compress(String text). Compresses the specified text by removing extra space, according to the syntax. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this syntax. default String; getLineCommentString(). Get the String that represents the start of a comment line. default String; getTabString(). String to insert when tab key pressed. default boolean; handleBackspace(EditableText control,; boolean smartEditing). Handle a backspace. default void; handleLeftParenthesis(EditableText control,; boolean smartEditing). Handle left parentheses (. default void; handleLineComment(EditableText control). Handle line comments. default void; handleNewLine(EditableText control,; boolean smartEditing). Handle a new line. default void; handleQuotes(EditableText control,; boolean isDoubleQuote,; boolean smartEditing). Handle single/double quotes. default void; handleRightParenthesis(EditableText control,; boolean smartEditing). Handle right parentheses )",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntax.html:399,interface,interface,399,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntax.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntax.html,1,['interface'],['interface']
Integrability,". ScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface ScriptableWorkflowStep. All Superinterfaces:; Serializable, WorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface ScriptableWorkflowStep; extends WorkflowStep; A WorkflowStep that can also return some Javascript that, if run, would perform the step. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getScript(). Get one or more script lines that may be used to apply the step. Methods inherited from interface qupath.lib.plugins.workflow.WorkflowStep; getName, getParameterMap. Method Details. getScript; String getScript(); Get one or more script lines that may be used to apply the step. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html:587,interface,interface,587,javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,2,['interface'],['interface']
Integrability,". SelectableItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SelectableItem<T>. java.lang.Object; qupath.lib.gui.SelectableItem<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:622,depend,dependency,622,javadoc/docs/qupath/lib/gui/SelectableItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html,1,['depend'],['dependency']
Integrability,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html:488,interface,interface,488,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,2,['interface'],['interface']
Integrability,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:494,interface,interface,494,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,3,['interface'],['interface']
Integrability,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:487,interface,interface,487,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['interface'],['interface']
Integrability,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1346,interface,interface,1346,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,1,['interface'],['interface']
Integrability,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:510,interface,interface,510,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:1352,interface,interface,1352,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,1,['interface'],['interface']
Integrability,". Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10286,interface,interface,10286,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:5716,interface,interface,5716,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,". Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:4633,interface,interface,4633,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,8,['interface'],['interface']
Integrability,". StainVector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class StainVector. java.lang.Object; qupath.lib.color.StainVector. All Implemented Interfaces:; Externalizable, Serializable. public class StainVector; extends Object; implements Externalizable; Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; StainVector.DefaultStains. Enum representing default stains. Constructor Summary; Constructors. Constructor; Description; StainVector(). Default constructor, required for Externalizable interface. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; arrayAsString(Locale locale). Get a String representation of the stain vector array, formatting according to the specified Locale. static double; computeAngle(StainVector s1,; StainVector s2). Calculate the angle between two stain vectors, in degrees. static StainVector; createStainVector(String name,; double r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:973,interface,interface,973,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['interface'],['interface']
Integrability,". StainVector.DefaultStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class StainVector.DefaultStains. java.lang.Object; java.lang.Enum<StainVector.DefaultStains>; qupath.lib.color.StainVector.DefaultStains. All Implemented Interfaces:; Serializable, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html:808,interface,interface,808,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". Subcommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface Subcommand. All Known Implementing Classes:; ConvertCommand. public interface Subcommand; A subcommand for the command line interface.; This should further implement either Runnable or Callable, ; and be annotated according to the expectations of picocli. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html:438,interface,interface,438,javadoc/docs/qupath/lib/gui/extensions/Subcommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html,2,['interface'],['interface']
Integrability,". Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<Mat>; qupath.opencv.dnn.OpenCVDnn. All Implemented Interfaces:; AutoCloseable, UriResource, DnnModel. public class OpenCVDnn; extends AbstractDnnModel<Mat>; implements UriResource; Wrapper for an OpenCV Net, including essential metadata about how it should be used.; ; The main purpose of this is to support serializing models to JSON... kind of. In truth currently the paths ; to the original model files are serialized, since (to my knowledge) there is no way to save and reload a Net directly. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:1227,interface,interface,1227,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['interface'],['interface']
Integrability,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:965,interface,interfaces,965,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,1,['interface'],['interfaces']
Integrability,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:1419,interface,interface,1419,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,1,['interface'],['interface']
Integrability,". TMAGrid (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Interface TMAGrid. All Superinterfaces:; Serializable. All Known Implementing Classes:; DefaultTMAGrid. public interface TMAGrid; extends Serializable; Interface defining a (rectangular) TMA grid. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. Method Details. nCores; int nCores(); Total number of cores in the TMA grid. Returns:. getGridWidth; int getGridWidth(); Number of cores along the horizontal axis of the grid. Returns:. getGridHeight; int getGridHeight(); Number of cores along the vertical axis of the grid. Returns:. getTMACore; TMACoreObject getTMACore(String coreName); Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the same name. Parameters:; coreName - ; Returns:. getTMACore; TMACoreObject getTMACore(int row,; int col); Get the TMACoreObject for a specified grid location. Parameters:; row - ; col - ; Returns:. getTMACoreList; List<TMACoreObject> getTMACoreList(); Get an unmodifiable list of all TMA core objects. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html:471,interface,interface,471,javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/TMAGrid.html,1,['interface'],['interface']
Integrability,". TMAGridOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:733,interface,interfaces,733,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['interface'],['interfaces']
Integrability,". TMAMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions. All Implemented Interfaces:; MenuActions. public class TMAMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html:1188,interface,interface,1188,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,4,['interface'],['interface']
Integrability,". TaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface TaskRunner. All Known Implementing Classes:; AbstractTaskRunner, CommandLineTaskRunner, TaskRunnerFX. public interface TaskRunner; A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; isCancelled(). Query if the plugin can be cancelled while running. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Method Details. isCancelled; boolean isCancelled(); Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Returns:. runTasks; void runTasks(Collection<? extends Runnable> tasks); Pass a collection of parallelizable tasks to run. Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html:472,interface,interface,472,javadoc/docs/qupath/lib/plugins/TaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html,2,['interface'],['interface']
Integrability,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html:445,interface,interface,445,javadoc/docs/qupath/lib/objects/TemporaryObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html,3,['interface'],['interface']
Integrability,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html:511,interface,interface,511,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,1,['interface'],['interface']
Integrability,". TileListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface TileListener<T>. Type Parameters:; T - . All Known Implementing Classes:; QuPathViewer, QuPathViewerPlus. public interface TileListener<T>; Interface for anything that needs to know when image tiles become available. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; requiresTileRegion(String serverPath,; ImageRegion region). Check if the listener requires a particular tile. void; tileAvailable(String serverPath,; ImageRegion region,; T tile). Notify a listener that an image tile has been received read & is available. Method Details. tileAvailable; void tileAvailable(String serverPath,; ImageRegion region,; T tile); Notify a listener that an image tile has been received read & is available. Parameters:; serverPath - ; region - ; tile - . requiresTileRegion; boolean requiresTileRegion(String serverPath,; ImageRegion region); Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Parameters:; serverPath - ; region - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html:488,interface,interface,488,javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,1,['interface'],['interface']
Integrability,". TileRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:481,wrap,wrapper,481,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['wrap'],['wrapper']
Integrability,". TileRequestManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface TileRequestManager. public interface TileRequestManager; Helper class to manage tile requests from an ImageServer.; ; The purpose of this is to make it possible to identify the 'optimal' regions to request ; for any particular pixels in the image, based on the resolution levels actually present. ; ; By contrast RegionRequest objects can be used to easily request any pixels at ; any desired resolution, but this flexibility means that one can easily requests pixels ; in an inefficient way - or even inadvertently request pixels multiple times ; (e.g. through rounding errors when requesting pixels at an arbitrary resolution). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<TileRequest>; getAllTileRequests(). Get TileRequest objects for all tiles that this server supports. TileRequest; getTileRequest(int level,; int x,; int y,; int z,; int t). Get the single TileRequest containing a specified pixel, or null if no such request exists. Collection<TileRequest>; getTileRequests(RegionRequest request). Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. Collection<TileRequest>; getTileRequestsForLevel(int level). Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. Method Details. getAllTileRequests; Collection<TileRequest> getAllTileRequests(); Get TileRequest objects for all tiles that this server supports.; ; This should return an exhaustive collection of non-overlapping tiles, such that ; making requests for each of these would result ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html:405,interface,interface,405,javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,1,['interface'],['interface']
Integrability,". TransformedServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TransformedServerBuilder. java.lang.Object; qupath.lib.images.servers.TransformedServerBuilder. public class TransformedServerBuilder; extends Object; Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer.; ; Note: This is an early-stage experimental class, which may well change!. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TransformedServerBuilder(ImageServer<BufferedImage> baseServer). Create a transformed ImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TransformedServerBuilder; averageChannelProject(). Perform an average (mean) projection of the channels. ImageServer<BufferedImage>; build(). Get the ImageServer that applies all the requested transforms. TransformedServerBuilder; concatChannels(Collection<ImageServer<BufferedImage>> additionalChannels). Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). TransformedServerBuilder; concatChannels(ImageServer<BufferedImage>... additionalChannels). Concatenate additional servers along the 'channels' dimension. TransformedServerBuilder; crop(ImageRegion region). Crop an specified region based on a bounding box. TransformedServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html:620,wrap,wrapped,620,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,1,['wrap'],['wrapped']
Integrability,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:562,interface,interface,562,javadoc/docs/qupath/lib/io/UriResource.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:859,interface,interfaces,859,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['interface'],['interfaces']
Integrability,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html:1420,interface,interface,1420,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,4,['interface'],['interface']
Integrability,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html:1368,interface,interface,1368,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,1,['interface'],['interface']
Integrability,". WandToolEventHandler.WandType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.process.gui; Enum Class WandToolEventHandler.WandType. java.lang.Object; java.lang.Enum<WandToolEventHandler.WandType>; qupath.process.gui.WandToolEventHandler.WandType. All Implemented Interfaces:; Serializable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:904,interface,interfaces,904,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,1,['interface'],['interfaces']
Integrability,". WorkflowListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowListener. All Known Implementing Classes:; ImageData, WorkflowCommandLogView. public interface WorkflowListener; Interface for listening to changes in Workflows, e.g. adding/removing steps. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Method Details. workflowUpdated; void workflowUpdated(Workflow workflow); Called whenever a Workflow has been updated in some way, such as a new step added. Parameters:; workflow - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html:471,interface,interface,471,javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowListener.html,1,['interface'],['interface']
Integrability,". WorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface WorkflowStep. All Superinterfaces:; Serializable. All Known Subinterfaces:; ScriptableWorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface WorkflowStep; extends Serializable; Basic interface for a loggable workflow step.; ; Not as useful as a ScriptableWorkflowStep (which should be used where possible),; but here just in case. Author:; Pete Bankhead; See Also:. ScriptableWorkflowStep. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. Method Details. getName; String getName(); Get the name of the workflow step. Returns:. getParameterMap; Map<String,?> getParameterMap(); Get a map of parameters required for this step. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html:603,interface,interface,603,javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/WorkflowStep.html,2,['interface'],['interface']
Integrability,". WrappedBufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image til",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:794,wrap,wraps,794,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['wrap'],['wraps']
Integrability,". Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:3193,interface,interface,3193,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['interface'],['interface']
Integrability,". getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36173,interface,interface,36173,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,". int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3858,interface,interfaces,3858,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interfaces']
Integrability,". protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2934,wrap,wrapper,2934,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['wrap'],['wrapper']
Integrability,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html:365,interface,interface,365,javadoc/docs/qupath/imagej/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html:564,wrap,wrapper,564,javadoc/docs/qupath/imagej/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html,1,['wrap'],['wrapper']
Integrability,. qupath.lib.analysis (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis. package qupath.lib.analysis. Classes to aid with analysis. Related Packages. Package; Description; qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DistanceTools. Static methods for calculating distances between objects. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html:765,interface,interfaces,765,javadoc/docs/qupath/lib/analysis/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html:787,interface,interfaces,787,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,1,['interface'],['interfaces']
Integrability,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:783,interface,interfaces,783,javadoc/docs/qupath/lib/analysis/features/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html,1,['interface'],['interfaces']
Integrability,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html:783,interface,interfaces,783,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:394,interface,interfaces,394,javadoc/docs/qupath/lib/analysis/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html,3,['interface'],"['interface', 'interfaces']"
Integrability,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:919,interface,interfaces,919,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html,3,"['interface', 'wrap']","['interfaces', 'wrapper', 'wrappers']"
Integrability,". qupath.lib.classifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers. package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers.; ; This was the main package in QuPath v0.1.2 and earlier.; Since v0.2.0, the new subpackages have been created for pixel and object classifiers. Related Packages. Package; Description; qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. Enum Classes. Class; Description; Normalization. Methods for normalizing features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html:387,interface,interfaces,387,javadoc/docs/qupath/lib/classifiers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html:517,interface,interfaces,517,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html,1,['interface'],['interfaces']
Integrability,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html:508,interface,interfaces,508,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display. package qupath.lib.display. Classes to control the display of images in a QuPathViewer.; ; Warning! These are likely to change in a future version of QuPath. Related Packages. Package; Description; qupath.lib.display.settings. Classes to support storing and retrieving image display settings. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/package-summary.html:956,interface,interface,956,javadoc/docs/qupath/lib/display/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:796,interface,interface,796,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,2,['interface'],['interface']
Integrability,". qupath.lib.geom (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.geom. package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. All Classes and InterfacesInterfacesClasses. Class; Description; ImmutableDimension. An immutable alternative to Java's AWT Dimension. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/package-summary.html:565,interface,interface,565,javadoc/docs/qupath/lib/geom/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:372,interface,interface,372,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,3,['interface'],['interface']
Integrability,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:753,interface,interface,753,javadoc/docs/qupath/lib/gui/actions/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html,3,"['interface', 'message']","['interface', 'message']"
Integrability,. qupath.lib.gui.actions.menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions.menus. package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus.; ; Representing the menus in this way is intended to make it easier to find core functionality. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. All Classes and InterfacesInterfacesClasses. Class; Description; AnalyzeMenuActions;  ; AutomateMenuActions;  ; ClassifyMenuActions;  ; EditMenuActions;  ; ExtensionsMenuActions;  ; FileMenuActions;  ; HelpMenuActions;  ; MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. ObjectsMenuActions;  ; TMAMenuActions;  ; ViewMenuActions;  . ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html:997,interface,interface,997,javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html:484,interface,interface,484,javadoc/docs/qupath/lib/gui/charts/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:416,interface,interface,416,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,3,"['depend', 'interface']","['dependent', 'interface']"
Integrability,". qupath.lib.gui.commands.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.display. package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command.; ; Important: This package is not expected to be public after modularization. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.objects;  . Classes. Class; Description; BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html:665,interface,interface,665,javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,1,['interface'],['interface']
Integrability,. qupath.lib.gui.commands.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.objects. package qupath.lib.gui.commands.objects. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. Classes. Class; Description; SplitAnnotationsByLineCommand. Command to split annotations using lines. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/package-summary.html:505,interface,interface,505,javadoc/docs/qupath/lib/gui/commands/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.dialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.dialogs. package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ProjectDialogs. Dialogs specifically related to managing projects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/package-summary.html:530,interface,interface,530,javadoc/docs/qupath/lib/gui/dialogs/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/package-summary.html,1,['interface'],['interface']
Integrability,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:500,interface,interface,500,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html,3,['interface'],['interface']
Integrability,". qupath.lib.gui.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.servers. package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. Classes. Class; Description; ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html:421,depend,depend,421,javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,. qupath.lib.gui.localization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.localization. package qupath.lib.gui.localization. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathResources. Load strings from the default resource bundle. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/package-summary.html:467,interface,interface,467,javadoc/docs/qupath/lib/gui/localization/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/package-summary.html,1,['interface'],['interface']
Integrability,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:473,interface,interface,473,javadoc/docs/qupath/lib/gui/logging/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.measure (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.measure. package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/package-summary.html:524,interface,interface,524,javadoc/docs/qupath/lib/gui/measure/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:417,interface,interface,417,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,2,['interface'],['interface']
Integrability,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html:466,interface,interface,466,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:410,interface,interface,410,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html,3,['interface'],['interface']
Integrability,". qupath.lib.gui.scripting.completors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.completors. package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Classes. Class; Description; DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. GroovyAutoCompletor. Auto completion support for Groovy. PythonAutoCompletor. Auto completion support for Python. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/package-summary.html:564,interface,interface,564,javadoc/docs/qupath/lib/gui/scripting/completors/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.languages. package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; CssLanguage. Class for representing CSS in QuPath. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. HtmlRenderer. Marker interface that indicates an executable language renders HTML. JsonLanguage. Class for the representation of JSON syntax in QuPath. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. PlainLanguage. Class for the representation of plain text in QuPath. PropertiesLanguage. Class for the representation of properties and config files in QuPath. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. XmlLanguage. Class for representing XML in QuPath. YamlLanguage. Class for the representation of YAML syntax in QuPath. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html:560,interface,interface,560,javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,2,['interface'],['interface']
Integrability,". qupath.lib.gui.scripting.richtextfx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.richtextfx. package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Classes. Class; Description; CodeAreaControl. Code area control using RichTextFX. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/package-summary.html:633,interface,interface,633,javadoc/docs/qupath/lib/gui/scripting/richtextfx/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/package-summary.html,1,['interface'],['interface']
Integrability,. qupath.lib.gui.scripting.syntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.syntax. package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html:548,interface,interface,548,javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.tma (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tma. package qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathTMAViewer. Standalone viewer for looking at TMA summary results. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMASummaryViewer; Deprecated.; since v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/package-summary.html:505,interface,interface,505,javadoc/docs/qupath/lib/gui/tma/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:408,interface,interface,408,javadoc/docs/qupath/lib/gui/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html,2,['interface'],['interface']
Integrability,". qupath.lib.gui.viewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html:483,interface,interface,483,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:460,interface,interface,460,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,. qupath.lib.images.servers.openslide.jna (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide.jna. package qupath.lib.images.servers.openslide.jna. Related Packages. Package; Description; qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). All Classes and InterfacesInterfacesClassesException Classes. Class; Description; OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html:663,wrap,wrapper,663,javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:516,wrap,wrap,516,javadoc/docs/qupath/lib/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html,3,"['adapter', 'depend', 'wrap']","['adapters', 'depend', 'wrap']"
Integrability,". qupath.lib.measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.measurements. package qupath.lib.measurements. Provides measurement lists for use with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; Measurement. Basic interface to define a measurement. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-summary.html:527,interface,interface,527,javadoc/docs/qupath/lib/measurements/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-summary.html,1,['interface'],['interface']
Integrability,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:848,interface,interfaces,848,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html:700,interface,interfaces,700,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.plugins.parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.parameters. package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClasses. Class; Description; BooleanParameter. Parameter that can take on true of false value - or null. ChoiceParameter<S>. Parameter that supports a list of choices. DoubleParameter. Parameter to represent a floating point numeric value. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. IntParameter. Parameter to represent an integer numeric value. NumericParameter<S extends Number>. Abstract parameter to represent a numeric value. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. StringParameter. Parameter to represent a String value. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html:706,interface,interfaces,706,javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html:402,interface,interfaces,402,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,2,['interface'],"['interface', 'interfaces']"
Integrability,". qupath.lib.projects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.projects. package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. All Classes and InterfacesInterfacesClasses. Class; Description; Project<T>. Data structure to manage images and associated data in QuPath. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/package-summary.html:378,interface,interfaces,378,javadoc/docs/qupath/lib/projects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.roi (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html:454,interface,interfaces,454,javadoc/docs/qupath/lib/roi/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html,1,['interface'],['interfaces']
Integrability,". qupath.lib.roi.interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi.interfaces. package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs).; ; In the past, there were multiple interfaces to define ROIs of different types.; This has now been simplified with more methods added to ROI itself instead. Related Packages. Package; Description; qupath.lib.roi. Classes that define regions of interest (ROIs). All Classes and InterfacesInterfacesEnum Classes. Class; Description; ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html:17,interface,interfaces,17,javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-summary.html,5,['interface'],"['interface', 'interfaces']"
Integrability,". qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.roi.interfaces. Package Hierarchies:. All Packages. Interface Hierarchy. qupath.lib.roi.interfaces.ROI. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.roi.interfaces.ROI.RoiType. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-tree.html:17,interface,interfaces,17,javadoc/docs/qupath/lib/roi/interfaces/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/package-tree.html,4,['interface'],['interfaces']
Integrability,. qupath.lib.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.scripting.languages. package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. Related Packages. Package; Description; qupath.lib.scripting. Defines helper class for running scripts. All Classes and InterfacesInterfacesClasses. Class; Description; AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptLanguage. Abstract class to represent languages supported by the script editor. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/package-summary.html:797,interface,interface,797,javadoc/docs/qupath/lib/scripting/languages/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/package-summary.html,2,['interface'],['interface']
Integrability,". qupath.opencv.ops (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.ops. package qupath.opencv.ops. Image operations, implemented with OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClasses. Class; Description; ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html:1059,wrap,wraps,1059,javadoc/docs/qupath/opencv/ops/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/package-summary.html,1,['wrap'],['wraps']
Integrability,. qupath.process.gui.commands.ml (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.process.gui.commands.ml. package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. Related Packages. Package; Description; qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html:1018,interface,interface,1018,javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/package-summary.html,1,['interface'],['interface']
Integrability,". values() - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns an array containing the constants of this enum cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1093884,interface,interfaces,1093884,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,".. for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3795,interface,interface,3795,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['interface'],['interface']
Integrability,"..) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicate) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Add a filter for computing densities. addDirectoryPropertyPreference(Property<String>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addDoubleParameter(String, String, double) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list. addDoubleParameter(String, String, double, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded double parameter to this list. addDoubleParameter(String, String, double, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list, optionally including a unit and help text. addDuplicate(ProjectImageEntry<T>, boolean) - Method in interface qupath.lib.projects.Project. Add an image by duplicating an existing entry. ADDED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been added. addEmptyParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:15724,interface,interface,15724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3364,interface,interface,3364,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,".5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Enum Class PathObjectHierarchyEvent.HierarchyEventType. java.lang.Object; java.lang.Enum<PathObjectHierarchyEvent.HierarchyEventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:1045,interface,interfaces,1045,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,1,['interface'],['interfaces']
Integrability,".5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1032,wrap,wrapText,1032,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrapText']
Integrability,.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages (QuPath 0.5.0); qupath.lib.sc,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:30520,interface,interfaces,30520,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['interface'],['interfaces']
Integrability,".; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Returns:. getBlobFunction; public BlobFunction<Mat> getBlobFunction(String name); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Parameters:; name - ; Returns:. getPredictionFunction; public PredictionFunction<Mat> getPredictionFunction(); Description copied from class: AbstractDnnModel; Get the prediction function that can apply a prediction with one or more blobs as input. Specified by:; getPredictionFunction in class AbstractDnnModel<Mat>; Returns:. close; public void close(); throws Exception; Description copied from interface: DnnModel; Close this model if it will not be needed again.; Subclasses that require cleanup may override this.; The default implementation does nothing. Specified by:; close in interface AutoCloseable; Specified by:; close in interface DnnModel; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:7574,interface,interface,7574,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,3,['interface'],['interface']
Integrability,".AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3649,interface,interface,3649,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['interface'],['interface']
Integrability,".CountsTransformMode> countsTransformProperty(); Property to control how counts should be transformed before being; shown in the histogram. Returns:; See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode). getCountsTransform; public HistogramChart.CountsTransformMode getCountsTransform(); Get the current counts transform. Returns:; See Also:. countsTransformProperty(). setCountsTransform; public void setCountsTransform(HistogramChart.CountsTransformMode mode); Set the current counts transform. Parameters:; mode - ; See Also:. countsTransformProperty(). displayModeProperty; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty(); Property to control how the histogram is displayed, either using areas or bars. Returns:; See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode). getDisplayMode; public HistogramChart.DisplayMode getDisplayMode(); Get the histogram display mode. Returns:; See Also:. displayModeProperty(). setDisplayMode; public void setDisplayMode(HistogramChart.DisplayMode mode); Set the histogram display mode. Parameters:; mode - ; See Also:. displayModeProperty(). getHistogramData; public ObservableList<HistogramChart.HistogramData> getHistogramData(); Get all histogram data objects. Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Color color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - ; Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Integer color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - Packed RGB representation of the color.; Returns:. setShowTickLabels; public void setShowTickLabels(boolean showTickLabels); Request that tick labels are visible or not for both x and y axis. Parameters:; showTickLabels - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:18799,wrap,wrap,18799,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,2,['wrap'],['wrap']
Integrability,".Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968885,message,message,968885,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,".IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:84655,interface,interface,84655,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getURIs() - Method in interface qupath.lib.io.UriResource. Get all the URIs required for this resource. getURIs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the URIs associated with the model (e.g. getURIs() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getURIs() - Method in interface qupath.o,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:544530,interface,interface,544530,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in the editor control. textProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; textProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getText(). theme - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; thin(Mat) - Static method in class qupath.opencv.tools.Thinning. Thin the binary image in Mat. Thinning - Class in qupath.opencv.tools. Implementation of the 3D binary thinning algorithm of; ; Lee et al. Thinning() - Constructor for class qupath.opencv.tools.Thinning;  ; ThreadTools - Class in qupath.lib.common. Create a thread factory that supports adding a prefix to the name and setting daemon status. ThreadTools() - Constructor for clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1020173,message,message,1020173,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,".PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns true if there are no objects to be painted within the requested region. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Always returns false. isEmptyRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Test whether a region is empty, i.e. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.LabeledImageServer. Returns true if there are no objects to be painted within the requested region. isEosin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:620756,interface,interface,620756,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:414248,interface,interface,414248,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2046,adapter,adapters,2046,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['adapter'],['adapters']
Integrability,.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; ap,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7561,interface,interface,7561,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,".WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103367,message,message,1103367,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,".algorithms.EstimateStainVectors;  ; estimateUsedMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current used memory. estimateWhiteValues(int[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Estimate white (background) values for a brightfield image. EVERYWHERE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests. exactClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if a PathObject has at least one of the specified PathClasses. EXCLUDE_MEASUREMENTS - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Optionally exclude measurements from objects. excludeColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be excluded during the export. ExecutableLanguage - Interface in qupath.lib.scripting.languages. Functional interface for scripting languages that are runnable (e.g. execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; execute(ScriptParameters) - Method in interface qupath.lib.scripting.languages.ExecutableLanguage. Execute the given script String. EXISTS - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that is known to exist. exp() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns Euler's number e raise to the power of the Mat values. EXPAND_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; expandableContent(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. expandChartClip(Chart, double) - Static method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:286893,interface,interface,286893,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9671,interface,interface,9671,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,".gui.charts. Wrapper close to enable the generation and display of histograms relating to a data table. HistogramDisplay(PathTableData<?>, boolean) - Constructor for class qupath.lib.gui.charts.HistogramDisplay. Constructor. HISTORY_SCRIPT - Variable in class qupath.lib.gui.actions.AutomateActions;  ; HISTORY_SCRIPT - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; HISTORY_SHOW - Variable in class qupath.lib.gui.actions.AutomateActions;  ; HISTORY_SHOW - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; homogenizeGeometryCollection(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Ensure a GeometryCollection contains only Geometries of the same type (Polygonal, Lineal or Puntal). HOVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Display only when the cursor hovers nearby. HtmlRenderer - Interface in qupath.lib.gui.scripting.languages. Marker interface that indicates an executable language renders HTML. hue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract hue value from RGB-to-HSB transform. Hue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Hue value (from RGB-HSB transform). HUGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  . I. IconFactory - Class in qupath.lib.gui.tools. Factory class for creating icons. IconFactory() - Constructor for class qupath.lib.gui.tools.IconFactory;  ; IconFactory.PathIcons - Enum Class in qupath.lib.gui.tools. Default icons for QuPath commands. iconProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; iconProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:582617,interface,interface,582617,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. bufferedImageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the buffered image. BufferedImageTools - Class in qupath.lib.awt.common. Static methods for working with BufferedImages and QuPath objects. BUGS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; build() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Build the DelaunayTools.Subdivision with the current parameters. build() - Method in interface qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Build the classifier defined by the parameters of this builder. build() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Build a new PixelClassifierMetadata object. build() - Method in interface qupath.lib.color.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Build the parameters. build() - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Build the dialog. build() - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Creat,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:68213,interface,interface,68213,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.PathAnnotationObject. Set a free text description for this annotation. setDescription(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the description. setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the current OverlayOptions.DetectionDisplayMode. setDetectionIntensityClassifications(String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the current hierarchy. setDetectionIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:922756,interface,interface,922756,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:481531,interface,interface,481531,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3394,interface,interface,3394,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['interface'],['interface']
Integrability,".lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3156,interface,interface,3156,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['interface'],['interface']
Integrability,".lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getURIs() - Method in interface qupath.lib.io.UriResource. Get all the URIs required for this resource. getURIs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the URIs associated with the model (e.g. getURIs() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getURIs() - Method in interface qupath.opencv.ops.ImageOp. Default implementation returns an empty list; classes should override this if necessary. getUrlString() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the URL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:545076,interface,interface,545076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1428,interface,interface,1428,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['interface'],['interface']
Integrability,".lib.gui.viewer.DragDropImportListener;  ; handle(MouseEvent) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565582,interface,interface,565582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lib.gui.viewer.QuPathViewer. Get the overlay options that control the viewer display. getOverlayOptions() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the overlay options shared by all viewers created by this manager. getOverrideSystemMenuBar() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). getOwner() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the owner. getPackageVersion(Class<?>) - Static method in class qupath.lib.common.GeneralTools. Try to determine the version of a jar containing a specified class. getPaddedRequest(ImageServer<BufferedImage>, RegionRequest, Padding) - Static method in class qupath.lib.images.servers.ServerTools. Get a raster, padded by the specified amount, to the left, right, above and below. getPadding() - Method in interface qupath.opencv.ops.ImageOp. Get the padding requested for this operation. getPadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; getPadding(int, int) - Static method in class qupath.lib.regions.Padding. Get an padding object 'x' pixels to the left and right, and 'y' pixels above and below. getPadding(int, int, int, int) - Static method in class qupath.lib.regions.Padding. Get a padding object that may have different padding on each side. getPane() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the pane containing the histogram and associated UI components, for addition to a scene. getPane() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the pane containing all mini viewers, which can be added to a scene for display. getPane() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the Pane that can be displayed. getPane() - Method in class qupath.lib.gui.panes.AnnotationPane. Get the pane for display. getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:469950,interface,interface,469950,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:499342,interface,interface,499342,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified feature. getScaledArea(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:504143,interface,interface,504143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ; getPathClass() - Method in class qupath.lib.objects.PathRootObject;  ; getPathClass(String) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; Get a PathClass, without specifying any color. getPathClass(String) - Static method in class qupath.lib.scripting.QP. Get a Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:477697,interface,interface,477697,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814934,interface,interfaces,814934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,".opencv.tools.GroovyCV. Multiply array elements by a constant. multiply(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element multiplication of two arrays (not matrix multiplication). multipointToolProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create multiple points within the same annotation when using the counting tool. MultiscaleFeatures - Class in qupath.opencv.tools. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures() - Constructor for class qupath.opencv.tools.MultiscaleFeatures;  ; MultiscaleFeatures.Hessian - Interface in qupath.opencv.tools. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D - Class in qupath.opencv.tools. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D - Class in qupath.opencv.tools. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature - Enum Class in qupath.opencv.tools. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder - Class in qupath.opencv.tools. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap - Class in qupath.opencv.tools. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. MultiscaleResultsBuilder() - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature>) - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Constructor prepared to calculate specified features. multitouchActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; MultitouchActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; MULTIVIEW_ADD_COLUMN - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridAc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:702516,depend,dependent,702516,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['dependent']
Integrability,".opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1450,interface,interface,1450,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,1,['interface'],['interface']
Integrability,".openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.images.servers.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:729088,interface,interface,729088,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".roi.AreaROI;  ; getT() - Method in class qupath.lib.roi.EllipseROI;  ; getT() - Method in class qupath.lib.roi.GeometryROI;  ; getT() - Method in class qupath.lib.roi.LineROI;  ; getT() - Method in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529481,interface,interface,529481,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,".servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that all available color tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:513827,interface,interfaces,513827,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,".servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should not be used. getSkipBoundaryStrategy() - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that ignores boundaries, not using them for classifier training. getSkipMissingCoresProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. getSolidity() - Method in class qupath.lib.roi.AreaROI;  ; getSolidity() - Method in class qupath.lib.roi.EllipseROI;  ; getSolidity() - Method in class qupath.lib.roi.GeometryROI;  ; getSolidity() - Method in class qupath.lib.roi.LineROI;  ; getSolidity() - Method in class qupath.lib.roi.PointsROI;  ; getSolidity() - Method in class qupath.lib.roi.PolygonROI;  ; getSolidity() - Method in class qupath.lib.roi.PolylineROI;  ; getSolidity() - Method in class qupath.lib.roi.RectangleROI;  ; getSolidity() - Method in interface qupath.lib.roi.interfaces.ROI. Calculate the solidity, defined as ROI area / convex hull area. getSource() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the source that triggered the event. getSpaceX() - Method in class qupath.lib.gui.viewer.GridLines. Horizontal spacing between lines for any counting grid. getSpaceY() - Method in class qupath.lib.gui.viewer.GridLines. Vertical spacing between lines for any counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:518752,interface,interface,518752,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:15113,interface,interface,15113,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many time",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1011,message,message,1011,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['message'],['message']
Integrability,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; BufferedImageOverlay, PixelClassificationOverlay. public abstract class AbstractImageOverlay; extends AbstractOverlay; Abstract PathOverlay with additional properties relevant when drawing BufferedImages. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageInterpolation>; interpolation. The preferred method of interpolation to use for display. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:1024,interface,interfaces,1024,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['interface'],['interfaces']
Integrability,"2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4792,interface,interface,4792,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"55); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:7466,interface,interface,7466,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,":. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html:1219,interface,interface,1219,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,5,['interface'],['interface']
Integrability,":. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:7411,interface,interface,7411,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,":. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8620,interface,interface,8620,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,":. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9809,interface,interface,9809,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,":; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:11040,interface,interface,11040,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,10,['interface'],['interface']
Integrability,":; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:6363,interface,interface,6363,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1264,message,message,1264,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['message'],['message']
Integrability,": ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7804,interface,interface,7804,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to the current image image. writeDensityMapImage(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to an image. writeExternal(ObjectOutput) - Method in class qupath.lib.color.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1111324,wrap,wrapTextProperty,1111324,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapTextProperty']
Integrability,"; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5049,interface,interface,5049,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1254,message,message,1254,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int getMinSizeForTiling(); Query the default minimum image size when writing OME-TIFF images.; This is used as a hint to disable tiling for images with widths and heights smaller than this value. Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html:2250,interface,interface,2250,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,1,['interface'],['interface']
Integrability,"; Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8222,interface,interface,8222,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"; Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6520,interface,interface,6520,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1205,interface,interface,1205,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,1,['interface'],['interface']
Integrability,"; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class ViewerManager. java.lang.Object; qupath.lib.gui.viewer.ViewerManager. All Implemented Interfaces:; EventListener, QuPathViewerListener. public class ViewerManager; extends Object; implements QuPathViewerListener; Class to manage multiple QuPathViewer instances in a UI region. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewer. Get a read-only property representing the currently active viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. BooleanProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. ReadOnlyBooleanProperty; synchronizeViewers;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewerProperty(). Get a read-only property representing the currently active viewer. void; addColumn(QuPathViewer viewer);  ; void; addRow(QuPathViewer viewer);  ; boolean; applyLastAnnotationToActiveViewer();  ; void; attachActiveViewerToGrid(). Insert the currently active viewer back into the viewer grid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). void; detachActiveViewerFromGrid(). Detach the currently active viewer from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:1190,synchroniz,synchronizeViewers,1190,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5430,interface,interface,5430,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5847,interface,interface,5847,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11306,interface,interface,11306,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5323,interface,interface,5323,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10690,interface,interface,10690,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:5952,interface,interface,5952,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is cal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2711,interface,interface,2711,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['interface'],['interface']
Integrability,"; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:4557,depend,depending,4557,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['depend'],['depending']
Integrability,"; The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5113,interface,interface,5113,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7014,interface,interface,7014,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:4346,interface,interface,4346,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,3,['interface'],['interface']
Integrability,; VIEWER_GRID_1x2 - Variable in class qupath.lib.gui.actions.ViewerActions;  ; VIEWER_GRID_2x1 - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; VIEWER_GRID_2x1 - Variable in class qupath.lib.gui.actions.ViewerActions;  ; VIEWER_GRID_2x2 - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; VIEWER_GRID_2x2 - Variable in class qupath.lib.gui.actions.ViewerActions;  ; VIEWER_GRID_3x3 - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; VIEWER_GRID_3x3 - Variable in class qupath.lib.gui.actions.ViewerActions;  ; ViewerActions - Class in qupath.lib.gui.actions. Actions that interact with one or more viewers. ViewerActions(ViewerManager) - Constructor for class qupath.lib.gui.actions.ViewerActions;  ; viewerBackgroundColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Color to paint behind any image. viewerClosed(QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; viewerClosed(QuPathViewer) - Method in interface qupath.lib.gui.viewer.QuPathViewerListener. Called when a viewer is closed. viewerClosed(QuPathViewer) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; viewerClosed(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; viewerGammaProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested gamma value applied to the image in each viewer (for display only). viewerInterpolateBilinearProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that images are displayed in viewers using bilinear interpolation. ViewerManager - Class in qupath.lib.gui.viewer. Class to manage multiple QuPathViewer instances in a UI region. ViewerMover(QuPathViewer) - Constructor for class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Constructor. ViewerPlusDisplayOptions - Class in qupath.lib.gui.viewer. A group of properties determining what should be displayed for each viewer. ViewerPlu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1098075,interface,interface,1098075,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3231,interface,interface,3231,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['interface'],['interface']
Integrability,"; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCombination - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; componentContains(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; componentPointToImagePoint(double, double, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert x and y coordinates from the component space to the image space. componentPointToImagePoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:128702,interface,interface,128702,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6841,interface,interface,6841,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11688,interface,interface,11688,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8488,interface,interface,8488,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:2163,interface,interface,2163,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,6,['interface'],['interface']
Integrability,"; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8783,interface,interface,8783,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3578,interface,interface,3578,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"; in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. readTile; protected BufferedImage readTi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:7710,interface,interface,7710,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"; nChannels() - Method in interface qupath.lib.images.servers.ImageServer. Number of channels (3 for RGB). nChildObjects() - Method in class qupath.lib.objects.PathObject. Total number of child objects. nComponents() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Number of output components. nCores() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate;  ; negative(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Multiply elements of an array by -1. NEGATIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'negative'. nEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events, either observed or censored. NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Buil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:709093,interface,interface,709093,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:5645,interface,interface,5645,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,2,['interface'],['interface']
Integrability,"; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. getFile; public File getFile(); Return the file associated with this ViewTracker. This can return ; null if it is not local or if the recording cannot be saved. Returns:; file. setFile; public void setFile(File file); Set the file for this ViewTracker. Parameters:; file - . getName; public String getName(); Return the name of this ViewTracker. Returns:; name. setName; public void setName(String name); Set the name of this ViewTracker. Parameters:; name - . nameProperty; public StringProperty nameProperty(); Return the String property of this ViewTracker. Returns:; nameProperty; See Also:. getName(); setName(String). getStartTime; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:9427,interface,interface,9427,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4670,interface,interface,4670,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5067,interface,interface,5067,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['interface'],['interface']
Integrability,"; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10370,interface,interface,10370,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. er",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4207,message,message,4207,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,2,['message'],"['message', 'messages']"
Integrability,"; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:7775,interface,interface,7775,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7269,interface,interface,7269,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:1420,interface,interface,1420,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['interface'],['interface']
Integrability,"; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3864,interface,interface,3864,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4460,interface,interface,4460,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3097,interface,interface,3097,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['interface'],['interface']
Integrability,"; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; star",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8245,interface,interface,8245,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:2689,interface,interface,2689,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['interface'],['interface']
Integrability,"; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:2691,interface,interface,2691,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['interface'],['interface']
Integrability,"<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:5440,interface,interface,5440,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['interface'],['interface']
Integrability,">; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7083,interface,interface,7083,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,">; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:2354,interface,interface,2354,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,1,['interface'],['interface']
Integrability,">; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer viewer); Description copied from interface: PathTool; Deregister the tool from the viewer. It is essential that tools clean up properly ; and do not impact other tools that m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1645,interface,interface,1645,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['interface'],['interface']
Integrability,"> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3677,message,message,3677,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"@Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6219,interface,interface,6219,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"A;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.images.servers.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified file. OpenSlideJNA - Interface in qupath.lib.images.servers.openslide.jna. JNA interface for OpenSlide. OpenSlideLoader - Class in qupath.lib.images.servers.openslide.jna. Static helper class to manage loading the OpenSlide library. OpenSlideLoader() - Constructor for class qupath.lib.images.servers.openslide.jna.OpenSlideLoader;  ; openslidePathProperty - Variable in class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideServerBuilder - Class in qupath.lib.images.servers.openslide. Builder for Openslide ImageServer. OpenslideServerBuilder() - Constructor for class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:730140,interface,interface,730140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1302,wrap,wrap,1302,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,2,['wrap'],['wrap']
Integrability,"Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:802229,interface,interface,802229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10242,interface,interface,10242,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"Area; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8936,interface,interface,8936,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"Area; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8710,interface,interface,8710,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"B; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9824,interface,interface,9824,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"BinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:449372,interface,interface,449372,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2828,interface,interface,2828,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['interface'],['interface']
Integrability,"BoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7856,interface,interface,7856,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; suppo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3346,interface,interface,3346,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['interface'],['interface']
Integrability,"Builder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2971,interface,interface,2971,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['interface'],['interface']
Integrability,"Builder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may ov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:3007,interface,interface,3007,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,1,['interface'],['interface']
Integrability,"Bytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4595,interface,interface,4595,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['interface'],['interface']
Integrability,"CaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6364,interface,interface,6364,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability,"CentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5175,interface,interface,5175,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1348,message,message,1348,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"Class in qupath.lib.gui.actions.menus;  ; ViewMenuActions.MultitouchActions - Class in qupath.lib.gui.actions.menus;  ; ViewMenuActions.MultiviewActions - Class in qupath.lib.gui.actions.menus;  ; ViewMenuActions.MultiviewGridActions - Class in qupath.lib.gui.actions.menus;  ; ViewMenuActions.ZoomActions - Class in qupath.lib.gui.actions.menus;  ; ViewTracker - Class in qupath.lib.gui.viewer.recording. Default ViewTracker implementation. ViewTrackerControlPane - Class in qupath.lib.gui.viewer.recording. Panel for viewing ViewTracker controls. ViewTrackerControlPane(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.recording.ViewTrackerControlPane. Create a ViewTrackerControlPane. ViewTrackerDataMap - Class in qupath.lib.gui.viewer.recording. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. visibleRegionChanged(QuPathViewer, Shape) - Method in class qupath.lib.gui.UndoRedoManager;  ; visibleRegionChanged(QuPathViewer, Shape) - Method in interface qupath.lib.gui.viewer.QuPathViewerListener. Called when the visible region has changed in a viewer. visibleRegionChanged(QuPathViewer, Shape) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; visibleRegionChanged(QuPathViewer, Shape) - Method in class qupath.lib.gui.viewer.ViewerManager;  . W. WAND_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; WandPreferences() - Constructor for class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandSensitivity - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandSensitivityProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. wandSigma - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandSigmaPixelsProperty() - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1100555,interface,interface,1100555,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:6248,interface,interface,6248,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['interface'],['interface']
Integrability,"Classifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283639,message,message,283639,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"Code, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:3435,interface,interface,3435,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['interface'],['interface']
Integrability,"Code, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3201,depend,depending,3201,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['depend'],['depending']
Integrability,"CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1607,interface,interface,1607,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['interface'],['interface']
Integrability,"Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the sea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5131,wrap,wrap,5131,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,2,['wrap'],['wrap']
Integrability,"CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1405,message,message,1405,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['message'],['message']
Integrability,"Commands. Combine the selected annotations for the specified hierarchy. comboPasteEscape - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125728,wrap,wrap,125728,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1751,interface,interface,1751,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,1,['interface'],['interface']
Integrability,"DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777029,interface,interface,777029,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Data,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:3085,interface,interface,3085,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['interface'],['interface']
Integrability,"Data<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Paint an image region. paintRegionARGB(int[], long, long, int, int, int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Similar to ImageRegionRenderer.paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). paintSelectedBoundsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether the bounding box of selected objects should be painted. paintShape(Shape, Graphics2D, Color, Stroke, Color) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified shape with specified stroke and fill colors. paintSpecifiedObjects(Graphics2D, Collection<? extends PathObject>, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified objects. paintTileBorders - Static variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintTMA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:742103,interface,interface,742103,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Data<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2855,interface,interface,2855,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['interface'],['interface']
Integrability,"DebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<BufferedImage>; Overrides:; getName in class WatershedCellDetection; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Wrap the detector to apply any required classification. Overrides:; createDetector in class WatershedCellDetection; Parameters:; imageData - ; params - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:3207,interface,interface,3207,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,3,['interface'],['interface']
Integrability,"DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing paths. relativeToUserDirectory() - Method in class qupath.lib.gui.FileCopier. Specify that the copying is relative to the QuPath user directory. RELOAD_DATA - Variable in class qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841530,interface,interface,841530,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"DefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:5291,depend,depending,5291,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,8,"['depend', 'interface']","['depending', 'interface']"
Integrability,"DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. Constructor Details. GroovyLanguage; public GroovyLanguage(); Constructor for Groovy Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static GroovyLanguage getInstance(); Get the static instance of this class. Returns:; instance. getImportStatementGenerator; protected DefaultScriptLanguage.ImportStatementGenerator getImportStatementGenerator(); Description copied from class: DefaultScriptLanguage; Get an DefaultScriptLanguage.ImportStatementGenerator.; This attempts to make an educated guess, returning JAVA_IMPORTER or PYTHON_IMPORTER based on the ; name. Overrides:; getImportStatementGenerator in class DefaultScriptLanguage; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:2200,interface,interface,2200,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['interface'],['interface']
Integrability,"Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3749,interface,interface,3749,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4080,interface,interface,4080,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5368,interface,interface,5368,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Sp,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7958,interface,interface,7958,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Description() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:382165,interface,interface,382165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html:1212,interface,interface,1212,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,5,['interface'],['interface']
Integrability,"Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:3821,interface,interface,3821,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segment",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6846,interface,interfaces,6846,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['interface'],['interfaces']
Integrability,"DisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1015,interface,interfaces,1015,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['interface'],['interfaces']
Integrability,"DoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:5987,interface,interface,5987,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['interface'],['interface']
Integrability,"DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.comm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273548,interface,interface,273548,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate all the selected objects in a hierarchy. duplicateObjects(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects, assigning new IDs for each object. duplicateObjects(PathObjectHierarchy, Collection<PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:274095,interface,interfaces,274095,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"ECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING ; IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; . Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html:2807,interface,interface,2807,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,5,['interface'],['interface']
Integrability,"ES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7877,message,message,7877,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"Extension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:1538,interface,interface,1538,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['interface'],['interface']
Integrability,"F writer command capable of exporting image pyramids based on QuPath ImageServers. OMEPyramidWriterCommand(QuPathGUI) - Constructor for class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Constructor. OMETiffWriter - Class in qupath.lib.images.writers.ome. ImageWriter for writing OME-TIFF images. OMETiffWriter() - Constructor for class qupath.lib.images.writers.ome.OMETiffWriter;  ; opacityProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the global opacity for overlay drawing. OPEN_IMAGE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; OPEN_IMAGE_OR_URL - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; opencl() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target. opencl16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target with 16-bit floating point. OpenCVClassifiers - Class in qupath.opencv.ml. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers() - Constructor for class qupath.opencv.ml.OpenCVClassifiers;  ; OpenCVClassifiers.BoostClassifier - Class in qupath.opencv.ml. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier - Class in qupath.opencv.ml. Classifier based on DTrees. OpenCVClassifiers.EMClusterer - Class in qupath.opencv.ml. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier - Class in qupath.opencv.ml. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV - Class in qupath.opencv.ml. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel - Class in qupath.opencv.ml. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier - Class in qupath.opencv.ml. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV - Class in qupath.opencv.ml. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:722178,wrap,wrappers,722178,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrappers']
Integrability,"FAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:4671,depend,depend,4671,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['depend'],['depend']
Integrability,"Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html:1300,interface,interface,1300,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,1,['interface'],['interface']
Integrability,"FormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:1695,interface,interface,1695,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,1,['interface'],['interface']
Integrability,"GUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3250,interface,interface,3250,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['interface'],['interface']
Integrability,"Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. getTilesToRequest(ImageServer<?>, Shape, double, int, int, List<RegionRequest>) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). getTileWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile at the tile resolution. getTileWidth() - Method in class qupath.lib.objects.utils.Tiler. Get the width of output tiles. getTileX() - Method in class qupath.lib.images.servers.TileRequest. Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:535269,interface,interface,535269,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:387947,interface,interface,387947,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432397,interface,interface,432397,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"H. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1352,depend,dependent,1352,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,1,['depend'],['dependent']
Integrability,"Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:44165,interface,interface,44165,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"I centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:350161,interface,interface,350161,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"I defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1065813,interface,interface,1065813,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"I represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4510,interface,interface,4510,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"I, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.ImageJServer;  ; createID() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Returns a random UUID. createID() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; createID() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns a UUID. createID() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createID() - Method in class qupath.lib.images.servers.AbstractImageServer. Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). createID() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; createID() - Method in class qupath.lib.images.servers.bioformats.BioForma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:182827,wrap,wrap,182827,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"I. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the seco",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4502,interface,interface,4502,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"I. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4230,interface,interface,4230,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"I; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9400,interface,interface,9400,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"I; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9886,interface,interface,9886,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"I; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8221,interface,interface,8221,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"IJTools. Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. calibrateObject(PathObject, Roi) - Static method in class qupath.imagej.tools.IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:84482,interface,interface,84482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6098,interface,interface,6098,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"IPT_EDITOR - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; ScriptableWorkflowStep - Interface in qupath.lib.plugins.workflow. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes - Class in qupath.lib.scripting. Default attributes that can be set when running scripts. ScriptAttributes() - Constructor for class qupath.lib.scripting.ScriptAttributes;  ; ScriptAutoCompletor - Interface in qupath.lib.scripting.languages. Interface for classes that implement auto-completion (e.g. ScriptEditor - Interface in qupath.lib.gui.scripting. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T> - Interface in qupath.lib.gui.scripting. Basic script editor control using JavaFX. ScriptingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; ScriptLanguage - Class in qupath.lib.scripting.languages. Abstract class to represent languages supported by the script editor. ScriptLanguage(String, String) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor for a ScriptLanguage. ScriptLanguage(String, Collection<String>) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor for a ScriptLanguage. ScriptLanguageProvider - Class in qupath.lib.gui.scripting.languages. Class with static methods to fetch all the available ScriptLanguages. ScriptLanguageProvider() - Constructor for class qupath.lib.gui.scripting.languages.ScriptLanguageProvider;  ; ScriptParameters - Class in qupath.lib.scripting. Class that stores key info",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:888024,interface,interface,888024,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Idx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10660,wrap,wrapText,10660,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['wrap'],['wrapText']
Integrability,"Image, double) - Static method in class qupath.lib.gui.tools.GuiTools. Paint an image centered within a canvas, scaled by the specified scale factor. paintObject(PathObject, Graphics2D, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint an object (or, more precisely, its ROI). paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Paint the overlay to a graphics object. paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Paint an image region. paintRegionARGB(int[], long, long, int, int, int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; paintRegionCompl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:740738,interface,interface,740738,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Image, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get the version of the current extension. getVersion() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the semantic version. getVersion() - Static method in class qupath.lib.gui.QuPathGUI. Get the current QuPath version. getVersion() - Method in interface qupath.lib.projects.Project. The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). getVersion() - Method in class qupath.process.gui.ProcessingExtension;  ; getVersionedDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation, specifically for this software version. getVersionedDocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the main JavaFX component representing this viewer. getViewer() - Method in class qupath.lib.gui.QuPathGUI. Get the currently active viewer. getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getViewer() - Method in class qupath.lib.gui.viewer.tools",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:550249,interface,interface,550249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4296,depend,depending,4296,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['depend'],['depending']
Integrability,"ImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3792,interface,interface,3792,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability,"ImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coord",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:3401,wrap,wrapped,3401,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['wrap'],['wrapped']
Integrability,"ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1424,interface,interface,1424,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['interface'],['interface']
Integrability,"ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; support",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4032,interface,interface,4032,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"Image img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:4386,interface,interface,4386,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['interface'],['interface']
Integrability,"Info.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Ov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13128,interface,interface,13128,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"Info; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8502,depend,dependent,8502,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['depend'],['dependent']
Integrability,"Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:3319,interface,interfaces,3319,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['interface'],['interfaces']
Integrability,"L - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. GeneralPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; GeneralTools - Class in qupath.lib.common. Collection of generally useful static methods. generateDistinctName(String, Collection<String>) - Static method in class qupath.lib.common.GeneralTools. Generate a name that is distinct from the names in an existing collection, while being based on a provided name. generateMedianStainVectorFromPixels(String, int[], double, double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. GeneratingImageServer<T> - Interface in qupath.lib.images.servers. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI - Class in qupath.lib.roi. ROI based on Java Topology Suite Geometry objects. GeometryTools - Class in qupath.lib.roi. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools() - Constructor for class qupath.lib.roi.GeometryTools;  ; GeometryTools.GeometryConverter - Class in qupath.lib.roi. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder - Class in qupath.lib.roi. Builder to help define how ROIs and Geometry objects should be converted. geometryToROI(Geometry, ImagePlane) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a QuPath ROI. geometryToShape(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a java.awt.Shape. geq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.too",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:320399,interface,interface,320399,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"LastFrame; public boolean isLastFrame(qupath.lib.gui.viewer.recording.ViewRecordingFrame frame); Return whether the specified frame is the last one recorded. Parameters:; frame - ; Returns:; whether it is the last frame. getFrameIndexForTime; public int getFrameIndexForTime(long timestamp); Return the index of the frame visible at the specified timestamp (in ms).; If the timestamp is lower than the first recorded frame, 0 will be returned. Parameters:; timestamp - ; Returns:; index of frame. getFrameForTime; public qupath.lib.gui.viewer.recording.ViewRecordingFrame getFrameForTime(long timestamp); Return the frame visible at the specified timestamp (in ms). Parameters:; timestamp - ; Returns:; the corresponding frame. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:7927,interface,interface,7927,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"Length(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7356,interface,interface,7356,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"LineROI. Get the second y co-ordinate (end of the line). getYouTubeUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the QuPath YouTube channel. getYSum() - Method in class qupath.lib.regions.Padding. Get the total vertical padding (sum of x1 and x2). getZ() - Method in class qupath.lib.images.servers.TileRequest. Get the z-slice index for this request. getZ() - Method in class qupath.lib.regions.ImagePlane. Get the z-slice index. getZ() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice index for the region. getZ() - Method in class qupath.lib.roi.AreaROI;  ; getZ() - Method in class qupath.lib.roi.EllipseROI;  ; getZ() - Method in class qupath.lib.roi.GeometryROI;  ; getZ() - Method in class qupath.lib.roi.LineROI;  ; getZ() - Method in class qupath.lib.roi.PointsROI;  ; getZ() - Method in class qupath.lib.roi.PolygonROI;  ; getZ() - Method in class qupath.lib.roi.PolylineROI;  ; getZ() - Method in class qupath.lib.roi.RectangleROI;  ; getZ() - Method in interface qupath.lib.roi.interfaces.ROI. Get z-stack slice index. getZoomToFitDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; getZPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible z-slice. getZSpacing() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the z-spacing, in the stored units. getZSpacingMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the z-spacing in microns, if available - or Double.NaN otherwise. getZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the z-spacing in microns, or Double.NaN if this is unknown. getZSpacingUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred z-spacing unit. GITHUB - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GitHubProject - Interface in qupath.lib.gui.extensions. He",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:556222,interface,interface,556222,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Listener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10766,synchroniz,synchronizeViewersProperty,10766,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewersProperty']
Integrability,"List params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3585,interface,interface,3585,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"MenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24954,interface,interface,24954,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may ov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:3090,interface,interface,3090,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,1,['interface'],['interface']
Integrability,Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:340703,interface,interface,340703,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:509177,interface,interface,509177,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1219,interface,interfaces,1219,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,2,['interface'],"['interface', 'interfaces']"
Integrability,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2222,depend,dependent,2222,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,4,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3506,interface,interface,3506,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['interface'],['interface']
Integrability,"Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the determinant for each pixel. Specified by:; getDeterminant in interface MultiscaleFeatures.Hessian; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1953,interface,interface,1953,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,12,['interface'],['interface']
Integrability,"NDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. belowEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasuremen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:54210,interface,interface,54210,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"OI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:7527,interface,interface,7527,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"OI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse""",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5038,interface,interface,5038,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"OI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7047,interface,interface,7047,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"OIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7536,interface,interface,7536,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"OI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10441,interface,interface,10441,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"Object.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:12155,interface,interfaces,12155,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['interface'],['interfaces']
Integrability,"Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; public void setColorModel(ColorModel model); Set the color model to use. Parameters:; model - . getColorModel; public ColorModel getColorModel(); Get the ColorModel for this renderer (may be null). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in interface ImageRenderer; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html:2717,interface,interface,2717,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,4,['interface'],['interface']
Integrability,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22771,interface,interface,22771,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,2,['interface'],['interface']
Integrability,"ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:460306,interface,interface,460306,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Optionally request that instance labels are shuffled. sigmaX(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the horizontal filter. sigmaXY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values (x, y) to the same value. sigmaY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the vertical filter. sigmaZ(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, require",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975235,interface,interface,975235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Options. Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. getMenu(String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:440583,interface,interface,440583,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Options;  ; toString() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; toString() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature;  ; toString() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; toString() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; toString(String) - Method in class qupath.lib.objects.classes.PathClass. Create a string representation, using the specified delimiter between ; elements of derived PathClasses. totalBytes() - Method in class qupath.lib.gui.UndoRedoManager. The total number of bytes used for all viewers. toURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to a URI. tPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current t-position for the timepoint currently visible in the viewer. TRACE - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Trace logging (an awful lot of messages). traceGeometries(ImageServer<BufferedImage>, RegionRequest, Geometry, ContourTracing.ChannelThreshold...) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace one or more geometries in an image. traceGeometry(ImageServer<BufferedImage>, RegionRequest, Geometry, int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing. Trace a geometry from a single channel of a single image. trackedMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. TRACKING_RECORD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_REWIND - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TRACKING_STOP - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; train(TrainData) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1045121,message,messages,1045121,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548988,interface,interface,548988,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Path. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui - package qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions - package qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations - package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus - package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts - package qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. In",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:808864,interface,interface,808864,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"PathObjects. DelaunayTriangulation - Class in qupath.opencv.features. Compute Delaunay triangulation using OpenCV. DelaunayTriangulation(List<PathObject>, double, double, double, boolean) - Constructor for class qupath.opencv.features.DelaunayTriangulation. Compute Delaunay triangulation - optionally omitting links above a fixed distance. DELETE_EXISTING - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Delete existing child objects. DELETE_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; DeleteActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteFile(File, boolean) - Static method in class qupath.lib.common.GeneralTools. Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. deleteText(int, int) - Method in interface qupath.lib.gui.scripting.EditableText. Request deleting the text within the specified range. deleteText(int, int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deleteText(int, int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; DELIMITER - Static variable in class qupath.lib.objects.classes.PathClass. Get the delimiter to use between names of the PathClass when converting to a string. DEMOS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; DENSITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a density value, such as in a density map (e.g. DensityMapCommand - Class in qupath.process.gui.commands. Command for generating density maps from detections on an image. DensityMapCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.DensityMapCommand. Constructor. DensityMapDialog - Class in qupath.process.gui.commands.densit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:247908,interface,interface,247908,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:41779,interface,interface,41779,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"Plane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8874,interface,interface,8874,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"Plugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean run",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1564,interface,interfaces,1564,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['interface'],['interfaces']
Integrability,"Plugin.LineCap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins.objects; Enum Class DilateAnnotationPlugin.LineCap. java.lang.Object; java.lang.Enum<DilateAnnotationPlugin.LineCap>; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. All Implemented Interfaces:; Serializable, Comparable<DilateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.Lin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1008,interface,interfaces,1008,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,1,['interface'],['interfaces']
Integrability,"Plugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3865,interface,interface,3865,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"Plugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:448994,interface,interface,448994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Property() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an info notification. showingProperty() - Method in class qupath.lib.gui.panes.SlideLabelVi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:965145,message,message,965145,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"Property in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interfa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6811,interface,interface,6811,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:1002,interface,interfaces,1002,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,2,['interface'],"['interface', 'interfaces']"
Integrability,"Query the 'missing' flag for this core. Returns:. setMissing; public void setMissing(boolean missing); Set the missing flag for this core, for example because insufficient tissue is present.; 'Missing' cores are typically ignored during analysis. Parameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6013,interface,interface,6013,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability,"RI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:3131,interface,interface,3131,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],['interface']
Integrability,"ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5291,interface,interface,5291,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4319,interface,interface,4319,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6389,interface,interface,6389,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10821,interface,interface,10821,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4368,message,message,4368,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"Region; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. readTile; protected BufferedImage readTi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:6047,interface,interface,6047,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4329,wrap,wrapTextProperty,4329,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrapTextProperty']
Integrability,"ResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:500490,interface,interface,500490,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3659,interface,interface,3659,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3840,interface,interface,3840,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3589,interface,interface,3589,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4908,interface,interface,4908,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9529,interface,interface,9529,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interfa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10142,interface,interface,10142,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"ScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8467,interface,interface,8467,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:1383,wrap,wrapText,1383,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['wrap'],['wrapText']
Integrability,"ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5253,interface,interface,5253,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEdito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5468,interface,interface,5468,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"SelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6990,interface,interface,6990,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Server;  ; getServerType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getServerType() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getServerType() - Method in interface qupath.lib.images.servers.ImageServer. A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). getServerType() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnSha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:513331,interface,interface,513331,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Server<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:6432,interface,interface,6432,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2964,interface,interface,2964,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['interface'],['interface']
Integrability,"Show the cursor location. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the cursor location. showMeasurementTableObjectIDs - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableObjectIDsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.View",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968060,message,message,968060,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"SpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949671,interface,interface,949671,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4803,interface,interface,4803,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['interface'],['interface']
Integrability,"Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5200,interface,interface,5200,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['interface'],['interface']
Integrability,Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: T,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7492,interface,interface,7492,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346842,interface,interface,346842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057346,interface,interface,1057346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5957,message,message,5957,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.Virtua",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6125,interface,interface,6125,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Description copied from interface: SimpleImage; Get the image height. Specified by:; getHeight in interface SimpleImage; Returns:. getArray; public float[] getArray(boolean direct); Description copied from interface: SimpleModifiableImage; Request the pixel array representing all the pixels in this image, returned row-wise. Specified by:; getArray in interface SimpleModifiableImage; Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1908,interface,interface,1908,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,8,['interface'],['interface']
Integrability,"T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1330,interface,interface,1330,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['interface'],['interface']
Integrability,"TH; public static final String PROPERTY_NAME_BOUNDS_WIDTH. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_HEIGHT; public static final String PROPERTY_NAME_BOUNDS_HEIGHT. See Also:. Constant Field Values. Method Details. dispose; public void dispose(); Dispose the OpenSlide object; this is equivalent to close(). getLevelCount; public int getLevelCount(); Get the total number of pyramid levels. Returns:. getLevel0Width; public long getLevel0Width(); Get the width of the full-resolution image (level 0). Returns:. getLevel0Height; public long getLevel0Height(); Get the height of the full-resolution image (level 0). Returns:. getLevelWidth; public long getLevelWidth(int level); Get the image width at the specified level. Parameters:; level - ; Returns:. getLevelHeight; public long getLevelHeight(int level); Get the image height at the specified level. Parameters:; level - ; Returns:. paintRegionARGB; public void paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h); throws IOException. Throws:; IOException. getProperties; public Map<String,String> getProperties(); Get an unmodifiable map of all available properties. Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); throws IOException; Get a named associated image. Parameters:; name - ; Returns:; Throws:; IOException. getAssociatedImages; public List<String> getAssociatedImages(); Get a list of all associated image names. Returns:. close; public void close(); Close; this is important for cleanup. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable. getICCProfileBytes; public byte[] getICCProfileBytes(); throws UnsupportedOperationException; Request the bytes for an ICC profile. Returns:; the bytes of an ICC profile is available, or null otherwise.; Throws:; UnsupportedOperationException - if an unsatisfied link error occurred, which indicates that; the OpenSlide version is not compatible (it should be 4.0.0 or greater). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:5174,interface,interface,5174,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,2,['interface'],['interface']
Integrability,"Text(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void repla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10372,wrap,wrapTextProperty,10372,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,3,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"Text; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10017,interface,interface,10017,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9412,interface,interface,9412,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolation(Graphics2D g2d). paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:3560,interface,interface,3560,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['interface'],['interface']
Integrability,"Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLengt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8877,interface,interface,8877,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,Tool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Apply acceleration/deceleration effects when holding and releasing navigation key. navigationSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale navigation speed. nBins() - Method in class qupath.lib.analysis.stats.Histogram. Total number of histogram bins. nCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of censored events. nChannels() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nChannels() - Method in interface qupath.lib.images.servers.ImageServer. Number of channels (3 for RGB). nChildObjects() - Method in class qupath.lib.objects.PathObject. Total number of child objects. nComponents() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Number of output components. nCores() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interfac,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:708116,interface,interface,708116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Tool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer viewer); Description copied from interface: PathTool; Deregister the tool from the viewer. It is essential that tools clean up properly ; and do not impact other tools that may be registered for the viewer later. Specified by:; deregisterTool in interface PathTool; Parameters:; viewer - the viewer from which this tool should be deregistered. nameProperty; public ReadOnlyStringProperty nameProperty(); Description copied from interface: PathTool; Property giving the name of the tool. Specified by:; nameProperty in interface PathTool; Returns:; the name property. iconProperty; public ReadOnlyObjectProperty<Node> iconProperty(); Description copied from interface: PathTool; Property giving the icon that should be used for the tool. Specified by:; iconProperty in interface PathTool; Returns:; the icon property. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:2324,interface,interface,2324,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,7,['interface'],['interface']
Integrability,"Type) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the channel type for the output. outputClasses(Map<Integer, PathClass>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as a map. outputClasses(PathClass...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as an array. outputClassNames(String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as an array of classification names. outputClassNames(Map<Integer, String>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as a map with string values. outputHandler(OutputHandler<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the output handler. OutputHandler<S,T,U> - Interface in qupath.lib.experimental.pixels. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U> - Class in qupath.lib.experimental.pixels;  ; OutputHandler.OutputToObjectConverter<S,T,U> - Interface in qupath.lib.experimental.pixels;  ; outputPath(String) - Method in class qupath.lib.gui.FileCopier. Name of the output directory. outputPath(Path) - Method in class qupath.lib.gui.FileCopier. Path representing the output directory. outputPixelType(PixelType) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Output pixel type. outputs(String...) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the layer outputs. outputs(Map<String, DnnShape>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shapes for one or more outputs. outputs(Map<String, DnnShape>) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the layer outputs and shapes. outputShape(long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:734242,interface,interface,734242,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1565,message,message,1565,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"URIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:3112,interface,interface,3112,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['interface'],['interface']
Integrability,"UriUpdater. Apply all current replacements, updating the UriResource objects. applySettingsToDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Apply the settings to the display, if they are compatible. applyTiled(Function<Mat, Mat>, Mat, int, int, Padding, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a function to a Mat that strictly requires a specific input size. applyToChannels(Mat, Consumer<Mat>) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.display.ImageDisplay. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:44083,interface,interface,44083,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"VClassifiers.LogisticRegressionClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... supportsPyramidal() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPyramidal() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPyramidal() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of writing pyramidal images. supportsPyramidal() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsRGB() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsRGB() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsRGB() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsRGB() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle RGB (it probably can...). supportsRGB() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsT() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsT() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsT() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsT() - Method in class qupath.lib.images.writer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1012464,interface,interface,1012464,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"VProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to the current image image. writeDensityMapImage(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, String) - Static method in class qupath.lib.scripting.QP. Write ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1111219,wrap,wrapTextProperty,1111219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"Value; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3324,depend,depending,3324,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['depend'],['depending']
Integrability,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11933,interface,interface,11933,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6545,interface,interfaces,6545,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability,"X - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8623,interface,interface,8623,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5430,interface,interface,5430,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5685,interface,interface,5685,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7494,interface,interface,7494,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3460,wrap,wrapText,3460,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,2,['wrap'],"['wrapText', 'wrapTextProperty']"
Integrability,"a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:501735,interface,interface,501735,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"a<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11493,interface,interface,11493,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"able (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRendere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:421454,interface,interface,421454,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3890,message,message,3890,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1080,interface,interfaces,1080,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['interface'],['interfaces']
Integrability,"ace qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:137294,interface,interface,137294,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ace ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5860,interface,interface,5860,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ace ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6918,interface,interface,6918,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10973,interface,interface,10973,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['interface'],['interface']
Integrability,"ackages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes. Index; The Index contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as All Packages, All Classes and Interfaces. This help file applies to API documentation generated by the standard doclet. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:4654,interface,interfaces,4654,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,3,['interface'],['interfaces']
Integrability,"act the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Returns:; Throws:; IOException. readTile; protected abstract BufferedImage readTile(TileRequest tileRequest); throws IOException; Read a single image tile. Parameters:; tileRequest - ; Returns:; Throws:; IOException. getTile; protected BufferedImage getTile(TileRequest tileRequest); throws IOException; Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5023,interface,interface,5023,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['interface'],['interface']
Integrability,"acted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8908,interface,interface,8908,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ad from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public V",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15538,interface,interface,15538,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['interface'],['interface']
Integrability,"adTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:6278,interface,interface,6278,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,3,['interface'],['interface']
Integrability,"adURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:20493,depend,dependent,20493,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['depend'],['dependent']
Integrability,"added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8787,interface,interface,8787,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11506,interface,interface,11506,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"adians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36036,interface,interface,36036,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"age is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769715,interface,interface,769715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"age(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file path. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.scripting.QP. Write an image region ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119690,interface,interface,1119690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"age). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6194,message,message,6194,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"age); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10380,message,message,10380,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"age; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1125,interface,interface,1125,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,1,['interface'],['interface']
Integrability,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1124,interface,interfaces,1124,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['interface'],['interfaces']
Integrability,"age; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name; exts - the possible extensions for this language; completor - the auto-completion object for this language. Method Details. getDefaultAutoCompletor; protected ScriptAutoCompletor getDefaultAutoCompletor(String languageName); Default method to get a suitable auto completor for the given language name. Parameters:; languageName - ; Returns:. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in interface ExecutableLanguage; Parameters:; params - ; Returns:; Throws:; ScriptException. tryToInterpretMessage; protected String tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable). getDefaultScriptName; protected String getDefaultScriptName(). createContext; protected ScriptContext createContext(ScriptParameters params); Create a ScriptContext containing information from the ScriptParameters. Parameters:; params - ; Returns:. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. getImportStatements; public String getImportStatemen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:4456,interface,interface,4456,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['interface'],['interface']
Integrability,"ageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Normalized bin counts, so that the sum of all counts is 1.0. normalizeFeature(int, double) - Method in class qupath.opencv.ml.objects.features.Normalizer. Normalize a single feature. normalizeFloats(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:714002,interface,interface,714002,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:441823,interface,interface,441823,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6108,interface,interface,6108,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['interface'],['interface']
