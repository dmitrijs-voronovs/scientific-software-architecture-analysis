quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability,ost – SOFA. SOFA - Topic Tag: boost. /boost_locale-vc140-mt-1_60; . /feed; ; Boost_locale-vc140-mt-1_60 – SOFA. SOFA - Topic Tag: Boost_locale-vc140-mt-1_60. /boost-cmake; . /feed; ; boost cmake – SOFA. SOFA - Topic Tag: boost cmake. /boost-library; . /feed; ; boost library – SOFA. SOFA - Topic Tag: boost library. /bounding-box-grid-regular; . /feed; ; bounding box grid regular – SOFA. SOFA - Topic Tag: bounding box grid regular. /braided-rope; . /feed; ; braided rope – SOFA. SOFA - Topic Tag: braided rope. /bubble; . /feed; ; Bubble – SOFA. SOFA - Topic Tag: Bubble. /bug; . /feed; ; bug – SOFA. SOFA - Topic Tag: bug. /bug-flexible; . /feed; ; #bug #Flexible – SOFA. SOFA - Topic Tag: #bug #Flexible. /buiding-error; . /feed; ; buiding error – SOFA. SOFA - Topic Tag: buiding error. /build; . /feed; ; build – SOFA. SOFA - Topic Tag: build. /build-error; . /feed; ; build error – SOFA. SOFA - Topic Tag: build error. /building; . /feed; ; building – SOFA. SOFA - Topic Tag: building. /building-error; . /feed; ; building error – SOFA. SOFA - Topic Tag: building error. /building-on-linux; . /feed; ; Building on Linux – SOFA. SOFA - Topic Tag: Building on Linux. /building-sofa; . /feed; ; building sofa – SOFA. SOFA - Topic Tag: building sofa. /building-stlib; . /feed; ; building stlib – SOFA. SOFA - Topic Tag: building stlib. /build-issues; . /feed; ; Build Issues – SOFA. SOFA - Topic Tag: Build Issues. /build-sofa; . /feed; ; Build SOFA – SOFA. SOFA - Topic Tag: Build SOFA. /build-sofa-on-windows; . /feed; ; build sofa on windows – SOFA. SOFA - Topic Tag: build sofa on windows. /buildsofavs2010win7; . /feed; ; BuildSofaVS2010Win7 – SOFA. SOFA - Topic Tag: BuildSofaVS2010Win7. /buliding-sofa; . /feed; ; buliding sofa – SOFA. SOFA - Topic Tag: buliding sofa. /bvh; . /feed; ; bvh – SOFA. SOFA - Topic Tag: bvh. /c; . /feed; ; c++ – SOFA. SOFA - Topic Tag: c++. /c11; . /feed; ; c++11 – SOFA. SOFA - Topic Tag: c++11. /cable; . /feed; ; Cable – SOFA. SOFA - Topic Tag: Cable. /cable-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:430602,error,error,430602,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"othness, ...) ; resTabis the result vector that contains the constraint resolution algorithms . Reimplemented from sofa::core::behavior::BaseConstraint. ◆ getConstraintViolation(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >::getConstraintViolation ; (; const core::ConstraintParams * ; cParams, . linearalgebra::BaseVector * ; resV, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Construct the Constraint violations vector of each constraint; Parameters. resVis the result vector that contains the whole constraints violations ; xis the position vector used to compute constraint position violation ; vis the velocity vector used to compute constraint velocity violation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::Constraint< DataTypes >. ◆ getFixedIdentifiers(). template<class DataTypes > . virtual type::vector<std::string> sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >::getFixedIdentifiers ; (; ). inlineprotectedvirtual . ◆ init(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::Constraint< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(FixedLagrangianConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::Constraint, DataTypes) ;  . ). sofacomponentconstraintlagrangianmodelFixedLagrangianConstraint; Generated on Mon Nov 11 2024 02:35:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:23740,down,down,23740,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,1,['down'],['down']
Availability,"params, . SReal ; dt . ); const. protected . ◆ beginIntegration(). void sofa::simulation::DefaultAnimationLoop::beginIntegration ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ); const. protected . ◆ behaviorUpdatePosition(). void sofa::simulation::DefaultAnimationLoop::behaviorUpdatePosition ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ); const. protected . ◆ collisionDetection(). void sofa::simulation::DefaultAnimationLoop::collisionDetection ; (; const sofa::core::ExecParams * ; params); const. protected . ◆ computeBoundingBox(). void sofa::simulation::DefaultAnimationLoop::computeBoundingBox ; (; const sofa::core::ExecParams * ; params); const. protected . ◆ endIntegration(). void sofa::simulation::DefaultAnimationLoop::endIntegration ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ); const. protected . ◆ init(). void sofa::simulation::DefaultAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::BaseAnimationLoop. ◆ projectPositionAndVelocity(). void sofa::simulation::DefaultAnimationLoop::projectPositionAndVelocity ; (; SReal ; nextTime, . const sofa::core::MechanicalParams & ; mparams . ); const. protected . ◆ propagateAnimateBeginEvent(). void sofa::simulation::DefaultAnimationLoop::propagateAnimateBeginEvent ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ); const. protected . ◆ propagateAnimateEndEvent(). void sofa::simulation::DefaultAnimationLoop::propagateAnimateEndEvent ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ); const. protected . ◆ propagateCollisionBeginEvent(). void sofa::simulation::DefaultAnimationLoop::propagateCollisionBeginEvent ; (; const sofa::core::ExecParams * ; params); const. protected . ◆ propagateCollisionEndEvent(). void sofa::simulation::DefaultAnimationLoop::propagateCollisionEndEvent ; (; const sofa::core::ExecParams * ; param",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:17812,down,down,17812,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,1,['down'],['down']
Availability,"pe;  Type of higher topology element contains in this container. More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SparseGridMultipleTopology, SparseGridRamificationTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void buildAsFinest () override;  building from a mesh file More...;  ; void buildFromFiner () override;  building by condensating a finer sparse grid (used if setFinerSparseGrid has initialized _finerSparseGrid before calling init() ) More...;  ; void buildVirtualFinerLevels () override;  building eventual virtual finer levels (cf d_nbVirtualFinerLevels) More...;  ; Index findCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ; Index findNearestCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ;  Public Member Functions inherited from sofa::component::topology::container::grid::SparseGridRamificationTopology;  SOFA_CLASS (SparseGridRamificationTopology, SparseGridTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Index findCube (con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:7440,down,down,7440,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['down'],['down']
Availability,"periodicExport. bool sofa::component::playback::WriteState::periodicExport. protected . ◆ savedKineticEnergy. double sofa::component::playback::WriteState::savedKineticEnergy. protected . ◆ timeToTestEnergyIncrease. double sofa::component::playback::WriteState::timeToTestEnergyIncrease. protected . ◆ validInit. bool sofa::component::playback::WriteState::validInit. protected . Constructor details. ◆ WriteState(). sofa::component::playback::WriteState::WriteState ; (; ). protected . ◆ ~WriteState(). sofa::component::playback::WriteState::~WriteState ; (; ). overrideprotected . Function details. ◆ canCreate(). template<class T > . static bool sofa::component::playback::WriteState::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ handleEvent(). void sofa::component::playback::WriteState::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::playback::WriteState::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::component::playback::WriteState::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reset(). void sofa::component::playback::WriteState::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::playback::WriteState::SOFA_CLASS ; (; WriteState ; , . core::objectmodel::BaseObject ;  . ). sofacomponentplaybackWriteState; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:17751,down,down,17751,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['down'],['down']
Availability,"pes >protected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MeshSpringForceField()sofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >protected; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html:19801,mask,maskInUsesofa,19801,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,1,['mask'],['maskInUsesofa']
Availability,"physics simuation. Static Public Member Functions |; List of all members . sofa::helper::system::FileMonitor Class Reference . #include <FileMonitor.h>. Static Public Member Functions; static int addFile (const std::string &filename, FileEventListener *listener);  add a new filepath to monitor and a listener to be triggered in case of change. returns >= 0 if the file was successfully added returns < 0 in case of error. More...;  ; static int addFile (const std::string &directoryname, const std::string &filename, FileEventListener *listener);  add a new path and file to monitor and a listener to be triggered in case of change. returns >= 0 if the file was successfully added returns < 0 in case of error. More...;  ; static int updates (int timeout=1);  check if the file have changed, colalesc the similar events and notify the listener. timeout is the number of seconds to block the calling process. Can be 0 (in this case it return immediately if there is no event. return -1 in case of error return >= 0 otherwise. More...;  ; static void removeListener (FileEventListener *listener);  remove the provided listener. If the listener is not existing, do nothing If the listener is nullptr, do nothing If the listener is associated with one or more file...remove all the associations. Keep in mind that the file are still monitored. More...;  ; static void removeFileListener (const std::string &filename, FileEventListener *listener);  remove the provided listener for a given file If the listener is not existing, do nothing If the listener is nullptr, do nothing If the listener is associated with one or more file...remove all the associations. Keep in mind that the file are still monitored. More...;  . Function details. ◆ addFile() [1/2]. int sofa::helper::system::FileMonitor::addFile ; (; const std::string & ; directoryname, . const std::string & ; filename, . FileEventListener * ; listener . ). static . add a new path and file to monitor and a listener to be triggered in case of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html:1116,error,error,1116,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html,1,['error'],['error']
Availability,pic Tag: binary. /blood-flow-simulation; . /feed; ; blood flow simulation – SOFA. SOFA - Topic Tag: blood flow simulation. /boost; . /feed; ; boost – SOFA. SOFA - Topic Tag: boost. /boost_locale-vc140-mt-1_60; . /feed; ; Boost_locale-vc140-mt-1_60 – SOFA. SOFA - Topic Tag: Boost_locale-vc140-mt-1_60. /boost-cmake; . /feed; ; boost cmake – SOFA. SOFA - Topic Tag: boost cmake. /boost-library; . /feed; ; boost library – SOFA. SOFA - Topic Tag: boost library. /bounding-box-grid-regular; . /feed; ; bounding box grid regular – SOFA. SOFA - Topic Tag: bounding box grid regular. /braided-rope; . /feed; ; braided rope – SOFA. SOFA - Topic Tag: braided rope. /bubble; . /feed; ; Bubble – SOFA. SOFA - Topic Tag: Bubble. /bug; . /feed; ; bug – SOFA. SOFA - Topic Tag: bug. /bug-flexible; . /feed; ; #bug #Flexible – SOFA. SOFA - Topic Tag: #bug #Flexible. /buiding-error; . /feed; ; buiding error – SOFA. SOFA - Topic Tag: buiding error. /build; . /feed; ; build – SOFA. SOFA - Topic Tag: build. /build-error; . /feed; ; build error – SOFA. SOFA - Topic Tag: build error. /building; . /feed; ; building – SOFA. SOFA - Topic Tag: building. /building-error; . /feed; ; building error – SOFA. SOFA - Topic Tag: building error. /building-on-linux; . /feed; ; Building on Linux – SOFA. SOFA - Topic Tag: Building on Linux. /building-sofa; . /feed; ; building sofa – SOFA. SOFA - Topic Tag: building sofa. /building-stlib; . /feed; ; building stlib – SOFA. SOFA - Topic Tag: building stlib. /build-issues; . /feed; ; Build Issues – SOFA. SOFA - Topic Tag: Build Issues. /build-sofa; . /feed; ; Build SOFA – SOFA. SOFA - Topic Tag: Build SOFA. /build-sofa-on-windows; . /feed; ; build sofa on windows – SOFA. SOFA - Topic Tag: build sofa on windows. /buildsofavs2010win7; . /feed; ; BuildSofaVS2010Win7 – SOFA. SOFA - Topic Tag: BuildSofaVS2010Win7. /buliding-sofa; . /feed; ; buliding sofa – SOFA. SOFA - Topic Tag: buliding sofa. /bvh; . /feed; ; bvh – SOFA. SOFA - Topic Tag: bvh. /c; . /feed; ; c++ – SOFA.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:430456,error,error,430456,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"pic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:275442,error,error-while-configuring-,275442,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-while-configuring-']
Availability,pic: Error adding SofaPython3 and STlib plugin. /error-adding-sofapython3-plugin-to-sofa-21-12; ; SOFA - Topic: Error adding SofaPython3 plugin to SOFA 21.12. /error-after-compilation-help; ; SOFA - Topic: Error after compilation.[HELP]. /error-at-building-softrobots-with-ninja; ; SOFA - Topic: [SOLVED] Error at building SoftRobots with ninja. /error-at-installing-a-newer-cmake-version; ; SOFA - Topic: [SOLVED] Error at installing a newer CMake version. /errorbuilding-sofa-20-06-version-to-add-softrobot-plugin; ; SOFA - Topic: [SOLVED] Error:Building Sofa 20.06 version to add SoftRobot plugin. /error-building-sofa-constraintresolution-h-not-found; ; SOFA - Topic: [SOLVED] Error building SOFA : ConstraintResolution.h not found. /error-building-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Error building SofaCUDA Plugin. /error-building-sofa-v-17-12-on-windows-10-in-qt-ide; ; SOFA - Topic: Error Building SOFA V.17.12 on windows 10 in Qt IDE. /error-building-sofa-with-cuda-plugin; ; SOFA - Topic: [SOLVED] Error Building SOFA with CUDA Plugin. /error-compiling-with-cuda-plugin; ; SOFA - Topic: Error compiling with CUDA plugin. /error-configure-sofa-in-cmake-gui-about-lpthreads; . /page; . /2; ; SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. /error-configuring-cmake-sofarosconnector; ; SOFA - Topic: Error configuring (cmake) SofaROSConnector. /error-const-type-const-idmap-without-a-user-provided-default-constructor; ; SOFA - Topic: [SOLVED] error: const type ‘const IdMap’ without a user-provided default constructor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-u,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:292814,error,error-building-sofa-with-cuda-plugin,292814,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-building-sofa-with-cuda-plugin']
Availability,"pic: Error compiling with CUDA plugin. /error-configure-sofa-in-cmake-gui-about-lpthreads; . /page; . /2; ; SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. /error-configuring-cmake-sofarosconnector; ; SOFA - Topic: Error configuring (cmake) SofaROSConnector. /error-const-type-const-idmap-without-a-user-provided-default-constructor; ; SOFA - Topic: [SOLVED] error: const type ‘const IdMap’ without a user-provided default constructor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-ubuntu; ; SOFA - Topic: [SOLVED] Error in Building Sofa 20.06 version on Ubuntu. /error-in-building-sofa-using-cmake; . /feed; ; [SOLVED] Error in building SOFA using cmake – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /4; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /5; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /error-in-compiling-softrobots-plugin-cableconstraint-in-sofa-21-06-version; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:293944,error,error-in-building-sofa-using-cmake,293944,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-in-building-sofa-using-cmake']
Availability,pic: Running SOFA. /running-sofa-from-the-terminal; ; SOFA - Topic: [SOLVED] Running SOFA from the terminal. /running-sofa-master-after-being-compiled-on-macos; ; SOFA - Topic: [SOLVED] Running sofa master after being compiled on macOS. /running-the-c-file; ; SOFA - Topic: [SOLVED] Running the C++ file. /runsofa-building-sofa-error; ; SOFA - Topic: RunSofa (Building SOFA error). /runsofa-crashes; ; SOFA - Topic: runsofa crashes. /runsofa-crashes-at-launch; ; SOFA - Topic: runSofa crashes at launch. /runsofa-crush-when-called-from-modeler; ; SOFA - Topic: [SOLVED] runSofa crush when called from Modeler. /run-sofa-error; ; SOFA - Topic: [SOLVED] Run Sofa Error. /runsofa-lsofapython3-causing-sofa-to-close; ; SOFA - Topic: [SOLVED] runSofa -lSofaPython3 causing sofa to close. /runsofa-v19-12-crashes-on-mac-osx-10-14-6; ; SOFA - Topic: runSofa (v19.12) crashes on Mac OSX (10.14.6). /run-sofa-with-no-gui; ; SOFA - Topic: [SOLVED] Run Sofa with no GUI. /runtime-error-in-component; ; SOFA - Topic: [SOLVED] Runtime error in component. /safe-runtime-search-path; ; SOFA - Topic: [SOLVED] Safe runtime search path. /sample-code; ; SOFA - Topic: [SOLVED] sample code. /save-part-of-state-in-gui; ; SOFA - Topic: [SOLVED] Save (part of) state in GUI?. /save-some-variable-values-in-qtableview-and-show-in-modeler; ; SOFA - Topic: Save some variable values in QTableView and show in modeler. /save-visual-model-deformation-as-obj; ; SOFA - Topic: Save visual model deformation as obj. /saving-images-and-groud-truth-using-sofa; ; SOFA - Topic: [SOLVED] Saving images and groud truth using SOFA. /saving-new-vertices-of-deformed-mesh; . /feed; ; [SOLVED] Saving new vertices of deformed mesh – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Saving new vertices of deformed mesh. /7; ; SOFA - Topic: [SOLVED] Saving new vertices of deformed mesh. /8; ; SOFA - Topic: [SOLVED] Saving new vertices of deformed mesh. /9; ; SOFA - Topic: [SOLVED] Saving new vertices of deformed mesh. SOFA - Topic: [SOLVED],MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:380402,error,error-in-component,380402,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],"['error', 'error-in-component']"
Availability,"plate wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObject() [2/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridevirtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObjects(). void sofa::simulation::graph::DAGNode::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type,; Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getParents(). sofa::core::objectmodel::BaseNode::Parents sofa::simulation::graph::DAGNode::getParents ; (; ); const. overridevirtual . Get a list of parent node. ; Implements sofa::core::objectmodel::BaseNode. ◆ hasAncestor() [1/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseContext * ; context); const. overridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of an ancestor. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ hasAncestor() [2/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseNode * ; node); const. inlineoverridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:38249,down,down,38249,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['down'],['down']
Availability,"plemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getMechanicalState() [1/2]. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getMechanicalState ; (; ). inline . ◆ getMechanicalState() [2/2]. template<class TDataTypes > . const core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getMechanicalState ; (; ); const. inline . ◆ getNormals(). template<class TDataTypes > . const VecDeriv& sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getNormals ; (; ); const. inline . ◆ getTriangleFlags(). template<class DataTypes > . int sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::getTriangleFlags ; (; sofa::core::topology::BaseMeshTopology::TriangleID ; i). ◆ getTriangles(). template<class TDataTypes > . const sofa::core::topology::BaseMeshTopology::SeqTrian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:29433,avail,available,29433,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['avail'],['available']
Availability,"plete list of members for sofa::simulation::xml::NodeElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::NodeElement; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html:1476,error,errorssofa,1476,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html,1,['error'],['errorssofa']
Availability,"pology::container::dynamic::DynamicSparseGridTopologyContainer::idxInRegularGrid. ◆ resolution. sofa::core::objectmodel::RenamedData<sofa::type::Vec3i> sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::resolution. ◆ valuesIndexedInRegularGrid. sofa::core::objectmodel::RenamedData< sofa::type::vector<unsigned char> > sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::valuesIndexedInRegularGrid. ◆ valuesIndexedInTopology. sofa::core::objectmodel::RenamedData< sofa::type::vector<unsigned char> > sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::valuesIndexedInTopology. values indexed in the topology . ◆ voxelSize. sofa::core::objectmodel::RenamedData< type::Vec3 > sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::voxelSize. Constructor details. ◆ DynamicSparseGridTopologyContainer(). sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::DynamicSparseGridTopologyContainer ; (; ). protected . ◆ ~DynamicSparseGridTopologyContainer(). sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::~DynamicSparseGridTopologyContainer ; (; ). inlineoverrideprotected . Function details. ◆ init(). void sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer::SOFA_CLASS ; (; DynamicSparseGridTopologyContainer ; , . HexahedronSetTopologyContainer ;  . ). Related details. ◆ DynamicSparseGridTopologyModifier. friend class DynamicSparseGridTopologyModifier. friend . sofacomponenttopologycontainerdynamicDynamicSparseGridTopologyContainer; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:50458,down,down,50458,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['down'],['down']
Availability,"ponent::rendering3d::DataDisplay::oldMax. ◆ oldMin. Real sofa::gl::component::rendering3d::DataDisplay::oldMin. ◆ state. core::State<DataTypes>* sofa::gl::component::rendering3d::DataDisplay::state. Constructor details. ◆ DataDisplay(). sofa::gl::component::rendering3d::DataDisplay::DataDisplay ; (; ). protected . Function details. ◆ computeNormals(). void sofa::gl::component::rendering3d::DataDisplay::computeNormals ; (; ). protected . ◆ doDrawVisual(). void sofa::gl::component::rendering3d::DataDisplay::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). void sofa::gl::component::rendering3d::DataDisplay::doUpdateVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::gl::component::rendering3d::DataDisplay::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ insertInNode(). bool sofa::gl::component::rendering3d::DataDisplay::insertInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::visual::VisualModel. ◆ removeInNode(). bool sofa::gl::component::rendering3d::DataDisplay::removeInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::visual::VisualModel. ◆ SOFA_CLASS2(). sofa::gl::component::rendering3d::DataDisplay::SOFA_CLASS2 ; (; DataDisplay ; , . core::visual::VisualModel ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:23209,down,down,23209,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['down'],['down']
Availability,"ponent::shader::OglShaderVisualModel, sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >, sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >, sofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >, and sofa::component::collision::geometry::LineCollisionModel< TDataTypes >. ◆ handleTopologyChange() [2/2]. void sofa::core::objectmodel::BaseObject::handleTopologyChange ; (; core::topology::Topology * ; t). virtual . Handle topological Changes from a given Topology ; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >. ◆ hasDataChanged(). bool sofa::core::objectmodel::BaseObject::hasDataChanged ; (; const BaseData & ; data). protected . Method called to know if a tracked Data has changed. . ◆ init(). void sofa::core::objectmodel::BaseObject::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented in sofa::component::collision::response::contact::ContactListener, sofa::gui::component::performer::MouseInteractor< DataTypes >, sofa::gl::component::shader::VisualManagerSecondaryPass, sofa::gl::component::shader::VisualManagerPass, sofa::gl::component::shader::PostProcessManager, sofa::gl::component::shader::OrderIndependentTransparencyManager, sofa::gl::component::shader::OglMatrix4VectorVariable, sofa::gl::component::shader::OglMatrix4x3Variable, sofa::gl::component::shader::OglMatrix3x4Variable, sofa::gl::component::shader::OglMatrix4x2Variable, sofa::gl::component::shader::OglMatrix2x4Variable, sofa::gl::component::shader::OglMatrix3x2Variable, sofa::gl::component::shader::OglMatrix2x3Variable, sofa::gl::component::shader::OglMatrix4Variable, sofa::gl::component::shader::OglMatrix3Variable, sofa::gl::component::shader::OglMatrix2Variable, sofa::gl::component::shader::OglFloatVector4Variable, sofa::gl::component::shad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:37504,down,down,37504,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['down'],['down']
Availability,"ponent::shader::OglTexturePointer::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ fwdDraw(). void sofa::gl::component::shader::OglTexturePointer::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ getSEType(). ShaderElementType sofa::gl::component::shader::OglTexturePointer::getSEType ; (; ); const. inlineoverridevirtual . Returns the type of shader element (texture, macro, variable, or attribute) ; Implements sofa::core::visual::ShaderElement. ◆ getSEValue() [1/2]. const core::objectmodel::BaseData* sofa::gl::component::shader::OglTexturePointer::getSEValue ; (; ); const. inlineoverridevirtual . Implements sofa::core::visual::ShaderElement. ◆ getSEValue() [2/2]. core::objectmodel::BaseData* sofa::gl::component::shader::OglTexturePointer::getSEValue ; (; ). inlineoverridevirtual . Implements sofa::core::visual::ShaderElement. ◆ getTextureUnit(). unsigned short sofa::gl::component::shader::OglTexturePointer::getTextureUnit ; (; ). inline . ◆ init(). void sofa::gl::component::shader::OglTexturePointer::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement. ◆ setActiveTexture(). void sofa::gl::component::shader::OglTexturePointer::setActiveTexture ; (; unsigned short ; unit). static . Utility function to set current active texture. . ◆ SOFA_CLASS2(). sofa::gl::component::shader::OglTexturePointer::SOFA_CLASS2 ; (; OglTexturePointer ; , . core::visual::VisualModel ; , . OglShaderElement ;  . ). ◆ unbind(). void sofa::gl::component::shader::OglTexturePointer::unbind ; (; ). sofaglcomponentshaderOglTexturePointer; Generated on Mon Nov 11 2024 03:19:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:19087,down,down,19087,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,1,['down'],['down']
Availability,"r ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). inlineoverridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ addCollisionPairs(). void sofa::component::collision::detection::algorithm::IncrSAP::addCollisionPairs ; (; const type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > & ; v). inlineoverridevirtual . Add a new list of potentially colliding pairs of models. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::IncrSAP::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ init(). void sofa::component::collision::detection::algorithm::IncrSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::IncrSAP::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::IncrSAP::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setDraw(). void sofa::component::collision::detection::algorithm::IncrSAP::setDraw ; (; bool ; ). inline . ◆ showBoxes(). void sofa::component::collision::detection::algorithm::IncrSAP::showBoxes ; (; ); const. ◆ showEndPoints(). void sofa::component::collision::detection::algorithm::IncrSAP::showEndPoints ; (; ); const. ◆ SOFA_CLASS2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:19049,down,down,19049,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['down'],['down']
Availability,"r Functions |; List of all members . sofa::helper::LCP Class Reference . #include <LCPcalc.h>. Public Attributes; int it;  ; SReal error;  . Public Member Functions;  LCP ();  ;  ~LCP ();  ; void reset (void);  ; void allocate (unsigned int maxConst);  ; SReal ** getW (void);  ; SReal & getMu (void);  ; SReal * getDfree (void);  ; SReal getTolerance (void);  ; SReal getMaxIter (void);  ; SReal * getF (void);  ; SReal * getF_1 (void);  ; SReal * getD (void);  ; bool useInitialGuess (void);  ; unsigned int getDim (void);  ; unsigned int setDim (unsigned int nbC);  ; unsigned int getMaxConst (void);  ; void setNumItMax (int input_numItMax);  ; void setTol (SReal input_tol);  ; void setLCP (unsigned int input_dim, SReal *input_dfree, SReal **input_W, SReal *input_f, SReal &input_mu, SReal &input_tol, int input_numItMax);  ; void solveNLCP (bool convergenceTest, std::vector< SReal > *residuals=nullptr, std::vector< SReal > *violations=nullptr);  . Attribute details. ◆ error. SReal sofa::helper::LCP::error. ◆ it. int sofa::helper::LCP::it. Constructor details. ◆ LCP(). sofa::helper::LCP::LCP ; (; ). ◆ ~LCP(). sofa::helper::LCP::~LCP ; (; ). Function details. ◆ allocate(). void sofa::helper::LCP::allocate ; (; unsigned int ; maxConst). ◆ getD(). SReal* sofa::helper::LCP::getD ; (; void ; ). inline . ◆ getDfree(). SReal* sofa::helper::LCP::getDfree ; (; void ; ). inline . ◆ getDim(). unsigned int sofa::helper::LCP::getDim ; (; void ; ). inline . ◆ getF(). SReal* sofa::helper::LCP::getF ; (; void ; ). inline . ◆ getF_1(). SReal* sofa::helper::LCP::getF_1 ; (; void ; ). inline . ◆ getMaxConst(). unsigned int sofa::helper::LCP::getMaxConst ; (; void ; ). inline . ◆ getMaxIter(). SReal sofa::helper::LCP::getMaxIter ; (; void ; ). inline . ◆ getMu(). SReal& sofa::helper::LCP::getMu ; (; void ; ). inline . ◆ getTolerance(). SReal sofa::helper::LCP::getTolerance ; (; void ; ). inline . ◆ getW(). SReal** sofa::helper::LCP::getW ; (; void ; ). inline . ◆ reset(). void sofa::helper::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html:1165,error,error,1165,api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html,1,['error'],['error']
Availability,"r internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:6941,recover,recover,6941,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,2,['recover'],['recover']
Availability,r. /6; ; SOFA - Topic: [SOLVED] Properties of MeshGmshLoader. SOFA - Topic: [SOLVED] Properties of MeshGmshLoader. /proper-way-of-removing-points-in-a-topological-mapping; ; SOFA - Topic: [SOLVED] Proper way of removing points in a Topological Mapping. /putting-an-object-inside-another-one; ; SOFA - Topic: [SOLVED] Putting an object inside another one. /putting-histogram-on-view; . /page; . /3; ; SOFA - Topic: [SOLVED] putting histogram on view. /5; ; SOFA - Topic: [SOLVED] putting histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:371144,error,error-with-gil,371144,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],"['error', 'error-with-gil']"
Availability,"r.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::addQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order, . Qu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:1480,avail,available,1480,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['avail'],['available']
Availability,"r; . /feed; ; [SOLVED] Boost error – SOFA. SOFA - Topic: [SOLVED] Boost error. /bounding-boxes-in-sofa; . /feed; ; [SOLVED] Bounding Boxes in SOFA – SOFA. SOFA - Topic: [SOLVED] Bounding Boxes in SOFA. /boxroi-doupdate; . /feed; ; [SOLVED] BoxROI doUpdate – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. /12; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. /3; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. SOFA - Topic: [SOLVED] BoxROI doUpdate. /boxroi-in-cpp; ; SOFA - Topic: [SOLVED] BoxROI in cpp. /broadphase-narrow-phases-%EF%BC%8C-friction-contact-force; ; SOFA - Topic: broadphase , Narrow phases ， friction contact force?. /bubble-model-in-sofa; ; SOFA - Topic: [SOLVED] Bubble Model In SOFA. /bug-mismatch-between-image-plugin-obj-and-png-co-ordinate-systems; ; SOFA - Topic: Bug. Mismatch between image plugin .obj and .png co-ordinate systems. /bug-visualising-vtk-mesh-in-sofa; ; SOFA - Topic: [SOLVED] BUG-Visualising VTK Mesh in SOFA. /build-error-at-trianglemodel-h; ; SOFA - Topic: [SOLVED] build error at TriangleModel.h. /build-error-in-visual-studio-2008; . /feed; ; [SOLVED] Build Error in Visual Studio 2008 – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Build Error in Visual Studio 2008. /8; ; SOFA - Topic: [SOLVED] Build Error in Visual Studio 2008. SOFA - Topic: [SOLVED] Build Error in Visual Studio 2008. /build-error-in-visual-studio-2013; ; SOFA - Topic: [SOLVED] Build Error in Visual Studio 2013. /building_sofa; . /feed; ; [SOLVED] PairInteractionForceField.h not found – SOFA. SOFA - Topic: [SOLVED] PairInteractionForceField.h not found. /building-cuda-plugin-of-sofa-v18-06-using-vs2017-and-cuda_9-2-148_win10; ; SOFA - Topic: [SOLVED] Building CUDA plugin of SOFA v18.06 using VS2017 and cuda_9.2.148_win10. /building-errors-of-v15-12-on-vs2012-win7-32bits; . /feed; ; [SOLVED] Building errors of v15.12 on vs2012 win7-32bits – SOFA. SOFA - Topic: [SOLVED] Building errors of v15.12 on vs2012 win7-32bits. /building-errors-of-v15-12-on-vs2012-win7-64bits; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:263203,error,error-at-trianglemodel-h,263203,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],"['error', 'error-at-trianglemodel-h']"
Availability,"rCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ComplementaryROI, DataTypes), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  ComplementaryROI ();  ;  ~ComplementaryROI () override;  ; void doUpdate () override;  Update. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html:2706,down,down,2706,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html,1,['down'],['down']
Availability,"rGridSpringForceField< DataTypes >::getLinesDamping ; (; ); const. inline . ◆ getLinesStiffness(). template<class DataTypes > . Real sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::getLinesStiffness ; (; ); const. inline . ◆ getQuadsDamping(). template<class DataTypes > . Real sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::getQuadsDamping ; (; ); const. inline . ◆ getQuadsStiffness(). template<class DataTypes > . Real sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::getQuadsStiffness ; (; ); const. inline . ◆ getStiffness(). template<class DataTypes > . Real sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::getStiffness ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setCubesDamping(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::setCubesDamping ; (; Real ; val). inline . ◆ setCubesStiffness(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::setCubesStiffness ; (; Real ; val). inline . ◆ setDamping(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::setDamping ; (; Real ; val). inline . ◆ setLinesDamping(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::setLinesDamping ; (; Real ; val). inline . ◆ setLinesStiffness(). template<class DataTypes > . void sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >::setLinesStiffness ; (; Real ; val). i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html:32874,down,down,32874,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field.html,1,['down'],['down']
Availability,"rModel::OglCylinderModel ; (; ). protected . ◆ ~OglCylinderModel(). sofa::gl::component::rendering3d::OglCylinderModel::~OglCylinderModel ; (; ). overrideprotected . Function details. ◆ doDrawVisual(). void sofa::gl::component::rendering3d::OglCylinderModel::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ exportOBJ(). void sofa::gl::component::rendering3d::OglCylinderModel::exportOBJ ; (; std::string ; , . std::ostream * ; , . std::ostream * ; , . Index & ; , . Index & ; , . Index & ; , . int & ;  . ). overridevirtual . Append this mesh to an OBJ format stream. ; The number of vertices position, normal, and texture coordinates already written is given as parameters. This method should update them. ; Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::gl::component::rendering3d::OglCylinderModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ insertInNode(). bool sofa::gl::component::rendering3d::OglCylinderModel::insertInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::visual::VisualModel. ◆ removeInNode(). bool sofa::gl::component::rendering3d::OglCylinderModel::removeInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::visual::VisualModel. ◆ SOFA_CLASS2(). sofa::gl::component::rendering3d::OglCylinderModel::SOFA_CLASS2 ; (; OglCylinderModel ; , . core::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:19400,down,down,19400,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['down'],['down']
Availability,"rams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const core::behavior::MechanicalState< DataTypes > * getMechanicalState () const;  ; const VecCoord & getX () const;  ; const sofa::core::topology::BaseMeshTopology::SeqTriangles & getTriangles () const;  ; const VecDeriv & getNormals () const;  ; int getTriangleFlags (sofa::core::topology::BaseMeshTopology::TriangleID i);  ; Deriv velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; Collisio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:7773,avail,available,7773,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,3,['avail'],['available']
Availability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; Parameters Setters; virtual void setDt (SReal);  Simulation timestep. More...;  ; virtual void setAnimate (bool);  Animation flag. More...;  ; virtual void setSleeping (bool);  Sleeping state of the context. More...;  ; virtual void setChangeSleepingState (bool);  Sleeping state change of the context. More...;  ; Variables Setters; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; Adding/Removing objects. Note that these methods can fail if the context doesn't support attached objects; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:7746,down,down,7746,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['down'],['down']
Availability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void executeVisitor (simulation::Visitor *, bool precomputedOrder=false);  apply an action More...;  ; virtual void propagateEvent (const core::ExecParams *params, Event *);  Propagate an event. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:8842,down,down,8842,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['down'],['down']
Availability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Static Public Member Functions; static const std::string Ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:22997,down,down,22997,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['down'],['down']
Availability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Static Public Member Functions; template<class RealObject >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:26388,down,down,26388,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['down'],['down']
Availability,"rationFactor() [1/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. overridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor() [2/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative, . SReal ; dt . ); const. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::EulerImplicitSolver::getVelocityIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ init(). void sofa::component::odesolver::backward::EulerImplicitSolver::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS2(). sofa::component::odesolver::backward::EulerImplicitSolver::SOFA_CLASS2 ; (; EulerImplicitSolver ; , . sofa::core::behavior::OdeSolver ; , . sofa::core::behavior::LinearSolverAccessor ;  . ). ◆ solve(). void sofa::component::odesolver::backward::EulerImplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverbackwardEulerImplicitSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:22741,down,down,22741,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['down'],['down']
Availability,"rceFilePos {-1};  . Protected Attributes; PLANE internalPlane;  Pre-computed points used to draw the grid. More...;  ; sofa::type::vector< Vec3 > m_drawnPoints;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualGrid, VisualModel);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  VisualGrid ();  ;  ~VisualGrid () override=default;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateGrid ();  ; void buildGrid ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:3146,down,down,3146,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,1,['down'],['down']
Availability,"rchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:20805,down,down,20805,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['down'],['down']
Availability,"re...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DistanceMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void applyJ (const core::MechanicalParams *mparams, DataVecDeriv_t< Out > &out, const DataVecDeriv_t< In > &in) final;  ; void applyJT (const core::MechanicalParams *mparams, DataVecDeriv_t< In > &out, const DataVecDeriv_t< Out > &in) final;  ; void applyJT (const core::ConstraintParams *cparams, DataMatrixDeriv_t< In > &out, const DataMatrixDeriv_t< Out > &in) final;  ; void applyDJT (const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) final;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; const linearalgebra::BaseMatrix * getK () final;  ; const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; void updateK (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:6539,down,down,6539,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,1,['down'],['down']
Availability,"re...;  ; SOFA_COMPONENT_MASS_API void loadRigidMass (const string &filename);  ; SOFA_COMPONENT_MASS_API void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_MASS_API void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_MASS_API SReal getPotentialEnergy (const MechanicalParams *params, const DataVecCoord &d_x) const;  ; SOFA_COMPONENT_MASS_API SReal getPotentialEnergy (const MechanicalParams *params, const DataVecCoord &vx) const;  ; SOFA_COMPONENT_MASS_API void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_MASS_API void addMDxToVector (linearalgebra::BaseVector *resVect, const VecDeriv *dx, SReal mFact, unsigned int &offset);  ; SOFA_COMPONENT_MASS_API Vec6 getMomentum (const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) const;  ; SOFA_COMPONENT_MASS_API Vec6 getMomentum (const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) const;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void loadRigidMass (const std::string &);  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &x) const;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; Read and write access functions in mass information; void setMass (const MassType &d_vertexMass);  ; const MassTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:7537,down,down,7537,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['down'],['down']
Availability,"re...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual bool removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttrib",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:3202,error,errors,3202,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['error'],['errors']
Availability,"re::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ getAnimate(). bool sofa::core::objectmodel::BaseContext::getAnimate ; (; ); const. virtual . Animation flag. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getDefault(). BaseContext * sofa::core::objectmodel::BaseContext::getDefault ; (; ). static . Get the default Context object, that contains the default values for all parameters and can be used when no loc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:22462,down,down,22462,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['down'],['down']
Availability,"recatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html:22952,mask,maskInUse,22952,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,1,['mask'],['maskInUse']
Availability,"relasticityFEMForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getPhi(). template<class DataTypes > . Mat< 3, 3, SReal > sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::getPhi ; (; int ; tetrahedronIndex). ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ instantiateMaterial(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::instantiateMaterial. protected . ◆ setdirection(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::setdirection ; (; const SetAnisotropyDirectionArray & ; direction). ◆ setMaterialName(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::setMaterialName ; (; std::string ; materialName). ◆ setparameter(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::setparameter ; (; const SetParameterArray & ; param). ◆ SOFA_CLASS(). template<class DataTypes > . sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html:30216,down,down,30216,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,1,['down'],['down']
Availability,"res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:23810,mask,maskInUse,23810,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,2,['mask'],['maskInUse']
Availability,"resTabis the result vector that contains the constraint resolution algorithms . Reimplemented from sofa::core::behavior::BaseConstraint. ◆ getConstraintViolation(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::getConstraintViolation ; (; const core::ConstraintParams * ; cParams, . linearalgebra::BaseVector * ; resV, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Construct the Constraint violations vector of each constraint; Parameters. resVis the result vector that contains the whole constraints violations ; xis the position vector used to compute constraint position violation ; vis the velocity vector used to compute constraint velocity violation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::Constraint< DataTypes >. ◆ getStopperIdentifiers(). template<class DataTypes > . virtual type::vector<std::string> sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::getStopperIdentifiers ; (; ). inlineprotectedvirtual . ◆ init(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::Constraint< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(StopperLagrangianConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::Constraint, DataTypes) ;  . ). sofacomponentconstraintlagrangianmodelStopperLagrangianConstraint; Generated on Mon Nov 11 2024 02:36:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html:24358,down,down,24358,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,1,['down'],['down']
Availability,"response::contact::CollisionResponsevirtual; createNewContacts(const DetectionOutputMap &outputsMap, Size &nbContact)sofa::component::collision::response::contact::CollisionResponseprotected; createVariableData(std::string variable)sofa::component::collision::response::contact::RuleBasedContactManager; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_responsesofa::component::collision::response::contact::CollisionResponse; d_responseParamssofa::component::collision::response::contact::CollisionResponse; d_rulessofa::component::collision::response::contact::RuleBasedContactManager; d_variablessofa::component::collision::response::contact::RuleBasedContactManager; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::response::contact::CollisionResponsevirtual; errorMsgCountsofa::component::collision::response::contact::CollisionResponseprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:4426,error,errorMsgCountsofa,4426,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['error'],['errorMsgCountsofa']
Availability,"result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:5346,down,down,5346,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['down'],['down']
Availability,"rformance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compile Fail – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /8; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /physics-slow-down-at-large-youngs-modulus; . /feed; ; [SOLVED] Physics slow down at large Young’s modulus – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /3; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /plugin-creation; ; SOFA - Topic: [SOLVED] plugin creation. /plugin-creation-cmake-error; . /feed; ; [SOLVED] Plugin creation CMake error – SOFA. SOFA - Topic: [SOLVED] Plugin creation CMake error. /plugin-loading-failed; ; SOFA - Topic: [SOLVED] Plugin Loading failed. /plugin-loading-failed-2; ; SOFA - Topic: [SOLVED] Plugin loading failed. /plugin-not-found-pluginexample; ; SOFA - Topic: [SOLVED] Plugin not found: ""PluginExample"". /plugin-not-loaded-after-setting-path; ; SOFA - Topic: [SOLVED] Plugin not loaded after setting path. /pneumatic-actuator-soft-robots-plugin; ; SOFA - Topic: [SOLVED] Pneumatic actuator – Soft Robots plugin. /pneumatic-actuator-using-surfacepressureconstraint; ; SOFA - Topic: Pneumatic Actuator using SurfacePressureConstraint. /point-sets-in-registration-examples; ; SOFA - Topic: point sets in Registration examples. /precomputedconstraintcorrection; ; SOFA - Topic: PrecomputedConstraintCorrection. /precomputedconstraintcorrection-issue; ; SOFA - Topic: [SOLVED] PrecomputedConstraintCorrection issue. /preconditioner-for-an-iterative-solver; ; SOFA - Topic: [SOLVED] Precondi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:362088,error,error,362088,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"ributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Constructor details. ◆ NodeElement(). sofa::simulation::xml::NodeElement::NodeElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; parent = nullptr . ). ◆ ~NodeElement(). sofa::simulation::xml::NodeElement::~NodeElement ; (; ). override . Function details. ◆ getClass(). const char * sofa::simulation::xml::NodeElement::getClass ; (; ); const. overridevirtual . Get the node class (Scene, Mapping, ...) ; Implements sofa::simulation::xml::BaseElement. ◆ init(). bool sofa::simulation::xml::NodeElement::init ; (; void ; ). overridevirtual . Reimplemented from sofa::simulation::xml::BaseElement. ◆ initNode(). bool sofa::simulation::xml::NodeElement::initNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html:5520,error,errors,5520,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,1,['error'],['errors']
Availability,"ride;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:1419,avail,available,1419,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['avail'],['available']
Availability,"ring & ; pluginName); const. ◆ loadPlugin(). auto sofa::helper::system::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathTh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7222,error,error,7222,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['error'],['error']
Availability,"ring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ l_linearSolver. SingleLink<LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK> sofa::core::behavior::LinearSolverAccessor::l_linearSolver. protected . Constructor details. ◆ LinearSolverAccessor(). sofa::core::behavior::LinearSolverAccessor::LinearSolverAccessor ; (; LinearSolver * ; linearSolver = nullptr). explicitprotected . Function details. ◆ init(). void sofa::core::behavior::LinearSolverAccessor::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. sofacorebehaviorLinearSolverAccessor; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html:13494,down,down,13494,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,1,['down'],['down']
Availability,"ring top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addComplianceInConstraintSpace (const sofa::core::ConstraintParams *cparams, sofa::linearalgebra::BaseMatrix *W) override;  ; void getComplianceMatrix (linearalgebra::BaseMatrix *) const override;  Fill the matrix m with the full Compliance Matrix. More...;  ; void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *Wmerged, std::vector< int > &constraint_merge) override;  For multigrid approach => constraints are merged. More...;  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void getComplianceMatrix (linearalgebra::BaseMatrix *m) const;  Fill the matrix m with the full Compliance Matrix. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void getComplianceMatrix (sofa::linearalgebra::BaseMatrix *) const;  Fill the matrix m with the full Compliance Matrix. More...;  ; Correction API; void computeMotionCorrection (const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) override;  Compute the corrective motion coming from the motion space force. More...;  ; void applyMotionCorrection (const sofa::core::ConstraintParams *cparams, Data< VecCoord > &x, Data< VecDeriv > &v, Data< VecDeriv > &dx, const Data< VecDeriv > &correction) override;  ; void applyPositionCorrection (const sofa::core::ConstraintParams *cparams, Data< VecCoord > &x, Data< VecDeriv > &dx, const Data< VecDeriv > &correction) override;  ; void applyVelocityCorrection (const sofa::core::ConstraintParams *cparams, Data< VecDeriv > &v, Data< VecDeriv > &dv, const Data< VecDeriv > &correction) override;  ; Deprecated API; void applyContactForce (const linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:5504,down,down,5504,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['down'],['down']
Availability,"ription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:8977,down,down,8977,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['down'],['down']
Availability,"rited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::AttributeElement; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html:1618,error,errorssofa,1618,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html,1,['error'],['errorssofa']
Availability,"rnalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BilateralLagrangianConstraint, DataTypes), SOFA_TEMPLATE(PairInteractionConstraint, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void buildConstraintMatrix (const ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) override;  ; void getConstraintViolation (const ConstraintParams *cParams, BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getVelocityViolation (BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2);  ; void getConstraintResolution (const ConstraintParams *cParams, std::vector< ConstraintResolution",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:3978,down,down,3978,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['down'],['down']
Availability,roblem-about-a-grasping-scene; . /feed; ; [SOLVED] Problem about a grasping scene – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Problem about a grasping scene. /15; ; SOFA - Topic: [SOLVED] Problem about a grasping scene. /4; ; SOFA - Topic: [SOLVED] Problem about a grasping scene. SOFA - Topic: [SOLVED] Problem about a grasping scene. /problem-about-geomagic-plugin-in-v18-12; ; SOFA - Topic: problem about Geomagic Plugin in v18.12. /problem-adding-uncoupledconstraintcorrection; ; SOFA - Topic: [SOLVED] Problem adding UncoupledConstraintCorrection. /problem-compiling-sofa-v16-08; ; SOFA - Topic: [SOLVED] Problem compiling Sofa v16.08. /problem-compiling-sofa-with-python3; ; SOFA - Topic: Problem Compiling SOFA with Python3. /problem-compiling-sofa-with-python3-2; ; SOFA - Topic: Problem Compiling SOFA with Python3. /problem-configuring-sofa-with-eigen3; ; SOFA - Topic: [SOLVED] Problem configuring SOFA with Eigen3. /problem-downloading-the-source-files-from-git-repositary; ; SOFA - Topic: [SOLVED] Problem downloading the source files from git repositary. /problem-for-beam-mass-simulation; ; SOFA - Topic: Problem for beam-mass simulation. /problem-in-generating-cmake-gui-when-building-sofa; ; SOFA - Topic: [SOLVED] Problem in generating Cmake-gui when building Sofa. /problem-in-installing-cmake; ; SOFA - Topic: [SOLVED] Problem in installing Cmake. /problem-in-installing-stlib; . /feed; ; [SOLVED] Problem in installing STlib – SOFA. SOFA - Topic: [SOLVED] Problem in installing STlib. /problem-in-running-new-version-of-sofa-20-12; ; SOFA - Topic: Problem in running new version of Sofa 20.12. /problem-of-the-variables-control-of-legged-robot-with-flexible-passive-trunk; ; SOFA - Topic: Problem of the Variables Control of Legged Robot with Flexible Passive Trunk. /problems-applying-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Problems applying SofaCUDA plugin. /problems-at-lauching-runsofa; ; SOFA - Topic: [SOLVED] Problems at lauching runSofa. /problems-finding-collision,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:364275,down,downloading-the-source-files-from-git-repositary,364275,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['down'],"['downloading', 'downloading-the-source-files-from-git-repositary']"
Availability,"roblem::~GenericConstraintProblem ; (; ). inlineoverride . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::clear ; (; int ; nbConstraints). overridevirtual . Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintProblem. ◆ freeConstraintResolutions(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::freeConstraintResolutions ; (; ). ◆ gaussSeidel(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel method building the compliance matrix. . ◆ gaussSeidel_increment(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel_increment ; (; bool ; measureError, . SReal * ; dfree, . SReal * ; force, . SReal ** ; w, . SReal ; tol, . SReal * ; d, . int ; dim, . bool & ; constraintsAreVerified, . SReal & ; error, . sofa::type::vector< SReal > & ; tabErrors . ); const. ◆ getNumConstraintGroups(). int sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::getNumConstraintGroups ; (; ). ◆ getNumConstraints(). int sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::getNumConstraints ; (; ). ◆ NNCG(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::NNCG ; (; GenericConstraintSolver * ; solver = nullptr, . int ; iterationNewton = 1 . ). Method from: A nonsmooth nonlinear conjugate gradient method for interactive contact force problems; 2010, Silcowitz, Morten and Niebe, Sarah and Erleben, Kenny . ◆ result_output(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::result_output ; (; GenericConstraintSolver * ; solver, . SReal * ; force, . SReal ; error, . int ; iterCount, . bool ; convergence . ). ◆ solveTimed(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProble",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:6292,error,error,6292,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['error'],['error']
Availability,"rom sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/2]. template<class DataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type & ; x . ). protected . ◆ interpolatePosition() [2/2]. template<class DataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_if<!std::is_same< MyCoord, defaulttype::Ri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:28368,down,down,28368,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['down'],['down']
Availability,"rom sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:5830,down,down,5830,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['down'],['down']
Availability,ror:Building Sofa 20.06 version to add SoftRobot plugin. /error-building-sofa-constraintresolution-h-not-found; ; SOFA - Topic: [SOLVED] Error building SOFA : ConstraintResolution.h not found. /error-building-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Error building SofaCUDA Plugin. /error-building-sofa-v-17-12-on-windows-10-in-qt-ide; ; SOFA - Topic: Error Building SOFA V.17.12 on windows 10 in Qt IDE. /error-building-sofa-with-cuda-plugin; ; SOFA - Topic: [SOLVED] Error Building SOFA with CUDA Plugin. /error-compiling-with-cuda-plugin; ; SOFA - Topic: Error compiling with CUDA plugin. /error-configure-sofa-in-cmake-gui-about-lpthreads; . /page; . /2; ; SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. /error-configuring-cmake-sofarosconnector; ; SOFA - Topic: Error configuring (cmake) SofaROSConnector. /error-const-type-const-idmap-without-a-user-provided-default-constructor; ; SOFA - Topic: [SOLVED] error: const type ‘const IdMap’ without a user-provided default constructor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-ubuntu; ; SOFA - Topic: [SOLVED] Error in Building Sofa 20.06 version on Ubuntu. /error-in-building-sofa-using-cmake; . /feed; ; [SOLVED] Error in building SOFA using cmake – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /4; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /5; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /error-in-compiling-softrobots-plugin-cableconstraint-in-sofa-21-06-version; ; SOFA - Topic: Error in ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:293321,error,error-const-type-const-idmap-without-a-user-provided-default-constructor,293321,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],"['error', 'error-const-type-const-idmap-without-a-user-provided-default-constructor']"
Availability,"rotected . Constructor details. ◆ CollisionResponse(). sofa::component::collision::response::contact::CollisionResponse::CollisionResponse ; (; ). protected . ◆ ~CollisionResponse(). sofa::component::collision::response::contact::CollisionResponse::~CollisionResponse ; (; ). overrideprotecteddefault . Function details. ◆ changeInstance(). void sofa::component::collision::response::contact::CollisionResponse::changeInstance ; (; Instance ; inst). overrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ cleanup(). void sofa::component::collision::response::contact::CollisionResponse::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ contactCreationError(). void sofa::component::collision::response::contact::CollisionResponse::contactCreationError ; (; std::stringstream & ; errorStream, . const core::CollisionModel * ; model1, . const core::CollisionModel * ; model2, . std::string & ; responseUsed . ). protected . Write messages in stringstream in case a contact failed to be created. . ◆ create(). template<class T > . static T::SPtr sofa::component::collision::response::contact::CollisionResponse::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . ◆ createContacts(). void sofa::component::collision::response::contact::CollisionResponse::createContacts ; (; const DetectionOutputMap & ; outputs). overridevirtual . outputsVec fixes the reproducibility problems by storing contacts in the collision detection saved order if not given, it is still working but with eventual reproducibility problems ; Implements sofa::core::collision::ContactManager. ◆ createNewContacts(). void sofa::component::collision::response::contact::Col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:18713,error,errorStream,18713,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['error'],['errorStream']
Availability,"rotected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addPoint (unsigned index);  methods to add/remove some indices, keyTimes, keyForces More...;  ; void removePoint (unsigned int index);  ; void clearPoints ();  ; void addKeyForce (Real time, Deriv force);  ; void clearKeyForces ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  Add the forces. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &, const DataVecDeriv &) override;  Compute the force derivative. More...;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:4363,down,down,4363,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['down'],['down']
Availability,"rpreter with SofaPython3 plugin. /error-while-building-sofa-for-softrobots-plugin-installation; ; SOFA - Topic: Error while building Sofa for SoftRobots plugin installation. /error-while-building-sofa-on-windows-7-qglviewerqt-conflict; ; SOFA - Topic: [SOLVED] Error while building SOFA on Windows 7, QGLViewer/Qt conflict. /error-while-buildin-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while building SOFA in Linux. /error-while-build-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while build SOFA in Linux. /error-while-compiling-sofa-in-mac-os-yosemitegl-shader-support-requires-glew; ; SOFA - Topic: [SOLVED] Error while compiling SOFA in Mac OS Yosemite:""GL Shader support requires GLEW."". /error-while-compiling-sofa-v2012-with-sofapython-3; ; SOFA - Topic: Error while compiling SOFA v2012 with Sofapython 3. /error-while-compiling-softrobots-and-stilib-plugin; ; SOFA - Topic: [SOLVED] Error while compiling Softrobots and STILIB plugin. /error-while-sofapython3-installation; ; SOFA - Topic: [SOLVED] Error while SofaPython3 installation. /error-while-use-sofa-c-template-in-tutorial; ; SOFA - Topic: Error while use Sofa c++ template in tutorial. /error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile; ; SOFA - Topic: [SOLVED] Error with CImg: plugin with dependency to skeleton.h does not compile. /error-with-global-bounding-box; . /feed; ; [SOLVED] Error with global bounding box – SOFA. SOFA - Topic: [SOLVED] Error with global bounding box. /error-with-plugin-flexible; ; SOFA - Topic: [SOLVED] Error with plugin Flexible. /error-with-plugins-with-sofarosconnector; ; SOFA - Topic: Error with plugins with ""SofaROSConnector"". /error-with-test-scene-required-plugins-error; ; SOFA - Topic: [SOLVED] Error with test scene, Required plugins error. /error-with-tetrahedraltensormassforcefield; ; SOFA - Topic: [SOLVED] error with TetrahedralTensorMassForceField. /estimate-pressure; ; SOFA - Topic: [SOLVED] Estimate Pressure. /estimating-external-force-on-a-vertex; ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:298782,error,error-while-,298782,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-while-']
Availability,"rray <unsigned int,3> > > sofa::component::playback::ReadTopology::triangles. Constructor details. ◆ ReadTopology(). sofa::component::playback::ReadTopology::ReadTopology ; (; ). protected . ◆ ~ReadTopology(). sofa::component::playback::ReadTopology::~ReadTopology ; (; ). overrideprotected . Function details. ◆ canCreate(). template<class T > . static bool sofa::component::playback::ReadTopology::canCreate ; (; T * ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ handleEvent(). void sofa::component::playback::ReadTopology::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::playback::ReadTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ processReadTopology() [1/2]. void sofa::component::playback::ReadTopology::processReadTopology ; (; ). ◆ processReadTopology() [2/2]. void sofa::component::playback::ReadTopology::processReadTopology ; (; double ; time). ◆ readNext(). bool sofa::component::playback::ReadTopology::readNext ; (; double ; time, . std::vector< std::string > & ; lines . ). Read the next values in the file corresponding to the last timestep before the given time. . ◆ reset(). void sofa::component::playback::ReadTopology::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setTime(). void sofa::component::playback::ReadTopology::setTime ; (; double ; time). ◆ SOFA_CLASS(). sofa::component::playback::ReadTopology::SOFA_CLASS ; (; ReadTopology ; , . core::objectmodel::BaseObject ;  . ). sofacomponentplaybackReadTopology; Generated on Mon Nov 1",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:17862,down,down,17862,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['down'],['down']
Availability,"rride;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:6636,recover,recover,6636,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['recover'],['recover']
Availability,"rtexIndexInQuad ; (; const Quad & ; t, . PointID ; vertexIndex . ); const. override . Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. ; Parameters. Refto a quad. ; Idof a vertex. . Returnsthe position of this vertex in the quad (i.e. either 0, 1, 2, 3). . -1 if none. . ◆ hasEdgesInQuad(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::hasEdgesInQuad ; (; ); const. ◆ hasQuads(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::hasQuads ; (; ); const. ◆ hasQuadsAroundEdge(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::hasQuadsAroundEdge ; (; ); const. ◆ hasQuadsAroundVertex(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::hasQuadsAroundVertex ; (; ); const. ◆ init(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ initTopology(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::initTopology ; (; ). Dynamic Topology API; Method called by component Init method. Will create all the topology neighborhood buffers and call See alsoEdgeSetTopologyContainer::initTopology() . ◆ isQuadTopologyDirty(). const bool& sofa::component::topology::container::dynamic::QuadSetTopologyContainer::isQuadTopologyDirty ; (; ). inlineprotected . ◆ linkTopologyHandlerToData(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::linkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). overridevirtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented from sofa::component::topology::cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:50099,down,down,50099,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['down'],['down']
Availability,"s . Public Attributes; Data< bool > d_createTriangleArray;  force the creation of triangles More...;  ; Data< sofa::type::vector< Tetrahedron > > d_tetrahedron;  provides the set of tetrahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_mess",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:1735,down,down,1735,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['down'],['down']
Availability,"s >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [3/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [4/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [5/5]. template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initFromMassDensity(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromMassDensity. virtual . ◆ initFromTotalMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromTotalMass. virtual . ◆ initFromVertexMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromVertexMass. virtual . ◆ initTopologyHandlers(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initTopologyHandlers. protected . ◆ isDiagonal(). template<class DataTypes , class GeometricalTypes = DataTypes> . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::isDiagonal ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:48288,down,down,48288,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['down'],['down']
Availability,"s for sofa::simulation::xml::ObjectElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html:1482,error,errorssofa,1482,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,1,['error'],['errorssofa']
Availability,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9517,avail,available,9517,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['avail'],['available']
Availability,"s i.e. compute Vecid::force() += J^t lambda the result is accumulated in Vecid::force() ; Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getConstraintProblem(). ConstraintProblem * sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getConstraintProblem ; (; ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ getDx(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getDx ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getLambda(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getLambda ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ init(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ lockConstraintProblem(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::lockConstraintProblem ; (; sofa::core::objectmodel::BaseObject * ; from, . ConstraintProblem * ; p1, . ConstraintProblem * ; p2 = nullptr . ). overridevirtual . Do not use the following LCPs until the next call to this function. This is used to prevent concurrent access to the LCP when using a LCPForceFeedback through an haptic thread. ; Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ prepareStates(). bool sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::prepareStates ; (; const core::ConstraintParams * ; , . MultiVecId ; res1, . MultiVecId ; res2 = MultiVecId::null() . ). overridevirtual . Do the precomputation: compute free state, or propagate the states to the mapped mechanical stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:31262,down,down,31262,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['down'],['down']
Availability,"s inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedralFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedralFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void addMBKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:3760,down,down,3760,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,1,['down'],['down']
Availability,"s inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6365,error,errorFactorPotentialEnergy,6365,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['error'],['errorFactorPotentialEnergy']
Availability,"s must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆ d_scaleTolerance. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_scaleTolerance. Scale the error tolerance with the number of constraints. . ◆ d_schemeCorrection. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_schemeCorrection. Apply new scheme where compliance is progressively corrected. . ◆ d_sor. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_sor. Successive Over Relax",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:19889,error,errors,19889,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['error'],['errors']
Availability,"s) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ PipelineImpl(). sofa::simulation::PipelineImpl::PipelineImpl ; (; ). protected . ◆ ~PipelineImpl(). sofa::simulation::PipelineImpl::~PipelineImpl ; (; ). overrideprotected . Function details. ◆ computeCollisionDetection(). void sofa::simulation::PipelineImpl::computeCollisionDetection ; (; ). overridevirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ computeCollisionReset(). void sofa::simulation::PipelineImpl::computeCollisionReset ; (; ). overridevirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ computeCollisionResponse(). void sofa::simulation::PipelineImpl::computeCollisionResponse ; (; ). overridevirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::simulation::PipelineImpl::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reset(). void sofa::simulation::PipelineImpl::reset ; (; void ; ). overridevirtual . Reset to initial state. ; Implements sofa::core::collision::Pipeline. sofasimulationPipelineImpl; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:15752,down,down,15752,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['down'],['down']
Availability,s-connector; ; SOFA - Topic: SofaRos Connector. /sofa-scenes-not-displayed-correctly; ; SOFA - Topic: SOFA scenes not displayed correctly. /sofa-scene-with-imposed-displacements-and-von-mises-stress-computation-in-2d; ; SOFA - Topic: SOFA scene with imposed displacements and Von Mises stress computation in 2D. /sofa-stc3-raise-your-expectations; . /feed; ; SOFA STC#3 : raise your expectations! – SOFA. SOFA - Topic: SOFA STC#3 : raise your expectations!. /sofa-topology-modifier; ; SOFA - Topic: Sofa Topology Modifier. /sofa-training-session-june-2018; ; SOFA - Topic: SOFA training session – June 2018. /sofa-training-session-late-february-2018; ; SOFA - Topic: SOFA training session – late February 2018. /sofa-units; . /feed; ; [SOLVED] SOFA units – SOFA. SOFA - Topic: [SOLVED] SOFA units. /sofa-user-half-day; . /page; . /2; ; SOFA - Topic: SOFA User (half-)DAY. /7; ; SOFA - Topic: SOFA User (half-)DAY. SOFA - Topic: SOFA User (half-)DAY. /sofa-v12-16-crashes-with-error-gl_arb_multitexture-not-supported; ; SOFA - Topic: [SOLVED] Sofa v12.16 crashes with Error: GL_ARB_multitexture not supported. /sofa-v16-08-build-issue-on-wnidows-7; . /feed; ; [SOLVED] SOFA V16.08 Build Issue on Windows 7 – SOFA. SOFA - Topic: [SOLVED] SOFA V16.08 Build Issue on Windows 7. /sofa-v20-12-02-error-extension-pyscn-not-handled; ; SOFA - Topic: SOFA v20.12.02 Error : extension (pyscn) not handled. /sofa-version-github-cmake-v2-x-backward-compatibility; . /feed; ; [SOLVED] Sofa (version Github) CMake V2.x backward compatibility – SOFA. SOFA - Topic: [SOLVED] Sofa (version Github) CMake V2.x backward compatibility. /sofa-week-2019-registration-open; . /feed; ; SOFA Week 2019: registration open! – SOFA. SOFA - Topic: SOFA Week 2019: registration open!. /sofa-when-i-run-cmake; . /feed; ; [SOLVED] Does runSofa use Qt ? – SOFA. SOFA - Topic: [SOLVED] Does runSofa use Qt ?. /soft-beam-buckling-simulation-results; ; SOFA - Topic: Soft beam buckling simulation results. /soft-rigid-collision-detection,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:397143,error,error-,397143,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-']
Availability,s; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-mater,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:348687,error,error,348687,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"s;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Ini",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2526,down,down,2526,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,1,['down'],['down']
Availability,"s< DataTypes >::d_thicknessOut. Thickness of the extruded volume in the direction of the normals. . ◆ initialized. template<class DataTypes > . bool sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::initialized. Constructor details. ◆ ExtrudeEdgesAndGenerateQuads(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::ExtrudeEdgesAndGenerateQuads. protected . ◆ ~ExtrudeEdgesAndGenerateQuads(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::~ExtrudeEdgesAndGenerateQuads ; (; ). inlineoverrideprotected . Function details. ◆ checkInput(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::checkInput. protected . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateExtrudeEdgesAndGenerateQuads; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:20744,down,down,20744,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['down'],['down']
Availability,"s< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; Mat typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; MechanicalState typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; mstate1sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; mstate2sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; MyClass typedefsofa::core::objectmodel::Base; Nsofa::component::solidmechanics::spring::SpringForceField< DataTypes >static; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; PairInteractionForceField(MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >explicitprotected; PairStateAccessor(MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html:16973,mask,maskInUsesofa,16973,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs-members.html,1,['mask'],['maskInUsesofa']
Availability,sPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: rigif. /robots; . /feed; ; Robots – SOFA. SOFA - Topic Tag: Robots. /rotation; . /feed; ; rotation – SOFA. SOFA - Topic Tag: rotation. /rotation-node; . /feed; ; rotation node – SOFA. SOFA - Topic Tag: rotation node. /run-error; . /feed; ; run error – SOFA. SOFA - Topic Tag: run error. /run-python-scene; . /feed; ; run python scene – SOFA. SOFA - Topic Tag: run python scene. /runsofa; . /feed; ; runsofa – SOFA. SOFA - Topic Tag: runsofa. /runsofa-crushed; . /feed; ; runsofa crushed – SOFA. SOFA - Topic Tag: runsofa crushed. /runsofa-location; . /feed; ; runSofa location – SOFA. SOFA - Topic Tag: runSofa location. /runtime; . /feed; ; runtime – SOFA. SOFA - Topic Tag: runtime. /scene; . /feed; ; scene – SOFA. SOFA - Topic Tag: scene. /scene-file; . /feed; ; scene file – SOFA. SOFA - Topic Tag: scene file. /scenegraph-events-handleevent-engine; . /feed; ; scenegraph events handleEvent engine – SOFA. SOFA - Topic Tag: scenegraph events handleEvent engine. /scene-in-cpp; . /feed; ; scene in cpp – SOFA. SOFA - Topic Tag: scene in cpp. /scenes; . /feed; ; scenes – SOFA. SOFA - Topic Tag: scenes. /scene-xml-pose; . /feed; ; Scene; XML; Pose – SOFA. SOFA - Topic Tag: Scene; XML; Pose. /screenshot; . /feed; ; screenshot – SOFA. SOFA - Topic Tag: screenshot. /sc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:469265,error,error,469265,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"sating a finer sparse grid (used if setFinerSparseGrid has initialized _finerSparseGrid before calling init() ) More...;  ; void buildVirtualFinerLevels () override;  building eventual virtual finer levels (cf d_nbVirtualFinerLevels) More...;  ; void findConnexionsAtFinestLevel ();  find the connection graph between the finest hexahedra More...;  ; void buildRamifiedFinestLevel ();  Once the finest connectivity is computed, some nodes can be doubled. More...;  ; bool sharingTriangle (helper::io::Mesh *mesh, Index cubeIdx, Index neighborIdx, unsigned where);  do 2 neighbors cubes share triangles ? More...;  ; void printNeighborhood ();  debug printings More...;  ; void printNeighbors ();  ; void printNbConnexions ();  ; void printParents ();  ; void printHexaIdx ();  ; type::vector< type::vector< Connexion * > > * getConnexions ();  ;  Public Member Functions inherited from sofa::component::topology::container::grid::SparseGridTopology;  SOFA_CLASS (SparseGridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3i, sofa::type::Vec3i);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (BoundingBox, sofa::type::BoundingBox);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; int getNbVirtualFinerLevels () const;  ; void setNbVirtualFinerLevels (int n);  ; sofa::type::Vec< 3, int > getN () const;  Resolution. More...;  ; int getNx () const;  ; int getNy () const;  ; int getNz () const;  ; void setN (type::Vec3i _n);  ; void setNx (int _n);  ; void setNy (int _n);  ; void setNz (int _n);  ; void setMin (type::Vec3 val);  ; void setXmin (SReal val);  ; void setYmin (SReal val);  ; void setZmin (SReal val);  ; void setMax (type::Vec3 val);  ; void setXmax (SReal val);  ; void setYmax (SReal val);  ; void setZmax (SReal val);  ; type::Vec3 getMin ();  ; SReal getXmin ();  ; SReal getYmin ();  ; SReal getZmin ();  ; type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:10291,down,down,10291,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,2,['down'],['down']
Availability,"se; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_in1. template<class T > . Data<VecIndex> sofa::component::engine::generate::MergeSets< T >::f_in1. first set of indices . ◆ f_in2. template<class T > . Data<VecIndex> sofa::component::engine::generate::MergeSets< T >::f_in2. second set of indices . ◆ f_op. template<class T > . Data<std::string> sofa::component::engine::generate::MergeSets< T >::f_op. name of operation to compute (union, intersection, difference, symmetric_difference) . ◆ f_out. template<class T > . Data<VecIndex> sofa::component::engine::generate::MergeSets< T >::f_out. merged set of indices . Constructor details. ◆ MergeSets(). template<class T > . sofa::component::engine::generate::MergeSets< T >::MergeSets. protected . ◆ ~MergeSets(). template<class T > . sofa::component::engine::generate::MergeSets< T >::~MergeSets. overrideprotected . Function details. ◆ doUpdate(). template<class T > . void sofa::component::engine::generate::MergeSets< T >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class T > . void sofa::component::engine::generate::MergeSets< T >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class T > . void sofa::component::engine::generate::MergeSets< T >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class T > . sofa::component::engine::generate::MergeSets< T >::SOFA_CLASS ; (; SOFA_TEMPLATE(MergeSets< T >, T) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateMergeSets; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html:17617,down,down,17617,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,1,['down'],['down']
Availability,"seClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_distance. template<class DataTypes > . Data<Real> sofa::component::engine::generate::JoinPoints< DataTypes >::f_distance. Distance to merge points. . ◆ f_mergedPoints. template<class DataTypes > . Data<VecCoord > sofa::component::engine::generate::JoinPoints< DataTypes >::f_mergedPoints. Merged Points. . ◆ f_points. template<class DataTypes > . Data<VecCoord > sofa::component::engine::generate::JoinPoints< DataTypes >::f_points. Points. . Constructor details. ◆ JoinPoints(). template<class DataTypes > . sofa::component::engine::generate::JoinPoints< DataTypes >::JoinPoints. protected . ◆ ~JoinPoints(). template<class DataTypes > . sofa::component::engine::generate::JoinPoints< DataTypes >::~JoinPoints ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::JoinPoints< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::JoinPoints< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::JoinPoints< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::JoinPoints< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(JoinPoints< DataTypes >, DataTypes) ; , . sofa::core::DataEngine ;  . ). sofacomponentenginegenerateJoinPoints; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:17357,down,down,17357,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['down'],['down']
Availability,"seData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes1 > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< TDataTypes1 > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< TDataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< TDataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:16830,down,down,16830,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,2,['down'],['down']
Availability,"seObject. ◆ init() [1/5]. void sofa::component::mass::DiagonalMass< Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [2/5]. void sofa::component::mass::DiagonalMass< Rigid2Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [3/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [4/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [5/5]. template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initFromMassDensity(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromMassDensity. virtual . ◆ initFromTotalMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromTotalMass. virtual . ◆ initFromVertexMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::initFromVertexMass. virtual . ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:47938,down,down,47938,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['down'],['down']
Availability,"seObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ ConfigurationSetting(). sofa::core::objectmodel::ConfigurationSetting::ConfigurationSetting ; (; ). protected . Default constructor. . ◆ ~ConfigurationSetting(). sofa::core::objectmodel::ConfigurationSetting::~ConfigurationSetting ; (; ). overrideprotected . Function details. ◆ init(). void sofa::core::objectmodel::ConfigurationSetting::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ insertInNode(). bool sofa::core::objectmodel::ConfigurationSetting::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::objectmodel::ConfigurationSetting::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS ; (; ConfigurationSetting ; , . BaseObject ;  . ). sofacoreobjectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html:13466,down,down,13466,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,1,['down'],['down']
Availability,set. /changing-tetra-mesh-topology-collisions; . /feed; ; [SOLVED] changing tetra mesh topology + collisions – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /11; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /12; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /3; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /changing-the-position-of-a-mesh-in-python; ; SOFA - Topic: [SOLVED] Changing the position of a mesh in python. /changing-topology-during-runtime; ; SOFA - Topic: Changing topology during runtime. /choosing-what-parts-of-a-robot-to-be-elastic; ; SOFA - Topic: Choosing what parts of a robot to be elastic. /cimg-error-by-adding-flexible-plugin; ; SOFA - Topic: [SOLVED] CImg error by adding flexible plugin. /citing-sofa-framework; ; SOFA - Topic: Citing SOFA Framework. /clang-error-while-compiling-sofa; ; SOFA - Topic: [SOLVED] Clang error while compiling Sofa. /clarification-of-mapping-gui; ; SOFA - Topic: Clarification of mapping GUI. /clarify-feasibility-in-sofa-dry-fabric-handling; . /feed; ; [SOLVED] Clarify feasibility in SOFA – dry fabric handling – SOFA. SOFA - Topic: [SOLVED] Clarify feasibility in SOFA – dry fabric handling. /cloning_to_make_pull_request; ; SOFA - Topic: [SOLVED] cloning_to_make_pull_request. /cloth-on-a-table-with-collision-and-friction; ; SOFA - Topic: Cloth on a table with Collision and friction. /cmake-based-installer-for-sofa-framework; . /feed; ; CMake-based installer for SOFA framework – SOFA. /page; . /2; ; SOFA - Topic: CMake-based installer for SOFA framework. /5; ; SOFA - Topic: CMake-based installer for SOFA framework. SOFA - Topic: CMake-based installer for SOFA framework. /cmake-cant-find-boost-library; ; SOFA - Topic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:273567,error,error-while-compiling-sofa,273567,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],"['error', 'error-while-compiling-sofa']"
Availability,"sh tetrahedra . ◆ f_triangles. template<class DataTypes > . Data<SeqTriangles> sofa::component::engine::generate::GenerateSphere< DataTypes >::f_triangles. output triangular mesh . ◆ platonicSolid. template<class DataTypes > . PlatonicTriangulation sofa::component::engine::generate::GenerateSphere< DataTypes >::platonicSolid. the type of platonic solid used for the tessellation . Constructor details. ◆ GenerateSphere(). template<class DataTypes > . sofa::component::engine::generate::GenerateSphere< DataTypes >::GenerateSphere. ◆ ~GenerateSphere(). template<class DataTypes > . sofa::component::engine::generate::GenerateSphere< DataTypes >::~GenerateSphere ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::GenerateSphere< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::GenerateSphere< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::GenerateSphere< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::GenerateSphere< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(GenerateSphere< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). Enum details. ◆ PlatonicTriangulation. template<class DataTypes > . enum sofa::component::engine::generate::GenerateSphere::PlatonicTriangulation. EnumeratorTETRAHEDRON ; OCTAHEDRON ; ICOSAHEDRON . sofacomponentenginegenerateGenerateSphere; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html:21307,down,down,21307,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,1,['down'],['down']
Availability,"shTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const;  ; const Coord & getPointRestPosition (const PointID pointId) const;  ; sofa::core::State< DataTypes > * getDOF () const;  Returns the object where the DOFs are stored. More...;  ; flo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html:2422,down,down,2422,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,1,['down'],['down']
Availability,"signed int nextIteration;  ; double lastTime;  ; bool kineticEnergyThresholdReached;  ; double timeToTestEnergyIncrease;  ; double savedKineticEnergy;  ; bool firstExport;  ; bool periodicExport;  ; bool validInit;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:3849,down,down,3849,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['down'],['down']
Availability,"sion;  ; unsigned int problemId;  . Public Member Functions;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; virtual void clear (int nbConstraints);  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; virtual void solveTimed (SReal tolerance, int maxIt, SReal timeout)=0;  ; unsigned int getProblemId ();  . Attribute details. ◆ dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::dFree. ◆ dimension. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::dimension. protected . ◆ f. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::ConstraintProblem ; (; ). ◆ ~ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::ConstraintProblem::clear ; (; int ; nbConstraints). virtual . Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintProblem. ◆ getDfree(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDfree ; (; ). inline . ◆ getDimension(). int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDimension ; (; ). inline . ◆ getF(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getF ; (; ). i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:1770,toler,tolerance,1770,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,1,['toler'],['tolerance']
Availability,"sofa::component::collision::response::contact::BaseRayContact. ◆ getCollisionModels(). virtual std::pair< core::CollisionModel*, core::CollisionModel* > sofa::core::collision::Contact::getCollisionModels ; (; ). pure virtual . Get the pair of collision models which are in contact. ; Implemented in sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >, sofa::component::collision::response::contact::RayContact< CM2 >, sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >, sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >, and sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >. ◆ keepAlive(). virtual bool sofa::core::collision::Contact::keepAlive ; (; ). inlinevirtual . Return true if this contact should be kept alive, even if objects are no longer in collision. ; Reimplemented in sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >, and sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >. ◆ removeResponse(). virtual void sofa::core::collision::Contact::removeResponse ; (; ). pure virtual . Implemented in sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >, sofa::component::collision::response::contact::BaseRayContact, sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >, sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >, and sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >. ◆ setDetectionO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:16864,alive,alive,16864,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,1,['alive'],['alive']
Availability,"sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes > Class Template Reference . #include <BilateralLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >:. [legend]. Protected Attributes; std::vector< Deriv > dfree;  ; Quat< SReal > q;  ; std::vector< unsigned int > cid;  ; sofa::core::objectmodel::RenamedData< type::vector< Index > > m1;  ; sofa::core::objectmodel::RenamedData< type::vector< Index > > m2;  ; sofa::core::objectmodel::RenamedData< VecDeriv > restVector;  ; sofa::core::objectmodel::RenamedData< bool > keepOrientDiff;  ; DataSubsetIndices d_m1;  index of the constraint on the first model More...;  ; DataSubsetIndices d_m2;  index of the constraint on the second model More...;  ; Data< VecDeriv > d_restVector;  Relative position to maintain between attached points (optional) More...;  ; VecCoord initialDifference;  ; Data< double > d_numericalTolerance;  a real value specifying the tolerance during the constraint solving. (default=0.0001 More...;  ; Data< bool > d_activate;  control constraint activation (true by default) More...;  ; Data< bool > d_keepOrientDiff;  keep the initial difference in orientation (only for rigids) More...;  ; SingleLink< BilateralLagrangianConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology1;  Link to be set to the first topology container in order to support topological changes. More...;  ; SingleLink< BilateralLagrangianConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology2;  Link to be set to the second topology container in order to support topological changes. More...;  ; std::vector< Vec3d > prevForces;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:1349,toler,tolerance,1349,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['toler'],['tolerance']
Availability,"sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Static Protected Attributes; static const std::string PATH_TO_GENERATE_DEPTH_TEXTURE_VERTEX_SHADER = ""shaders/softShadows/VSM/generate_depth_texture.vert"";  ; static const std::string PATH_TO_GENERATE_DEPTH_TEXTURE_FRAGMENT_SHADER = ""shaders/softShadows/VSM/generate_depth_texture.frag"";  ; static const std::string PATH_TO_BLUR_TEXTURE_VERTEX_SHADER = ""shaders/softShadows/VSM/blur_texture.vert"";  ; static const std::string PATH_TO_BLUR_TEXTURE_FRAGMENT_SHADER = ""shaders/softShadows/VSM/blur_texture.frag"";  . Public Member Functions;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void drawLight (const core::visual::VisualParams *vparams);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; virtual void drawSource (const sofa::core::visual::VisualParams *)=0;  Draw the light source from an external point of view. More...;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void preDrawShadow (core::visual::VisualParams *vp);  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html:5023,down,down,5023,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,1,['down'],['down']
Availability,"solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::getMethod ; (; ). inline . Get/Set methods. . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; mparams, . const DataVecCoord & ; x . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getRotation(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::getRotation ; (; Transformation & ; R, . Index ; nodeIdx . ). ◆ getRotations(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::getRotations. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::initLarge ; (; int ; i, . Index & ; a, . Index & ; b, . Index & ; c . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::initSmall ; (; int ; i, . Index & ; a, . Index & ; b, . Index & ; c . ). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setMethod() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::Triangula",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:42818,down,down,42818,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['down'],['down']
Availability,"solver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::createMatrix ; (; ). protected . ◆ createPersistentVector(). template<class Matrix , class Vector > . Vector* sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::createPersistentVector ; (; ). protected . ◆ deleteMatrix(). template<class Matrix , class Vector > . static void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::deleteMatrix ; (; Matrix * ; v). staticprotected . ◆ deletePersistentVector(). template<class Matrix , class Vector > . static void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::deletePersistentVector ; (; Vector * ; v). staticprotected . ◆ doCheckLinearSystem(). template<class Matrix , class Vector > . template<class TLinearSystemType > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::doCheckLinearSystem. protected . Check if compatible linear systems are available in the current context. Otherwise, a linear system of type TLinearSystemType is created, with a warning to the user.; Template Parameters. TLinearSystemTypeType of linear system created if no linear system found in the current context. . ◆ executeVisitor() [1/2]. template<class Matrix , class Vector > . template<class T > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::executeVisitor ; (; T * ; v). inline . ◆ executeVisitor() [2/2]. template<class Matrix , class Vector > . template<class T > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::executeVisitor ; (; T ; v). inline . ◆ GetCustomTemplateName(). template<class Matrix , class Vector > . static std::string sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::GetCustomTemplateName ; (; ). inlinestatic . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters ins",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html:27520,avail,available,27520,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,1,['avail'],['available']
Availability,"splayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_axis. Data<std::string> sofa::component::visual::LineAxis::d_axis. Axis to draw. . ◆ d_draw. core::objectmodel::lifecycle::RemovedData sofa::component::visual::LineAxis::d_draw {this, ""v23.06"", ""23.12"", ""draw"", ""Use the 'enable' data field instead of 'draw'""}. ◆ d_size. Data<float> sofa::component::visual::LineAxis::d_size. Size of the squared grid. . ◆ d_thickness. Data<float> sofa::component::visual::LineAxis::d_thickness. Thickness of the lines in the grid. . ◆ m_drawX. bool sofa::component::visual::LineAxis::m_drawX. protected . ◆ m_drawY. bool sofa::component::visual::LineAxis::m_drawY. protected . ◆ m_drawZ. bool sofa::component::visual::LineAxis::m_drawZ. protected . Constructor details. ◆ LineAxis(). sofa::component::visual::LineAxis::LineAxis ; (; ). Function details. ◆ doDrawVisual(). void sofa::component::visual::LineAxis::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). void sofa::component::visual::LineAxis::doUpdateVisual ; (; const core::visual::VisualParams * ; ). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::component::visual::LineAxis::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::component::visual::LineAxis::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::visual::LineAxis::SOFA_CLASS ; (; LineAxis ; , . VisualModel ;  . ). ◆ updateLine(). void sofa::component::visual::LineAxis::updateLine ; (; ). sofacomponentvisualLineAxis; Generated on Mon Nov 11 2024 03:10:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:16674,down,down,16674,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,1,['down'],['down']
Availability,"ss DataTypes > . Data<bool> sofa::component::engine::analyze::ClusteringEngine< DataTypes >::d_useTopo. Use available topology to compute neighborhood. . ◆ input_filename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::engine::analyze::ClusteringEngine< DataTypes >::input_filename. import precomputed clusters . ◆ output_filename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::engine::analyze::ClusteringEngine< DataTypes >::output_filename. export clusters . Constructor details. ◆ ClusteringEngine(). template<class DataTypes > . sofa::component::engine::analyze::ClusteringEngine< DataTypes >::ClusteringEngine. ◆ ~ClusteringEngine(). template<class DataTypes > . sofa::component::engine::analyze::ClusteringEngine< DataTypes >::~ClusteringEngine ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::analyze::ClusteringEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::analyze::ClusteringEngine< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::analyze::ClusteringEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::analyze::ClusteringEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ClusteringEngine< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineanalyzeClusteringEngine; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:19794,down,down,19794,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,1,['down'],['down']
Availability,"ss T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bufCP1. bool sofa::component::animationloop::ConstraintAnimationLoop::bufCP1. protected . ◆ compTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iterati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:18927,error,error,18927,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"ss for storing point indices. Automatically manages topological changes on Point.Definition: TopologySubsetIndices.h:39. ◆ data. template<class DataTypes > . SpringForceFieldInternalData<DataTypes> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::data. protected . ◆ dfdx. template<class DataTypes > . sofa::type::vector<Mat> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::dfdx. protected . ◆ fileSprings. template<class DataTypes > . core::objectmodel::DataFileName sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::fileSprings. protected . ◆ m_gnuplotFileEnergy. template<class DataTypes > . std::ofstream* sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::m_gnuplotFileEnergy. protected . stream to export Potential Energy to gnuplot files . ◆ m_potentialEnergy. template<class DataTypes > . Real sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::m_potentialEnergy. protected . ◆ maskInUse. template<class DataTypes > . bool sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::maskInUse. protected . ◆ N. template<class DataTypes > . constexpr auto sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::N = DataTypes::spatial_dimensions. staticconstexpr . Constructor details. ◆ SpringForceField() [1/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForceField ; (; SReal ; _ks = 100.0, . SReal ; _kd = 5.0 . ). protected . ◆ SpringForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2, . SReal ; _ks = 100.0, . SReal ; _kd = 5.0 . ). protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:29928,mask,maskInUse,29928,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['mask'],['maskInUse']
Availability,"ss::TriangularTensorMassForceField< DataTypes >::getEdgeInfo ; (; ). inlineprotected . ◆ getLambda(). template<class DataTypes > . virtual Real sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::getLambda ; (; ); const. inlinevirtual . ◆ getMu(). template<class DataTypes > . virtual Real sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::getMu ; (; ); const. inlinevirtual . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. inlineoverridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setPoissonRatio(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::setPoissonRatio ; (; const Real ; ratio). inline . ◆ setYoungModulus(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::setYoungModulus ; (; const Real ; modulus). inline . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TriangularTensorMassForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ updateLameCoefficients(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::updateLameCoefficients. compute lambda and mu based on the Yo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html:28275,down,down,28275,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,1,['down'],['down']
Availability,"ssage::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::info ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ log(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::log ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2756,error,error,2756,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,1,['error'],['error']
Availability,ssing. /track-a-target-pointnode-on-a-volumetric-mesh; ; SOFA - Topic: [SOLVED] Track a target point/node on a volumetric mesh. /tracking-target-positions-inside-a-deforming-body; ; SOFA - Topic: Tracking target positions inside a deforming body. /tracking-target-positions-inside-a-deforming-body-2; ; SOFA - Topic: Tracking target positions inside a deforming body. /translating-include-object-to-sofapython3; ; SOFA - Topic: [SOLVED] Translating “include” object to SofaPython3. /translating-mechanical-objects-not-working-c; . /feed; ; [SOLVED] Translating mechanical objects (not working c++) – SOFA. SOFA - Topic: [SOLVED] Translating mechanical objects (not working c++). /translucent-objects-default-rendering-looking-bad; . /feed; ; [SOLVED] translucent objects + default rendering = looking bad – SOFA. SOFA - Topic: [SOLVED] translucent objects + default rendering = looking bad. /trianglemodel-h28488-error-no-match-for-operator; . /feed; ; [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’ – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /5; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /6; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /7; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /triangular-fem-methods; . /feed; ; [SOLVED] Triangular FEM Methods – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Triangular FEM Methods. /5; ; SOFA - Topic: [SOLVED] Triangular FEM Methods. SOFA - Topic: [SOLVED] Triangular FEM Methods. /turning-off-collisions-between-a-set-of-objects; . /feed; ; [SOLVED] Turning off collisions between a set of objects? – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /5; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. SOFA - To,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:408443,error,error,408443,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"ssureForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ handleEvent(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reset(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TaitSurfacePressureForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ storeResetState(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::storeResetState. overridevirtual . Save the initial state for later uses in reset() ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceFie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:36608,down,down,36608,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['down'],['down']
Availability,"st BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:4526,down,down,4526,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,1,['down'],['down']
Availability,"st sofa::type::vector< EdgeID > & ; edges, . sofa::type::vector< PointID > & ; new_points, . sofa::type::vector< PointID > & ; end_points, . bool & ; reachBorder . ). virtual . Duplicates the given edges. Only works if at least the first or last point is adjacent to a border. ; Returnstrue if the incision succeeded. . ◆ InciseAlongLinesList(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::InciseAlongLinesList ; (; const sofa::type::vector< sofa::type::Vec< 3, Real > > & ; input_points, . const sofa::type::vector< TriangleID > & ; input_triangles . ). Incises along the list of points (ind_edge,coord) intersected by the sequence of input segments (list of input points) and the triangular mesh. . ◆ init(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >. ◆ initPointAdded(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::initPointAdded ; (; PointID ; indice, . const core::topology::PointAncestorElem & ; ancestorElem, . const type::vector< VecCoord * > & ; coordVecs, . const type::vector< VecDeriv * > & ; derivVecs . ). overridevirtual . Process the added point initialization according to the topology and local coordinates. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ isDiagonalsIntersectionInQuad(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::isDiagonalsIntersectionInQuad ; (; const typename DataTypes::Coord ; triangle1[3], . const typename DataTypes::Coord ; tria",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:46693,down,down,46693,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,1,['down'],['down']
Availability,"st::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the sce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1708,error,errors,1708,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['error'],['errors']
Availability,"std::string & ; directoryPath, . std::vector< std::string > & ; outputFilenames . ). static . List the content of a directory. ; It pushes the filenames (not their absolute paths) in the vector provided in argument. WarningThe directory must exist. ; Returnstrue on error . ◆ listDirectory() [2/2]. bool sofa::helper::system::FileSystem::listDirectory ; (; const std::string & ; directoryPath, . std::vector< std::string > & ; outputFilenames, . const std::string & ; extension . ). static . List the files in a directory which match the given extension. ; It pushes the filenames (not their absolute paths) in the vector provided in argument. WarningThe directory must exist. ; Returnstrue on error . ◆ removeAll(). bool sofa::helper::system::FileSystem::removeAll ; (; const std::string & ; path). static . Remove a non-empty directory. (This function accepts relative paths) ; Returnstrue on error . ◆ removeDirectory(). bool sofa::helper::system::FileSystem::removeDirectory ; (; const std::string & ; path). static . Remove an empty directory. (This function accepts relative paths) ; Returnstrue on error . ◆ removeExtraBackSlashes(). std::string sofa::helper::system::FileSystem::removeExtraBackSlashes ; (; const std::string & ; path). static . Replace consecutive occurrences of '\' with a single '\'. . ◆ removeExtraSlashes(). std::string sofa::helper::system::FileSystem::removeExtraSlashes ; (; const std::string & ; path). static . Replace consecutive occurrences of '/' with a single '/'. . ◆ removeFile(). bool sofa::helper::system::FileSystem::removeFile ; (; const std::string & ; path). static . ◆ stripDirectory(). std::string sofa::helper::system::FileSystem::stripDirectory ; (; const std::string & ; path). static . Strip the directory components from a path. E.g. /a/b/c --> c. . Enum details. ◆ separator. enum sofa::helper::system::FileSystem::separator. EnumeratorSLASH ; BACKSLASH . sofahelpersystemFileSystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html:8585,error,error,8585,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,1,['error'],['error']
Availability,"stening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshTetraStuffing, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; int getEdgePoint2 (int p, int e);  ; int getEdgeSize2 (int e);  ; Point getEdgeDir (int e);  ; void addTetra (SeqTetrahedra &outT, SeqPoints &outP, int p1, int p2, int p3, int p4, int line=0);  ; void addFinalTetra (SeqTetrahedra &outT, SeqPoints &outP, int p1, int p2, int p3, int p4, bool flip=false, int line=0);  ; int getSplitPoint (int from, int to);  ; bool flipDiag (const SeqPoints &outP, int a, int b, int c, int d, int e=-1);  Should the diagonal of abcd should be bd instead of ac ? More...;  ; bool needFlip (int p1, int p2, int p3, int p4, int q1, int q2, int q3, int q4);  Is the two given vertices order flipped. More...;  ;  Public Member Functions inher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html:4288,down,down,4288,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,1,['down'],['down']
Availability,"ster;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CompareTopology, playback::ReadTopology);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processCompareTopology ();  Compute the total number of errors. More...;  ; unsigned int getTotalError ();  Return the total number of errors. More...;  ; const std::vector< unsigned int > & getErrors ();  Return the errors by containers. More...;  ;  Public Member Functions inherited from sofa::component::playback::ReadTopology;  SOFA_CLASS (ReadTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadTopology ();  ; void processReadTopology (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:2392,down,down,2392,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['down'],['down']
Availability,"sticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::RotationFinder, DataTypes));  ; Real getRestVolume ();  ; void getRotation (Mat33 &R, Index nodeIdx);  ; void getRotations (VecReal &vecR);  ; void getRotations (linearalgebra::BaseMatrix *rotations, int offset=0) override;  ; const type::vector< Mat33 > & getRotations () override;  ; void setComputeGlobalMatrix (bool val);  ; const Transformation & getActualTetraRotation (Index index);  ; const Transformation & getInitialTetraRotation (Index index);  ; const MaterialStiffness & getMaterialStiffness (TetrahedronID tetraId);  ; const StrainDisplacement & getStrainDisplacement (TetrahedronID tetraId);  ; const type::fixed_array< Coord, 4 > & getRotatedInitialElements (TetrahedronID tetraId);  ; void setMethod (std::string methodName);  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void reset () override;  Reset to initial state. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &x) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:10539,down,down,10539,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['down'],['down']
Availability,"straint::lagrangian::solver::ConstraintSolverImpl:. [legend]. Protected Attributes; MultiLink< ConstraintSolverImpl, core::behavior::BaseConstraintCorrection, BaseLink::FLAG_STOREPATH > l_constraintCorrections;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; virtual ConstraintProblem * getConstraintProblem ()=0;  ; virtual void lockConstraintProblem (sofa::core::objectmodel::BaseObject *from, ConstraintProblem *p1, ConstraintProblem *p2=nullptr)=0;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; virtual bool prepareStates (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool buildSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool solveSystem (const Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:1542,down,down,1542,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['down'],['down']
Availability,"subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TriangleModelInRegularGrid, TriangleCollisionModel< sofa::defaulttype::Vec3Types >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ;  Public Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  SOFA_CLASS (SOFA_TEMPLATE(TriangleCollisionModel, sofa::defaulttype::Vec3Types), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:3268,down,down,3268,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['down'],['down']
Availability,"t > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (InteractiveCamera, BaseCamera);  ;  Public Member Functions inherited from sofa::component::visual::BaseCamera;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec4, sofa::type::Vec4);  ;  BaseCamera ();  ;  ~BaseCamera () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void activate ();  ; void desactivate ();  ; bool isActivated ();  ; bool exportParametersInFile (const std::string &viewFilename);  ; bool importParametersFromFile (const std::string &viewFilename);  ; void translate (const type::Vec3 &t);  ; void translateLookAt (const type::Vec3 &t);  ; void rotate (const Quat &r);  ; void moveCamera (const type::Vec3 &p, const Quat &q);  ; void rotateCameraAroundPoint (Quat &rotation, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html:4847,down,down,4847,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,1,['down'],['down']
Availability,"t > multi_grid_levels;  ; sofa::core::objectmodel::RenamedData< int > merge_method;  ; sofa::core::objectmodel::RenamedData< int > merge_spatial_step;  ; sofa::core::objectmodel::RenamedData< int > merge_local_levels;  ; sofa::core::objectmodel::RenamedData< std::set< int > > constraintGroups;  ; sofa::core::objectmodel::RenamedData< std::map< std::string, sofa::type::vector< SReal > > > f_graph;  ; sofa::core::objectmodel::RenamedData< int > showLevels;  ; sofa::core::objectmodel::RenamedData< SReal > showCellWidth;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showTranslation;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showLevelTranslation;  ; Data< bool > d_displayDebug;  Display debug information. More...;  ; Data< bool > d_initial_guess;  activate LCP results history to improve its resolution performances. More...;  ; Data< bool > d_build_lcp;  LCP is not fully built to increase performance in some case. More...;  ; Data< SReal > d_tol;  residual error threshold for termination of the Gauss-Seidel algorithm More...;  ; Data< int > d_maxIt;  maximal number of iterations of the Gauss-Seidel algorithm More...;  ; Data< SReal > d_mu;  Friction coefficient. More...;  ; Data< SReal > d_minW;  If not zero, constraints whose self-compliance (i.e. the corresponding value on the diagonal of W) is smaller than this threshold will be ignored. More...;  ; Data< SReal > d_maxF;  If not zero, constraints whose response force becomes larger than this threshold will be ignored. More...;  ; Data< bool > d_multi_grid;  activate multi_grid resolution (NOT STABLE YET) More...;  ; Data< int > d_multi_grid_levels;  if multi_grid is active: how many levels to create (>=2) More...;  ; Data< int > d_merge_method;  if multi_grid is active: which method to use to merge constraints (0 = compliance-based, 1 = spatial coordinates) More...;  ; Data< int > d_merge_spatial_step;  if merge_method is 1: grid size reduction between multigrid levels More...;  ; Data< int > d_merge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:2069,error,error,2069,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['error'],['error']
Availability,"t Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matrix. More...;  ; virtual void getConstraintJacobian (const ConstraintParams *params, sofa::linearalgebra::BaseMatrix *J, unsigned int &off)=0;  build the jacobian of the constraint in a baseMatrix More...;  ; virtual void buildIdentityBlocksInJacobian (const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0;  fill the jacobian matrix (of the constraints) with identity blocks on the provided list of nodes(dofs) More...;  ; virtual std::list< ConstraintBlock > constraintBlocks (const std::list< unsigned int > &) const;  Express the matrix L in term of block of matrices, using the indices of the lines in the MatrixDeriv container. More...;  ; virtual SReal getConstraintJacobianTimesVecDeriv (unsigned int, ConstVecId);  Compute the error given a state vector and a line of the Jacobian (line in vector C) More...;  ; virtual void handleStateChange ();  ; virtual void handleStateChange (core::topology::Topology *t);  Handle state Changes from a given Topology. More...;  ; virtual void writeState (std::ostream &out);  Write current state to the given output stream. More...;  ; virtual void applyTranslation (const SReal dx, const SReal dy, const SReal dz)=0;  Translate the current state. More...;  ; virtual void applyRotation (const SReal, const SReal, const SReal);  Rotate the current state. More...;  ; virtual void applyRotation (const type::Quat< SReal > q)=0;  Rotate the current state. More...;  ; virtual void applyScale (const SReal, const SReal, const SReal)=0;  Scale the current state. More...;  ; virtual type::Vec3 getScale () const;  ; virtual bool addBBox (SReal *, SReal *);  ; virtual bool pickParticles (const ExecParams *, double, double, double, double, double, double, double, double, std::multima",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:4945,error,error,4945,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['error'],['error']
Availability,t Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – SOFA. SOFA - Topic Tag: Incision2D. /input; . /feed; ; input – SOFA. SOFA - Topic Tag: input. /input-and-output-in-sofa-scn-file; . /feed; ; Input and Output in SOFA .scn file – SOFA. SOFA - Topic Tag: Input and Output in SOFA .scn file. /installation; . /feed; ; installation – SOFA. SOFA - Topic Tag: installation. /installation-error; . /feed; ; Installation error – SOFA. SOFA - Topic Tag: Installation error. /instrument; . /feed; ; instrument – SOFA. SOFA - Topic Tag: instrument. /integrator-optimization-vec-multivec-deriv-coord-types; . /feed; ; integrator optimization vec multivec deriv coord types – SOFA. SOFA - Topic Tag: integrator optimization vec multivec deriv coord types. /interaction; . /feed; ; interaction – SOFA. SOFA - Topic Tag: interaction. /interactions; . /feed; ; interactions – SOFA. SOFA - Topic Tag: interactions. /interventionalradiologycontroller-inl; . /feed; ; InterventionalRadiologyController.inl – SOFA. SOFA - Topic Tag: InterventionalRadiologyController.inl. /is-sofa-right-for-this; . /feed; ; Is SOFA right for this? – SOFA. SOFA - Topic Tag: Is SOFA right for this?. /jacobian; . /feed; ; Jacobian – SOFA. SOFA - Topic Tag: Jacobian. /joint-constraint; . /feed; ; joint constraint – SOFA. SOFA - Topic Tag: joint constraint. /jointspringforcefield; . /feed; ; JointSpringForceField – SOFA. SOFA - Topic Tag: Join,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:450136,error,error,450136,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"t More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolverAccessor; SingleLink< LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  . Public Member Functions;  SOFA_CLASS2 (EulerImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getVelocityIntegrationFactor () const override;  ; SReal getPositionIntegrationFactor () const override;  ; virtual SReal getPositionIntegrationFactor (SReal dt) const;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative, SReal dt) const;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative, SReal dt) const;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecPara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:5102,down,down,5102,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['down'],['down']
Availability,"t between a rigid and a deformable object. /attachconstraint-not-compatible-with-freemotionanimationloop; ; SOFA - Topic: [SOLVED] AttachConstraint not compatible with freemotionanimationloop. /attaching-2-rods-to-a-platform-with-different-objects; ; SOFA - Topic: Attaching 2 rods to a platform with different objects. /attaching-a-vec3d-object-to-a-rigid-3d; . /page; . /10; ; SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. /3; ; SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. /7; ; SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. /attach-points-from-objects-witch-different-dofs; ; SOFA - Topic: [SOLVED] Attach points from objects with different DOFs. /auto-resetting-problem-when-doing-grasp-using-bilateralinteractionconstraint; ; SOFA - Topic: auto-resetting problem when doing grasp using BilateralInteractionConstraint. /available-objects-in-the-factory-python-or-xml; ; SOFA - Topic: [SOLVED] Available objects in the factory (python or xml). /avoid-changing-the-trajectory-when-collision; ; SOFA - Topic: [SOLVED] Avoid changing the trajectory when collision. /barycentricmapping-and-hexahedral-meshes; ; SOFA - Topic: BarycentricMapping and hexahedral meshes. /basic-collision-scene-not-working-properly; ; SOFA - Topic: [SOLVED] Basic collision scene not working properly. /beamadapter-plugin; ; SOFA - Topic: [SOLVED] BeamAdapter Plugin. /beam-collision-mapping; ; SOFA - Topic: Beam collision mapping. /beamfemforcefield-setting; . /feed; ; BeamFEMForceField Setting – SOFA. SOFA - Topic: BeamFEMForceField Setting. /begining-with-sofa; . /feed; ; [SOLVED] begining with SOFA – SOFA. SOFA - Topic: [SOLVED] begining with SOFA. /beginner-question-sofa-scenes-plugins-and-3rd-party-applications; ; SOFA - Topic: [Beginner Question] sofa scenes, plugins and 3rd party applications. /best-practice-for-setting-up-an-animation; ; SOFA - Topic: Best practice for setting up an anim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:259553,avail,available-objects-in-the-factory-python-or-xml,259553,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['avail'],['available-objects-in-the-factory-python-or-xml']
Availability,"t checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6766,error,errorMax,6766,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['error'],['errorMax']
Availability,"t in VS2019. /errors-appeared-while-compilation-sofa-in-win7; ; SOFA - Topic: [SOLVED] Errors appeared while compilation SOFA in Win7. /errors-in-building-sofa; . /feed; ; [SOLVED] Errors in building SOFA – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Errors in building SOFA. /3; ; SOFA - Topic: [SOLVED] Errors in building SOFA. SOFA - Topic: [SOLVED] Errors in building SOFA. /errors-in-qt-creator; . /feed; ; [SOLVED] Issues in Setting up QtCreator – SOFA. SOFA - Topic: [SOLVED] Issues in Setting up QtCreator. /errors-occurred-in-building-with-vs2012-on-win-7-64bit; ; SOFA - Topic: [SOLVED] Errors occurred in building with VS2012 on Win 7 64bit. /errors-when-compiling-cgalplugin-in-vs2017; ; SOFA - Topic: [SOLVED] errors when compiling CGALPLUGIN in VS2017. /errors-when-installing-the-cgal-plugin; ; SOFA - Topic: [SOLVED] Errors when installing the CGAL plugin. /errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Errors while building sofa. /errors-while-building-sofa-python-3; ; SOFA - Topic: Errors While Building Sofa Python 3. /errors-while-building-sofapython3-windows; ; SOFA - Topic: [SOLVED] Errors while building SofaPython3 (Windows). /error-when-compiling-sofapython3; ; SOFA - Topic: [SOLVED] Error when compiling SofaPython3. /error-when-loading-sofapython-plugin; ; SOFA - Topic: Error when loading SofaPython plugin. /error-when-running-scene-in-python-interpreter-with-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Error when running scene in python interpreter with SofaPython3 plugin. /error-while-building-sofa-for-softrobots-plugin-installation; ; SOFA - Topic: Error while building Sofa for SoftRobots plugin installation. /error-while-building-sofa-on-windows-7-qglviewerqt-conflict; ; SOFA - Topic: [SOLVED] Error while building SOFA on Windows 7, QGLViewer/Qt conflict. /error-while-buildin-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while building SOFA in Linux. /error-while-build-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while build SOFA in Linux. /er",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:297303,error,errors-while-building-sofa-python-,297303,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['errors-while-building-sofa-python-']
Availability,"t override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:11125,recover,recover,11125,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['recover'],['recover']
Availability,"t sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6204,error,errorMax,6204,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['error'],['errorMax']
Availability,"t up to date aspect is kept, and the previous one is reused to send the next update. This is similar to triple buffering. . Protected Attributes; AspectPool & pool;  ; AtomicInt latestID;  -1 or aspect ID of the last version sent More...;  ; AtomicInt availableID;  -1 or aspect ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next version, reusing a recent one if possible. . ◆ clear(). void sofa::core::objectmodel::AspectBuffer::clear ; (; ). Clear the buffers This must be called before either the AspectPool or this buffer is deleted . ◆ pop(). bool sofa::core::objectmodel::AspectBuffer::pop ; (; AspectRef & ; id). Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) . ◆ push(). void sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:1423,avail,available,1423,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,1,['avail'],['available']
Availability,"t. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< TDataTypes > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< TDataTypes > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< TDataTypes > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:14496,down,down,14496,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,2,['down'],['down']
Availability,"t. ◆ createResponse(). template<class TCollisionModel1 , class TCollisionModel2 > . void sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::createResponse ; (; core::objectmodel::BaseContext * ; group). overridevirtual . Implements sofa::core::collision::Contact. ◆ getCollisionModels(). template<class TCollisionModel1 , class TCollisionModel2 > . std::pair<core::CollisionModel*,core::CollisionModel*> sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::getCollisionModels ; (; ). inlineoverridevirtual . Get the pair of collision models which are in contact. ; Implements sofa::core::collision::Contact. ◆ keepAlive(). template<class TCollisionModel1 , class TCollisionModel2 > . bool sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::keepAlive ; (; ). inlineoverridevirtual . Return true if this contact should be kept alive, even if objects are no longer in collision. ; Reimplemented from sofa::core::collision::Contact. ◆ removeResponse(). template<class TCollisionModel1 , class TCollisionModel2 > . void sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::removeResponse. overridevirtual . Implements sofa::core::collision::Contact. ◆ setDetectionOutputs(). template<class TCollisionModel1 , class TCollisionModel2 > . void sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::setDetectionOutputs ; (; OutputVector * ; outputs). overridevirtual . Set the generic description of a contact point. ; Implements sofa::core::collision::Contact. ◆ setKeepAlive(). template<class TCollisionModel1 , class TCollisionModel2 > . void sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::setKeepAlive ; (; bool ; val). inlineoverridevirtual . Control the keep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:21295,alive,alive,21295,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['alive'],['alive']
Availability,t/node on a volumetric mesh. /tracking-target-positions-inside-a-deforming-body; ; SOFA - Topic: Tracking target positions inside a deforming body. /tracking-target-positions-inside-a-deforming-body-2; ; SOFA - Topic: Tracking target positions inside a deforming body. /translating-include-object-to-sofapython3; ; SOFA - Topic: [SOLVED] Translating “include” object to SofaPython3. /translating-mechanical-objects-not-working-c; . /feed; ; [SOLVED] Translating mechanical objects (not working c++) – SOFA. SOFA - Topic: [SOLVED] Translating mechanical objects (not working c++). /translucent-objects-default-rendering-looking-bad; . /feed; ; [SOLVED] translucent objects + default rendering = looking bad – SOFA. SOFA - Topic: [SOLVED] translucent objects + default rendering = looking bad. /trianglemodel-h28488-error-no-match-for-operator; . /feed; ; [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’ – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /5; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /6; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /7; ; SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. SOFA - Topic: [SOLVED] TriangleModel.h:284:88: error: no match for ‘operator*’. /triangular-fem-methods; . /feed; ; [SOLVED] Triangular FEM Methods – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Triangular FEM Methods. /5; ; SOFA - Topic: [SOLVED] Triangular FEM Methods. SOFA - Topic: [SOLVED] Triangular FEM Methods. /turning-off-collisions-between-a-set-of-objects; . /feed; ; [SOLVED] Turning off collisions between a set of objects? – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /5; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /tutorial-example-firststeps-step3,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:408545,error,error,408545,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"t::performer::BaseMouseInteractor; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:1921,down,down,1921,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,1,['down'],['down']
Availability,"t< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vector2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes . sofatestingNumericTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:5579,failure,failure,5579,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,1,['failure'],['failure']
Availability,"tAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1054,error,error,1054,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"tObject() [3/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getObject() [4/4]. core::objectmodel::BaseObject * sofa::simulation::Node::getObject ; (; const std::string & ; name); const. Find an object given its name. . ◆ getObjects() [1/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObjects() [2/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getOdeSolver(). core::behavior::OdeSolver * sofa::simulation::Node::getOdeSolver ; (; ); const. overridevirtual . Reimplemented from sofa::core::objectmodel::BaseNode. ◆ getRootContext(). BaseContext* sofa::simulation::Node::getRootContext ; (; ); const. inlineoverridevirtual . Get the root context of the graph. ; Reimplemented from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:43286,down,down,43286,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['down'],['down']
Availability,"tProblem::gaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel method building the compliance matrix. . ◆ gaussSeidel_increment(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel_increment ; (; bool ; measureError, . SReal * ; dfree, . SReal * ; force, . SReal ** ; w, . SReal ; tol, . SReal * ; d, . int ; dim, . bool & ; constraintsAreVerified, . SReal & ; error, . sofa::type::vector< SReal > & ; tabErrors . ); const. ◆ getNumConstraintGroups(). int sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::getNumConstraintGroups ; (; ). ◆ getNumConstraints(). int sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::getNumConstraints ; (; ). ◆ NNCG(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::NNCG ; (; GenericConstraintSolver * ; solver = nullptr, . int ; iterationNewton = 1 . ). Method from: A nonsmooth nonlinear conjugate gradient method for interactive contact force problems; 2010, Silcowitz, Morten and Niebe, Sarah and Erleben, Kenny . ◆ result_output(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::result_output ; (; GenericConstraintSolver * ; solver, . SReal * ; force, . SReal ; error, . int ; iterCount, . bool ; convergence . ). ◆ solveTimed(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::solveTimed ; (; SReal ; tol, . int ; maxIt, . SReal ; timeout . ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintProblem. ◆ unbuiltGaussSeidel(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::unbuiltGaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel unbuilt method. . sofacomponentconstraintlagrangiansolverGenericConstraintProblem; Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:7146,error,error,7146,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['error'],['error']
Availability,tSpringForceField – SOFA. SOFA - Topic Tag: JointSpringForceField. /keyboard; . /feed; ; keyboard – SOFA. SOFA - Topic Tag: keyboard. /keyboard-handle-event-key-pressed; . /feed; ; keyboard handle event key pressed – SOFA. SOFA - Topic Tag: keyboard handle event key pressed. /kill; . /feed; ; kill – SOFA. SOFA - Topic Tag: kill. /knot; . /feed; ; knot – SOFA. SOFA - Topic Tag: knot. /leapmotion; . /feed; ; LeapMotion – SOFA. SOFA - Topic Tag: LeapMotion. /lgpl; . /feed; ; lgpl – SOFA. SOFA - Topic Tag: lgpl. /libpng; . /feed; ; libpng – SOFA. SOFA - Topic Tag: libpng. /libsofapython; . /feed; ; libsofapython – SOFA. SOFA - Topic Tag: libsofapython. /license; . /feed; ; license – SOFA. SOFA - Topic Tag: license. /linearmovementconstraint; . /feed; ; LinearMovementConstraint – SOFA. SOFA - Topic Tag: LinearMovementConstraint. /linearsolver; . /feed; ; linearsolver – SOFA. SOFA - Topic Tag: linearsolver. /linux; . /feed; ; Linux – SOFA. SOFA - Topic Tag: Linux. /linux_-but-i-get-the-following-error-error-expected; . /feed; ; Linux_ But I get the following error: error: expected ‘ – SOFA. SOFA - Topic Tag: Linux_ But I get the following error: error: expected ‘. /linux_mint; . /feed; ; Linux_mint – SOFA. /page; . /2; ; SOFA - Topic Tag: Linux_mint. SOFA - Topic Tag: Linux_mint. /linux_other; . /feed; ; Linux_other – SOFA. /page; . /2; ; SOFA - Topic Tag: Linux_other. /3; ; SOFA - Topic Tag: Linux_other. /4; ; SOFA - Topic Tag: Linux_other. SOFA - Topic Tag: Linux_other. /linux_ubuntu; . /feed; ; Linux_ubuntu – SOFA. /page; . /10; ; SOFA - Topic Tag: Linux_ubuntu. /11; ; SOFA - Topic Tag: Linux_ubuntu. /12; ; SOFA - Topic Tag: Linux_ubuntu. /13; ; SOFA - Topic Tag: Linux_ubuntu. /14; ; SOFA - Topic Tag: Linux_ubuntu. /15; ; SOFA - Topic Tag: Linux_ubuntu. /16; ; SOFA - Topic Tag: Linux_ubuntu. /17; ; SOFA - Topic Tag: Linux_ubuntu. /18; ; SOFA - Topic Tag: Linux_ubuntu. /19; ; SOFA - Topic Tag: Linux_ubuntu. /2; ; SOFA - Topic Tag: Linux_ubuntu. /20; ; SOFA - Topic Tag: ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:452088,error,error-error-expected,452088,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-error-expected']
Availability,"tState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ dofError_V. double sofa::component::playback::CompareState::dofError_V. protected . ◆ dofError_X. double sofa::component::playback::CompareState::dofError_X. protected . ◆ last_time. double sofa::component::playback::CompareState::last_time. protected . last time, position and velocity (for draw) . ◆ last_V. std::string sofa::component::playback::CompareState::last_V. protected . ◆ last_X. std::string sofa::component::playback::CompareState::last_X. protected . ◆ nextValidLines. std::vector<std::string> sofa::component::playback::CompareState::nextValidLines. protected . ◆ totalError_V. double sofa::component::playback::CompareState::totalError_V. protected . total error for velocities . ◆ totalError_X. double sofa::component::playback::CompareState::totalError_X. protected . total error for positions . Constructor details. ◆ CompareState(). sofa::component::playback::CompareState::CompareState ; (; ). protected . Default constructor . Function details. ◆ canCreate(). template<class T > . static bool sofa::component::playback::CompareState::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ draw(). void sofa::component::playback::CompareState::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getErrorByDof(). double sofa::component::playback::CompareState::getErrorByDof ; (; ). inline . Return the total errors (position",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:16064,error,error,16064,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['error'],['error']
Availability,"tTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of hexahedra More...;  ; void addHexahedronProcess (Hexahedron e);  Add a hexahedron. More...;  ; virtual void removeHexahedra (const sofa::type::vector< HexahedronID > &hexahedraIds);  Remove a set of hexahedra. More...;  ; void removeItems (const sofa::type::vector< HexahedronID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  SOFA_CLASS (QuadSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads);  add a set of quads More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of quads More...;  ; void addQuadProcess (Quad e);  Effectively Add a quad. More...;  ; virtual void removeQuads (const sofa::type::vector< QuadID > &quadIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of quads. More...;  ; void removeItems (const sofa::type::vector< QuadID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  SOFA_CLASS (EdgeSetTopologyM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:2846,down,down,2846,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,2,['down'],['down']
Availability,"tTopologyModifier::addTrianglesWarning ; (; const sofa::Size ; nTriangles, . const sofa::type::vector< Triangle > & ; trianglesList, . const sofa::type::vector< TriangleID > & ; trianglesIndexList, . const sofa::type::vector< sofa::type::vector< TriangleID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some triangles were added in this topology. ; See alsoaddTrianglesProcess . ◆ InciseAlongEdge(). int sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::InciseAlongEdge ; (; EdgeID ; edge, . int * ; createdPoints = nullptr . ). virtual . Duplicates the given edge. Only works if at least one of its points is adjacent to a border. ; Returnsthe number of newly created points, or -1 if the incision failed. . ◆ init(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ movePointsProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::movePointsProcess ; (; const sofa::type::vector< PointID > & ; id, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; moveDOF = true . ). overrideprotectedvirtual . Move input points indices to input new coords. Also propagate event and update edgesAroundVertex and trianglesAroundVertex for data handling. ; Parameters. id: list of indices to move ; ancestors list of ancestors to define relative new position ; coefs: barycoef to locate new coord relatively to ancestors. @moveDOF bool allowing the move (default true) . Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ propagateTopologicalEngineChange",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:35525,down,down,35525,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['down'],['down']
Availability,"taVecCoord & ; x . ); const. inlineoverridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ getRotations(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::getRotations ; (; linearalgebra::BaseMatrix * ; rotations, . int ; offset = 0 . ). overridevirtual . Implements sofa::core::behavior::BaseRotationFinder. ◆ handleTopologyChange(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::handleTopologyChange. inlineoverridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initLarge ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initPolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initPolar ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::He",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:39765,down,down,39765,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['down'],['down']
Availability,"tails. ◆ currentTask. QProcess* sofa::gui::qt::GenGraphForm::currentTask. protected . ◆ exportedFile. QString sofa::gui::qt::GenGraphForm::exportedFile. protected . ◆ graph. sofa::simulation::Node* sofa::gui::qt::GenGraphForm::graph. protected . ◆ presetFilters. std::map<std::string, std::set<std::string> > sofa::gui::qt::GenGraphForm::presetFilters. protected . ◆ settingFilter. bool sofa::gui::qt::GenGraphForm::settingFilter. protected . ◆ tasks. std::list<QStringList> sofa::gui::qt::GenGraphForm::tasks. protected . Constructor details. ◆ GenGraphForm(). sofa::gui::qt::GenGraphForm::GenGraphForm ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ addTask(). void sofa::gui::qt::GenGraphForm::addTask ; (; QStringList ; argv). protected . ◆ change. void sofa::gui::qt::GenGraphForm::change ; (; ). virtualslot . ◆ changeFilter. void sofa::gui::qt::GenGraphForm::changeFilter ; (; ). virtualslot . ◆ doBrowse. void sofa::gui::qt::GenGraphForm::doBrowse ; (; ). virtualslot . ◆ doClose. void sofa::gui::qt::GenGraphForm::doClose ; (; ). virtualslot . ◆ doDisplay. void sofa::gui::qt::GenGraphForm::doDisplay ; (; ). virtualslot . ◆ doExport. void sofa::gui::qt::GenGraphForm::doExport ; (; ). virtualslot . ◆ getCurrentFilter(). std::set< std::string > sofa::gui::qt::GenGraphForm::getCurrentFilter ; (; ). protected . ◆ killAllTasks(). void sofa::gui::qt::GenGraphForm::killAllTasks ; (; ). protected . ◆ runTask(). void sofa::gui::qt::GenGraphForm::runTask ; (; ). protected . ◆ setFilter. void sofa::gui::qt::GenGraphForm::setFilter ; (; ). virtualslot . ◆ setScene(). void sofa::gui::qt::GenGraphForm::setScene ; (; sofa::simulation::Node * ; scene). ◆ taskError. void sofa::gui::qt::GenGraphForm::taskError ; (; QProcess::ProcessError ; error). virtualslot . ◆ taskFinished. void sofa::gui::qt::GenGraphForm::taskFinished ; (; int ; exitCode, . QProcess::ExitStatus ; exitStatus . ). virtualslot . sofaguiqtGenGraphForm; Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form.html:3022,error,error,3022,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form.html,1,['error'],['error']
Availability,"tance measure. ; Reimplemented from sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >. ◆ findNearestElementInRestPos() [4/4]. template<class DataTypes > . int sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >::findNearestElementInRestPos ; (; const Coord & ; pos, . type::Vec3 & ; baryC, . Real & ; distance . ); const. overridevirtual . finds a hexahedron, in its rest position, which is nearest to a given point. Computes barycentric coordinates and a distance measure. ; Reimplemented from sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >. ◆ getRegularGridIndexFromTopoIndex(). template<class DataTypes > . unsigned int sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >::getRegularGridIndexFromTopoIndex ; (; core::topology::BaseMeshTopology::HexaID ; index). ◆ getTopoIndexFromRegularGridIndex(). template<class DataTypes > . core::topology::BaseMeshTopology::HexaID sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >::getTopoIndexFromRegularGridIndex ; (; unsigned int ; index, . bool & ; existing . ). ◆ init(). template<class DataTypes > . void sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(DynamicSparseGridGeometryAlgorithms< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes) ;  . ). sofacomponenttopologycontainerdynamicDynamicSparseGridGeometryAlgorithms; Generated on Mon Nov 11 2024 03:10:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:34473,down,down,34473,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,1,['down'],['down']
Availability,"tatic const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Attribute details. ◆ m_handled. bool sofa::core::objectmodel::Event::m_handled. protected . ◆ s_lastEventTypeIndex. size_t sofa::core::objectmodel::Event::s_lastEventTypeIndex = 0. staticprotected . storing the last given id . Constructor details. ◆ Event(). sofa::core::objectmodel::Event::Event ; (; ). ◆ ~Event(). sofa::core::objectmodel::Event::~Event ; (; ). virtual . Function details. ◆ GetClassName(). static const char* sofa::core::objectmodel::Event::GetClassName ; (; ). inlinestatic . Returnsthe name of the event type. As the method is static the name can be retrieved without instantiation. Must be reimplemented in each subclasse . ◆ getClassName(). virtual const char* sofa::core::objectmodel::Event::getClassName ; (; ); const. inlinevirtual . Returnsthe class name from an instance. Do not override directly. Instead, add the SOFA_EVENT_H in your class definition . ◆ getEventTypeCount(). static size_t sofa::core::objectmodel::Event::getEventTypeCount ; (; ). inlinestatic . Returnsthe total number of events available in SOFA . ◆ getEventTypeIndex(). virtual size_t sofa::core::objectmodel::Event::getEventTypeIndex ; (; ); const. pure virtual . Returnsunique type index for fast Event type comparison with unique indices (see function 'checkEventType') ; Warningthis mechanism will only work for the last derivated type (and not for eventual intermediaries) e.g. for C derivated from B derivated from A, checkEventType will returns true only for C* but false for B* or A* Should be implemented by using macros SOFA_EVENT_H / SOFA_EVENT_CPP . ◆ isHandled(). bool sofa::core::objectmodel::Event::isHandled ; (; ); const. Returns true of the event has been handled. . ◆ setHandled(). void sofa::core::objectmodel::Event::setHandled ; (; ). Tag the event as handled, i.e. the event needs not be propagated further. . sofacoreobjectmodelEvent; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event.html:2328,avail,available,2328,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event.html,1,['avail'],['available']
Availability,tation; . /feed; ; documentation – SOFA. SOFA - Topic Tag: documentation. /documentation-color-alpha; . /feed; ; documentation color alpha – SOFA. SOFA - Topic Tag: documentation color alpha. /doe; . /feed; ; doe – SOFA. SOFA - Topic Tag: doe. /dynamic-systems; . /feed; ; Dynamic systems – SOFA. SOFA - Topic Tag: Dynamic systems. /edge_removal; . /feed; ; edge_removal – SOFA. SOFA - Topic Tag: edge_removal. /eigen; . /feed; ; Eigen – SOFA. SOFA - Topic Tag: Eigen. /elastic; . /feed; ; Elastic – SOFA. SOFA - Topic Tag: Elastic. /elasticity; . /feed; ; elasticity – SOFA. SOFA - Topic Tag: elasticity. /elastoplastic; . /feed; ; Elastoplastic – SOFA. SOFA - Topic Tag: Elastoplastic. /energy; . /feed; ; Energy – SOFA. SOFA - Topic Tag: Energy. /engine-data-update-energy; . /feed; ; engine data update energy – SOFA. SOFA - Topic Tag: engine data update energy. /error; . /feed; ; error – SOFA. SOFA - Topic Tag: error. /error-5; . /feed; ; Error 5 – SOFA. SOFA - Topic Tag: Error 5. /error-determination; . /feed; ; error determination – SOFA. SOFA - Topic Tag: error determination. /event; . /feed; ; event – SOFA. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. SOFA - Topic Tag: external data COM port. /extraction-of-the-equation; . /feed; ; Extraction of the equation – SOFA. SOFA - Topic Tag: Extraction of the equation. /features; . /feed; ; Features – SOFA.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:441678,error,error-determination,441678,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-determination']
Availability,"td::string & ; filename, . const std::string & ; basefile, . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basefileoverride current directory by using the parent directory of the given file ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileIn(). bool sofa::helper::system::FileRepository::findFileIn ; (; std::string & ; filename, . const std::string & ; path . ). staticprotected . Search file in a given path. . ◆ getDirectAccessProtocolPrefix(). const std::string& sofa::helper::system::FileRepository::getDirectAccessProtocolPrefix ; (; ); const. inline . ◆ getFile(). std::string sofa::helper::system::FileRepository::getFile ; (; std::string ; filename, . const std::string & ; basedir = """", . std::ostream * ; errlog = &std::cerr . ). inline . Alias for findFile, but returning the resolved file as the result. Less informative for errors, but sometimes easier to use . ◆ getFirstPath(). std::string sofa::helper::system::FileRepository::getFirstPath ; (; ). Get the first path into the set of paths. . ◆ getPaths(). const std::vector< std::string >& sofa::helper::system::FileRepository::getPaths ; (; ); const. inline . ◆ getPathsJoined(). const std::string sofa::helper::system::FileRepository::getPathsJoined ; (; ). ◆ getTempPath(). const std::string sofa::helper::system::FileRepository::getTempPath ; (; ); const. ◆ print(). void sofa::helper::system::FileRepository::print ; (; ). Print the list of path to std::cout. . ◆ relativeToPath(). std::string sofa::helper::system::FileRepository::relativeToPath ; (; std::string ; path, . std::string ; refPath . ). static . Returns a string such as refPath + string = path if path contains refPath. Otherwise returns path. . ◆ removePath(). void sofa::helper::system::FileRepository::removePath ; (; const std::string & ; path). Remove a path of the set of paths. . ◆ setDirectAccessProto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:8484,error,errors,8484,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['error'],['errors']
Availability,"td::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ dofError_V. double sofa::component::playback::CompareState::dofError_V. protected . ◆ dofError_X. double sofa::component::playback::CompareState::dofError_X. protected . ◆ last_time. double sofa::component::playback::CompareState::last_time. protected . last time, position and velocity (for draw) . ◆ last_V. std::string sofa::component::playback::CompareState::last_V. protected . ◆ last_X. std::string sofa::component::playback::CompareState::last_X. protected . ◆ nextValidLines. std::vector<std::string> sofa::component::playback::CompareState::nextValidLines. protected . ◆ totalError_V. double sofa::component::playback::CompareState::totalError_V. protected . total error for velocities . ◆ totalError_X. double sofa::component::playback::CompareState::totalError_X. protected . total error for positions . Constructor details. ◆ CompareState(). sofa::component::playback::CompareState::CompareState ; (; ). protected . Default constructor . Function details. ◆ canCreate(). template<class T > . static bool sofa::component::playback::CompareState::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ draw(). void sofa::component::playback::CompareState::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getErrorByDof(). double sofa::component::playback::CompareState::getErrorByDof ; (; ). inline . Return the total errors (position and velocity) . ◆ getTotalError(). double sofa::component::playback::CompareState::getTotalError ; (; ). inline . Ret",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:16183,error,error,16183,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['error'],['error']
Availability,"te<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestHexahedronVertexCoordinates ; (; const HexaID ; h, . Coord ; pnt[8] . ); const. ◆ getRestPointPositionInHexahedron() [1/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const LocalCoord & ; baryC . ); const. ◆ getRestPointPositionInHexahedron() [2/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const Real ; baryC[3] . ); const. ◆ isHexahedronAffine(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::isHexahedronAffine ; (; const HexaID ; h, . const VecCoord & ; p, . const Real ; tolerance = (Real)1e-5 . ); const. test if the heaxahedron is a simple affine warp of a cube . ◆ mustComputeBBox(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::mustComputeBBox. overrideprotectedvirtual . Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes) ;  . ). ◆ writeMSHfile(). template<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::writeMSHfile ; (; const char * ; filename); const. inline . sofacompon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:40855,toler,tolerance,40855,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['toler'],['tolerance']
Availability,"tected . forces computed from the constraints . ◆ J. template<class TDataTypes > . DeprecatedAndRemoved sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::J. protected . use m_constraintMatrix instead . ◆ l_linearSolver. template<class TDataTypes > . SingleLink<LinearSolverConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::l_linearSolver. Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. . ◆ l_ODESolver. template<class TDataTypes > . SingleLink<LinearSolverConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::l_ODESolver. Link towards the ODE solver used to recover the integration factors. . ◆ m_constraintJacobian. template<class TDataTypes > . linearalgebra::SparseMatrix<Real> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::m_constraintJacobian. protected . ◆ mstate. template<class TDataTypes > . MechanicalState<DataTypes>* sofa::core::behavior::ConstraintCorrection< TDataTypes >::mstate. protected . ◆ wire_optimization. template<class TDataTypes > . Data< bool > sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::wire_optimization. constraints are reordered along a wire-like topology (from tip to base) . Constructor details. ◆ LinearSolverConstraintCorrection(). template<class DataTypes > . sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::LinearSolverConstraintCorrection ; (; sofa::core::behavior::MechanicalState< DataTypes > * ; mm = nullptr). protected . ◆ ~LinearSolverConstraintCor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:20242,recover,recover,20242,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['recover'],['recover']
Availability,"ted . Create contacts if it has not been created before. . ◆ draw(). void sofa::component::collision::response::contact::CollisionResponse::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContactResponse(). std::string sofa::component::collision::response::contact::CollisionResponse::getContactResponse ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2 . ). overridevirtual . Implements sofa::core::collision::ContactManager.; Reimplemented in sofa::component::collision::response::contact::RuleBasedContactManager. ◆ getDefaultResponseType(). std::string sofa::component::collision::response::contact::CollisionResponse::getDefaultResponseType ; (; ); const. inline . ◆ init(). void sofa::component::collision::response::contact::CollisionResponse::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initializeResponseOptions(). sofa::helper::OptionsGroup sofa::component::collision::response::contact::CollisionResponse::initializeResponseOptions ; (; sofa::core::objectmodel::BaseContext * ; pipeline). staticprotected . ◆ removeContacts(). void sofa::component::collision::response::contact::CollisionResponse::removeContacts ; (; const ContactVector & ; c). overridevirtual . virtual methods used for cleaning the pipeline after a dynamic graph node deletion. ; Contacts can be attached to a deleted node and their deletion is a problem for the pipeline. Parameters. cis the list of deleted contacts. . Reimplemented from sofa::core::collision::ContactManager. ◆ removeInactiveContacts(). void sofa::component::collision::response::contact::CollisionResponse::removeInactiveContacts ; (; const DetectionOutputMap & ; outputsMap, . Size & ; nbContact . ). protected . ◆ reset(). void sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:20803,down,down,20803,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['down'],['down']
Availability,"ted Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; Real getMassDensity () const;  ; template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > ; SReal getTotalMass () const;  ; std::size_t getMassCount ();  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void addMass (const MassType &mass);  ; void resize (int vsize);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:6139,down,down,6139,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['down'],['down']
Availability,"ted Attributes; simulation::Node * m_node { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void setNode (simulation::Node *);  Set the simulation node this animation loop is controlling. More...;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  perform one animation step More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:3157,down,down,3157,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,1,['down'],['down']
Availability,"ted by the component, and is usually called by the generic ForceField::getPotentialEnergy() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ getSprings(). template<class DataTypes > . sofa::type::vector<Spring>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getSprings ; (; ). inline . ◆ getVectorAngle() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getVectorAngle ; (; Coord ; p1, . Coord ; p2, . unsigned int ; axis, . Vector & ; w . ). inline . ◆ getVectorAngle() [2/2]. template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getVectorAngle ; (; Vector ; u, . Vector ; v, . Vector & ; w . ). inline . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(GearSpringForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes) ;  . ). Enum details. ◆ anonymous enum. template<class DataTypes > . anonymous enum. EnumeratorN . Related details. ◆ GearSpringForceFieldInternalData< DataTypes >. template<class DataTypes > . friend class GearSpringForceFieldInternalData< DataTypes >. friend . sofacomponentsolidmechanicsspringGearSpringForceField; Generated on Mon Nov 11 202",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:32094,down,down,32094,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['down'],['down']
Availability,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeTriangleAABB (const TriangleID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTriangleCenter (const TriangleID i) const;  ; Coord computeRestTriangleCenter (const TriangleID i) const;  ; void computeTriangleCircumcenterBaryCoefs (sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) const;  ; Coord computeTriangleCircumcenter (const TriangleID i) const;  ; void getTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; void getRestTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; Real computeTriangleArea (const TriangleID i) const;  Computes the area of triangle no i and returns it. More...;  ; void computeTriangleArea (BasicArrayInterface< Real > &ai) const;  Computes the triangle area of all triangles are store in the array interface. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:3758,down,down,3758,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,1,['down'],['down']
Availability,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(OscillatingTorsionPressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &, const DataVecDeriv &) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void setDminAndDmax (const SReal _dmin, const SReal _dmax);  ; void setAxis (const Coord n);  ; void setMoment (Real x);  ; SReal getAmplitude ();  ; SReal getRotationAngle () const;  ;  Public Member Functions inherited ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:5644,down,down,5644,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,1,['down'],['down']
Availability,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularQuadraticSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual Real getLambda () const;  ; virtual Real getMu () const;  ; void setYoungModulus (const Real modulus);  ; void setPoissonRatio (const Real ratio);  ; void includeAngularSprings (const bool useAngularSprings);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html:3586,down,down,3586,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,1,['down'],['down']
Availability,"tedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:2343,down,down,2343,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['down'],['down']
Availability,"template<class T > . Data<VecIndex> sofa::component::engine::select::ValuesFromIndices< T >::f_indices. Indices of the values. . ◆ f_out. template<class T > . Data<VecValue> sofa::component::engine::select::ValuesFromIndices< T >::f_out. Output values corresponding to the indices. . ◆ f_outStr. template<class T > . Data<std::string> sofa::component::engine::select::ValuesFromIndices< T >::f_outStr. Output values corresponding to the indices, converted as a string. . Constructor details. ◆ ValuesFromIndices(). template<class T > . sofa::component::engine::select::ValuesFromIndices< T >::ValuesFromIndices. protected . ◆ ~ValuesFromIndices(). template<class T > . sofa::component::engine::select::ValuesFromIndices< T >::~ValuesFromIndices. overrideprotected . Function details. ◆ doUpdate(). template<class T > . void sofa::component::engine::select::ValuesFromIndices< T >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class T > . void sofa::component::engine::select::ValuesFromIndices< T >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class T > . void sofa::component::engine::select::ValuesFromIndices< T >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class T > . sofa::component::engine::select::ValuesFromIndices< T >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Index ; , . sofa::Index ;  . ). ◆ SOFA_CLASS(). template<class T > . sofa::component::engine::select::ValuesFromIndices< T >::SOFA_CLASS ; (; SOFA_TEMPLATE(ValuesFromIndices< T >, T) ; , . core::DataEngine ;  . ). sofacomponentengineselectValuesFromIndices; Generated on Mon Nov 11 2024 02:41:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html:17846,down,down,17846,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,1,['down'],['down']
Availability,"tening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:4251,down,down,4251,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['down'],['down']
Availability,"tening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=del",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3131,down,down,3131,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,1,['down'],['down']
Availability,"tening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Spiral, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html:2056,down,down,2056,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,1,['down'],['down']
Availability,"ter;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DistanceFromTargetMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void createTarget (unsigned index, const InCoord &position, Real distance);  Add a target with a desired distance. More...;  ; void updateTarget (unsigned index, const InCoord &position);  Update the position of a target. More...;  ; void updateTarget (unsigned index, SReal x, SReal y, SReal z) override;  ; void clear ();  Remove all targets. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void applyJ (const core::MechanicalParams *mparams, DataVecDeriv_t< Out > &out, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:5851,down,down,5851,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['down'],['down']
Availability,teralInteractionConstraint. /binaries; . /feed; ; binaries – SOFA. SOFA - Topic Tag: binaries. /binary; . /feed; ; binary – SOFA. SOFA - Topic Tag: binary. /blood-flow-simulation; . /feed; ; blood flow simulation – SOFA. SOFA - Topic Tag: blood flow simulation. /boost; . /feed; ; boost – SOFA. SOFA - Topic Tag: boost. /boost_locale-vc140-mt-1_60; . /feed; ; Boost_locale-vc140-mt-1_60 – SOFA. SOFA - Topic Tag: Boost_locale-vc140-mt-1_60. /boost-cmake; . /feed; ; boost cmake – SOFA. SOFA - Topic Tag: boost cmake. /boost-library; . /feed; ; boost library – SOFA. SOFA - Topic Tag: boost library. /bounding-box-grid-regular; . /feed; ; bounding box grid regular – SOFA. SOFA - Topic Tag: bounding box grid regular. /braided-rope; . /feed; ; braided rope – SOFA. SOFA - Topic Tag: braided rope. /bubble; . /feed; ; Bubble – SOFA. SOFA - Topic Tag: Bubble. /bug; . /feed; ; bug – SOFA. SOFA - Topic Tag: bug. /bug-flexible; . /feed; ; #bug #Flexible – SOFA. SOFA - Topic Tag: #bug #Flexible. /buiding-error; . /feed; ; buiding error – SOFA. SOFA - Topic Tag: buiding error. /build; . /feed; ; build – SOFA. SOFA - Topic Tag: build. /build-error; . /feed; ; build error – SOFA. SOFA - Topic Tag: build error. /building; . /feed; ; building – SOFA. SOFA - Topic Tag: building. /building-error; . /feed; ; building error – SOFA. SOFA - Topic Tag: building error. /building-on-linux; . /feed; ; Building on Linux – SOFA. SOFA - Topic Tag: Building on Linux. /building-sofa; . /feed; ; building sofa – SOFA. SOFA - Topic Tag: building sofa. /building-stlib; . /feed; ; building stlib – SOFA. SOFA - Topic Tag: building stlib. /build-issues; . /feed; ; Build Issues – SOFA. SOFA - Topic Tag: Build Issues. /build-sofa; . /feed; ; Build SOFA – SOFA. SOFA - Topic Tag: Build SOFA. /build-sofa-on-windows; . /feed; ; build sofa on windows – SOFA. SOFA - Topic Tag: build sofa on windows. /buildsofavs2010win7; . /feed; ; BuildSofaVS2010Win7 – SOFA. SOFA - Topic Tag: BuildSofaVS2010Win7. /buliding-sofa; . /fe,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:430318,error,error,430318,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"terminant of a 3x3 matrix. . ◆ diagonal(). template<sofa::Size N, class real > . constexpr Vec<N,real> sofa::type::diagonal ; (; const Mat< N, N, real > & ; m). constexpr . diagonal of a square matrix . ◆ dot() [1/2]. template<class V1 , class V2 > . SReal sofa::type::dot ; (; const V1 & ; vector1, . const V2 & ; vector2 . ). Dot product of two vectors. . ◆ dot() [2/2]. template<sofa::Size N, typename real > . constexpr real sofa::type::dot ; (; const Vec< N, real > & ; a, . const Vec< N, real > & ; b . ). constexprnoexcept . Dot product (alias for operator*) . ◆ dyad(). template<class Tu , class Tv > . constexpr Mat<Tu::size(), Tv::size(), typename Tu::value_type> sofa::type::dyad ; (; const Tu & ; u, . const Tv & ; v . ). constexprnoexcept . Create a matrix as . . ◆ getInteger(). SOFA_TYPE_API int sofa::type::getInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ getUnsignedInteger(). SOFA_TYPE_API unsigned int sofa::type::getUnsignedInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ infNorm(). template<class real > . real sofa::type::infNorm ; (; const Mat< 3, 3, real > & ; A). ◆ init(). SOFA_TYPE_API void sofa::type::init ; (; ). Initialize the SofaHelper library. . ◆ invertMatrix() [1/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 1, 1, real > & ; dest, . const Mat< 1, 1, real > & ; from . ). constexpr . Matrix inversion (special case 1x1). . ◆ invertMatrix() [2/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 2, 2, real > & ; dest, . const Mat< 2, 2, real > & ; from . ). constexpr . Matrix inversion (special case 2x2). . ◆ invertMatrix() [3/7]. template<class real > . constexpr bool sofa::type:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:33505,error,error,33505,api/master/sofa/html/namespacesofa_1_1type.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html,1,['error'],['error']
Availability,"ternion (qx,qy,qz,qw) . ◆ rotation. template<class DataTypes > . Data<type::Vec3> sofa::component::engine::transform::TransformEngine< DataTypes >::rotation. protected . rotation vector (x,y,z) . ◆ scale. template<class DataTypes > . Data<type::Vec3> sofa::component::engine::transform::TransformEngine< DataTypes >::scale. protected . scale factor . ◆ translation. template<class DataTypes > . Data<type::Vec3> sofa::component::engine::transform::TransformEngine< DataTypes >::translation. protected . translation vector (x,y,z) . Constructor details. ◆ TransformEngine(). template<class DataTypes > . sofa::component::engine::transform::TransformEngine< DataTypes >::TransformEngine. protected . ◆ ~TransformEngine(). template<class DataTypes > . sofa::component::engine::transform::TransformEngine< DataTypes >::~TransformEngine ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::transform::TransformEngine< DataTypes >::doUpdate ; (; ). overrideprotectedvirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::TransformEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::TransformEngine< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::TransformEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TransformEngine< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginetransformTransformEngine; Generated on Mon Nov 11 2024 02:44:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html:18824,down,down,18824,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,1,['down'],['down']
Availability,"tes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RotateTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multip",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:2072,down,down,2072,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,1,['down'],['down']
Availability,"tes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TransformEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html:2411,down,down,2411,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,1,['down'],['down']
Availability,"tes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SparseGridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3i, sofa::type::Vec3i);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (BoundingBox, sofa::type::BoundingBox);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void buildAsFinest ();  building from a mesh file More...;  ; virtual void buildFromFiner ();  building by condensating a finer sparse grid (used if setFinerSparseGrid has initialized _finerSparseGrid before calling init() ) More...;  ; virtual void buildVirtualFinerLevels ();  building eventual virtual finer levels (cf d_nbVirtualFinerLevels) More...;  ; int getNbVirtualFinerLevels () const;  ; void setNbVirtualFinerLevels (int n);  ; sofa::type::Vec< 3, int > getN () const;  Resolution. More...;  ; int getNx () const;  ; int getNy () const;  ; int getNz () const;  ; void setN (type::Vec3i _n);  ; void setNx (int _n);  ; void setNy (int _n);  ; void setNz (int _n);  ; void setMin (type::Vec3 val);  ; void setXmin (SReal val);  ; void setYmin (SReal val);  ; void s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html:13325,down,down,13325,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,1,['down'],['down']
Availability,"tes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes));  ; void roiInit () override;  ; bool roiDoUpdate () override;  ; void roiDraw (const core::visual::VisualParams *vparams) override;  ; void roiComputeBBox (const core::ExecParams *params, type::BoundingBox &bbox) override;  ;  Public Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, DataTypes), Inherit);  ; void init () final;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) final;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:7385,down,down,7385,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['down'],['down']
Availability,"tes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Protected Attributes; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void setPoissonRatio (Real val);  ; void setYoungModulus (Real val);  ; Real getYoungModulusInElement (sofa::Size elementId) const;  ; Real getPoissonRatioInElement (sofa::Size elementId) const;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; virtual void addForce (const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addDForce (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx)=0;  ; virtual void addClambda (const Mechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html:2835,down,down,2835,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,1,['down'],['down']
Availability,"text *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ error. double sofa::component::playback::CompareStateResult::error. protected . ◆ errorByDof. double sofa::component::playback::CompareStateResult::errorByDof. protected . ◆ numCompareState. unsigned int sofa::component::playback::CompareStateResult::numCompareState. protected . Constructor details. ◆ CompareStateResult(). sofa::component::playback::CompareStateResult::CompareStateResult ; (; const core::ExecParams * ; params). inline . Function details. ◆ getClassName(). const char* sofa::component::playback::CompareStateResult::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ getErrorByDof(). double sofa::component::playback::CompareStateResult::getErrorByDof ; (; ). inline . ◆ getNumCompareState(). unsigned int sofa::component::playback::CompareStateResult::getNumCompareState ; (; ). inline . ◆ getTotalError(). double sofa::component::playback::Compare",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html:4845,error,error,4845,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,1,['error'],['error']
Availability,"text::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . Se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:21930,down,down,21930,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['down'],['down']
Availability,"the Constraint violations vector; Parameters. vis the result vector that contains the whole constraints violations ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC) . ◆ getConstraintViolation() [4/4]. template<class DataTypes > . void sofa::core::behavior::Constraint< DataTypes >::getConstraintViolation ; (; const ConstraintParams * ; cParams, . linearalgebra::BaseVector * ; v . ). overridevirtual . Construct the Constraint violations vector of each constraint; Parameters. vis the result vector that contains the whole constraints violations ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC) . Reimplemented from sofa::core::behavior::BaseConstraintSet. ◆ init(). template<class DataTypes > . void sofa::core::behavior::Constraint< DataTypes >::init ; (; void ; ). overrideprotectedvirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >, and sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >. ◆ isActive(). template<class DataTypes > . bool sofa::core::behavior::Constraint< DataTypes >::isActive. virtual . if false, the constraint does nothing . ◆ SOFA_CLASS2(). template<class DataTypes > . sofa::core::behavior::Constraint< DataTypes >::SOFA_CLASS2 ; (; SOFA_TEMPLATE(Constraint< DataTypes >, DataTypes) ; , . BaseConstraint< DataTypes > ; , . SOFA_TEMPLATE(SingleStateAccessor, DataTypes) ;  . ). ◆ storeLambda(). template<class DataTypes > . void sofa::core::behavior::Constraint< DataTypes >::storeLambda ; (; const ConstraintParams * ; cParams, . MultiVecDerivId ; res, . const sofa::linearalgebra::BaseVector * ; lambda . ). overridevirtual . Store the constraint lambda at the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:24859,down,down,24859,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,1,['down'],['down']
Availability,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Function details. ◆ computeForce(). void sofa::component::haptics::NullForceFeedback::computeForce ; (; SReal ; x, . SReal ; y, . SReal ; z, . SReal ; u, . SReal ; v, . SReal ; w, . SReal ; q, . SReal & ; fx, . SReal & ; fy, . SReal & ; fz . ). overridevirtual . Implements sofa::component::haptics::ForceFeedback. ◆ computeWrench(). void sofa::component::haptics::NullForceFeedback::computeWrench ; (; const sofa::type::Transform< SReal > & ; world_H_tool, . const sofa::type::SpatialVector< SReal > & ; V_tool_world, . sofa::type::SpatialVector< SReal > & ; W_tool_world . ). overridevirtual . Implements sofa::component::haptics::ForceFeedback. ◆ init(). void sofa::component::haptics::NullForceFeedback::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::haptics::ForceFeedback. ◆ SOFA_CLASS(). sofa::component::haptics::NullForceFeedback::SOFA_CLASS ; (; NullForceFeedback ; , . ForceFeedback ;  . ). sofacomponenthapticsNullForceFeedback; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:14866,down,down,14866,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,1,['down'],['down']
Availability,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::OglIntVector2Variable ; (; ). ◆ ~OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::~OglIntVector2Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector2Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector2Variable::SOFA_CLASS ; (; OglIntVector2Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector2Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:17633,down,down,17633,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,1,['down'],['down']
Availability,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::OglIntVector3Variable ; (; ). ◆ ~OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::~OglIntVector3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector3Variable::SOFA_CLASS ; (; OglIntVector3Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector3Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:17633,down,down,17633,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,1,['down'],['down']
Availability,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::OglIntVector4Variable ; (; ). ◆ ~OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::~OglIntVector4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector4Variable::SOFA_CLASS ; (; OglIntVector4Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector4Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:17633,down,down,17633,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,1,['down'],['down']
Availability,"the triangle (i.e. either 0, 1, 2). . -1 if none. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ hasBorderElementLists(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::hasBorderElementLists ; (; ); const. ◆ hasEdgesInTriangle(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::hasEdgesInTriangle ; (; ); const. ◆ hasTriangles(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::hasTriangles ; (; ); const. ◆ hasTrianglesAroundEdge(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::hasTrianglesAroundEdge ; (; ); const. ◆ hasTrianglesAroundVertex(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::hasTrianglesAroundVertex ; (; ); const. ◆ init(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ initTopology(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::initTopology ; (; ). Dynamic Topology API; Method called by component Init method. Will create all the topology neighborhood buffers and call See alsoEdgeSetTopologyContainer::initTopology() . ◆ isTriangleTopologyDirty(). const bool& sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::isTriangleTopologyDirty ; (; ). inlineprotected . ◆ linkTopologyHandlerToData(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::linkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). overridevirtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented from sofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:54588,down,down,54588,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['down'],['down']
Availability,"thin a Gauss-Seidel algorithm. ; More... Inheritance diagram for sofa::core::behavior::ConstraintResolution:. [legend]; Detailed Description; Object computing a constraint resolution within a Gauss-Seidel algorithm. . Public Member Functions;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void init (int, SReal **, SReal *);  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void resolution (int line, SReal **w, SReal *d, SReal *force, SReal *dFree);  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Constructor details. ◆ ConstraintResolution(). sofa::core::behavior::ConstraintResolution::ConstraintResolution ; (; unsigned int ; nbLines, . SReal ; tolerance = 0.0 . ). ◆ ~ConstraintResolution(). sofa::core::behavior::ConstraintResolution::~ConstraintResolution ; (; ). virtual . Function details. ◆ getNbLines(). unsigned int sofa::core::behavior::ConstraintResolution::getNbLines ; (; ); const. inline . ◆ getTolerance(). SReal sofa::core::behavior::ConstraintResolution::getTolerance ; (; ); const. inline . ◆ init(). void sofa::core::behavior::ConstraintResolution::init ; (; int ; , . SReal ** ; , . SReal * ;  . ). virtual . The resolution object can do precomputation with the compliance matrix, and give an initial guess. ; Reimplemented in sofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFriction, sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintRe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html:1367,toler,tolerance,1367,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html,1,['toler'],['tolerance']
Availability,"thon3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on Windows. /quarter-window-display-on-macos; ; SOFA - Topic: Quarter-window display on macOS. /quasi-static-simulation-without-dynamics; ; SOFA - Topic: [SOLVED] Quasi-static simulation, without dynamics. /queries-about-tetrahedralization-with-the-cgal-plugin; . /feed; ; [SOLVED] Queries about tetrahedralization with the CGAL Plugin. – SOFA. SOFA - Topic: [SOLVED] Queries about tetrahedralization with the CGAL Plugin. /question-about-an-object-self-contact-2; ; SOFA - Topic: Question about an object self contact. /question-about-calling-header-of-sofameshcollision-from-sofabasecol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:371943,error,error,371943,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"ti-physics simuation. Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution Class Reference . #include <UnilateralConstraintResolution.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution:. [legend]. Public Member Functions;  UnilateralConstraintResolution ();  ; void resolution (int line, SReal **w, SReal *d, SReal *force, SReal *dfree) override;  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintResolution;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void init (int, SReal **, SReal *);  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Constructor details. ◆ UnilateralConstraintResolution(). sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution::UnilateralConstraintResolution ; (; ). inline . Function details. ◆ resolution(). void sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution::resolution ; (; int ; line, . SReal ** ; w, . SReal * ; d, . SReal * ; force, . SReal * ; dFree . ). inlineoverridevirtual . Resolution of the constraint for one Gauss-Seidel iteration. ; Reimplemented from sofa::core::behavior::ConstraintResolution. sofacomponentconstraintlagrangianmodelUnilateralConstraintResolution; Generated on Mon Nov 11 2024 02:36:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html:1427,toler,tolerance,1427,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html,1,['toler'],['tolerance']
Availability,tic behaviour and TetrahedronFEMForceField. /3; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /6; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /7; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /9; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /elasticity-measurement; ; SOFA - Topic: Elasticity measurement. /elastoplastic-deformation; ; SOFA - Topic: [SOLVED] Elastoplastic deformation. /eliminate-collisions-between-objects; ; SOFA - Topic: Eliminate collisions between objects. /end-simulation-from-a-python-script-controller; ; SOFA - Topic: [SOLVED] End simulation from a python script controller. /error-adding-plugins; ; SOFA - Topic: Error adding plugins. /error-adding-sofapython3-and-stlib-plugin; ; SOFA - Topic: Error adding SofaPython3 and STlib plugin. /error-adding-sofapython3-plugin-to-sofa-21-12; ; SOFA - Topic: Error adding SofaPython3 plugin to SOFA 21.12. /error-after-compilation-help; ; SOFA - Topic: Error after compilation.[HELP]. /error-at-building-softrobots-with-ninja; ; SOFA - Topic: [SOLVED] Error at building SoftRobots with ninja. /error-at-installing-a-newer-cmake-version; ; SOFA - Topic: [SOLVED] Error at installing a newer CMake version. /errorbuilding-sofa-20-06-version-to-add-softrobot-plugin; ; SOFA - Topic: [SOLVED] Error:Building Sofa 20.06 version to add SoftRobot plugin. /error-building-sofa-constraintresolution-h-not-found; ; SOFA - Topic: [SOLVED] Error building SOFA : ConstraintResolution.h not found. /error-building-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Error building SofaCUDA Plugin. /error-building-sofa-v-17-12-on-windows-10-in-qt-ide; ; SOFA - Topic: Error Building SOFA V.17.12 on windows 10 in Qt IDE. /error-building-sofa-with-cuda-plugin; ; SOFA - Topic: [SOLVED] Error Building SOFA with CUDA Plugin. /error-compiling-with-cuda-plugin; ; SOFA - Topic,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:291912,error,error-adding-,291912,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-adding-']
Availability,"time_t. ◆ FemClipsReal. typedef SReal sofa::helper::FemClipsReal. ◆ integer_id_name. typedef const char*(* sofa::helper::integer_id_name) (). ◆ SimpleTimer. typedef TSimpleTimer sofa::helper::SimpleTimer. Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNDefaultColorMapSchemes . Function Documentation. ◆ absError(). SOFA_HELPER_API SReal sofa::helper::absError ; (; SReal ; f1x, . SReal ; f1y, . SReal ; f1z, . SReal ; f2x, . SReal ; f2y, . SReal ; f2z . ). inline . ◆ add3Dof(). SOFA_HELPER_API void sofa::helper::add3Dof ; (; SReal * ; vector, . int ; index, . SReal ; vx, . SReal ; vy, . SReal ; vz . ). inline . ◆ choose_next(). unsigned int sofa::helper::choose_next ; (; SReal ; x, . SReal ; y, . SReal ; z, . unsigned int ; a, . unsigned int ; b, . unsigned int ; c . ). inline . ◆ cleanup(). SOFA_HELPER_API void sofa::helper::cleanup ; (; ). Clean up the resources used by the SofaHelper library. . ◆ downcaseString(). SOFA_HELPER_API std::string sofa::helper::downcaseString ; (; const std::string & ; s). Convert a string to lower case. . ◆ drand() [1/3]. double sofa::helper::drand ; (; ). inline . ◆ drand() [2/3]. double sofa::helper::drand ; (; double ; max). inline . ◆ drand() [3/3]. double sofa::helper::drand ; (; double ; min, . double ; max . ). inline . ◆ drandpos(). double sofa::helper::drandpos ; (; double ; max). inline . ◆ dsyev2(). template<class Real > . void sofa::helper::dsyev2 ; (; Real ; A, . Real ; B, . Real ; C, . Real & ; rt1, . Real & ; rt2, . Real & ; cs, . Real & ; sn . ). inline . ◆ dsyevc3(). template<class Real > . int sofa::helper::dsyevc3 ; (; const type::Mat< 3, 3, Real > & ; A, . type::Vec< 3, Real > & ; w . ). ◆ dsyevq3(). template<class Real > . int sofa::helper::dsyevq3 ; (; const type::Mat< 3, 3, Real > & ; A, . type::Mat< 3, 3, Real > & ; Q, . type::Vec< 3, Real > & ; w . ). ◆ dsytrd3(). template<class Real > . void sofa::helper::dsytrd3 ; (; const type::Mat< 3, 3, Real > & ; A, . type::Mat< 3, 3, Real > & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:21802,down,downcaseString,21802,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['down'],['downcaseString']
Availability,"tion in the height direction. . ◆ f_resolutionRadial. template<class DataTypes > . Data<size_t> sofa::component::engine::generate::GenerateCylinder< DataTypes >::f_resolutionRadial. Resolution in the radial direction. . ◆ f_tetrahedra. template<class DataTypes > . Data<SeqTetrahedra> sofa::component::engine::generate::GenerateCylinder< DataTypes >::f_tetrahedra. output mesh tetrahedra . ◆ f_triangles. template<class DataTypes > . Data<SeqTriangles> sofa::component::engine::generate::GenerateCylinder< DataTypes >::f_triangles. output triangular mesh . Constructor details. ◆ GenerateCylinder(). template<class DataTypes > . sofa::component::engine::generate::GenerateCylinder< DataTypes >::GenerateCylinder. ◆ ~GenerateCylinder(). template<class DataTypes > . sofa::component::engine::generate::GenerateCylinder< DataTypes >::~GenerateCylinder ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::GenerateCylinder< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::GenerateCylinder< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::GenerateCylinder< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::GenerateCylinder< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(GenerateCylinder< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateGenerateCylinder; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html:21903,down,down,21903,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html,1,['down'],['down']
Availability,"tion() [20/22]. int sofa::component::collision::detection::intersection::LocalMinDistance::computeIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [21/22]. int sofa::component::collision::detection::intersection::LocalMinDistance::computeIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [22/22]. int sofa::component::collision::detection::intersection::LocalMinDistance::computeIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ init(). void sofa::component::collision::detection::intersection::LocalMinDistance::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::LocalMinDistance::SOFA_CLASS ; (; LocalMinDistance ; , . BaseProximityIntersection ;  . ). ◆ testIntersection() [1/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; , . collision::geometry::Cube & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ testIntersection() [2/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::BaseProximityInters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:32229,down,down,32229,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['down'],['down']
Availability,"tion, during top-down traversal. More...;  ; void initDefaultImpl ();  ; Check and standard initialization functions from mass information; virtual bool checkVertexMass ();  ; virtual void initFromVertexMass ();  ; virtual bool checkTotalMass ();  ; virtual void initFromTotalMass ();  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; type::Vec6 getMomentum (const MechanicalParams *mparams) const override;  ; void addKToM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:9670,recover,recover,9670,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['recover'],['recover']
Availability,tion. /documentation-color-alpha; . /feed; ; documentation color alpha – SOFA. SOFA - Topic Tag: documentation color alpha. /doe; . /feed; ; doe – SOFA. SOFA - Topic Tag: doe. /dynamic-systems; . /feed; ; Dynamic systems – SOFA. SOFA - Topic Tag: Dynamic systems. /edge_removal; . /feed; ; edge_removal – SOFA. SOFA - Topic Tag: edge_removal. /eigen; . /feed; ; Eigen – SOFA. SOFA - Topic Tag: Eigen. /elastic; . /feed; ; Elastic – SOFA. SOFA - Topic Tag: Elastic. /elasticity; . /feed; ; elasticity – SOFA. SOFA - Topic Tag: elasticity. /elastoplastic; . /feed; ; Elastoplastic – SOFA. SOFA - Topic Tag: Elastoplastic. /energy; . /feed; ; Energy – SOFA. SOFA - Topic Tag: Energy. /engine-data-update-energy; . /feed; ; engine data update energy – SOFA. SOFA - Topic Tag: engine data update energy. /error; . /feed; ; error – SOFA. SOFA - Topic Tag: error. /error-5; . /feed; ; Error 5 – SOFA. SOFA - Topic Tag: Error 5. /error-determination; . /feed; ; error determination – SOFA. SOFA - Topic Tag: error determination. /event; . /feed; ; event – SOFA. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. SOFA - Topic Tag: external data COM port. /extraction-of-the-equation; . /feed; ; Extraction of the equation – SOFA. SOFA - Topic Tag: Extraction of the equation. /features; . /feed; ; Features – SOFA. SOFA - Topic Tag: Features. /fedora-64-bits; . /feed; ; Fedora 64 bi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:441756,error,error,441756,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"tion. template<class DataTypes > . Data< SeqPositions > sofa::component::engine::generate::MeshClosingEngine< DataTypes >::position. outputs . ◆ quads. template<class DataTypes > . Data< SeqQuads > sofa::component::engine::generate::MeshClosingEngine< DataTypes >::quads. Quads of closed mesh (=input quads with current method) . ◆ triangles. template<class DataTypes > . Data< SeqTriangles > sofa::component::engine::generate::MeshClosingEngine< DataTypes >::triangles. Triangles of closed mesh. . Constructor details. ◆ MeshClosingEngine(). template<class DataTypes > . sofa::component::engine::generate::MeshClosingEngine< DataTypes >::MeshClosingEngine ; (; ). inlineprotected . ◆ ~MeshClosingEngine(). template<class DataTypes > . sofa::component::engine::generate::MeshClosingEngine< DataTypes >::~MeshClosingEngine ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::MeshClosingEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::MeshClosingEngine< DataTypes >::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::MeshClosingEngine< DataTypes >::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::MeshClosingEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(MeshClosingEngine< DataTypes >, DataTypes) ; , . Inherited ;  . ). sofacomponentenginegenerateMeshClosingEngine; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html:19348,down,down,19348,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,1,['down'],['down']
Availability,"tionLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1650,error,errors,1650,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['error'],['errors']
Availability,"tionSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; std::ofstream * outfile;  ; unsigned int nextTime;  ; double lastTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:4028,down,down,4028,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['down'],['down']
Availability,"tivate multi_grid resolution (NOT STABLE YET) . ◆ d_multi_grid_levels. Data<int> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_multi_grid_levels. if multi_grid is active: how many levels to create (>=2) . ◆ d_showCellWidth. Data<SReal> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_showCellWidth. Distance between each constraint cells. . ◆ d_showLevels. Data<int> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_showLevels. Number of constraint levels to display. . ◆ d_showLevelTranslation. Data<type::Vec3> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_showLevelTranslation. Translation between levels. . ◆ d_showTranslation. Data<type::Vec3> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_showTranslation. Position of the first cell. . ◆ d_tol. Data<SReal> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::d_tol. residual error threshold for termination of the Gauss-Seidel algorithm . ◆ displayDebug. sofa::core::objectmodel::RenamedData<bool> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::displayDebug. ◆ f_graph. sofa::core::objectmodel::RenamedData<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::f_graph. ◆ initial_guess. sofa::core::objectmodel::RenamedData<bool> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::initial_guess. ◆ maxF. sofa::core::objectmodel::RenamedData<SReal> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::maxF. ◆ maxIt. sofa::core::objectmodel::RenamedData< int> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::maxIt. ◆ merge_local_levels. sofa::core::objectmodel::RenamedData< int> sofa::component::constraint::lagrangian::solver::LCPConstraintSolver::merge_local_levels. ◆ merge_method. sofa::core::objectmodel::RenamedData< int> sofa::component::constr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:24105,error,error,24105,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['error'],['error']
Availability,"tmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeVectors, VecT), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::Exe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:2366,down,down,2366,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['down'],['down']
Availability,"tor< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< std::string, Data< std::string > * > variablesData;  ;  Protected Attributes inherited from sofa::component::collision::response::contact::CollisionResponse; ContactMap contactMap;  ; std::map< Instance, ContactMap > storedContactMap;  ; std::map< std::pair< std::string, std::pair< std::string, std::string > >, int > errorMsgCount;  ;  Protected Attributes inherited from sofa::core::collision::ContactManager; Intersection * intersectionMethod;  Current intersection method. More...;  ; ContactVector contacts;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ; std::map< Instance, ContactVector > storedContacts;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:2591,error,errorMsgCount,2591,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['error'],['errorMsgCount']
Availability,"traint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; M, . unsigned ; offset . ). overridevirtual . Project the given matrix (Experimental API, see the spec in sofa::core::behavior::BaseProjectiveConstraintSet). ; Reimplemented from sofa::core::behavior::BaseProjectiveCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:24852,down,down,24852,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['down'],['down']
Availability,"traintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::ConstraintProblem ; (; ). ◆ ~ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::ConstraintProblem::clear ; (; int ; nbConstraints). virtual . Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintProblem. ◆ getDfree(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDfree ; (; ). inline . ◆ getDimension(). int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDimension ; (; ). inline . ◆ getF(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getF ; (; ). inline . ◆ getProblemId(). unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getProblemId ; (; ). ◆ getW(). SReal** sofa::component::constraint::lagrangian::solver::ConstraintProblem::getW ; (; ). inline . ◆ solveTimed(). virtual void sofa::component::constraint::lagrangian::solver::ConstraintProblem::solveTimed ; (; SReal ; tolerance, . int ; maxIt, . SReal ; timeout . ). pure virtual . Implemented in sofa::component::constraint::lagrangian::solver::LCPConstraintProblem, and sofa::component::constraint::lagrangian::solver::GenericConstraintProblem. sofacomponentconstraintlagrangiansolverConstraintProblem; Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:3095,toler,tolerance,3095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,1,['toler'],['tolerance']
Availability,"treePos;  the positions of vertices used as input to construct the octree More...;  ; TriangleOctree * octreeRoot;  the first node of the octree More...;  ; int cubeSize;  the size of the octree cube More...;  . Public Member Functions;  SOFA_CLASS (TriangleOctreeModel, TriangleCollisionModel< sofa::defaulttype::Vec3Types >);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void buildOctree ();  init the octree creation More...;  ;  Public Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  SOFA_CLASS (SOFA_TEMPLATE(TriangleCollisionModel, sofa::defaulttype::Vec3Types), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:3770,down,down,3770,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,1,['down'],['down']
Availability,"tribute* sofa::gl::component::shader::OglShaderVisualModel::vrestpositions. Constructor details. ◆ OglShaderVisualModel(). sofa::gl::component::shader::OglShaderVisualModel::OglShaderVisualModel ; (; ). protected . ◆ ~OglShaderVisualModel(). sofa::gl::component::shader::OglShaderVisualModel::~OglShaderVisualModel ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::shader::OglShaderVisualModel::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ computeRestNormals(). void sofa::gl::component::shader::OglShaderVisualModel::computeRestNormals ; (; ). ◆ computeRestPositions(). void sofa::gl::component::shader::OglShaderVisualModel::computeRestPositions ; (; ). ◆ doUpdateVisual(). void sofa::gl::component::shader::OglShaderVisualModel::doUpdateVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::component::visual::VisualModelImpl. ◆ fwdDraw(). void sofa::gl::component::shader::OglShaderVisualModel::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ handleTopologyChange(). void sofa::gl::component::shader::OglShaderVisualModel::handleTopologyChange ; (; ). overridevirtual . Handle topological Changes ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::gl::component::shader::OglShaderVisualModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::rendering3d::OglModel. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglShaderVisualModel::SOFA_CLASS ; (; OglShaderVisualModel ; , . Inherit ;  . ). sofaglcomponentshaderOglShaderVisualModel; Generated on Mon Nov 11 2024 03:19:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:33632,down,down,33632,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,1,['down'],['down']
Availability,"tring &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Protected Member Functions; virtual void updateSceneGraph (sofa::core::BaseMapping *multiMapping, const type::vector< simulation::Node * > &ancestorInputs, type::vector< simulation::Node * > &otherInputs, type::vector< simulation::Node * > &outputs)=0;  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Constructor details. ◆ BaseMultiMappingElement(). sofa::simulation::xml::BaseMultiMappingElement::BaseMultiMappingElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; parent = nullptr . ). Function details. ◆ initNode(). bool sofa::simulation::xml::BaseMultiMappingElement::initNode ; (; ). overridevirtual . Implements sofa::simulation::xml::BaseElement. ◆ updateSceneGraph(). virtual void sofa::simulation::xml::BaseMultiMappingElement::updateSceneGraph ; (; sofa::core::BaseMapping * ; multiMapping, . const type::vector< simulation::Node * > & ; ancestorInputs, . type::vector< simulation::Node * > & ; otherInputs, . type::vector< simulation::Node * > & ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:6165,error,errors,6165,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,1,['error'],['errors']
Availability,"tring & getExecutablePath ();  Get the path of the executable that is currently running. More...;  ; static const std::string & getExecutableDirectory ();  Get the path to the directory of the executable that is currently running. More...;  ; static const std::string & getUserLocalDirectory ();  Get the path to the current user local config directory. More...;  ; static const std::string & getSofaUserLocalDirectory ();  Get the path to the SOFA directory into the current user local config directory. More...;  ; static const std::string & getSofaPathPrefix ();  Get the path to the ""root"" path of Sofa (i.e. the build directory or the installation prefix). More...;  ; static const std::string getSofaPathTo (const std::string &pathFromBuildDir);  Construct a path based on the build dir path of Sofa. More...;  ; static std::map< std::string, std::string > readBasicIniFile (const std::string &path);  Read a file written in a very basic ini-like format. More...;  . Function details. ◆ downcaseString(). std::string sofa::helper::Utils::downcaseString ; (; const std::string & ; s). static . Convert a string to lower case. . ◆ getExecutableDirectory(). const std::string & sofa::helper::Utils::getExecutableDirectory ; (; ). static . Get the path to the directory of the executable that is currently running. . ◆ getExecutablePath(). const std::string & sofa::helper::Utils::getExecutablePath ; (; ). static . Get the path of the executable that is currently running. ; Note that this function uses various non-portable tricks to achieve its goal, and it might not be the most reliable thing ever written. . ◆ getSofaPathPrefix(). const std::string & sofa::helper::Utils::getSofaPathPrefix ; (; ). static . Get the path to the ""root"" path of Sofa (i.e. the build directory or the installation prefix). ; WarningThis function is meant to be used only by the applications that are distributed with SOFA ; ReturnsThe ABSOLUTE path of Sofa build dir (or install dir) . ◆ getSofaPathTo(). const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html:1855,down,downcaseString,1855,api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,1,['down'],['downcaseString']
Availability,"tring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralCorotationalFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved _youngModulus;  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void setComputeGlobalMatrix (bool val);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void getRotation (Transformation &R, Index nodeIdx);  ; void getRotations ();  ; void getElementRotation (Transformation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:5569,down,down,5569,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,1,['down'],['down']
Availability,"tring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:1993,avail,available,1993,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,1,['avail'],['available']
Availability,"true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6776,toler,tolerance,6776,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['toler'],['tolerance']
Availability,"ts first corner in terms of dx, dy, dz (i.e. barycentric coordinates). ; Reimplemented from sofa::component::topology::container::grid::SparseGridTopology. ◆ findNearestCube(). SparseGridRamificationTopology::Index sofa::component::topology::container::grid::SparseGridRamificationTopology::findNearestCube ; (; const type::Vec3 & ; pos, . SReal & ; fx, . SReal & ; fy, . SReal & ; fz . ). overridevirtual . return the cube containing the given point (or -1 if not found), as well as deplacements from its first corner in terms of dx, dy, dz (i.e. barycentric coordinates). ; Reimplemented from sofa::component::topology::container::grid::SparseGridTopology. ◆ getConnexions(). type::vector<type::vector<Connexion*> >* sofa::component::topology::container::grid::SparseGridRamificationTopology::getConnexions ; (; ). inline . ◆ init(). void sofa::component::topology::container::grid::SparseGridRamificationTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::constant::MeshTopology. ◆ intersectionSegmentTriangle(). bool sofa::component::topology::container::grid::SparseGridRamificationTopology::intersectionSegmentTriangle ; (; type::Vec3 ; s0, . type::Vec3 ; s1, . type::Vec3 ; t0, . type::Vec3 ; t1, . type::Vec3 ; t2 . ). protected . ◆ printHexaIdx(). void sofa::component::topology::container::grid::SparseGridRamificationTopology::printHexaIdx ; (; ). ◆ printNbConnexions(). void sofa::component::topology::container::grid::SparseGridRamificationTopology::printNbConnexions ; (; ). ◆ printNeighborhood(). void sofa::component::topology::container::grid::SparseGridRamificationTopology::printNeighborhood ; (; ). debug printings . ◆ printNeighbors(). void sofa::component::topology::container::grid::SparseGridRamificationTopology::printNeighbors ; (; ). ◆ printParents(). void sofa::component::topology::container::grid::SparseGridRamificationTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:52942,down,down,52942,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,1,['down'],['down']
Availability,"ttributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualManagerSecondaryPass, VisualManagerPass);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void bindInput (core::visual::VisualParams *);  ; void unbindInput ();  ; sofa::gl::FrameBufferObject & getFBO () override;  ; const sofa::core::objectmodel::TagSet & getOutputTags ();  ;  Public Member Functions inherited from sofa::gl::component::shader::VisualManagerPass;  SOFA_CLASS (VisualManagerPass, core::visual::VisualManager);  ;  VisualManagerPass ();  ;  ~VisualManagerPass () override;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:3805,down,down,3805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,1,['down'],['down']
Availability,"ty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ computeSecondDerivativeArea(). template<class TIn , class TOut > . auto sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >::computeSecondDerivativeArea ; (; const sofa::type::fixed_array< sofa::type::Vec3, 3 > & ; triangleVertices). static . ◆ doUpdateK(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >::doUpdateK ; (; const core::MechanicalParams * ; mparams, . const Data< VecDeriv_t< Out > > & ; childForce, . SparseKMatrixEigen & ; matrix . ). overrideprotectedvirtual . Implements sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >. ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ matrixFreeApplyDJT(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >::matrixFreeApplyDJT ; (; const core::MechanicalParams * ; mparams, . Real ; kFactor, . Data< VecDeriv_t< In > > & ; parentForce, . const Data< VecDeriv_t< In > > & ; parentDisplacement, . const Data< VecDeriv_t< Out > > & ; childForce . ). overrideprotectedvirtual . Implements sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >. ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(AreaMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true) ;  . ). sofacomponentmappingnonlinearAreaMapping; Generated on Mon Nov 11 2024 02:51:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html:25006,down,down,25006,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,1,['down'],['down']
Availability,"typedef Mat<6, 6, float> sofa::type::Mat6x6f. ◆ Matrix2. typedef Mat<2,2,SReal> sofa::type::Matrix2. ◆ Matrix3. typedef Mat<3,3,SReal> sofa::type::Matrix3. ◆ Matrix4. typedef Mat<4,4,SReal> sofa::type::Matrix4. ◆ Quatd. using sofa::type::Quatd = typedef type::Quat<double>. ◆ Quatf. using sofa::type::Quatf = typedef type::Quat<float>. ◆ rebind_to. template<class T , class B > . using sofa::type::rebind_to = typedef typename Rebind<T, B>::to. Convenient alias to ease usage of Rebind.; Example: 1) sofa::type::rebind_to< sofa::type::vector<int>, float> is of type sofa::type::vector<float>. In this example, sofa::type::vector has a typedef rebind_to that will be used to deduce the type. 2) sofa::type::rebind_to< sofa::type::Quat<float>, double> is of type sofa::type::Quat<double>. In this example, sofa::type::Quat does not have a typdef rebind_to. 3) It makes no sense to use sofa::type::rebind on types having more than one template parameter, such as sofa::type::fixed_array. A compilation error would occur. . ◆ stable_vector. template<class T , class A = std::allocator<T>> . using sofa::type::stable_vector = typedef boost::container::stable_vector<T,A>. ◆ Vec1. typedef Vec<1,SReal> sofa::type::Vec1. ◆ Vec1d. typedef Vec<1,double> sofa::type::Vec1d. ◆ Vec1f. typedef Vec<1,float> sofa::type::Vec1f. ◆ Vec1i. typedef Vec<1,int> sofa::type::Vec1i. ◆ Vec1u. typedef Vec<1,unsigned> sofa::type::Vec1u. ◆ Vec2. typedef Vec<2,SReal> sofa::type::Vec2. ◆ Vec2d. typedef Vec<2,double> sofa::type::Vec2d. ◆ Vec2f. typedef Vec<2,float> sofa::type::Vec2f. ◆ Vec2i. typedef Vec<2,int> sofa::type::Vec2i. ◆ Vec2u. typedef Vec<2,unsigned> sofa::type::Vec2u. ◆ Vec3. typedef Vec<3,SReal> sofa::type::Vec3. ◆ Vec3d. typedef Vec<3,double> sofa::type::Vec3d. ◆ Vec3f. typedef Vec<3,float> sofa::type::Vec3f. ◆ Vec3i. typedef Vec<3,int> sofa::type::Vec3i. ◆ Vec3u. typedef Vec<3,unsigned> sofa::type::Vec3u. ◆ Vec4. typedef Vec<4,SReal> sofa::type::Vec4. ◆ Vec4d. typedef Vec<4,double> sofa::type::Vec4d. ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:27194,error,error,27194,api/master/sofa/html/namespacesofa_1_1type.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html,1,['error'],['error']
Availability,"ual void initFromVertexMass ();  ; virtual bool checkMassDensity ();  ; virtual void initFromMassDensity ();  ; virtual bool checkTotalMass ();  ; virtual void checkTotalMassInit ();  ; virtual void initFromTotalMass ();  ; bool checkEdgeMass ();  ; void initFromVertexAndEdgeMass ();  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:11647,recover,recover,11647,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['recover'],['recover']
Availability,"ualModel; Data< bool > d_enable;  Display the object or not. More...;  . Protected Attributes; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMacro (const unsigned int index, const std::string &name, const std::string &value);  ; void setTexture (const unsigned int index, const char *name, unsigned short unit);  ; void setInt (const unsigned int index, const char *name, int i);  ; void setInt2 (const unsigne",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:3606,down,down,3606,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['down'],['down']
Availability,"uble lastTime;  ; double loopTime;  ; std::vector< TriangleIncisionInformation > triangleIncisionInformation;  ; std::vector< std::string > linesAboutIncision;  ; std::vector< Index > errorTrianglesIndices;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologicalChangeProcessor, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void readDataFile ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setTime (double time);  ; void processTopologicalChanges ();  ; void processTopologicalChanges (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateTriangleIncisionInformation ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:6144,down,down,6144,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['down'],['down']
Availability,"uctor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-ubuntu; ; SOFA - Topic: [SOLVED] Error in Building Sofa 20.06 version on Ubuntu. /error-in-building-sofa-using-cmake; . /feed; ; [SOLVED] Error in building SOFA using cmake – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /4; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /5; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /error-in-compiling-softrobots-plugin-cableconstraint-in-sofa-21-06-version; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:294477,error,error-in-configuring-sofa,294477,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-in-configuring-sofa']
Availability,"uildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; SReal getElementMass (sofa::Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool isDiagonal () const override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; template<class T > ; void loadFromFileRigidImpl (const string &filename);  ; template<class T > ; Vec6 getMomentumRigid3DImpl (const MechanicalParams *, const DataVecCoord &d_x, const DataVecDeriv &d_v) const;  ; template<class T > ; Vec6 getMomentumVec3DImpl (const MechanicalParams *, const DataVecCoord &d_x, const DataVecDeriv &d_v) const;  ; SOFA_COMPONENT_MASS_API void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SOFA_COMPONENT_MASS_API void loadRigidMass (const string &filename);  ; SOFA_COMPONENT_MASS_API void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_MASS_API void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_MASS_API SReal getPotentialEnergy (const MechanicalParams *params, const DataVecCoord &d_x) const;  ; SOFA_COMPONENT_MASS_API SReal getPotentialEnergy (const MechanicalParams *params, const DataVecCoord &vx) const;  ; SOFA_COMPONENT_MASS_API void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:6274,down,down,6274,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['down'],['down']
Availability,"ular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2644,failure,failure,2644,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,1,['failure'],['failure']
Availability,"ulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The parent coordinates are transferred in the parent states, then the scene is initialized, then various mapping functions are applied. The parent states are resized based on the size of the parentCoords vectors. The child state is not resized. Its should be already sized, or its size set automatically during initialization.; Parameters. parentCoordsParent positions (one InVecCoord per parent) ; expectedChildCoordsexpected position of the child corresponding to the parent positions . ◆ setupScene(). template<class _MultiMapping > . void sofa::MultiMapping_test< _MultiMapping >::setupScene ; (; int ; numParents). inline . Create scene with given number of parent states. Currently, only one child state is handled. All the parents are set as child of the root node, while the ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:7020,error,errors,7020,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['error'],['errors']
Availability,"ull_request; ; SOFA - Topic: [SOLVED] cloning_to_make_pull_request. /cloth-on-a-table-with-collision-and-friction; ; SOFA - Topic: Cloth on a table with Collision and friction. /cmake-based-installer-for-sofa-framework; . /feed; ; CMake-based installer for SOFA framework – SOFA. /page; . /2; ; SOFA - Topic: CMake-based installer for SOFA framework. /5; ; SOFA - Topic: CMake-based installer for SOFA framework. SOFA - Topic: CMake-based installer for SOFA framework. /cmake-cant-find-boost-library; ; SOFA - Topic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:274938,error,error,274938,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error']
Availability,"ullptr);  . Attribute details. ◆ contacts. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . std::vector< sofa::core::collision::DetectionOutput* > sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contacts. protected . ◆ d_mu. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Data<double> sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::d_mu. protected . friction coefficient (0 for frictionless contacts) . ◆ d_tol. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Data<double> sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::d_tol. protected . tolerance for the constraints resolution (0 for default tolerance) . ◆ intersectionMethod. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Intersection* sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::intersectionMethod. protected . ◆ m_constraint. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . constraint::lagrangian::model::UnilateralLagrangianConstraint<sofa::defaulttype::Vec3Types>::SPtr sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::m_constraint. protected . ◆ mappedContacts. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . std::vector< std::pair< std::pair<int, int>, double > > sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:17205,toler,tolerance,17205,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,2,['toler'],['tolerance']
Availability,um. /defrost-team-winner-of-the-sofa-awards-2019; ; SOFA – Defrost team: winner of the SOFA Awards 2019. /demonstration-at-sfo-2017-in-paris; ; SOFA – Demonstration at SFO 2017 in Paris!. /discover-sofa-at-mmvr; ; SOFA – Discover SOFA and meet us at MMVR. /enjoy-the-leapmotion-in-sofa; ; SOFA – Enjoy the LeapMotion in SOFA!. /entrepreneurship-with-sofa; ; SOFA – Entrepreneurship with SOFA. /focus-on-infinytech3d; ; SOFA – Focus on InfinyTech3D. /fraunhofer-ipa-joins-the-sofa-consortium; ; SOFA – Fraunhofer IPA joins the SOFA Consortium. /fraunhofer-poster-at-hamlyn-symposium; ; SOFA – Fraunhofer poster at Hamlyn Symposium. /inria-nafems-tech-day-a-success; ; SOFA – Inria-NAFEMS Tech Day: a success!. /interested-in-sofa-the-consortium-answers-you; ; SOFA – Interested in SOFA? The Consortium answers you!. /invitation-to-mimesis-teams-retreat; ; SOFA – Invitation to Mimesis team’s retreat. /invitation-to-publish-at-annsim; ; SOFA – Invitation to publish at ANNSIM. /jobs-are-available; ; SOFA – Jobs are available!. /join-the-network-sofa-on-linkedin; ; SOFA – Join the network SOFA on LinkedIn. /lets-meet-at-imsh-2016; ; SOFA – Let’s meet at IMSH 2016 !. /medfit-2018-in-strasbourg; ; SOFA – MedFIT 2018 in Strasbourg. /meet-sofa-at-poss-2016; ; SOFA – Meet SOFA at POSS 2016. /meet-sofa-in-conferences-miccai-and-cmbbe; ; SOFA – Meet SOFA in conferences: MICCAI and CMBBE. /meet-us-at-robosoft-2022; ; SOFA – Meet us at RoboSoft 2022!. /meet-us-at-siggraph-asia-2017; ; SOFA – Meet us at SIGGRAPH Asia 2017. /new-article-about-the-consortium; ; SOFA – New article about the Consortium. /new-consortium-member-kyungpook-university; ; SOFA – New Consortium member: Kyungpook University. /new-engineering-forces-for-sofa; ; SOFA – New engineering forces for SOFA. /new-framework-for-soft-robots-with-sofa; ; SOFA – New framework for soft robots with SOFA. /new-geomagic-plugin; ; SOFA – New Geomagic plugin. /new-job-available-at-anatoscope; ; SOFA – New job available at Anatoscope!. /new-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:3817,avail,available,3817,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['avail'],['available']
Availability,"undError … ‘Sofa.Helper’ with Binary install v21.06.02. /modules-attributes; ; SOFA - Topic: [SOLVED] Modules, attributes. /monitor-not-exporting-data; ; SOFA - Topic: [SOLVED] Monitor not exporting data. /mounting-a-rigid-object-to-a-single-point; ; SOFA - Topic: Mounting a rigid object to a single point. /movement-restriction-at-some-points-of-an-object; ; SOFA - Topic: [SOLVED] Movement restriction at some points of an object. /moving-a-model-with-key-controls; ; SOFA - Topic: [SOLVED] Moving a model with key controls. /moving-an-object-by-keyboard; ; SOFA - Topic: [SOLVED] Moving an object by keyboard. /moving-the-starting-point-of-a-beam; ; SOFA - Topic: [SOLVED] Moving the starting point of a beam. /moving-to-github-discussions-lets-vote; ; SOFA - Topic: Moving to GitHub discussions –> let’s vote!. /multimaterial-soft-robotic-finger-simulation-issue; ; SOFA - Topic: Multimaterial soft robotic finger simulation issue. /multiple-errors-when-building-sofa-on-win7-vs2012; ; SOFA - Topic: [SOLVED] Multiple Errors when building SOFA on Win7, VS2012. /multiple-objects-in-a-obj-file; ; SOFA - Topic: Multiple objects in a .obj file. /multiple-tags-for-an-object; ; SOFA - Topic: [SOLVED] Multiple tags for an object?. /multithreading-in-python; ; SOFA - Topic: [SOLVED] Multithreading in Python; SOFA - Topic: [SOLVED] Multithreading in Python. /multithreading-plugin-in-pyscn; ; SOFA - Topic: [SOLVED] Multithreading plugin in .pyscn. /muscle-contraction-simulation; ; SOFA - Topic: [SOLVED] Muscle contraction simulation. /narrow-phases; ; SOFA - Topic: Narrow phases ?. /natural-vibration-problem-using-a-cantilever-beam; ; SOFA - Topic: Natural vibration problem using a cantilever beam. /navigation-recorded-camera; ; SOFA - Topic: Navigation Recorded Camera. /navigationrecordedcamera-scn-not-working; ; SOFA - Topic: [SOLVED] NavigationRecordedCamera.scn not working ?. /ncremental-iterative-nonlinear-fea-with-deformation-dependent-loads; ; SOFA - Topic: Incremental-Iterative N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:351856,error,errors-when-building-sofa-on-,351856,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['errors-when-building-sofa-on-']
Availability,"upledConstraint…. /where-is-the-modeler-how-to-run-tutorials; ; SOFA - Topic: Where is the modeler / how to run tutorials?. /where-should-i-start-to-read-the-code; . /feed; ; [SOLVED] Where should I start to read the code – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Where should I start to read the code. /11; ; SOFA - Topic: [SOLVED] Where should I start to read the code. /3; ; SOFA - Topic: [SOLVED] Where should I start to read the code. SOFA - Topic: [SOLVED] Where should I start to read the code. /which-matrix-should-i-use; ; SOFA - Topic: [SOLVED] which matrix should I use ?. /why-both-fem-and-pdeode-solvers; . /feed; ; [SOLVED] Why both FEM and PDE/ODE Solvers? – SOFA. SOFA - Topic: [SOLVED] Why both FEM and PDE/ODE Solvers?. /why-no-one-answered-my-question%EF%BC%9F; . /feed; ; [SOLVED] Why no one answered my question？ – SOFA. SOFA - Topic: [SOLVED] Why no one answered my question？. /windows-10-gtx-970-download-install-execute-crash-wtf; . /feed; ; windows 10, gtx 970, download, install, execute, crash, wtf ? – SOFA. SOFA - Topic: windows 10, gtx 970, download, install, execute, crash, wtf ?. /windows-compile-error-msbuild-exe-sofa-17-12; ; SOFA - Topic: Windows compile error – MSBuild.exe (sofa 17.12). /windows-dependency-pack-for-vs-2019; ; SOFA - Topic: [SOLVED] Windows Dependency Pack for VS 2019. /windows-documentation-still-up-to-date; . /feed; ; [SOLVED] Windows documentation – still up to date? – SOFA. SOFA - Topic: [SOLVED] Windows documentation – still up to date?. /wonder-about-fem-model-for-bending-flat-element; ; SOFA - Topic: [SOLVED] Wonder about FEM model for REISSNER-MINDLIN FLAT SHELL. /working-example-on-simple-suturing-with-suturepointperformer; ; SOFA - Topic: [SOLVED] Working example on simple suturing with SuturePointPerformer. /working-with-obj-files-in-sofa; ; SOFA - Topic: [SOLVED] Working with .obj-files in SOFA. /write-an-xml-file-with-sofa; ; SOFA - Topic: Write an XML file with SOFA. /writing-a-scene-in-cpp-fails; ; SOFA - Topic:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:421613,down,download,421613,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['down'],['download']
Availability,"uteMechanicalMatricesByCondensation. protectedvirtual . Reimplemented in sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ computeMechanicalMatricesByCondensation() [2/2]. template<class T > . void sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< T >::computeMechanicalMatricesByCondensation ; (; ElementStiffness & ; K, . ElementMass & ; M, . const int ; elementIndice, . int ; level . ). protectedvirtual . condensate matrice from the (virtual) finest level to the actual mechanical level recursive function if level is the finest level, matrices are built as usual else finer matrices are built by condensation and added to the current matrices by addFineToCoarse . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass, DataTypes) ;  . ). sofacomponentsolidmechanicsfemnonuniformNonUniformHexahedronFEMForceFieldAndMass; Generated on Mon Nov 11 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:36716,down,down,36716,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['down'],['down']
Availability,"utes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html:1770,down,down,1770,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,1,['down'],['down']
Availability,"utes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ScaleTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multipl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html:2101,down,down,2101,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,1,['down'],['down']
Availability,vents in SOFA. /kinematic-chain-creation; . /feed; ; [SOLVED] Kinematic chain creation – SOFA. SOFA - Topic: [SOLVED] Kinematic chain creation. /kinematic-constraints-between-rigid-bodies-list-of-available-joints; ; SOFA - Topic: [SOLVED] Kinematic constraints between rigid bodies (list of available joints). /launching-sofa-from-matlab-script; ; SOFA - Topic: Launching SOFA from Matlab script. /leap-motion-and-sensable-phantom-omni; . /feed; ; [SOLVED] Leap Motion and Sensable (Phantom Omni) – SOFA. SOFA - Topic: [SOLVED] Leap Motion and Sensable (Phantom Omni). /libsofahelper-so; ; SOFA - Topic: [SOLVED] libSofaHelper.so. /linearmovementconstraint-on-beam-indices; ; SOFA - Topic: Move a beam node with ‘LinearMovementConstraint’. /linker-errors-while-compiling-v15-12-in-vs-2015-on-windows-8-1; . /feed; ; [SOLVED] Linker Errors while compiling v15.12 in VS 2015 on Windows 8.1 – SOFA. SOFA - Topic: [SOLVED] Linker Errors while compiling v15.12 in VS 2015 on Windows 8.1. /linking-error-with-xitact-plugin; . /page; . /2; ; SOFA - Topic: Linking error with Xitact Plugin. /5; ; SOFA - Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:340990,error,error-with-xitact-plugin,340990,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['error-with-xitact-plugin']
Availability,"vents, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ShapeMatching, DataTypes), core::DataEngine);  ;  ShapeMatching ();  ;  ~ShapeMatching () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doUpdate ();  Where you put your engine's impl. More...;  ; void doUpdate ();  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html:3031,down,down,3031,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,1,['down'],['down']
Availability,"vents, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeMaterialStiffness (int i, Index &a, Index &b, Index &c) override;  ; void getFiberDir (int element, Deriv &dir);  ; void createTriangleInfo (Index triangleIndex, TriangleFiberDirection &, const core::topology::BaseMeshTopology::Triangle &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:6087,down,down,6087,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['down'],['down']
Availability,"visual::BaseCamera::getStereoMode ; (; ). inlinevirtual . ◆ getStereoShift(). virtual double sofa::component::visual::BaseCamera::getStereoShift ; (; ). inlinevirtual . ◆ getStereoStrategy(). virtual StereoStrategy sofa::component::visual::BaseCamera::getStereoStrategy ; (; ). inlinevirtual . ◆ getZFar(). double sofa::component::visual::BaseCamera::getZFar ; (; ). inline . ◆ getZNear(). double sofa::component::visual::BaseCamera::getZNear ; (; ). inline . ◆ handleEvent(). void sofa::component::visual::BaseCamera::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::visual::RecordedCamera. ◆ importParametersFromFile(). bool sofa::component::visual::BaseCamera::importParametersFromFile ; (; const std::string & ; viewFilename). ◆ init(). void sofa::component::visual::BaseCamera::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::visual::RecordedCamera. ◆ internalUpdate(). virtual void sofa::component::visual::BaseCamera::internalUpdate ; (; ). inlinevirtual . ◆ isActivated(). bool sofa::component::visual::BaseCamera::isActivated ; (; ). ◆ isStereo(). virtual bool sofa::component::visual::BaseCamera::isStereo ; (; ). inlinevirtual . ◆ manageEvent(). virtual void sofa::component::visual::BaseCamera::manageEvent ; (; core::objectmodel::Event * ; event). pure virtual . Implemented in sofa::component::visual::InteractiveCamera, and sofa::component::visual::Camera. ◆ moveCamera(). void sofa::component::visual::BaseCamera::moveCamera ; (; const type::Vec3 & ; p, . const Quat & ; q . ). ◆ reinit(). void sofa::component::visual::BaseCamera::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:28461,down,down,28461,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['down'],['down']
Availability,"void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  . events; Methods related to Event processing . Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  . internalupdate; Methods related to tracking of data and the internal update . void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  . control; Basic control . void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  . Additional Inherited Members;  Public Attributes inherited",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:11195,down,down,11195,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['down'],['down']
Availability,"void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual type::vector< std::string > getConstraintIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:15190,down,down,15190,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,1,['down'],['down']
Availability,"wdDraw(). void sofa::gl::component::shader::VisualManagerPass::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ getFBO(). virtual sofa::gl::FrameBufferObject& sofa::gl::component::shader::VisualManagerPass::getFBO ; (; ). inlinevirtual . Reimplemented in sofa::gl::component::shader::VisualManagerSecondaryPass. ◆ getOutputName(). std::string sofa::gl::component::shader::VisualManagerPass::getOutputName ; (; ). ◆ handleEvent(). void sofa::gl::component::shader::VisualManagerPass::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ hasFilledFbo(). bool sofa::gl::component::shader::VisualManagerPass::hasFilledFbo ; (; ). ◆ init(). void sofa::gl::component::shader::VisualManagerPass::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::gl::component::shader::VisualManagerSecondaryPass. ◆ isPrerendered(). virtual bool sofa::gl::component::shader::VisualManagerPass::isPrerendered ; (; ). inlinevirtual . ◆ postDrawScene(). void sofa::gl::component::shader::VisualManagerPass::postDrawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called after rendering the scene. ; Reimplemented from sofa::core::visual::VisualManager. ◆ preDrawScene(). void sofa::gl::component::shader::VisualManagerPass::preDrawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called before rendering the scene. ; Reimplemented from sofa::core::visual::VisualManager.; Reimplemented in sofa::gl::component::shader::VisualManagerSecondaryPass. ◆ SOFA_CLASS(). sofa::gl::component::shader::VisualManagerPass::SOFA_CLASS ; (; VisualManagerPass ; , . core::visual::VisualManager ;  . ). sofaglcomponentshaderV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:20210,down,down,20210,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,1,['down'],['down']
Availability,"while compilation SOFA in Win7. /errors-in-building-sofa; . /feed; ; [SOLVED] Errors in building SOFA – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Errors in building SOFA. /3; ; SOFA - Topic: [SOLVED] Errors in building SOFA. SOFA - Topic: [SOLVED] Errors in building SOFA. /errors-in-qt-creator; . /feed; ; [SOLVED] Issues in Setting up QtCreator – SOFA. SOFA - Topic: [SOLVED] Issues in Setting up QtCreator. /errors-occurred-in-building-with-vs2012-on-win-7-64bit; ; SOFA - Topic: [SOLVED] Errors occurred in building with VS2012 on Win 7 64bit. /errors-when-compiling-cgalplugin-in-vs2017; ; SOFA - Topic: [SOLVED] errors when compiling CGALPLUGIN in VS2017. /errors-when-installing-the-cgal-plugin; ; SOFA - Topic: [SOLVED] Errors when installing the CGAL plugin. /errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Errors while building sofa. /errors-while-building-sofa-python-3; ; SOFA - Topic: Errors While Building Sofa Python 3. /errors-while-building-sofapython3-windows; ; SOFA - Topic: [SOLVED] Errors while building SofaPython3 (Windows). /error-when-compiling-sofapython3; ; SOFA - Topic: [SOLVED] Error when compiling SofaPython3. /error-when-loading-sofapython-plugin; ; SOFA - Topic: Error when loading SofaPython plugin. /error-when-running-scene-in-python-interpreter-with-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Error when running scene in python interpreter with SofaPython3 plugin. /error-while-building-sofa-for-softrobots-plugin-installation; ; SOFA - Topic: Error while building Sofa for SoftRobots plugin installation. /error-while-building-sofa-on-windows-7-qglviewerqt-conflict; ; SOFA - Topic: [SOLVED] Error while building SOFA on Windows 7, QGLViewer/Qt conflict. /error-while-buildin-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while building SOFA in Linux. /error-while-build-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while build SOFA in Linux. /error-while-compiling-sofa-in-mac-os-yosemitegl-shader-support-requires-glew; ; SOFA - Topic: [SOLVED] E",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:297394,error,errors-while-building-,297394,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['error'],['errors-while-building-']
Availability,"with haptics and deformable objects. /8; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compile Fail – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /8; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /physics-slow-down-at-large-youngs-modulus; . /feed; ; [SOLVED] Physics slow down at large Young’s modulus – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /3; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /plugin-creation; ; SOFA - Topic: [SOLVED] plugin creation. /plugin-creation-cmake-error; . /feed; ; [SOLVED] Plugin creation CMake error – SOFA. SOFA - Topic: [SOLVED] Plugin creation CMake error. /plugin-loading-failed; ; SOFA - Topic: [SOLVED] Plugin Loading failed. /plugin-loading-failed-2; ; SOFA - Topic: [SOLVED] Plugin loading failed. /plugin-not-found-pluginexample; ; SOFA - Topic: [SOLVED] Plugin not found: ""PluginExample"". /plugin-not-loaded-after-setting-path; ; SOFA - Topic: [SOLVED] Plugin not loaded after setting path. /pneumatic-actuator-soft-robots-plugin; ; SOFA - Topic: [SOLVED] Pneumatic actuator – Soft Robots plugin. /pneumatic-actuator-using-surfacepressureconstraint; ; SOFA - Topic: Pneumatic Actuator using SurfacePressureConstraint. /point-sets-in-registration-examples; ; SOFA - Topic: point sets in Registration examples. /precomputedconstraintcorrection; ; SOFA - Topic: PrecomputedConstraintCorrection. /precomputedconstraintcorr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:361925,down,down,361925,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['down'],['down']
Availability,"wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:5801,down,down,5801,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['down'],['down']
Availability,"x (either 0, 1 ,2 or 3) of the vertex whose global index is vertexIndex. Returns -1 if none. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ hasLines(). virtual bool sofa::component::topology::container::constant::MeshTopology::hasLines ; (; ). inlinevirtual . ◆ hasPos(). bool sofa::component::topology::container::constant::MeshTopology::hasPos ; (; ); const. overridevirtual . Reimplemented from sofa::core::topology::Topology.; Reimplemented in sofa::component::topology::container::grid::SparseGridTopology, and sofa::component::topology::container::grid::GridTopology. ◆ hasSurface(). virtual bool sofa::component::topology::container::constant::MeshTopology::hasSurface ; (; ). inlinevirtual . ◆ hasVolume(). virtual bool sofa::component::topology::container::constant::MeshTopology::hasVolume ; (; ). inlinevirtual . ◆ init(). void sofa::component::topology::container::constant::MeshTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::topology::container::grid::SparseGridTopology, sofa::component::topology::container::grid::SparseGridRamificationTopology, sofa::component::topology::container::grid::SparseGridMultipleTopology, sofa::component::topology::container::grid::RegularGridTopology, and sofa::component::topology::container::grid::GridTopology. ◆ invalidate(). void sofa::component::topology::container::constant::MeshTopology::invalidate ; (; ). ◆ isLines(). virtual bool sofa::component::topology::container::constant::MeshTopology::isLines ; (; ). inlinevirtual . ◆ isSurface(). virtual bool sofa::component::topology::container::constant::MeshTopology::isSurface ; (; ). inlinevirtual . ◆ isVolume(). virtual bool sofa::component::topology::container::constant::MeshTopology::isVolume ; (; ). inlinevirtual . ◆ reOrientateTriangle(). void sofa::component::topology::container::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html:80421,down,down,80421,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,1,['down'],['down']
Availability,"x *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool isDiagonal () const override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void reinit ();  Update method called whe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:9327,down,down,9327,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['down'],['down']
Availability,"y * m_topology;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CompareTopology, playback::ReadTopology);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processCompareTopology ();  Compute the total number of errors. More...;  ; unsigned int getTotalError ();  Return the total number of errors. More...;  ; const std::vector< unsigned int > & getErrors ();  Return the errors by containers. More...;  ;  Public Member Functions inherited from sofa::component::playback::ReadTopology;  SOFA_CLASS (ReadTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadTopology ();  ; void processReadTopology (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:1954,error,errors,1954,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['error'],['errors']
Availability,"y if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5053,error,errorMax,5053,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['error'],['errorMax']
Availability,"y initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Function details. ◆ computeForce() [1/2]. template<class TDataTypes > . void sofa::component::haptics::NullForceFeedbackT< TDataTypes >::computeForce ; (; const VecCoord & ; , . VecDeriv & ;  . ). inlineoverridevirtual . Implements sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ computeForce() [2/2]. template<class TDataTypes > . void sofa::component::haptics::NullForceFeedbackT< TDataTypes >::computeForce ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal & ; fx, . SReal & ; fy, . SReal & ; fz . ). inlineoverridevirtual . Implements sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ computeWrench(). template<class TDataTypes > . void sofa::component::haptics::NullForceFeedbackT< TDataTypes >::computeWrench ; (; const sofa::type::Transform< SReal > & ; , . const sofa::type::SpatialVector< SReal > & ; , . sofa::type::SpatialVector< SReal > & ; W_tool_world . ). inlineoverridevirtual . Implements sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ init(). template<class TDataTypes > . void sofa::component::haptics::NullForceFeedbackT< TDataTypes >::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::haptics::NullForceFeedbackT< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(NullForceFeedbackT< TDataTypes >, TDataTypes) ; , . MechanicalStateForceFeedback< TDataTypes > ;  . ). sofacomponenthapticsNullForceFeedbackT; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:15912,down,down,15912,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,1,['down'],['down']
Availability,"y(). template<class DataTypes > . SReal sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; mparams, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ); const. overridevirtual . Get the potential energy associated to this ForceField.; Used to estimate the total energy of the system by some post-stabilization techniques.; This method must be implemented by the component, and is usually called by the generic ForceField::getPotentialEnergy() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ getSprings(). template<class DataTypes > . const sofa::type::vector< Spring >& sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::getSprings ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::spring::TriangleBendingSprings< DataTypes >. ◆ initGnuplot(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::initGnuplot ; (; const std::string ; path). overridevirtual . initialization to export kinetic, potential energy and force intensity to gnuplot files format ; Reimplemented from sofa::core::behavior::BaseInteractionForceField. ◆ initializeTopologyHandler(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::initializeTopologyHandler ; (; sofa::core::topology::TopologySubsetIndices & ; indices, . core::topology::BaseMeshTopology * ; topology, . sofa::Index ; mstateId . ). protected . ◆ load(). template<class DataTypes > . bool sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::load ; (; const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:39207,down,down,39207,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['down'],['down']
Availability,"ype::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; static constexpr auto Nin;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(SquareDistanceMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void applyJ (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:3611,down,down,3611,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,1,['down'],['down']
Availability,"ype::Mat< 2, 2, Real > & ; U, . type::Vec< 2, Real > & ; S, . type::Mat< 2, 2, Real > & ; V . ). static . ◆ SVD_stable() [2/3]. template<class Real > . bool sofa::helper::Decompose< Real >::SVD_stable ; (; const type::Mat< 3, 2, Real > & ; F, . type::Mat< 3, 2, Real > & ; U, . type::Vec< 2, Real > & ; S, . type::Mat< 2, 2, Real > & ; V . ). static . SVD based on the Eigensystem decomposition of FtF with robustness against inversion and degenerate configurations Returnstrue in a degenerate case U & V are rotations Warning eigenvalues are not guaranteed to be positive, eigenvalues are not sorted . ◆ SVD_stable() [3/3]. template<class Real > . bool sofa::helper::Decompose< Real >::SVD_stable ; (; const type::Mat< 3, 3, Real > & ; F, . type::Mat< 3, 3, Real > & ; U, . type::Vec< 3, Real > & ; S, . type::Mat< 3, 3, Real > & ; V . ). static . SVD based on the Eigensystem decomposition of FtF with robustness against inversion and degenerate configurations Returnstrue iff the stabilization processed an inverted rotation or a degenerate case U & V are rotations Warning eigenvalues are not guaranteed to be positive, eigenvalues are not sorted . ◆ SVDGradient_dUdV() [1/2]. template<class Real > . bool sofa::helper::Decompose< Real >::SVDGradient_dUdV ; (; const type::Mat< 3, 2, Real > & ; U, . const type::Vec< 2, Real > & ; S, . const type::Mat< 2, 2, Real > & ; V, . const type::Mat< 3, 2, Real > & ; dM, . type::Mat< 3, 2, Real > & ; dU, . type::Mat< 2, 2, Real > & ; dV . ). static . SVD rotation gradients, computes the rotation gradients dU & dV T. Papadopoulo, M.I.A. Lourakis, ""Estimating the Jacobian of the Singular Value Decomposition: Theory and Applications"", European Conference on Computer Vision, 2000 . ◆ SVDGradient_dUdV() [2/2]. template<class Real > . bool sofa::helper::Decompose< Real >::SVDGradient_dUdV ; (; const type::Mat< 3, 3, Real > & ; U, . const type::Vec< 3, Real > & ; S, . const type::Mat< 3, 3, Real > & ; V, . const type::Mat< 3, 3, Real > & ; dM, . type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html:23750,robust,robustness,23750,api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,1,['robust'],['robustness']
Availability,"ypes > . float sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::getIndicesScale. ◆ getPointPosition(). template<class DataTypes > . const DataTypes::Coord & sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::getPointPosition ; (; const PointID ; pointId); const. ◆ getPointRestPosition(). template<class DataTypes > . const DataTypes::Coord & sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::getPointRestPosition ; (; const PointID ; pointId); const. ◆ getPointSetCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::getPointSetCenter. return the centroid of the set of points . ◆ init(). template<class DataTypes > . void sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >, and sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >. ◆ initPointAdded(). template<class DataTypes > . void sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::initPointAdded ; (; PointID ; indice, . const core::topology::PointAncestorElem & ; ancestorElem, . const type::vector< VecCoord * > & ; coordVecs, . const type::vector< VecDeriv * > & ; derivVecs . ). virtual . Process the added point initialization according to the topology and local coordinates. ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >, and sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ initPointsAdded(). template<class DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html:22013,down,down,22013,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,1,['down'],['down']
Availability,"ypes >::f_outputX. protected . output array of projected 3d points . ◆ focal_distance. template<class DataTypes > . Data<Real> sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::focal_distance. protected . focal distance . ◆ proj_mat. template<class DataTypes > . Data<ProjMat> sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::proj_mat. protected . projection matrix . Constructor details. ◆ ProjectiveTransformEngine(). template<class DataTypes > . sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::ProjectiveTransformEngine. protected . ◆ ~ProjectiveTransformEngine(). template<class DataTypes > . sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::~ProjectiveTransformEngine ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ProjectiveTransformEngine< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginetransformProjectiveTransformEngine; Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:18253,down,down,18253,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['down'],['down']
Availability,"zes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to compare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2194,failure,failure,2194,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,1,['failure'],['failure']
Availability," 679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof Class Reference . #include <StopperLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof:. [legend]. Protected Attributes; double _invW;  ; double _w;  ; double _min;  ; double _max;  . Public Member Functions;  StopperLagrangianConstraintResolution1Dof (const double &min, const double &max);  ; void init (int line, SReal **w, SReal *force) override;  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; void resolution (int line, SReal **, SReal *d, SReal *force, SReal *) override;  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintResolution;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Attribute details. ◆ _invW. double sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof::_invW. protected . ◆ _max. double sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof::_max. protected . ◆ _min. double sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof::_min. protected . ◆ _w. double sofa::component::constraint::lagrangian::model::StopperLagra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof.html:1196,toler,tolerance,1196,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof.html,1,['toler'],['tolerance']
Availability," ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ generateRandomDirections(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::generateRandomDirections. protected . ◆ generateRandomPoint(). template<class DataTypes > . type::Vec< 3, typename DataTypes::Real > sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::generateRandomPoint ; (; const Vec3 & ; minBBox, . const Vec3 & ; maxBBox . ). protected . ◆ getBBox(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::getBBox ; (; Vec3 & ; minBBox, . Vec3 & ; maxBBox . ). protected . ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isInside(). template<class DataTypes > . bool sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::isInside ; (; Coord ; p). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(RandomPointDistributionInSurface< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). ◆ testDistance(). template<class DataTypes > . bool sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::testDistance ; (; Coord ; p). protected . sofacomponentengineg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:22424,down,down,22424,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['down'],['down']
Availability," ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void setObject1 (MechanicalState *object1);  ; void setObject2 (MechanicalState *object2);  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:5139,down,down,5139,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,1,['down'],['down']
Availability," ; args . ). inlinestatic . Appends strings to an existing path, ensuring exactly one directory separator (/) between each part. . ◆ cleanPath(). std::string sofa::helper::system::FileSystem::cleanPath ; (; const std::string & ; path, . separator ; s = SLASH . ). static . Clean path (backslashes, extra slashes...) . ◆ convertBackSlashesToSlashes(). std::string sofa::helper::system::FileSystem::convertBackSlashesToSlashes ; (; const std::string & ; path). static . Replace backslashes with slashes. . ◆ convertSlashesToBackSlashes(). std::string sofa::helper::system::FileSystem::convertSlashesToBackSlashes ; (; const std::string & ; path). static . Replace slashes with backslashes. . ◆ createDirectory(). bool sofa::helper::system::FileSystem::createDirectory ; (; const std::string & ; path). static . Create a directory. (This function accepts relative paths) ; On Unix platform, the directory is created with permissions 0755. On Windows, it is created with no special attributes. Returnstrue on error . ◆ exists(). bool sofa::helper::system::FileSystem::exists ; (; const std::string & ; path). static . Return true if and only if the given file exists. . ◆ findFiles(). int sofa::helper::system::FileSystem::findFiles ; (; const std::string & ; directoryPath, . std::vector< std::string > & ; outputFilePaths, . const std::string & ; extension, . const int ; depth = 0 . ). static . Find the files from a directory which match the given extension. ; It pushes the files absolute paths in the vector provided in argument. WarningThe directory must exist. ; Returnsthe number of files found or -1 as error . ◆ findOrCreateAValidPath(). std::string sofa::helper::system::FileSystem::findOrCreateAValidPath ; (; const std::string ; path). static . check that all element in the path exists or create them. (This function accepts relative paths) ; Returnsthe valid path. . ◆ getExtension(). std::string sofa::helper::system::FileSystem::getExtension ; (; const std::string & ; filename). static ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html:5392,error,error,5392,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,1,['error'],['error']
Availability," ; ind_ta, . const TetraID ; ind_tb, . sofa::type::vector< TetrahedronID > & ; indices . ); const. finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) ; Finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) . ◆ getTetraInBall() [3/3]. template<class DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::getTetraInBall ; (; const TetraID ; ind_ta, . Real ; r, . sofa::type::vector< TetrahedronID > & ; indices . ); const. finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) ; Finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) . ◆ init(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >. ◆ isPointInTetrahedron() [1/2]. template<class DataTypes > . bool sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::isPointInTetrahedron ; (; const TetraID ; i, . const sofa::type::Vec< 3, Real > & ; p . ); const. ◆ isPointInTetrahedron() [2/2]. template<class DataTypes > . bool sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::isPointInTetrahedron ; (; const TetraID ; ind_t, . const sofa::type::Vec< 3, Real > & ; pTest, . sofa::type::Vec< 4, Real > & ; barycentricCoordinates . ); const. return (if the point is in the tetrahedron) the barycentric coordinates of the point in the tetrahedron . ◆ isTetrahedronElongated(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:51097,down,down,51097,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,1,['down'],['down']
Availability," ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:4939,down,down,4939,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,2,['down'],['down']
Availability," ; z . ); const. virtual . Reimplemented in sofa::component::topology::container::constant::SphereQuadTopology. ◆ getPX(). SReal sofa::component::topology::container::constant::CubeTopology::getPX ; (; Index ; i); const. inlineoverridevirtual . Reimplemented from sofa::core::topology::Topology. ◆ getPY(). SReal sofa::component::topology::container::constant::CubeTopology::getPY ; (; Index ; i); const. inlineoverridevirtual . Reimplemented from sofa::core::topology::Topology. ◆ getPZ(). SReal sofa::component::topology::container::constant::CubeTopology::getPZ ; (; Index ; i); const. inlineoverridevirtual . Reimplemented from sofa::core::topology::Topology. ◆ hasPos(). bool sofa::component::topology::container::constant::CubeTopology::hasPos ; (; ); const. inlineoverridevirtual . Reimplemented from sofa::core::topology::Topology. ◆ init(). void sofa::component::topology::container::constant::CubeTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). void sofa::component::topology::container::constant::CubeTopology::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ point(). int sofa::component::topology::container::constant::CubeTopology::point ; (; int ; x, . int ; y, . int ; z, . Plane ; p = PLANE_UNKNOWN . ); const. ◆ reinit(). void sofa::component::topology::container::constant::CubeTopology::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setDx(). void sofa::component::topology::container::constant::CubeTopology::setDx ; (; const Vec3 & ; val). inline . ◆ setDy(). void sofa::component::topology::container::constan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:44522,down,down,44522,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,1,['down'],['down']
Availability," ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ reset(). void sofa::component::io::mesh::OffSequenceLoader::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::io::mesh::OffSequenceLoader::SOFA_CLASS ; (; OffSequenceLoader ; , . MeshOffLoader ;  . ). sofacomponentiomeshOffSequenceLoader; Generated on Mon Nov 11 2024 02:46:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:21460,down,down,21460,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['down'],['down']
Availability," addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  GridMeshCreator ();  ; void doClearBuffers () override;  index of a vertex, given its integer coordinates (between 0 and resolution) in the plane. More...;  ; unsigned vert (unsigned x, unsigned y);  ; void insertUniqueEdge (unsigned a, unsigned b);  insert an edge if it is not redundant More...;  ; void insertTriangle (unsigned a, unsigned b, unsigned c);  insert a triangle (no reduncy checking !) and unique edges More...;  ; void insertQuad (unsigned a, unsigned b, unsigned c, unsigned d);  insert a quad (no reduncy checking !) and unique edges More...;  ;  Protected Member Functions inherited from sofa::core::loader::MeshLoader;  MeshLoader ();  ; virtual void clearBuffers () final;  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p);  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z);  ; void addPolyline (type::vector< Polyline > &pPolylines, Polyline p);  ; void addEdge (type::vector< Edge > &pEdges, const Edge &p);  ; void addEdge (type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1);  ; void addTriangle (type::vector< Triangle > &pTriangles, const Triangle &p);  ; void addTriangle (type::vector< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:16438,redundant,redundant,16438,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['redundant'],['redundant']
Availability," d_computeBoundingBox. Data<bool> sofa::core::behavior::BaseAnimationLoop::d_computeBoundingBox. If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. . ◆ l_node. SingleLink<BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH> sofa::core::behavior::BaseAnimationLoop::l_node. ◆ m_resetTime. SReal sofa::core::behavior::BaseAnimationLoop::m_resetTime. protected . Stores starting time of the simulation. . Constructor details. ◆ BaseAnimationLoop(). sofa::core::behavior::BaseAnimationLoop::BaseAnimationLoop ; (; ). protected . ◆ ~BaseAnimationLoop(). sofa::core::behavior::BaseAnimationLoop::~BaseAnimationLoop ; (; ). overrideprotected . Function details. ◆ getResetTime(). SReal sofa::core::behavior::BaseAnimationLoop::getResetTime ; (; ); const. Returns starting time of the simulation. . ◆ init(). void sofa::core::behavior::BaseAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::simulation::DefaultAnimationLoop. ◆ insertInNode(). bool sofa::core::behavior::BaseAnimationLoop::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::BaseAnimationLoop::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::BaseAnimationLoop::SOFA_ABSTRACT_CLASS ; (; BaseA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:14939,down,down,14939,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['down'],['down']
Availability," f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, DataTypes), Inherit);  ; void init () final;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) final;  ; virtual void roiInit ();  ; virtual bool roiDoUpdate ();  ; virtual void roiDraw (const core::visual::VisualParams *);  ; virtual void roiComputeBBox (const core::ExecParams *, type::BoundingBox &);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html:6005,down,down,6005,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,1,['down'],['down']
Availability," f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Visual3DText, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:2146,down,down,2146,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,1,['down'],['down']
Availability," if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; const sofa::type::vector< Hexahedron > & getHexahedronArray ();  Returns the Hexahedron array. More...;  ; const sofa::type::vector< EdgesInHexahedron",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:5003,down,down,5003,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['down'],['down']
Availability," if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GroupFilterYoungModulus, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html:2606,down,down,2606,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,1,['down'],['down']
Availability," if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(IndexValueMapper, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:2153,down,down,2153,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['down'],['down']
Availability," if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SubsetTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; bool isTheOutputTopologySubdividingTheInputOne () override;  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; Index getGlobIndex (Index ind) override;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:5344,down,down,5344,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['down'],['down']
Availability," m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DisplacementMatrixEngine, DataTypes), SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4));  ;  DisplacementMatrixEngine ();  DisplacementMatrixEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >;  SOFA_CLASS (SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4), sofa::core::DataEngine);  ;  DisplacementTransformEngine ();  DisplacementTransformEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:2414,down,down,2414,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['down'],['down']
Availability,"– SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-training-system-for-interventional; ; SOFA - Topic: [SOLVED] Collision detection of ""Interactive Training System for Interventional…."". /",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:275644,error,error,275644,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['error'],['error']
Availability,"◆ addPointsWarning() [2/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< core::topology::PointAncestorElem > & ; ancestorElems, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [3/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ init(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::QuadSetTopologyModifier. ◆ movePointsProcess(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::movePointsProcess ; (; const sofa::type::vector< PointID > & ; id, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; moveDOF = true . ). protectedvirtual . move input points indices to input new coords. Also propagate event ; Parameters. id: list of indices to move ; ancestors list of ancestors to define relative new position ; coefs: barycoef to locate new coord relatively to ancestors. @moveDOF bool allowing the move (default true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:21645,down,down,21645,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['down'],['down']
Availability,"◆ m_matrixProductKJ. template<class TMatrix > . std::unique_ptr<linearalgebra::SparseMatrixProduct< K_Type, J_Type, KJ_Type> > sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::m_matrixProductKJ. protected . Constructor details. ◆ ConstantSparsityProjectionMethod(). template<class TMatrix > . sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::ConstantSparsityProjectionMethod. ◆ ~ConstantSparsityProjectionMethod(). template<class TMatrix > . sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::~ConstantSparsityProjectionMethod ; (; ). overridedefault . Function details. ◆ computeProjection(). template<class TMatrix > . void sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::computeProjection ; (; const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > ; KMap, . const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > ; J, . Eigen::SparseMatrix< Block, Eigen::RowMajor > & ; JT_K_J . ). overrideprotected . ◆ init(). template<class TMatrix > . void sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class TMatrix > . void sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class TMatrix > . sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >::SOFA_CLASS ; (; SOFA_TEMPLATE(ConstantSparsityProjectionMethod< TMatrix >, TMatrix) ; , . SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix) ;  . ). sofacomponentlinearsystemConstantSparsityProjectionMethod; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html:19461,down,down,19461,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,1,['down'],['down']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:868,error,errorFactorPotentialEnergysofa,868,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html,2,['error'],"['errorFactorPotentialEnergysofa', 'errorMaxsofa']"
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:701,error,errorMaxsofa,701,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,1,['error'],['errorMaxsofa']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dof, including all inherited members. _invWsofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofprotected; _maxsofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofprotected; _minsofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofprotected; _wsofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofprotected; ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int line, SReal **w, SReal *force) overridesofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofinlinevirtual; initForce(int, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; resolution(int line, SReal **, SReal *d, SReal *force, SReal *) overridesofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofinlinevirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; StopperLagrangianConstraintResolution1Dof(const double &min, const double &max)sofa::component::constraint::lagrangian::model::StopperLagrangianConstraintResolution1Dofinline; store(int, SReal *, bool)sofa::core::behavior::ConstraintResolutionvirtual; ~ConstraintResolution()sofa::core::behavior::ConstraintResolutionvirtual. Generated on Mon Nov 11 2024 02:36:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof-members.html:833,toler,tolerance,833,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint_resolution1_dof-members.html,2,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution, including all inherited members. ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int, SReal **, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; initForce(int, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; resolution(int line, SReal **w, SReal *d, SReal *force, SReal *dfree) overridesofa::component::constraint::lagrangian::model::UnilateralConstraintResolutioninlinevirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int, SReal *, bool)sofa::core::behavior::ConstraintResolutionvirtual; UnilateralConstraintResolution()sofa::component::constraint::lagrangian::model::UnilateralConstraintResolutioninline; ~ConstraintResolution()sofa::core::behavior::ConstraintResolutionvirtual. Generated on Mon Nov 11 2024 02:36:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution-members.html:396,toler,tolerance,396,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution-members.html,2,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFriction Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFriction, including all inherited members. _activesofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionprotected; _musofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionprotected; _prevsofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionprotected; _Wsofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionprotected; ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int line, SReal **w, SReal *force) overridesofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionvirtual; initForce(int, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; resolution(int line, SReal **w, SReal *d, SReal *force, SReal *dFree) overridesofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionvirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int line, SReal *force, bool) overridesofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictionvirtual; UnilateralConstraintResolutionWithFriction(SReal mu, PreviousForcesContainer *prev=nullptr, bool *active=nullptr)sofa::component::constraint::lagrangian::model::UnilateralConstraintResolutionWithFrictioninline; ~ConstraintResolution()sofa::core::behavior::Constr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution_with_friction-members.html:841,toler,tolerance,841,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution_with_friction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution_with_friction-members.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution, including all inherited members. _fsofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionprotected; BilateralConstraintResolution(SReal *initF=nullptr)sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutioninline; ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int line, SReal **, SReal *force) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutioninlinevirtual; initForce(int line, SReal *force) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutioninlinevirtual; resolution(int line, SReal **w, SReal *d, SReal *force, SReal *dfree) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutioninlinevirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int line, SReal *force, bool) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutioninlinevirtual; ~ConstraintResolution()sofa::core::behavior::ConstraintResolutionvirtual. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_107ae018aafc07579b59bc9f1062f0eb8.html:744,toler,tolerance,744,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_107ae018aafc07579b59bc9f1062f0eb8.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_107ae018aafc07579b59bc9f1062f0eb8.html,2,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dof Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dof, including all inherited members. _fsofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofprotected; BilateralConstraintResolution3Dof(sofa::type::Vec3d *vec=nullptr)sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofinline; ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int line, SReal **w, SReal *force) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofinlinevirtual; initForce(int line, SReal *force) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofinlinevirtual; invWsofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofprotected; resolution(int line, SReal **, SReal *d, SReal *force, SReal *dFree) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofinlinevirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int line, SReal *force, bool) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolution3Dofinlinevirtual; ~ConstraintResolution()s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_104a6c8042038bf7abfb807d580d58048.html:774,toler,tolerance,774,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_104a6c8042038bf7abfb807d580d58048.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_104a6c8042038bf7abfb807d580d58048.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof, including all inherited members. BilateralConstraintResolutionNDof(unsigned blockSize)sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDofinline; ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; EigenMatrixX typedefsofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof; EigenVectorX typedefsofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int line, SReal **w, SReal *) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDofinlinevirtual; initForce(int, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; resolution(int line, SReal **, SReal *displacement, SReal *force, SReal *) overridesofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDofinlinevirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int, SReal *, bool)sofa::core::behavior::ConstraintResolutionvirtual; wBlocksofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDofprotected; wBlockInvsofa::component::constraint::lagrangian::model::bilateralconstraintreso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_1092d1ba3789788f8c01a3e539f30cd3b.html:637,toler,tolerance,637,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_1092d1ba3789788f8c01a3e539f30cd3b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_1092d1ba3789788f8c01a3e539f30cd3b.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::solver::ConstraintProblem Member List . This is the complete list of members for sofa::component::constraint::lagrangian::solver::ConstraintProblem, including all inherited members. clear(int nbConstraints)sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual; ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblem; dFreesofa::component::constraint::lagrangian::solver::ConstraintProblem; dimensionsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; fsofa::component::constraint::lagrangian::solver::ConstraintProblem; getDfree()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getDimension()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getF()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getProblemId()sofa::component::constraint::lagrangian::solver::ConstraintProblem; getW()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; maxIterationssofa::component::constraint::lagrangian::solver::ConstraintProblem; problemIdsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; solveTimed(SReal tolerance, int maxIt, SReal timeout)=0sofa::component::constraint::lagrangian::solver::ConstraintProblempure virtual; tolerancesofa::component::constraint::lagrangian::solver::ConstraintProblem; Wsofa::component::constraint::lagrangian::solver::ConstraintProblem; ~ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html:1335,toler,tolerance,1335,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html,2,['toler'],"['tolerance', 'tolerancesofa']"
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Member List . This is the complete list of members for sofa::component::constraint::lagrangian::solver::LCPConstraintProblem, including all inherited members. clear(int nbConstraints)sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual; ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblem; dFreesofa::component::constraint::lagrangian::solver::ConstraintProblem; dimensionsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; fsofa::component::constraint::lagrangian::solver::ConstraintProblem; getDfree()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getDimension()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getF()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getProblemId()sofa::component::constraint::lagrangian::solver::ConstraintProblem; getW()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; maxIterationssofa::component::constraint::lagrangian::solver::ConstraintProblem; musofa::component::constraint::lagrangian::solver::LCPConstraintProblem; problemIdsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; solveTimed(SReal tolerance, int maxIt, SReal timeout) overridesofa::component::constraint::lagrangian::solver::LCPConstraintProblemvirtual; tolerancesofa::component::constraint::lagrangian::solver::ConstraintProblem; Wsofa::component::constraint::lagrangian::solver::ConstraintProblem; ~ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html:1414,toler,tolerance,1414,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html,2,['toler'],"['tolerance', 'tolerancesofa']"
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::ConstraintResolution Member List . This is the complete list of members for sofa::core::behavior::ConstraintResolution, including all inherited members. ConstraintResolution(unsigned int nbLines, SReal tolerance=0.0)sofa::core::behavior::ConstraintResolution; getNbLines() constsofa::core::behavior::ConstraintResolutioninline; getTolerance() constsofa::core::behavior::ConstraintResolutioninline; init(int, SReal **, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; initForce(int, SReal *)sofa::core::behavior::ConstraintResolutionvirtual; resolution(int line, SReal **w, SReal *d, SReal *force, SReal *dFree)sofa::core::behavior::ConstraintResolutionvirtual; setNbLines(unsigned int nbLines)sofa::core::behavior::ConstraintResolutioninline; setTolerance(SReal tolerance)sofa::core::behavior::ConstraintResolutioninline; store(int, SReal *, bool)sofa::core::behavior::ConstraintResolutionvirtual; ~ConstraintResolution()sofa::core::behavior::ConstraintResolutionvirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution-members.html:324,toler,tolerance,324,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution-members.html,2,['toler'],['tolerance']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::AspectBuffer Member List . This is the complete list of members for sofa::core::objectmodel::AspectBuffer, including all inherited members. allocate()sofa::core::objectmodel::AspectBuffer; AspectBuffer(AspectPool &pool)sofa::core::objectmodel::AspectBuffer; AtomicInt typedefsofa::core::objectmodel::AspectBufferprotected; availableIDsofa::core::objectmodel::AspectBufferprotected; clear()sofa::core::objectmodel::AspectBuffer; latestIDsofa::core::objectmodel::AspectBufferprotected; poolsofa::core::objectmodel::AspectBufferprotected; pop(AspectRef &id)sofa::core::objectmodel::AspectBuffer; push(AspectRef id)sofa::core::objectmodel::AspectBuffer; ~AspectBuffer()sofa::core::objectmodel::AspectBuffer. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html:448,avail,availableIDsofa,448,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html,1,['avail'],['availableIDsofa']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription, including all inherited members. AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptionin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html:613,error,errorssofa,613,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,1,['error'],['errorssofa']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GenGraphForm Member List . This is the complete list of members for sofa::gui::qt::GenGraphForm, including all inherited members. addTask(QStringList argv)sofa::gui::qt::GenGraphFormprotected; change()sofa::gui::qt::GenGraphFormvirtualslot; changeFilter()sofa::gui::qt::GenGraphFormvirtualslot; currentTasksofa::gui::qt::GenGraphFormprotected; doBrowse()sofa::gui::qt::GenGraphFormvirtualslot; doClose()sofa::gui::qt::GenGraphFormvirtualslot; doDisplay()sofa::gui::qt::GenGraphFormvirtualslot; doExport()sofa::gui::qt::GenGraphFormvirtualslot; exportedFilesofa::gui::qt::GenGraphFormprotected; GenGraphForm(QWidget *parent=Q_NULLPTR)sofa::gui::qt::GenGraphForm; getCurrentFilter()sofa::gui::qt::GenGraphFormprotected; graphsofa::gui::qt::GenGraphFormprotected; killAllTasks()sofa::gui::qt::GenGraphFormprotected; presetFilterssofa::gui::qt::GenGraphFormprotected; runTask()sofa::gui::qt::GenGraphFormprotected; setFilter()sofa::gui::qt::GenGraphFormvirtualslot; setScene(sofa::simulation::Node *scene)sofa::gui::qt::GenGraphForm; settingFiltersofa::gui::qt::GenGraphFormprotected; taskError(QProcess::ProcessError error)sofa::gui::qt::GenGraphFormvirtualslot; taskFinished(int exitCode, QProcess::ExitStatus exitStatus)sofa::gui::qt::GenGraphFormvirtualslot; taskssofa::gui::qt::GenGraphFormprotected. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html:1229,error,error,1229,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html,1,['error'],['error']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::LCP Member List . This is the complete list of members for sofa::helper::LCP, including all inherited members. allocate(unsigned int maxConst)sofa::helper::LCP; errorsofa::helper::LCP; getD(void)sofa::helper::LCPinline; getDfree(void)sofa::helper::LCPinline; getDim(void)sofa::helper::LCPinline; getF(void)sofa::helper::LCPinline; getF_1(void)sofa::helper::LCPinline; getMaxConst(void)sofa::helper::LCPinline; getMaxIter(void)sofa::helper::LCPinline; getMu(void)sofa::helper::LCPinline; getTolerance(void)sofa::helper::LCPinline; getW(void)sofa::helper::LCPinline; itsofa::helper::LCP; LCP()sofa::helper::LCP; reset(void)sofa::helper::LCP; setDim(unsigned int nbC)sofa::helper::LCPinline; setLCP(unsigned int input_dim, SReal *input_dfree, SReal **input_W, SReal *input_f, SReal &input_mu, SReal &input_tol, int input_numItMax)sofa::helper::LCP; setNumItMax(int input_numItMax)sofa::helper::LCPinline; setTol(SReal input_tol)sofa::helper::LCPinline; solveNLCP(bool convergenceTest, std::vector< SReal > *residuals=nullptr, std::vector< SReal > *violations=nullptr)sofa::helper::LCP; useInitialGuess(void)sofa::helper::LCPinline; ~LCP()sofa::helper::LCP. Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p-members.html:275,error,errorsofa,275,api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p-members.html,1,['error'],['errorsofa']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::Utils Member List . This is the complete list of members for sofa::helper::Utils, including all inherited members. downcaseString(const std::string &s)sofa::helper::Utilsstatic; getExecutableDirectory()sofa::helper::Utilsstatic; getExecutablePath()sofa::helper::Utilsstatic; getSofaPathPrefix()sofa::helper::Utilsstatic; getSofaPathTo(const std::string &pathFromBuildDir)sofa::helper::Utilsstatic; getSofaUserLocalDirectory()sofa::helper::Utilsstatic; getUserLocalDirectory()sofa::helper::Utilsstatic; narrowString(const std::wstring &ws)sofa::helper::Utilsstatic; readBasicIniFile(const std::string &path)sofa::helper::Utilsstatic; upcaseString(const std::string &s)sofa::helper::Utilsstatic; widenString(const std::string &s)sofa::helper::Utilsstatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils-members.html:229,down,downcaseString,229,api/master/sofa/html/classsofa_1_1helper_1_1_utils-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils-members.html,1,['down'],['downcaseString']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcher Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcher, including all inherited members. addHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; advice(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; clearHandlers()sofa::helper::logging::MessageDispatcherstatic; deprecated(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; error(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; fatal(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; getHandlers()sofa::helper::logging::MessageDispatcherstatic; info(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; log(Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; null()sofa::helper::logging::MessageDispatcherinlinestatic; process(sofa::helper::logging::Message &m)sofa::helper::logging::MessageDispatcherstatic; rmHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; warning(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html:729,error,error,729,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,1,['error'],['error']
Availability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::PipeProcess Member List . This is the complete list of members for sofa::helper::system::PipeProcess, including all inherited members. executeProcess(const std::string &command, const std::vector< std::string > &args, const std::string &filenameStdin, std::string &outString, std::string &errorString)sofa::helper::system::PipeProcessstatic; ~PipeProcess()sofa::helper::system::PipeProcessvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process-members.html:411,error,errorString,411,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process-members.html,1,['error'],['errorString']
Availability,﻿. SOFA API: SOFA API Documentation. . SOFA API;  679a9147. Open source framework for multi-physics simuation. SOFA API Documentation . You are on the main page of the SOFA API Documentation. This is the starting point of the documentation of the classes of the framework itself.; A general introduction to SOFA and the user documentation are available on https://www.sofa-framework.org/community/doc/; Plugins; Plugins doc are listed on the Plugins page. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/index.html:343,avail,available,343,api/master/sofa/html/index.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/index.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:479,avail,available,479,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:756,down,down,756,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:720,down,down,720,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:670,down,down,670,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::ISAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::ISAPBox Class Reference . #include <IncrSAP.h>; Detailed Description; ISAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints along the three dimensions. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. The between end points (d_min, d_max) and the field cube is that cube is always updated whereas d_min and d_max are stored values of the cube end points at previous time step. . Public Attributes; collision::geometry::Cube cube;  ; EndPointID * _min [3];  ; EndPointID * _max [3];  . Static Public Attributes; static double tolerance = (double)(1e-7);  . Public Member Functions;  ISAPBox ();  ;  ISAPBox (collision::geometry::Cube c);  ; bool endPointsOverlap (const ISAPBox &other, int axis) const;  ; bool overlaps (const ISAPBox &other, double alarmDist) const;  ; double squaredDistance (const ISAPBox &other) const;  ; void show () const;  ; void showEndPoints () const;  ; bool moving (int axis, double alarmDist) const;  ; bool moving (double alarmDist) const;  ; void init (int boxID, EndPointID **endPts);  ; void update (double alarmDist);  ; void updatedMin (int dim, EndPointID &end_point, double alarmDist) const;  ; void updatedMax (int dim, EndPointID &end_point, double alarmDist) const;  ; void updateMin (int dim, double alarmDist);  ; void updateMax (int dim, double alarmDist);  ; bool minMoving (int axis, double alarmDist) const;  ; bool maxMoving (int axis, double alarmDist) const;  ; const core::CollisionElementIterator finalElement () const;  ; EndPointID & min (int dim);  ; const EndPointID & min (int dim) const;  ; EndPointID",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html:968,toler,tolerance,968,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::IncrSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::IncrSAP Class Reference . #include <IncrSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::IncrSAP:. [legend]; Detailed Description; Implementation of incremental sweep and prune. i.e. collision primitives are stored and updated which should speed up the collision detection compared to the DirectSAP. . Public Member Functions;  SOFA_CLASS2 (IncrSAP, core::collision::BroadPhaseDetection, core::collision::NarrowPhaseDetection);  ; void setDraw (bool);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  Add a new collision model to the set of root collision models managed by this class. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &) override;  Add a new potentially colliding pairs of models. More...;  ; void addCollisionPairs (const type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &) override;  Add a new list of potentially colliding pairs of models. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; bool needsDeepBoundingTree () const override;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ; void showEndPoints () const;  ; void showBoxes () const;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (Broad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:879,down,down,879,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes > Class Template Reference . #include <BarycentricStickContact.h>. Inheritance diagram for sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:862,alive,alive,862,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['alive'],['alive']
Availability,"﻿. SOFA API: sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 > Class Template Reference . #include <StickContactConstraint.h>. Inheritance diagram for sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersection * intersectionMethod;  ; mapper::ContactMapper< CollisionMo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:801,alive,alive,801,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['alive'],['alive']
Availability,"﻿. SOFA API: sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection Class Reference . #include <GenericConstraintCorrection.h>. Inheritance diagram for sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection:. [legend]. Public Attributes; SingleLink< GenericConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. More...;  ; SingleLink< GenericConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_ODESolver;  Link towards the ODE solver used to recover the integration factors. More...;  ; Data< SReal > d_complianceFactor;  Factor applied to the position factor and velocity factor used to calculate compliance matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:1043,recover,recover,1043,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['recover'],['recover']
Availability,"﻿. SOFA API: sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution Class Reference . #include <UnilateralConstraintResolution.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution:. [legend]. Public Member Functions;  UnilateralConstraintResolution ();  ; void resolution (int line, SReal **w, SReal *d, SReal *force, SReal *dfree) override;  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintResolution;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void init (int, SReal **, SReal *);  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Constructor details. ◆ UnilateralConstraintResolution(). sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution::UnilateralConstraintResolution ; (; ). inline . Function details. ◆ resolution(). void sofa::component::constraint::lagrangian::model::UnilateralConstraintResolution::resolution ; (; int ; line, . SReal ** ; w, . SReal * ; d, . SReal * ; force, . SReal * ; dFree . ). inlineoverridevirtual . Resolution of the constraint for one Gauss-Seidel iteration. ; Reimplemented from sofa::core::beha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html:848,toler,tolerance,848,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_constraint_resolution.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::component::constraint::lagrangian::solver::ConstraintProblem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::solver::ConstraintProblem Class Referenceabstract . #include <ConstraintSolverImpl.h>. Inheritance diagram for sofa::component::constraint::lagrangian::solver::ConstraintProblem:. [legend]. Public Attributes; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Protected Attributes; int dimension;  ; unsigned int problemId;  . Public Member Functions;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; virtual void clear (int nbConstraints);  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; virtual void solveTimed (SReal tolerance, int maxIt, SReal timeout)=0;  ; unsigned int getProblemId ();  . Attribute details. ◆ dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::dFree. ◆ dimension. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::dimension. protected . ◆ f. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::Constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:670,toler,tolerance,670,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,2,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::component::constraint::lagrangian::solver::GenericConstraintProblem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::solver::GenericConstraintProblem Class Reference . #include <GenericConstraintProblem.h>. Inheritance diagram for sofa::component::constraint::lagrangian::solver::GenericConstraintProblem:. [legend]. Public Attributes; sofa::linearalgebra::FullVector< SReal > _d;  ; std::vector< core::behavior::ConstraintResolution * > constraintsResolutions;  ; bool scaleTolerance;  ; bool allVerified;  ; SReal sor;  ; SReal sceneTime;  ; SReal currentError;  ; int currentIterations;  ; linearalgebra::SparseMatrix< SReal > Wdiag;  ; std::list< unsigned int > constraints_sequence;  ; bool change_sequence;  ; std::vector< ConstraintCorrections > cclist_elems;  ;  Public Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Protected Attributes; sofa::linearalgebra::FullVector< SReal > m_lam;  ; sofa::linearalgebra::FullVector< SReal > m_deltaF;  ; sofa::linearalgebra::FullVector< SReal > m_deltaF_new;  ; sofa::linearalgebra::FullVector< SReal > m_p;  ;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; int dimension;  ; unsigned int problemId;  . Public Member Functions;  GenericConstraintProblem ();  ;  ~GenericConstraintProblem () override;  ; void clear (int nbConstraints) override;  ; void freeConstraintResolutions ();  ; void solveTimed (SReal tol, int maxIt, SReal timeout) override;  ; void gaussSeidel (SReal timeout=0, GenericConstraintSolver *solver=nullptr);  Projective Gauss Seidel method",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:1223,toler,tolerance,1223,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Class Reference . #include <LCPConstraintSolver.h>. Inheritance diagram for sofa::component::constraint::lagrangian::solver::LCPConstraintProblem:. [legend]. Public Attributes; SReal mu;  ;  Public Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Public Member Functions; void solveTimed (SReal tolerance, int maxIt, SReal timeout) override;  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; virtual void clear (int nbConstraints);  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; unsigned int getProblemId ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; int dimension;  ; unsigned int problemId;  . Attribute details. ◆ mu. SReal sofa::component::constraint::lagrangian::solver::LCPConstraintProblem::mu. Function details. ◆ solveTimed(). void sofa::component::constraint::lagrangian::solver::LCPConstraintProblem::solveTimed ; (; SReal ; tolerance, . int ; maxIt, . SReal ; timeout . ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintProblem. sofacomponentconstraintlagrangiansolverLCPConstraintProblem; Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html:761,toler,tolerance,761,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html,3,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::component::controller::MechanicalStateController< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::controller::MechanicalStateController< DataTypes > Class Template Reference . #include <MechanicalStateController.h>; MechanicalStateController Class. ; More... Inheritance diagram for sofa::component::controller::MechanicalStateController< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::controller::MechanicalStateController< DataTypes >; MechanicalStateController Class. ; Provides a Mouse & Keyboard user control on a Mechanical State. On a Rigid Particle, relative and absolute control is available. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateController, DataTypes), Controller);  ; void init () override;  SceneGraph callback initialization method. More...;  ; void applyController ();  ; void onMouseEvent (core::objectmodel::MouseEvent *mev);  Mouse event callback. More...;  ; void onMouseEvent (core::objectmodel::MouseEvent *mev);  Mouse event callback. More...;  ; Controller Interface; void onMouseEvent (core::objectmodel::MouseEvent *mev) override;  Mouse event callback. More...;  ; void onBeginAnimationStep (const double dt) override;  HapticDevice event callback. More...;  ;  Public Member Functions inherited from sofa::component::controller::Controller;  SOFA_CLASS (Controller, core::behavior::BaseController);  ; virtual void onHapticDeviceEvent (core::objectmodel::HapticDeviceEvent *);  HapticDevice event callback. More...;  ; virtual void onKeyPressedEvent (core::objectmodel::KeypressedEvent *);  Xitact event callback. More...;  ; virtual void onKeyReleasedEvent (core::objectmodel::KeyreleasedEvent *);  Key Release event callback. More...;  ; virtual void onJoystickEvent (core::objectmodel::JoystickEvent *);  Joystic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:819,avail,available,819,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::engine::analyze::ClusteringEngine< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::engine::analyze::ClusteringEngine< DataTypes > Class Template Reference . #include <ClusteringEngine.h>. Inheritance diagram for sofa::component::engine::analyze::ClusteringEngine< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::analyze::ClusteringEngine< DataTypes >; This class groups points into overlapping clusters according to a user defined number of clusters and radius It takes input positions (and optionally a meshtopology if geodesic distances are preferred) output clusters can then be fed to; shape matching engine; blendSkinningMapping . Public Attributes; Data< bool > d_useTopo;  Use available topology to compute neighborhood. More...;  ; Data< Real > d_radius;  Neighborhood range. More...;  ; Data< Real > d_fixedRadius;  Neighborhood range (for non mechanical particles). More...;  ; Data< int > d_nbClusters;  Number of clusters (-1 means that all input points are selected). More...;  ; Data< VecCoord > d_fixedPosition;  Input positions of fixed (non mechanical) particles. More...;  ; Data< VecCoord > d_position;  Input rest positions. More...;  ; Data< VVI > d_cluster;  Computed clusters. More...;  ; sofa::core::objectmodel::DataFileName input_filename;  import precomputed clusters More...;  ; sofa::core::objectmodel::DataFileName output_filename;  export clusters More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:921,avail,available,921,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::engine::transform::InvertTransformMatrixEngine Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::transform::InvertTransformMatrixEngine Class Reference . #include <TransformMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::InvertTransformMatrixEngine:. [legend]; Detailed Description; This engine inverts the input transform and outputs the resulting transformation matrix. T_output = T_input^-1 . Public Member Functions;  SOFA_CLASS (InvertTransformMatrixEngine, AbstractTransformMatrixEngine);  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:984,down,down,984,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes > Class Template Referenceabstract . #include <MechanicalStateForceFeedback.h>. Inheritance diagram for sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; virtual void computeForce (const VecCoord &state, VecDeriv &forces)=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0;  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void set",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:801,down,down,801,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::haptics::NullForceFeedback Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedback Class Reference . #include <NullForceFeedback.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedback:. [legend]; Detailed Description; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (NullForceFeedback, ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:677,down,down,677,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::haptics::NullForceFeedbackT< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedbackT< TDataTypes > Class Template Reference . #include <NullForceFeedbackT.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedbackT< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::haptics::NullForceFeedbackT< TDataTypes >; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeForce (const VecCoord &, VecDeriv &) override;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:892,down,down,892,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::io::mesh::GIDMeshLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::GIDMeshLoader Class Reference . #include <GIDMeshLoader.h>. Inheritance diagram for sofa::component::io::mesh::GIDMeshLoader:. [legend]. Public Member Functions;  SOFA_CLASS (GIDMeshLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:947,down,down,947,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::io::mesh::GridMeshCreator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::GridMeshCreator Class Reference . #include <GridMeshCreator.h>. Inheritance diagram for sofa::component::io::mesh::GridMeshCreator:. [legend]; Detailed Description; Procedurally creates a triangular grid. The coordinates range from (0,0,0) to (1,1,0). They can be translated, rotated and scaled using the corresponding attributes of the parent class.; AuthorFrançois Faure, 2012 . Public Attributes; sofa::core::objectmodel::RenamedData< type::Vec2i > resolution;  ; sofa::core::objectmodel::RenamedData< int > trianglePattern;  ; Data< type::Vec2i > d_resolution;  Number of vertices in each direction. More...;  ; Data< int > d_trianglePattern;  0: no triangles, 1: alternate triangles, 2: upward triangles, 3: downward triangles More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:1011,down,downward,1011,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['down'],['downward']
Availability,"﻿. SOFA API: sofa::component::io::mesh::MeshGmshLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshGmshLoader Class Reference . #include <MeshGmshLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshGmshLoader:. [legend]. Public Member Functions;  SOFA_CLASS (MeshGmshLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Func",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html:952,down,down,952,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::io::mesh::MeshOffLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshOffLoader Class Reference . #include <MeshOffLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshOffLoader:. [legend]. Public Member Functions;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html:947,down,down,947,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::io::mesh::MeshXspLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshXspLoader Class Reference . #include <MeshXspLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshXspLoader:. [legend]. Public Member Functions;  SOFA_CLASS (MeshXspLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  Inherited from MeshLoader. More...;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFil",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html:984,down,down,984,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::io::mesh::OffSequenceLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::OffSequenceLoader Class Reference . #include <OffSequenceLoader.h>. Inheritance diagram for sofa::component::io::mesh::OffSequenceLoader:. [legend]; Detailed Description; This class load a sequence of .off mesh files, ordered by index in their name . Public Member Functions;  SOFA_CLASS (OffSequenceLoader, MeshOffLoader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:682,down,down,682,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject > Class Template Reference . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >:. [legend]; Detailed Description; template<typename RealObject>; class sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >; This class is the bridge between an Eigen solver class and the abstract class BaseEigenSolverProxy.; Using this class, all Eigen solvers can inherit from the same base class, hence runtime polymorphism is possible. Only a subset of the Eigen solver methods are available. . Public Member Functions;  EigenSolverWrapper ();  ; Eigen::ComputationInfo info () const override;  ; void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const override;  ; void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const override;  ; void analyzePattern (const EigenSparseMatrixMap< float > &a) override;  ; void analyzePattern (const EigenSparseMatrixMap< double > &a) override;  ; void factorize (const EigenSparseMatrixMap< float > &a) override;  ; void factorize (const EigenSparseMatrixMap< double > &a) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::BaseEigenSolverProxy; virtual ~BaseEigenSolverProxy ();  . Constructor details. ◆ EigenSolverWrapper(). template<typename RealObject > . sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::EigenSolverWrapper ; (; ). inline . Function details. ◆ analyzePattern() [1/2]. template<typename RealObject > . void sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::analyzePattern ; (; const EigenSparseMatrixMap< double ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html:867,avail,available,867,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::linearsolver::direct::SVDLinearSolver< TMatrix, TVector > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::linearsolver::direct::SVDLinearSolver< TMatrix, TVector > Class Template Reference . #include <SVDLinearSolver.h>. Inheritance diagram for sofa::component::linearsolver::direct::SVDLinearSolver< TMatrix, TVector >:. [legend]; Detailed Description; template<class TMatrix, class TVector>; class sofa::component::linearsolver::direct::SVDLinearSolver< TMatrix, TVector >; Linear system solver using the JacobiSVD decomposition of the Eigen library (http://eigen.tuxfamily.org/ , see also an excellent introduction in Numerical Recipes.) The Singular Value Decomposition is probably the most robust (and the slowest !) matrix factoring for linear equation solution. It works only for dense matrices (FullMatrix). The equation system Ax=b is solved using a decomposition of A=USV^T, where U is a n-by-n unitary, V is a p-by-p unitary, and S is a n-by-p real positive matrix which is zero outside of its main diagonal; the diagonal entries of S are known as the singular values of A and the columns of U and V are known as the left and right singular vectors of A respectively. In case of indefinite matrix, there is at least one null singular value, and there is no solution to the equation system except for special right-hand terms. The SVD solver solves the equation in the least-square sense: it finds the pseudo-solution x which minimizes Ax-b. The condition number of the matrix is a byproduct of the solution, written in attribute ""conditionNumber"" by method solve (Matrix& M, Vector& x, Vector& b). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_verbose;  ; sofa::core::objectmodel::RenamedData< Real > f_minSingularValue;  ; sofa::core::objectmodel::RenamedData< Real > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_s_v_d_linear_solver.html:894,robust,robust,894,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_s_v_d_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_s_v_d_linear_solver.html,1,['robust'],['robust']
Availability,"﻿. SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::odesolver::forward::EulerExplicitSolver Class Reference . #include <EulerExplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::forward::EulerExplicitSolver:. [legend]; Detailed Description; The simplest time integration. Two variants of the Euler solver are available in this component:; forward Euler method, also called explicit Euler method; semi-implicit Euler method, also called semi-explicit Euler method or symplectic Euler. In both variants, acceleration is first computed. The system to compute the acceleration is M * a = f, where M is the mass matrix and f can be a force. In case of a diagonal mass matrix, M is trivially invertible and the acceleration can be computed without a linear solver.; f is accumulated by force fields through the addForce function. Mappings can also contribute by projecting forces of mapped objects. f is computed based on the current state (current velocity and position).; Explicit Euler method: The option ""symplectic"" must be set to false to use this variant. The explicit Euler method produces an approximate discrete solution by iterating x_{n+1} = x_n + v_n * dt v_{n+1} = v_n + a * dt; Semi-implicit Euler method: The option ""symplectic"" must be set to true to use this variant. The semi-implicit Euler method produces an approximate discrete solution by iterating v_{n+1} = v_n + a * dt x_{n+1} = x_n + v_{n+1} * dt; The semi-implicit Euler method is more robust than the standard Euler method. . Public Attributes; Data< bool > d_symplectic;  If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (stand",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:590,avail,available,590,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::playback::CompareState Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::CompareState Class Reference . #include <CompareState.h>. Inheritance diagram for sofa::component::playback::CompareState:. [legend]; Detailed Description; Compare State vectors from file at each timestep . Protected Attributes; double totalError_X;  total error for positions More...;  ; double dofError_X;  ; double totalError_V;  total error for velocities More...;  ; double dofError_V;  ; double last_time;  last time, position and velocity (for draw) More...;  ; std::string last_X;  ; std::string last_V;  ; std::vector< std::string > nextValidLines;  ;  Protected Attributes inherited from sofa::component::playback::ReadState; core::behavior::BaseMechanicalState * mmodel;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CompareState, playback::ReadState);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processCompareState ();  Compute the total errors (position",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:565,error,error,565,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,2,['error'],['error']
Availability,"﻿. SOFA API: sofa::component::playback::CompareStateResult Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::playback::CompareStateResult Class Reference . #include <CompareState.h>. Inheritance diagram for sofa::component::playback::CompareStateResult:. [legend]. Protected Attributes; double error;  ; double errorByDof;  ; unsigned int numCompareState;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  CompareStateResult (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; double getTotalError ();  ; double getErrorByDof ();  ; unsigned int getNumCompareState ();  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html:425,error,error,425,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,2,['error'],"['error', 'errorByDof']"
Availability,"﻿. SOFA API: sofa::component::playback::CompareTopology Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::CompareTopology Class Reference . #include <CompareTopology.h>. Inheritance diagram for sofa::component::playback::CompareTopology:. [legend]; Detailed Description; Compare Topology vectors from file at each timestep . Protected Attributes; unsigned int EdgesError;  Number of error by container. More...;  ; unsigned int TrianglesError;  ; unsigned int QuadsError;  ; unsigned int TetrahedraError;  ; unsigned int HexahedraError;  ; unsigned int TotalError;  ; std::vector< unsigned int > listError;  ;  Protected Attributes inherited from sofa::component::playback::ReadTopology; core::topology::BaseMeshTopology * m_topology;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CompareTopology, playback::ReadTopology);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processCompareTopology ();  Compute the total number of errors. More...;  ; unsigned int getTotalError ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:588,error,error,588,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['error'],['error']
Availability,"﻿. SOFA API: sofa::component::playback::WriteTopology Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::WriteTopology Class Reference . #include <WriteTopology.h>. Inheritance diagram for sofa::component::playback::WriteTopology:. [legend]; Detailed Description; Write Topology containers information into a file at a given set of time instants A period can be established at the last time instant. The information to write can be chosen. by default there will be only commun containers. An option is available to write shells containers.; This part is not handle yet: Stop to write infos if the kinematic energy reach a given threshold (stopAt) The energy will be measured at each period determined by keperiod . Public Attributes; sofa::core::objectmodel::DataFileName f_filename;  ; sofa::core::objectmodel::RenamedData< bool > f_writeContainers;  ; sofa::core::objectmodel::RenamedData< bool > f_writeShellContainers;  ; sofa::core::objectmodel::RenamedData< double > f_interval;  ; sofa::core::objectmodel::RenamedData< type::vector< double > > f_time;  ; sofa::core::objectmodel::RenamedData< double > f_period;  ; sofa::core::objectmodel::DataFileName d_filename;  ; Data< bool > d_writeContainers;  flag enabling output of common topology containers. More...;  ; Data< bool > d_writeShellContainers;  flag enabling output of specific shell topology containers. More...;  ; Data< double > d_interval;  time duration between outputs More...;  ; Data< type::vector< double > > d_time;  set time to write outputs More...;  ; Data< double > d_period;  period between outputs More...;  ; SingleLink< WriteTopology, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:727,avail,available,727,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial Class Referenceabstract . #include <BaseMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial:. [legend]; Detailed Description; Generic material class . Public Member Functions;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html:753,down,down,753,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes > Class Template Reference . #include <RepulsiveSpringForceField.h>. Inheritance diagram for sofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RepulsiveSpringForceField, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; SReal getPotentialEnergy (const sofa::core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html:1378,down,down,1378,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier Class Reference . #include <DynamicSparseGridTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing hexahedra . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyModifier, HexahedronSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra) override;  Actually Add some hexahedra to this topology. Wrong way to add some hexahedra for the moment ! More...;  ; virtual void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::type::vector< unsigned int > &indices);  Actually Add some hexahedra to this topology. More...;  ; void removeHexahedraProcess (const sofa::type::vector< Index > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of hexahedra. More...;  ; virtual void renumberAttributes (const sofa::type::vector< Index > &hexahedra);  Renumber the attributes of this class. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:828,down,down,828,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::topology::container::dynamic::EdgeSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::EdgeSetTopologyModifier Class Reference . #include <EdgeSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyModifier:. [legend]; Detailed Description; A class that can apply basic transformations on a set of edges. . Public Member Functions;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  add a set of edges More...;  ; void addEdgeProcess (Edge e);  Effectively add an edge. More...;  ; virtual void swapEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs);  Swap the edges. More...;  ; virtual void fuseEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs, const bool removeIsolatedPoints=true);  Fuse the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const bool removeIsolatedPoints=true);  Split the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true);  S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:780,down,down,780,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyContainer Class Reference . #include <PointSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyContainer:. [legend]; Detailed Description; The container class that stores a set of points and provides access to each point. This set of point may be a subset of the DOF of the mechanical model . Public Attributes; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:920,down,down,920,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::topology::container::dynamic::QuadSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::QuadSetTopologyModifier Class Reference . #include <QuadSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing quads . Public Member Functions;  SOFA_CLASS (QuadSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads);  add a set of quads More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of quads More...;  ; void addQuadProcess (Quad e);  Effectively Add a quad. More...;  ; virtual void removeQuads (const sofa::type::vector< QuadID > &quadIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of quads. More...;  ; void removeItems (const sofa::type::vector< QuadID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:779,down,down,779,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::topology::mapping::IdentityTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::IdentityTopologicalMapping Class Reference . #include <IdentityTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::IdentityTopologicalMapping:. [legend]; Detailed Description; This class is a specific implementation of TopologicalMapping where the destination topology should be kept identical to the source topology. The implementation currently assumes that both topology have been initialized identically. . Public Member Functions;  SOFA_CLASS (IdentityTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html:936,down,down,936,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::component::visual::Camera Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::visual::Camera Class Reference . #include <Camera.h>. Inheritance diagram for sofa::component::visual::Camera:. [legend]. Public Member Functions;  SOFA_CLASS (Camera, BaseCamera);  ; void manageEvent (core::objectmodel::Event *e) override;  ;  Public Member Functions inherited from sofa::component::visual::BaseCamera;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec4, sofa::type::Vec4);  ;  BaseCamera ();  ;  ~BaseCamera () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void activate ();  ; void desactivate ();  ; bool isActivated ();  ; bool exportParametersInFile (const std::string &viewFilename);  ; bool importParametersFromFile (const std::string &viewFilename);  ; void translate (const type::Vec3 &t);  ; void translateLookAt (const type::Vec3 &t);  ; void rotate (const Quat &r);  ; void moveCamera (const type::Vec3 &p, const Quat &q);  ; void rotateCameraAroundPoint (Quat &rotation, const type::Vec3 &point);  ; virtual void rotateWorldAroundPoint (Quat &rotation, const type::Vec3 &point, Quat orientationCam);  ; type::Vec3 screenToViewportPoint (const type::Vec3 &p) const;  ; type::Vec3 screenToWorldPoint (const type::Vec3 &p);  ; type::Vec3 viewportToScreenP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:1023,down,down,1023,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::core::BaseMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:853,down,down,853,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::core::CategoryLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::CategoryLibrary Class Reference . #include <CategoryLibrary.h>; An Generic Category of the Sofa Library. ; More...; Detailed Description; An Generic Category of the Sofa Library. ; It contains all the components available for Sofa corresponding to a given category (force field, mass, mapping...) This Interface is used for the Modeler mainly. . Protected Attributes; std::string name;  ; VecComponent components;  . Public Member Functions;  CategoryLibrary (const std::string &categoryName);  ; virtual ~CategoryLibrary ();  ; virtual ComponentLibrary * addComponent (const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  ; virtual void endConstruction ();  ; const std::string & getName () const;  ; const VecComponent & getComponents () const;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; size_t getNumComponents () const;  . Static Public Member Functions; static void getCategories (const sofa::core::objectmodel::BaseClass *mclass, std::vector< std::string > &outputVector);  Get the list of categories a class belongs to, based on its parent classes. More...;  ; static std::vector< std::string > getCategories ();  . Protected Member Functions; virtual ComponentLibrary * createComponent (const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  . Attribute details. ◆ components. VecComponent sofa::core::CategoryLibrary::components. protected . ◆ name. std::string sofa::core::CategoryLibrary::name. protected . Constructor details. ◆ CategoryLibrary(). sofa::core::CategoryLibrary::CategoryLibrary ; (; const std::string & ; categoryName). ◆ ~CategoryLibrary(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_category_library.html:493,avail,available,493,api/master/sofa/html/classsofa_1_1core_1_1_category_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_category_library.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::core::ComponentLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::ComponentLibrary Class Reference . #include <ComponentLibrary.h>; An Generic Component of the Sofa Library. ; More...; Detailed Description; An Generic Component of the Sofa Library. ; It contains all the information related to a Sofa component: its name, the templates available, a description of it, its creator, ... This Interface is used for the Modeler mainly. . Protected Attributes; std::string name;  ; std::vector< std::string > templateName;  ; std::string description;  ; std::string categoryName;  ; ClassEntry::SPtr entry;  . Public Member Functions;  ComponentLibrary (const std::string &componentName, const std::string &categoryName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  ; virtual ~ComponentLibrary ();  ; virtual void addTemplate (const std::string &templateName);  ; virtual void endConstruction ();  ; virtual void setDisplayed (bool);  ; const std::string & getName () const;  ; const std::string & getDescription () const;  ; const std::string & getCategory () const;  ; const std::vector< std::string > & getTemplates () const;  ; const ClassEntry::SPtr getEntry () const;  . Attribute details. ◆ categoryName. std::string sofa::core::ComponentLibrary::categoryName. protected . ◆ description. std::string sofa::core::ComponentLibrary::description. protected . ◆ entry. ClassEntry::SPtr sofa::core::ComponentLibrary::entry. protected . ◆ name. std::string sofa::core::ComponentLibrary::name. protected . ◆ templateName. std::vector< std::string > sofa::core::ComponentLibrary::templateName. protected . Constructor details. ◆ ComponentLibrary(). sofa::core::ComponentLibrary::ComponentLibrary ; (; const std::string & ; componentName, . const std::string & ; categoryName, . ClassEntry::SPtr ; entry, . const std::vector< st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_library.html:488,avail,available,488,api/master/sofa/html/classsofa_1_1core_1_1_component_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_library.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::core::ComponentNameHelper Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ComponentNameHelper Class Reference . #include <ComponentNameHelper.h>; Detailed Description; Helper class to name a component based on its type.; Two conventions are available for legacy reasons:; XML: use a counter to add a unique suffix at the end of the name; Python: the short name of the type is returned . Public Member Functions; std::string resolveName (const std::string &type, const std::string &name, Convention convention);  ; std::string resolveName (const std::string &type, Convention convention);  . Function details. ◆ resolveName() [1/2]. std::string sofa::core::ComponentNameHelper::resolveName ; (; const std::string & ; type, . const std::string & ; name, . Convention ; convention . ). ◆ resolveName() [2/2]. std::string sofa::core::ComponentNameHelper::resolveName ; (; const std::string & ; type, . Convention ; convention . ). Enum details. ◆ Convention. enum sofa::core::ComponentNameHelper::Convention : char. strong . Enumeratorxml ; python . sofacoreComponentNameHelper; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper.html:364,avail,available,364,api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::core::behavior::ConstraintResolution Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::ConstraintResolution Class Reference . #include <ConstraintResolution.h>; Object computing a constraint resolution within a Gauss-Seidel algorithm. ; More... Inheritance diagram for sofa::core::behavior::ConstraintResolution:. [legend]; Detailed Description; Object computing a constraint resolution within a Gauss-Seidel algorithm. . Public Member Functions;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void init (int, SReal **, SReal *);  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void resolution (int line, SReal **w, SReal *d, SReal *force, SReal *dFree);  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Constructor details. ◆ ConstraintResolution(). sofa::core::behavior::ConstraintResolution::ConstraintResolution ; (; unsigned int ; nbLines, . SReal ; tolerance = 0.0 . ). ◆ ~ConstraintResolution(). sofa::core::behavior::ConstraintResolution::~ConstraintResolution ; (; ). virtual . Function details. ◆ getNbLines(). unsigned int sofa::core::behavior::ConstraintResolution::getNbLines ; (; ); const. inline . ◆ getTolerance(). SReal sofa::core::behavior::ConstraintResolution::getTolerance ; (; ); const. inline . ◆ init(). void sofa::core::behavior::ConstraintResolution::init ; (; int ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html:629,toler,tolerance,629,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_resolution.html,1,['toler'],['tolerance']
Availability,"﻿. SOFA API: sofa::core::objectmodel::AspectBuffer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::AspectBuffer Class Reference . #include <AspectPool.h>; Detailed Description; This class is responsible for providing a buffer for communicating aspects between threads, such that only the most up to date aspect is kept, and the previous one is reused to send the next update. This is similar to triple buffering. . Protected Attributes; AspectPool & pool;  ; AtomicInt latestID;  -1 or aspect ID of the last version sent More...;  ; AtomicInt availableID;  -1 or aspect ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:684,avail,availableID,684,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,2,['avail'],"['available', 'availableID']"
Availability,"﻿. SOFA API: sofa::core::objectmodel::AspectPool Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::AspectPool Class Reference . #include <AspectPool.h>; Detailed Description; This class is responsible for managing the pool of available aspects numbers. It is safe to use this class from several thread. . Public Member Functions;  AspectPool ();  ;  ~AspectPool ();  ; void setReleaseCallback (const std::function< void(int)> &callback);  ; AspectRef allocate ();  ; AspectRef getAspect (int id);  ; int nbAspects () const;  ; int getAspectCounter (int id) const;  . Protected Member Functions; void release (int id);  . Friends; class Aspect;  . Constructor details. ◆ AspectPool(). sofa::core::objectmodel::AspectPool::AspectPool ; (; ). Constructor: creates a new aspect pool. . ◆ ~AspectPool(). sofa::core::objectmodel::AspectPool::~AspectPool ; (; ). Destructor. . Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectPool::allocate ; (; ). Request a new aspect. The returned object should stay alive as long as the aspect is in use. It it possible to duplicate the AspectRef if several threads/algorithm use the same aspect. If no aspect remains available, null pointer is returned. . ◆ getAspect(). AspectRef sofa::core::objectmodel::AspectPool::getAspect ; (; int ; id). ◆ getAspectCounter(). int sofa::core::objectmodel::AspectPool::getAspectCounter ; (; int ; id); const. inline . ◆ nbAspects(). int sofa::core::objectmodel::AspectPool::nbAspects ; (; ); const. inline . ◆ release(). void sofa::core::objectmodel::AspectPool::release ; (; int ; id). protected . Release the aspect having the specified number. It makes the number immediately available to satisfy subsequent AspectPool::allocate requests. . ◆ setReleaseCallback(). void sofa::core::objectmodel::AspectPool::setReleaseCallback ; (; const std::functio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_pool.html:382,avail,available,382,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_pool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_pool.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::core::objectmodel::BaseObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseObject Class Reference . #include <BaseObject.h>; Base class for simulation components. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObject:. [legend]; Detailed Description; Base class for simulation components. ; An object defines a part of the functionality in the simulation (stores state data, specify topology, compute forces, etc). Each simulation object is related to a context, which gives access to all available external data. It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:713,avail,available,713,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::core::objectmodel::BaseObjectDescription Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseObjectDescription Class Reference . #include <BaseObjectDescription.h>; Base Interface for classes containing the description of an object, used to construct it. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObjectDescription:. [legend]; Detailed Description; Base Interface for classes containing the description of an object, used to construct it. ; This class defines what information are used as input (read from a file for instance) to create an object. This default implementation simply stores an attributes map and does not support any hierarchy. . Classes; class  Attribute;  . Protected Attributes; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseObjectDescription (const char *name=nullptr, const char *type=nullptr);  ; virtual ~BaseObjectDescription ();  ; virtual Base * getObject ();  Get the associated object (or nullptr if it is not created yet) More...;  ; virtual std::string getName ();  Get the object instance name. More...;  ; virtual void setName (const std::string &name);  Set the object instance name. More...;  ; virtual BaseObjectDescription * getParent () const;  Get the parent node. More...;  ; virtual std::string getBaseFile ();  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual const AttributeMap & getAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual BaseObjectDescription * find (const char *nodeName, bool absolute=false);  Find an object description given its name (relative to this object) More...;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:945,error,errors,945,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['error'],['errors']
Availability,"﻿. SOFA API: sofa::core::objectmodel::ConfigurationSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::ConfigurationSetting Class Reference . #include <ConfigurationSetting.h>; Base class for all the configuration settings of SOFA. ; More... Inheritance diagram for sofa::core::objectmodel::ConfigurationSetting:. [legend]; Detailed Description; Base class for all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void add",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html:730,down,down,730,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::core::topology::GeometryAlgorithms Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::GeometryAlgorithms Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::GeometryAlgorithms:. [legend]; Detailed Description; A class that contains a set of methods that describes the geometry of the object . Public Member Functions;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs);  Called by the MechanicalObject state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html:674,down,down,674,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::core::topology::TopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyContainer Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyContainer:. [legend]; Detailed Description; A class that contains a description of the topology (set of edges, triangles, adjacency information, ...) . Public Member Functions;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  . const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  . const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () const;  ; virtual void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange to the list. More...;  ; virtual void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange to the list. More...;  ; std::list< const TopologyChange * >::const_iterator beginChange () const override;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; std::list< const TopologyChange * >::const_iterator endChange () const override;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; std::list< const TopologyChange * >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:714,down,down,714,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::rendering3d::OglCylinderModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglCylinderModel Class Reference . #include <OglCylinderModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglCylinderModel:. [legend]. Public Member Functions;  SOFA_CLASS2 (OglCylinderModel, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:620,down,down,620,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::rendering3d::PointSplatModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::PointSplatModel Class Reference . #include <PointSplatModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::PointSplatModel:. [legend]. Public Member Functions;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bound",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html:603,down,down,603,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)));  ;  OglFloat2Attribute ();  ; virtual ~OglFloat2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html:949,down,down,949,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Variable, OglVariable< type::Vec2f >);  ;  OglFloat2Variable ();  ; virtual ~OglFloat2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec2f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec2f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html:876,down,down,876,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)));  ;  OglFloat3Attribute ();  ; virtual ~OglFloat3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html:949,down,down,949,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Variable, OglVariable< type::Vec3f >);  ;  OglFloat3Variable ();  ; virtual ~OglFloat3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec3f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec3f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html:876,down,down,876,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)));  ;  OglFloat4Attribute ();  ; virtual ~OglFloat4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html:949,down,down,949,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Variable, OglVariable< type::Vec4f >);  ;  OglFloat4Variable ();  ; virtual ~OglFloat4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec4f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec4f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html:876,down,down,876,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatAttribute:. [legend]; Detailed Description; FLOAT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float));  ;  OglFloatAttribute ();  ; virtual ~OglFloatAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html:903,down,down,903,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVariable:. [legend]; Detailed Description; SINGLE FLOAT VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVariable, OglVariable< float >);  ;  OglFloatVariable ();  ; virtual ~OglFloatVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< float >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const float &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html:898,down,down,898,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >);  ;  OglFloatVector2Variable ();  ; virtual ~OglFloatVector2Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec2f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html:675,down,down,675,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >);  ;  OglFloatVector3Variable ();  ; virtual ~OglFloatVector3Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec3f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html:675,down,down,675,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >);  ;  OglFloatVector4Variable ();  ; virtual ~OglFloatVector4Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html:675,down,down,675,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVectorVariable:. [legend]; Detailed Description; FLOAT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVectorVariable, OglVariable< type::vector< float > >);  ;  OglFloatVectorVariable ();  ; virtual ~OglFloatVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html:709,down,down,709,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)));  ;  OglInt2Attribute ();  ; virtual ~OglInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html:927,down,down,927,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)));  ;  OglInt2Variable ();  ; virtual ~OglInt2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 2, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html:915,down,down,915,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)));  ;  OglInt3Attribute ();  ; virtual ~OglInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html:927,down,down,927,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)));  ;  OglInt3Variable ();  ; virtual ~OglInt3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 3, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html:915,down,down,915,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)));  ;  OglInt4Attribute ();  ; virtual ~OglInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html:927,down,down,927,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:915,down,down,915,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:879,down,down,879,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:878,down,down,878,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:643,down,down,643,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:643,down,down,643,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:643,down,down,643,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:695,down,down,695,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:623,down,down,623,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4Variable, OglMatrix2Variable);  ;  OglMatrix4Variable ();  ;  ~OglMatrix4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html:623,down,down,623,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x2Variable, OglMatrix2Variable);  ;  OglMatrix4x2Variable ();  ;  ~OglMatrix4x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x3Variable, OglMatrix2Variable);  ;  OglMatrix4x3Variable ();  ;  ~OglMatrix4x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html:635,down,down,635,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglOITShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglOITShader Class Reference . #include <OglOITShader.h>. Inheritance diagram for sofa::gl::component::shader::OglOITShader:. [legend]. Static Public Attributes; static const std::string PATH_TO_OIT_ACCUMULATION_VERTEX_SHADERS = ""shaders/orderIndependentTransparency/accumulation.vert"";  ; static const std::string PATH_TO_OIT_ACCUMULATION_FRAGMENT_SHADERS = ""shaders/orderIndependentTransparency/accumulation.frag"";  . Public Member Functions;  SOFA_CLASS (OglOITShader, sofa::gl::component::shader::OglShader);  ; sofa::gl::GLSLShader * accumulationShader ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShader;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMacro (const unsigned int index, const std::string &name, const std::string &value);  ; void setTexture (const unsigned int index, const char *name, unsigned short unit);  ; void setInt (const unsigned int index, const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:1173,down,down,1173,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShader Class Reference . #include <OglShader.h>; Utility to use shader for a visual model in OpenGL. ; More... Inheritance diagram for sofa::gl::component::shader::OglShader:. [legend]; Detailed Description; Utility to use shader for a visual model in OpenGL. ; This class is used to implement shader into Sofa, for visual rendering or for special treatment that needs shader mechanism. The 3 kinds of shaders can be defined : vertex, triangle and fragment. Geometry shader is only available with Nvidia's >8 series and Ati's >2K series. . Public Attributes; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:781,avail,available,781,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglShaderMacro Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderMacro Class Reference . #include <OglShaderMacro.h>; Small class to define macro into an OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderMacro:. [legend]; Detailed Description; Small class to define macro into an OglShader. ; This small abstract class describes macro into an OpenGL shader (GLSL). It was mainly written for implementing #ifdef macro into shader, and therefore, to have a multi-purpose shader (and not many fragmented shaders). . Public Member Functions;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:922,down,down,922,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglTexture2D Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglTexture2D Class Reference . #include <OglTexture.h>. Inheritance diagram for sofa::gl::component::shader::OglTexture2D:. [legend]. Public Member Functions;  SOFA_CLASS (OglTexture2D, OglTexture);  ;  OglTexture2D ();  ;  ~OglTexture2D () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglTexture;  SOFA_CLASS2 (OglTexture, core::visual::VisualModel, OglShaderElement);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to u",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:578,down,down,578,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglUInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)));  ;  OglUInt2Attribute ();  ; virtual ~OglUInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html:978,down,down,978,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglUInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)));  ;  OglUInt3Attribute ();  ; virtual ~OglUInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html:978,down,down,978,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglUInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)));  ;  OglUInt4Attribute ();  ; virtual ~OglUInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html:978,down,down,978,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gl::component::shader::OglUIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUIntAttribute:. [legend]; Detailed Description; UNSIGNED INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int));  ;  OglUIntAttribute ();  ; virtual ~OglUIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< unsigned int > * beginEdit ();  ; void endEdit ();  ; const type::vector< unsigned int > & getValue () const;  ; void setValue (const type::vector< unsigned int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html:939,down,down,939,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gui::component::AddFrameButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddFrameButtonSetting Class Reference . #include <AddFrameButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddFrameButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:963,down,down,963,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gui::component::AddRecordedCameraButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddRecordedCameraButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddRecordedCameraButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current tim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html:1008,down,down,1008,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gui::component::ConstraintAttachButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::ConstraintAttachButtonSetting Class Reference . #include <ConstraintAttachButtonSetting.h>. Inheritance diagram for sofa::gui::component::ConstraintAttachButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (ConstraintAttachButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:947,down,down,947,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::gui::component::StartNavigationButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::StartNavigationButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::StartNavigationButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (StartNavigationButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html:974,down,down,974,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::helper::LCP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::LCP Class Reference . #include <LCPcalc.h>. Public Attributes; int it;  ; SReal error;  . Public Member Functions;  LCP ();  ;  ~LCP ();  ; void reset (void);  ; void allocate (unsigned int maxConst);  ; SReal ** getW (void);  ; SReal & getMu (void);  ; SReal * getDfree (void);  ; SReal getTolerance (void);  ; SReal getMaxIter (void);  ; SReal * getF (void);  ; SReal * getF_1 (void);  ; SReal * getD (void);  ; bool useInitialGuess (void);  ; unsigned int getDim (void);  ; unsigned int setDim (unsigned int nbC);  ; unsigned int getMaxConst (void);  ; void setNumItMax (int input_numItMax);  ; void setTol (SReal input_tol);  ; void setLCP (unsigned int input_dim, SReal *input_dfree, SReal **input_W, SReal *input_f, SReal &input_mu, SReal &input_tol, int input_numItMax);  ; void solveNLCP (bool convergenceTest, std::vector< SReal > *residuals=nullptr, std::vector< SReal > *violations=nullptr);  . Attribute details. ◆ error. SReal sofa::helper::LCP::error. ◆ it. int sofa::helper::LCP::it. Constructor details. ◆ LCP(). sofa::helper::LCP::LCP ; (; ). ◆ ~LCP(). sofa::helper::LCP::~LCP ; (; ). Function details. ◆ allocate(). void sofa::helper::LCP::allocate ; (; unsigned int ; maxConst). ◆ getD(). SReal* sofa::helper::LCP::getD ; (; void ; ). inline . ◆ getDfree(). SReal* sofa::helper::LCP::getDfree ; (; void ; ). inline . ◆ getDim(). unsigned int sofa::helper::LCP::getDim ; (; void ; ). inline . ◆ getF(). SReal* sofa::helper::LCP::getF ; (; void ; ). inline . ◆ getF_1(). SReal* sofa::helper::LCP::getF_1 ; (; void ; ). inline . ◆ getMaxConst(). unsigned int sofa::helper::LCP::getMaxConst ; (; void ; ). inline . ◆ getMaxIter(). SReal sofa::helper::LCP::getMaxIter ; (; void ; ). inline . ◆ getMu(). SReal& sofa::helper::LCP::getMu ; (; void ; ). inline . ◆ getTolerance(). SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html:286,error,error,286,api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_l_c_p.html,1,['error'],['error']
Availability,"﻿. SOFA API: sofa::helper::MemoryManager< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::MemoryManager< T > Class Template Reference . #include <MemoryManager.h>; Detailed Description; template<class T>; class sofa::helper::MemoryManager< T >; Generic MemoryManager Its use is informative only, and it cannot be instantiated (linkage error otherwise). . Static Public Member Functions; static int numDevices ();  ; static void hostAlloc (host_pointer *hPointer, int n);  ; static void memsetHost (host_pointer hPointer, int value, size_t n);  ; static void hostFree (const host_pointer hSrcPointer);  ; static void deviceAlloc (int d, device_pointer *dPointer, int n);  ; static void deviceFree (int d, const device_pointer dSrcPointer);  ; static void memcpyHostToDevice (int d, device_pointer dDestPointer, const host_pointer hSrcPointer, size_t n);  ; static void memcpyDeviceToHost (int d, host_pointer hDestPointer, const void *dSrcPointer, size_t n);  ; static void memcpyDeviceToDevice (int d, device_pointer dDestPointer, const device_pointer dSrcPointer, size_t n);  ; static void memsetDevice (int d, device_pointer dDestPointer, int value, size_t n);  ; static int getBufferDevice ();  ; static bool bufferAlloc (buffer_id_type *, int, bool);  ; static void bufferFree (const buffer_id_type);  ; static bool bufferRegister (const buffer_id_type);  ; static void bufferUnregister (const buffer_id_type);  ; static bool bufferMapToDevice (device_pointer *, const buffer_id_type);  ; static void bufferUnmapToDevice (device_pointer *, const buffer_id_type);  ; static device_pointer deviceOffset (device_pointer dPointer, size_t offset);  ; static device_pointer null ();  ; static bool isNull (device_pointer p);  . Function details. ◆ bufferAlloc(). template<class T > . static bool sofa::helper::MemoryManager< T >::bufferAlloc ; (; buffer_id_type * ; , . int ; ,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_memory_manager.html:461,error,error,461,api/master/sofa/html/classsofa_1_1helper_1_1_memory_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_memory_manager.html,1,['error'],['error']
Availability,"﻿. SOFA API: sofa::helper::Utils Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::Utils Class Reference . #include <Utils.h>; Contains possibly useful functions, that don't fit anywhere else. ; More...; Detailed Description; Contains possibly useful functions, that don't fit anywhere else. . Static Public Member Functions; static std::wstring widenString (const std::string &s);  Convert a string to a wstring. More...;  ; static std::string narrowString (const std::wstring &ws);  Convert a wstring to a string. More...;  ; static std::string downcaseString (const std::string &s);  Convert a string to lower case. More...;  ; static std::string upcaseString (const std::string &s);  Convert a string to upper case. More...;  ; static const std::string & getExecutablePath ();  Get the path of the executable that is currently running. More...;  ; static const std::string & getExecutableDirectory ();  Get the path to the directory of the executable that is currently running. More...;  ; static const std::string & getUserLocalDirectory ();  Get the path to the current user local config directory. More...;  ; static const std::string & getSofaUserLocalDirectory ();  Get the path to the SOFA directory into the current user local config directory. More...;  ; static const std::string & getSofaPathPrefix ();  Get the path to the ""root"" path of Sofa (i.e. the build directory or the installation prefix). More...;  ; static const std::string getSofaPathTo (const std::string &pathFromBuildDir);  Construct a path based on the build dir path of Sofa. More...;  ; static std::map< std::string, std::string > readBasicIniFile (const std::string &path);  Read a file written in a very basic ini-like format. More...;  . Function details. ◆ downcaseString(). std::string sofa::helper::Utils::downcaseString ; (; const std::string & ; s). static . Convert a string to lower case. . ◆ getE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html:658,down,downcaseString,658,api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,1,['down'],['downcaseString']
Availability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler Class Reference . #include <ExceptionMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler:. [legend]; Detailed Description; Raise an exception each time a error message is processed. Useful for automatic examples that only detects crashes! . Classes; struct  ErrorMessageException;  the exception raised by an error Message More...;  . Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ExceptionMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingExceptionMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html:450,error,error,450,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,2,['error'],['error']
Availability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:378,error,error,378,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,2,['error'],['error']
Availability,"﻿. SOFA API: sofa::helper::system::FileMonitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::system::FileMonitor Class Reference . #include <FileMonitor.h>. Static Public Member Functions; static int addFile (const std::string &filename, FileEventListener *listener);  add a new filepath to monitor and a listener to be triggered in case of change. returns >= 0 if the file was successfully added returns < 0 in case of error. More...;  ; static int addFile (const std::string &directoryname, const std::string &filename, FileEventListener *listener);  add a new path and file to monitor and a listener to be triggered in case of change. returns >= 0 if the file was successfully added returns < 0 in case of error. More...;  ; static int updates (int timeout=1);  check if the file have changed, colalesc the similar events and notify the listener. timeout is the number of seconds to block the calling process. Can be 0 (in this case it return immediately if there is no event. return -1 in case of error return >= 0 otherwise. More...;  ; static void removeListener (FileEventListener *listener);  remove the provided listener. If the listener is not existing, do nothing If the listener is nullptr, do nothing If the listener is associated with one or more file...remove all the associations. Keep in mind that the file are still monitored. More...;  ; static void removeFileListener (const std::string &filename, FileEventListener *listener);  remove the provided listener for a given file If the listener is not existing, do nothing If the listener is nullptr, do nothing If the listener is associated with one or more file...remove all the associations. Keep in mind that the file are still monitored. More...;  . Function details. ◆ addFile() [1/2]. int sofa::helper::system::FileMonitor::addFile ; (; const std::string & ; directoryname, . const std::string & ; filename, . Fil",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html:535,error,error,535,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_monitor.html,2,['error'],['error']
Availability,"﻿. SOFA API: sofa::helper::system::PipeProcess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::system::PipeProcess Class Reference . #include <PipeProcess.h>. Public Member Functions; virtual ~PipeProcess ();  . Static Public Member Functions; static bool executeProcess (const std::string &command, const std::vector< std::string > &args, const std::string &filenameStdin, std::string &outString, std::string &errorString);  . Constructor details. ◆ ~PipeProcess(). sofa::helper::system::PipeProcess::~PipeProcess ; (; ). virtual . Function details. ◆ executeProcess(). bool sofa::helper::system::PipeProcess::executeProcess ; (; const std::string & ; command, . const std::vector< std::string > & ; args, . const std::string & ; filenameStdin, . std::string & ; outString, . std::string & ; errorString . ). static . File as Stdin for windows does not work (yet) So the filename must be given into the args vector and argument filenameStdin is currently ignored . sofahelpersystemPipeProcess; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process.html:551,error,errorString,551,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_pipe_process.html,2,['error'],['errorString']
Availability,"﻿. SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::BaseMechanicalVisitor Class Reference . #include <BaseMechanicalVisitor.h>. Inheritance diagram for sofa::simulation::BaseMechanicalVisitor:. [legend]; Detailed Description; Base class for easily creating new actions for mechanical simulation.; During the first traversal (top-down), method processNodeTopDown(simulation::Node*) is applied to each simulation::Node. Each component attached to this node is processed using the appropriate method, prefixed by fwd. During the second traversal (bottom-up), method processNodeBottomUp(simulation::Node*) is applied to each simulation::Node. Each component attached to this node is processed using the appropriate method, prefixed by bwd. The default behavior of the fwd* and bwd* is to do nothing. Derived actions typically overload these methods to implement the desired processing. . Protected Attributes; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Forward processing; Methods called during the forward (top-down) traversal of the data stru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html:542,down,down,542,api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::PipelineImpl Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:482,down,down,482,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::PropagateEventVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PropagateEventVisitor Class Reference . #include <PropagateEventVisitor.h>. Inheritance diagram for sofa::simulation::PropagateEventVisitor:. [legend]; Detailed Description; Visitor used to propagate an event in the data structure. Propagation is done top-down until the event is handled. @author The SOFA team </www.sofa-framework.org>; . Protected Attributes; sofa::core::objectmodel::Event * m_event;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PropagateEventVisitor (const core::ExecParams *params, sofa::core::objectmodel::Event *e);  ;  ~PropagateEventVisitor () override;  ; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html:491,down,down,491,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::common::MechanicalOperations Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::common::MechanicalOperations Class Reference . #include <MechanicalOperations.h>. Public Attributes; core::MechanicalParams mparams;  ; core::ConstraintParams cparams;  ; core::objectmodel::BaseContext * ctx;  . Protected Attributes; VisitorExecuteFunc executeVisitor;  . Static Protected Attributes; static std::map< core::objectmodel::BaseContext *, bool > hasShownMissingLinearSolverMap;  Store if the ""missing linear solver"" error message has already been shown for a given context. More...;  . Public Member Functions;  MechanicalOperations (const core::MechanicalParams *mparams, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false);  ;  MechanicalOperations (const core::ExecParams *params, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false);  ; core::MechanicalParams * operator-> ();  ;  operator const core::MechanicalParams * ();  ; Mechanical Vector operations; void propagateDx (core::MultiVecDerivId dx, bool ignore_flag=false);  Propagate the given displacement through all mappings. More...;  ; void propagateDxAndResetDf (core::MultiVecDerivId dx, core::MultiVecDerivId df);  Propagate the given displacement through all mappings and reset the current force delta. More...;  ; void propagateX (core::MultiVecCoordId x);  Propagate the given position through all mappings. More...;  ; void propagateV (core::MultiVecDerivId v);  Propagate the given velocity through all mappings. More...;  ; void propagateXAndV (core::MultiVecCoordId x, core::MultiVecDerivId v);  Propagate the given position and velocity through all mappings. More...;  ; void propagateXAndResetF (core::MultiVecCoordId x, core::MultiVecDerivId f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:753,error,error,753,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['error'],['error']
Availability,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:277,down,down,277,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,1,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::graph::DAGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::graph::DAGNode Class Reference . #include <DAGNode.h>. Inheritance diagram for sofa::simulation::graph::DAGNode:. [legend]; Detailed Description; Define the structure of the scene as a Directed Acyclic Graph. Contains component objects (as pointer lists) and parents/childs (as DAGNode objects).; The visitor traversal is performed in two passes:; a complete top-down traversal; then a complete bottom-up traversal in the exact invert order than the top-down traversal NB: contrary to the ""tree"" traversal, there are no interlinked forward/backward callbacks. There are only forward then only backward callbacks. Note that nodes created during a traversal are not traversed if they are created upper than the current node during the top-down traversal or if they are created during the bottom-up traversal. . Classes; struct  StatusStruct;  wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) More...;  . Protected Attributes; LinkParents l_parents;  ;  Protected Attributes inherited from sofa::simulation::Node; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:666,down,down,666,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::graph::GetDownObjectsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::GetDownObjectsVisitor Class Reference . get all down objects respecting specified class_info and tags ; More... Inheritance diagram for sofa::simulation::graph::GetDownObjectsVisitor:. [legend]; Detailed Description; get all down objects respecting specified class_info and tags . Protected Attributes; const sofa::core::objectmodel::ClassInfo & _class_info;  ; DAGNode::GetObjectsCallBack & _container;  ; const sofa::core::objectmodel::TagSet & _tags;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  GetDownObjectsVisitor (const sofa::core::objectmodel::ClassInfo &class_info, DAGNode::GetObjectsCallBack &container, const sofa::core::objectmodel::TagSet &tags);  ;  ~GetDownObjectsVisitor () override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html:297,down,down,297,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,2,['down'],['down']
Availability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype > Class Template Reference . #include <MechanicalVAvailVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype >; Find the first available index for a VecId . Public Attributes; MyVecId & v;  ; StateSet states;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVAvailVisitor (const sofa::core::ExecParams *params, MyVecId &v);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html:645,avail,available,645,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html,1,['avail'],['available']
Availability,"﻿. SOFA API: sofa::simulation::xml::BaseElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::xml::BaseElement Class Referenceabstract . #include <BaseElement.h>. Inheritance diagram for sofa::simulation::xml::BaseElement:. [legend]. Classes; class  child_iterator;  . Protected Attributes; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; virtual const char * getClass () const =0;  Get the node class (Scene, Mapping, ...) More...;  ; sofa::core::objectmodel::Base * getObject () override=0;  Get the associated object. More...;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::string & getSrcFile () const;  ; virtual void setSrcFile (const std::string &newSrcFile);  ; int getSrcLine () const;  ; virtual void setSrcLine (const int l);  ; bool isFileRoot ();  Return true if this element",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html:700,error,errors,700,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,1,['error'],['errors']
Availability,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html:297,failure,failure,297,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,2,['failure'],['failure']
Availability,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html:311,failure,failure,311,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,2,['failure'],['failure']
Availability,"﻿. SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference . #include <Rebind.h>; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; More...; Detailed Description; template<class _T, class _OtherType>; struct sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; Template Parameters. _TType that does NOT have a nested rebind_to member . sofatypeRebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html:625,error,error,625,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html,2,['error'],['error']
Availability,"﻿. SOFA API: sofa::type::pairwise Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::type::pairwise Namespace Reference . Functions; template<class T > ; const T & stdclamp (const T &v, const T &lo, const T &hi);  clamp a single value. This function should be removed when std::clamp will be available More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T clamp (const T &in, const TT &minValue, const TT &maxValue);  clamp all the values of a fixed_array to be within a given interval. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator+ (const T &l, const T &r);  pairwise add of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator- (const T &l, const T &r);  pairwise subtract of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator* (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator/ (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  . Function Documentation. ◆ clamp(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::clamp ; (; const T & ; in, . const TT & ; minValue, . const TT & ; maxValue . ). clamp all the values of a fixed_array to be within a given interval. . ◆ operator*(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::operator* ; (; const T & ; r, . const typename T::value_type & ; f . ). multiply from l the r components. . ◆ operator+(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . constexpr T sofa::type::pairwise",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html:354,avail,available,354,api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html,1,['avail'],['available']
Deployability," #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions; void resizeArray (std::size_t n);  ;  VectorSpringForceField ();  ;  VectorSpringForceField (MechanicalState *_object);  ;  VectorSpringForceField (MechanicalState *_object1, MechanicalState *_object2);  ; virtual ~VectorSpringForceField () override;  ; void createEdgeInformation (Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs);  ;  Protected Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  PairInteractionForceField (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:19889,update,update,19889,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['update'],['update']
Deployability," &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:18034,update,updateInternal,18034,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['update'],['updateInternal']
Deployability," &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(MeshBarycentricMapperEngine, DataTypes), core::DataEngine)sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; VecCoord typedefsofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecIndices typedefsofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html:14270,update,update,14270,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,1,['update'],['update']
Deployability," &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited)sofa::component::engine::generate::MeshClosingEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; trianglessofa::component::engine::generate::MeshClosingEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSeqIndex typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:13527,update,update,13527,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,1,['update'],['update']
Deployability," & ; p, . Index ; elementIndex . ). protected . ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyStiffness(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::applyStiffness ; (; VecCoord & ; f, . Real ; h, . const VecCoord & ; x, . const SReal & ; kFactor . ). protectedvirtual . ◆ applyStiffnessSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::applyStiffnessSmall ; (; VecCoord & ; f, . Real ; h, . const VecCoord & ; x, . const SReal & ; kFactor . ). protected . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html:27074,update,update,27074,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,1,['update'],['update']
Deployability," () override;  ; void updateValues (TempData &_data);  ; Real valueFromPosition (const CPos &p, const TempData &data);  ; Real valueFromPoint (const PointID &pid, const TempData &data);  ; Real valueFromEdge (const Edge &e, const TempData &data);  ; Real valueFromTriangle (const Triangle &t, const TempData &data);  ; Real valueFromTetrahedron (const Tetra &t, const TempData &data);  ; void updateVectors (TempData &_data);  ; Vec3 vectorFromPosition (const CPos &p, const TempData &data);  ; Vec3 vectorFromPoint (const PointID &pid, const TempData &data);  ; Vec3 vectorFromEdge (const Edge &e, const TempData &data);  ; Vec3 vectorFromTriangle (const Triangle &t, const TempData &data);  ; Vec3 vectorFromTetrahedron (const Tetra &t, const TempData &data);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html:15982,update,update,15982,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,1,['update'],['update']
Deployability," (; DDGNode * ; n). Remove an input from this node. . ◆ delOutput(). void sofa::core::objectmodel::DDGNode::delOutput ; (; DDGNode * ; n). Remove an output from this node. . ◆ doAddInput(). void sofa::core::objectmodel::DDGNode::doAddInput ; (; DDGNode * ; n). protectedvirtual . ◆ doAddOutput(). void sofa::core::objectmodel::DDGNode::doAddOutput ; (; DDGNode * ; n). protectedvirtual . ◆ doDelInput(). void sofa::core::objectmodel::DDGNode::doDelInput ; (; DDGNode * ; n). protectedvirtual . ◆ doDelOutput(). void sofa::core::objectmodel::DDGNode::doDelOutput ; (; DDGNode * ; n). protectedvirtual . ◆ getInputs(). const DDGNode::DDGLinkContainer & sofa::core::objectmodel::DDGNode::getInputs ; (; ). Get the list of inputs for this DDGNode. . ◆ getOutputs(). const DDGNode::DDGLinkContainer & sofa::core::objectmodel::DDGNode::getOutputs ; (; ). Get the list of outputs for this DDGNode. . ◆ isDirty(). bool sofa::core::objectmodel::DDGNode::isDirty ; (; ); const. inline . Returns true if the DDGNode needs to be updated. . ◆ notifyEndEdit(). void sofa::core::objectmodel::DDGNode::notifyEndEdit ; (; ). virtual . Notify links that the DGNode has been modified. ; Reimplemented in sofa::gui::qt::ObjectStateListener. ◆ setDirtyOutputs(). void sofa::core::objectmodel::DDGNode::setDirtyOutputs ; (; ). virtual . Indicate the outputs needs to be updated. This method must be called after changing the value of this node. . ◆ setDirtyValue(). void sofa::core::objectmodel::DDGNode::setDirtyValue ; (; ). virtual . Indicate the value needs to be updated. ; Reimplemented in sofa::core::DataTrackerFunctor< FunctorType >. ◆ update(). virtual void sofa::core::objectmodel::DDGNode::update ; (; ). pure virtual . Update this value. ; Implemented in sofa::gui::qt::ObjectStateListener, sofa::core::topology::TopologyHandler, sofa::core::objectmodel::BaseData, sofa::core::DataTrackerFunctor< FunctorType >, sofa::core::DataTrackerCallback, and sofa::core::DataEngine. ◆ updateIfDirty(). void sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html:4625,update,updated,4625,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,1,['update'],['updated']
Deployability," (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshBarycentricMapperEngine ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:14887,update,update,14887,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['update'],['update']
Deployability," (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  OscillatingTorsionPressureForceField ();  ;  ~OscillatingTorsionPressureForceField () override;  ; void selectTrianglesAlongPlane ();  ; void selectTrianglesFromString ();  ; void initTriangleInformation ();  ; bool isPointInPlane (Coord p);  ; Coord getVecFromRotAxis (const Coord &x);  ; Real getAngle (const Coord &v1, const Coord &v2);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:18939,update,update,18939,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,1,['update'],['update']
Deployability," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4490,update,update,4490,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,2,['update'],['update']
Deployability," (const PointID pid) const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ; virtual bool isEdgeInROI (const Edge &e) const;  ; virtual bool isEdgeInStrictROI (const Edge &e) const;  ; virtual bool isTriangleInROI (const Triangle &t) const;  ; virtual bool isTriangleInStrictROI (const Triangle &t) const;  ; virtual bool isQuadInROI (const Quad &q) const;  ; virtual bool isQuadInStrictROI (const Quad &q) const;  ; virtual bool isTetrahedronInROI (const Tetra &t) const;  ; virtual bool isTetrahedronInStrictROI (const Tetra &t) const;  ; virtual bool isHexahedronInROI (const Hexa &t) const;  ; virtual bool isHexahedronInStrictROI (const Hexa &t) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:19977,update,update,19977,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['update'],['update']
Deployability," (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; virtual bool loadTextures ();  ; virtual bool loadTexture (const std::string &);  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);  ; void flipFaces ();  ; void setFilename (std::string s);  ; std::string getFilename ();  ; void setColor (float r, float g, float b, float a);  ; void setColor (std::string color);  ; void setUseNormals (bool val);  ; bool getUseNormals () const;  ; void setCastShadow (bool val);  ; bool getCastShadow () const;  ; void setMesh (helper::io::Mesh &m, bool tex=false);  ; bool isUsingTopology () const;  ; const VecCoord & getVertices () const;  ; const VecDeriv & getVnormals () const;  ; const VecTexCoord & getVtexcoords () const;  ; const VecCoord & getVtangents () const;  ; const VecCoord & getVbitangents () const;  ; const VecVisualTriangle & getTriangles () const;  ; const VecVisualQuad & getQuads () const;  ; const VecVisualEdge & getEdges () const;  ; void setVertices (VecCoord *x);  ; void setVnormals (VecDeriv *vn);  ; void setVtexcoords (VecTexCoord *vt);  ; void setVtangents (VecCoord *v);  ; void setVbitangents (VecCoord *v);  ; void setTriangles (VecVisualTriangle *t);  ; void setQuads (VecVisualQuad *q);  ; void setEdges (VecVisualEdge *e);  ; virtual void computePositions ();  ; virtual void computeMesh ();  ; virtual void computeNormals ();  ; virtual void computeTangents ();  ; void computeBBox (const core::ExecParams *params, bool=false) override;  ; virtual void computeUVSphereProjection ();  ; virtual void updateBuffers ();  ; virtual void deleteBuffers ();  ; virtual void deleteTextures ();  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initFromTopology ();  ; void initPositionFromVertices ();  ; void initFromFile",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:10319,update,updateBuffers,10319,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['update'],['updateBuffers']
Deployability," (const sofa::core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void push (const sofa::core::visual::VisualParams *vparams);  ; void pop (const sofa::core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:4573,update,update,4573,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,1,['update'],['update']
Deployability," (core::topology::Topology *t);  . internalupdate; Methods related to tracking of data and the internal update . void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  . control; Basic control . void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:11469,update,updateInternal,11469,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['update'],['updateInternal']
Deployability," ). overridevirtual . Add Mass contribution to global Matrix assembling. ; Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ applyEdgeCreation(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::applyEdgeCreation ; (; const sofa::type::vector< EdgeID > & ; edgeAdded, . const sofa::type::vector< Edge > & ; , . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; , . const sofa::type::vector< sofa::type::vector< SReal > > & ;  . ). protected . Method to update See alsod_vertexMass when a new Edge is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when EDGESADDED event is fired. . ◆ applyEdgeDestruction(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::applyEdgeDestruction ; (; const sofa::type::vector< EdgeID > & ; edgeRemoved). protected . Method to update See alsod_vertexMass when a Edge is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when EDGESREMOVED event is fired. . ◆ applyPointCreation(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::applyPointCreation ; (; PointID ; pointIndex, . MassType & ; m, . const Point & ; , . const sofa::type::vector< PointID > & ; , . const sofa::type::vector< SReal > & ;  . ). protected . Method to initialize See alsoMassVector when a new Point is created. Will be set as creation callback in the PointData . d_vertexMass . ◆ applyPointDestruction(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::applyPointDestruction ; (; Index ; id, . MassType & ; VertexMass . ). protected . Method to update See alsod_vertexMass when a Point is removed. Will be set as destruction callback in the PointData . d_vertexMass . ◆ buildD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:34875,update,update,34875,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability," ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getStiffness(). template<class DataTypes > . Real sofa::component::mechanicalload::PlaneForceField< DataTypes >::getStiffness ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::init ; (; void ; ). overridevirtual . Inherited from ForceField. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ rotate(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::rotate ; (; Deriv ; axe, . Real ; angle . ). ◆ setDamping(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::setDamping ; (; Real ; damp). inline . ◆ setDrawColor(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::setDrawColor ; (; const sofa::type::RGBAColor & ; newvalue). inline . ◆ setMState(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::setMState ; (; core::behavior::MechanicalState< DataTypes > * ; mstate). inline . ◆ setPlane(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::setPlane ; (; const Deriv & ; normal, . Real ; d . ). ◆ setStiffness(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::setStiffness ; (; Real ; stiff). inline . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::mechanicalload::PlaneForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PlaneForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ updateStiffness(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::updateStiffness ; (; const VecCoord & ; x). virtual . sofacomponentmechanicalloadPlaneForceField; Generated on Mon Nov 11 2024 02:53:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html:28096,update,updateStiffness,28096,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,2,['update'],['updateStiffness']
Deployability," *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static std::string GetCustomTemplateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void integrateMesh ();  integrates the whole mesh More...;  ; void integrateTriangle (type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2);  ; void generateRigid ();  generates the RigidMass from the mesh integral More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:14002,integrat,integrateTriangle,14002,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateTriangle']
Deployability," *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeSets ();  ;  ~MergeSets () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html:13552,update,update,13552,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,1,['update'],['update']
Deployability," *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  EdgePressureForceField ();  ; virtual ~EdgePressureForceField ();  ; void selectEdgesAlongPlane ();  ; void selectEdgesFromIndices (const type::vector< Index > &inputIndices);  ; void selectEdgesFromString ();  ; void selectEdgesFromEdgeList ();  ; void updateEdgeInformation ();  ; void initEdgeInformation ();  ; bool isPointInPlane (Coord p);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:16664,update,updateEdgeInformation,16664,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,2,['update'],"['update', 'updateEdgeInformation']"
Deployability," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:21371,update,updateInternal,21371,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::shader::OglTextureprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::shader::OglTextureprotected; textureFilenamesofa::gl::component::shader::OglTextureprotected; textureUnitsofa::gl::component::shader::OglTextureprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbind()sofa::gl::component::shader::OglTexture; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglTexture() overridesofa::gl::component::shader::OglTextureprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:14570,update,updateLinks,14570,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,3,['update'],"['updateLinks', 'updateVisual']"
Deployability," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Variable, OglVariable< type::Vec2f >)sofa::gl::component::shader::OglFloat2Variable; OglVariable< type::Vec2f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec2f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec2f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat2Variable()sofa::gl::component::shader::OglFloat2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual::VisualM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:13587,update,updateVisual,13587,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['update'],['updateVisual']
Deployability," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Variable, OglVariable< type::Vec3f >)sofa::gl::component::shader::OglFloat3Variable; OglVariable< type::Vec3f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec3f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec3f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat3Variable()sofa::gl::component::shader::OglFloat3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual::VisualM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:13587,update,updateVisual,13587,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['update'],['updateVisual']
Deployability," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Variable, OglVariable< type::Vec4f >)sofa::gl::component::shader::OglFloat4Variable; OglVariable< type::Vec4f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec4f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec4f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat4Variable()sofa::gl::component::shader::OglFloat4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual::VisualM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:13587,update,updateVisual,13587,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,1,['update'],['updateVisual']
Deployability," *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Inherited, Inherit1)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; SOFA_CLASS(SOFA_TEMPLATE(SelectConnectedLabelsROI, _T), DataEngine)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; T typedefsofa::component::engine::select::SelectConnectedLabelsROI< _T >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecVLabels typedefsofa::component::engine::select::SelectConnectedLabelsROI< _T >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~SelectConnectedLabelsROI() overridesofa::component::engine::select::SelectConnectedLabelsROI< _T >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html:12873,update,updateAllInputsIfDirty,12873,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,4,['update'],"['updateAllInputsIfDirty', 'updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability," *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ValuesFromPositions, DataTypes), core::DataEngine)sofa::component::engine::select::ValuesFromPositions< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateValues(TempData &_data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; updateVectors(TempData &_data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromEdge(const Edge &e, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromPoint(const PointID &pid, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromPosition(const CPos &p, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromTetrahedron(const Tetra &t, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromTriangle(const Triangle &t, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; ValuesFromPosition",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html:14296,update,updateInternal,14296,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,1,['update'],['updateInternal']
Deployability," *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html:19097,integrat,integrateStiffness,19097,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,1,['integrat'],['integrateStiffness']
Deployability," *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(GridMeshCreator, sofa::core::loader::MeshLoader)sofa::component::io::mesh::GridMeshCreator; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; trianglePatternsofa::component::io::mesh::GridMeshCreator; type()sofa::component::io::mesh::GridMeshCreatorinlinevirtual; uniqueEdgessofa::component::io::mesh::GridMeshCreatorprotected; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vert(unsigned x, unsigned y)sofa::component::io::mesh::GridMeshCreatorinlineprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:17105,update,updateElements,17105,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,6,['update'],"['updateElements', 'updateInternal', 'updateLinks', 'updateMesh', 'updateNormals', 'updatePoints']"
Deployability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ _finalWeights. template<class DataTypes > . type::vector< std::pair<Index, Weight> > sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >::_finalWeights. ◆ _weights. template<class DataTypes > . type::vector< type::vector<Weight> > sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >::_weights. ◆ CoarseToFine. template<class DataTypes > . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:33980,integrat,integrateStiffness,33980,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateStiffness']
Deployability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ _lumpedMasses. template<class DataTypes > . type::vector<Coord> sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::_lumpedMasses. protected . masses per particle computed by lumping mass matrices . ◆ _particleMasses. template<class DataTypes > . MassVector sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::_particleMasses. protected . masses per particle in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:29441,integrat,integrateStiffness,29441,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateStiffness']
Deployability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ d_nbVirtualFinerLevels. template<class DataTypes > . Data<int> sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::d_nbVirtualFinerLevels. use virtual finer levels, in order to compte non-uniform stiffness . ◆ d_totalMass. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::d_totalMass. ◆ d_use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:31534,integrat,integrateStiffness,31534,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateStiffness']
Deployability," *root, SReal *minBBox, SReal *maxBBox, bool init=true)=deletesofa::simulation::Simulationvirtual; computeTotalBBox(Node *root, SReal *minBBox, SReal *maxBBox)=deletesofa::simulation::Simulationvirtual; createNewGraph(const std::string &name)=0sofa::simulation::Simulationpure virtual; createNewNode(const std::string &name)=0sofa::simulation::Simulationpure virtual; draw(sofa::core::visual::VisualParams *vparams, Node *root)=deletesofa::simulation::Simulationvirtual; dumpState(Node *root, std::ofstream &out)=deletesofa::simulation::Simulationvirtual; exportGraph(Node *root, const char *filename=nullptr)=deletesofa::simulation::Simulationvirtual; exportOBJ(Node *root, const char *filename, bool exportMTL=true)=deletesofa::simulation::Simulationvirtual; exportXML(Node *root, const char *fileName=nullptr)=deletesofa::simulation::Simulationvirtual; init(Node *root)=deletesofa::simulation::Simulationvirtual; initNode(Node *node)=deletesofa::simulation::Simulationvirtual; initTextures(Node *root)=deletesofa::simulation::Simulationvirtual; isDirectedAcyclicGraph()=0sofa::simulation::Simulationpure virtual; load(const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=deletesofa::simulation::Simulationvirtual; operator=(const Simulation &n)=deletesofa::simulation::Simulation; print(Node *root)=deletesofa::simulation::Simulationvirtual; reset(Node *root)=deletesofa::simulation::Simulationvirtual; Simulation()sofa::simulation::Simulation; Simulation(const Simulation &n)=deletesofa::simulation::Simulation; SPtr typedefsofa::simulation::Simulation; theSimulationsofa::simulation::Simulationinlinestatic; unload(NodeSPtr root)=deletesofa::simulation::Simulationvirtual; updateContext(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisual(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisualContext(Node *root)=deletesofa::simulation::Simulationvirtual; ~Simulation()sofa::simulation::Simulationvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html:2080,update,updateContext,2080,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,3,['update'],"['updateContext', 'updateVisual', 'updateVisualContext']"
Deployability," , class TOut > . sofa::core::objectmodel::RenamedData<Real> sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::f_radius. ◆ f_resizeToModel. template<class TIn , class TOut > . sofa::core::objectmodel::RenamedData<bool> sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::f_resizeToModel. ◆ js. template<class TIn , class TOut > . js_type sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::js. protected . ◆ l_topology. template<class TIn , class TOut > . SingleLink<SubsetMapping<In, Out>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::l_topology. Link to be set to the topology container in the component graph. . ◆ matrixJ. template<class TIn , class TOut > . std::unique_ptr<MatrixType> sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::matrixJ. protected . ◆ updateJ. template<class TIn , class TOut > . bool sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::updateJ. protected . Constructor details. ◆ SubsetMapping(). template<class TIn , class TOut > . sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::SubsetMapping. protected . ◆ ~SubsetMapping(). template<class TIn , class TOut > . sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::~SubsetMapping. virtual . Function details. ◆ addPoint(). template<class TIn , class TOut > . int sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::addPoint ; (; Index ; index). ◆ apply(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::apply ; (; const core::MechanicalParams * ; mparams, . OutDataVecCoord & ; dOut, . const InDataVecCoord & ; dIn . ). override . ◆ applyJ(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJ ; (; const core::MechanicalParams * ; mparams, . OutDataVecDeriv & ; dOut, . const InDataVecDeriv & ; dIn . ). o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:7046,update,updateJ,7046,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['update'],['updateJ']
Deployability," . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ create(). template<class TDataTypes > . template<class T > . static T::SPtr sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::SphereCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:24902,update,update,24902,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,1,['update'],['update']
Deployability," . sofa::component::engine::transform::InvertTransformMatrixEngine Class Reference . #include <TransformMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::InvertTransformMatrixEngine:. [legend]; Detailed Description; This engine inverts the input transform and outputs the resulting transformation matrix. T_output = T_input^-1 . Public Member Functions;  SOFA_CLASS (InvertTransformMatrixEngine, AbstractTransformMatrixEngine);  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:1261,update,update,1261,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['update'],['update']
Deployability, /feed; ; Distortion – SOFA. SOFA - Topic Tag: Distortion. /dlls-issue; . /feed; ; DLLs issue – SOFA. SOFA - Topic Tag: DLLs issue. /docker; . /feed; ; docker – SOFA. SOFA - Topic Tag: docker. /documentation; . /feed; ; documentation – SOFA. SOFA - Topic Tag: documentation. /documentation-color-alpha; . /feed; ; documentation color alpha – SOFA. SOFA - Topic Tag: documentation color alpha. /doe; . /feed; ; doe – SOFA. SOFA - Topic Tag: doe. /dynamic-systems; . /feed; ; Dynamic systems – SOFA. SOFA - Topic Tag: Dynamic systems. /edge_removal; . /feed; ; edge_removal – SOFA. SOFA - Topic Tag: edge_removal. /eigen; . /feed; ; Eigen – SOFA. SOFA - Topic Tag: Eigen. /elastic; . /feed; ; Elastic – SOFA. SOFA - Topic Tag: Elastic. /elasticity; . /feed; ; elasticity – SOFA. SOFA - Topic Tag: elasticity. /elastoplastic; . /feed; ; Elastoplastic – SOFA. SOFA - Topic Tag: Elastoplastic. /energy; . /feed; ; Energy – SOFA. SOFA - Topic Tag: Energy. /engine-data-update-energy; . /feed; ; engine data update energy – SOFA. SOFA - Topic Tag: engine data update energy. /error; . /feed; ; error – SOFA. SOFA - Topic Tag: error. /error-5; . /feed; ; Error 5 – SOFA. SOFA - Topic Tag: Error 5. /error-determination; . /feed; ; error determination – SOFA. SOFA - Topic Tag: error determination. /event; . /feed; ; event – SOFA. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:441488,update,update,441488,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['update'],['update']
Deployability, /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable versions. /differences-between-animationloops; . /feed; ; [SOLVED] Differences between AnimationLoops – SOFA. SOFA - Topic: [SOLVED] Differences between AnimationLoops. /difficulties-compiling-my-own-sofa-plugins-on-windows; ; SOFA - Topic: [SOLVED] Difficulties compiling my own SOFA plugins on Windows. /difficulty-compiling-applications-tutorials; ; SOFA - Topic: [SOLVED] Difficulty compiling applications/tutorials. /diffussion-for-tetrahedral-mesh; . /feed; ; [SOLVED] Diffusion for tetrahedral mesh – SOFA. SOFA - Topic: [SOLVED] Diffusion for tetrahedral mesh. /discover-the-new-release-v20-12; . /feed; ; Discover the new release v20.12! – SOFA. SOFA - Topic: Discover the new release v20.12!. /discover-the-new-release-v21-06; . /feed; ; Discover the new release v21.06! – SOFA. SOFA - Topic: Discover the new release v21.06!. /dlls-error-when-building-sofa-in-windows10; ; SOFA - Topic: DLLs error when building SOFA in Windows10. /dockerized-sofa-ros-2-sofarosconnector-etc; ; SOFA - Topic: Dockerized Sofa + ROS 2 + SofaROSConnector etc. /document-about-xml-grammar; ; SOFA - Topic: [SOLVED] Document about xml grammar. /documentation-for-attachconstraint; ; SOFA - Topic: [SOLVED] Documentation for attachconstraint?. /documentation-of-sofa-has-been-updated; ; SOFA - Topic: Documentation of SOFA has been updated!. /documents-of-classes-and-functions; ; SOFA - Topic: [SOLVED] Documents of classes and functions. /does-dir-notfound-bad; ; SOFA - Topic: [SOLVED] does DIR-NOTFOUND bad?. /does-sofa-have-intention-of-developing-mobile-application; . /feed; ; [SOLVED] Does Sofa have intention of developing mobile application? – SOFA. SOFA - Topic: [SOLVED] Does Sofa have intention of developing mobile app,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:288851,release,release-,288851,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['release-']
Deployability," ; (; SOFA_TEMPLATE2(RigidMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(core::Mapping, TIn, TOut) ;  . ). ◆ updateK() [1/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [2/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [3/3]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). overridevirtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateOmega() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::updateOmega ; (; typename InDeriv::Rot & ; omega, . const OutDeriv & ; out, . const OutCoord & ; rotatedpoint . ). ◆ updateOmega() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateOmega ; (; typename InDeriv::Rot & ; omega, . const OutDeriv & ; out, . const OutCoord & ; rotatedpoint . ). Enum details. ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorN . ◆ anonymous en",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:40697,update,updateK,40697,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['update'],['updateK']
Deployability, ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: New tutorials for SOFA. /new-version-of-blender-sofa; . /page; . /4; ; SOFA - Topic: New version of Blender SOFA. SOFA - Topic: New version of Blender SOFA. /new-video-tutorial-howto-configure-and-install-on-linux; ; SOFA - Topic: New video tutorial: HowTo configure and install on Linux. /new-website; . /page; . /10; ; SOFA - Topic: New website !. /11; ; SOFA - Topic: New website !. /5; ; SOFA - Topic: New website !. SOFA - Topic: New website !. /no-boost-item-list-after-cmake-configure; ; SOFA - Topic: [SOLVED] No boost item list after cmake configure. /no-collision-between-the-collision-models; . /embed; ; SOFA - Topic: [SOLVED] No collision between the collision mode,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:354860,release,release-,354860,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['release'],"['release', 'release-']"
Deployability," ; Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ applyEdgeMassCreation() [1/2]. template<class DataTypes , class GeometricalTypes = DataTypes> . template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::applyEdgeMassCreation ; (; Index ; edgeIndex, . MassType & ; EdgeMass, . const core::topology::BaseMeshTopology::Edge & ; , . const sofa::type::vector< Index > & ; , . const sofa::type::vector< SReal > & ;  . ). protected . Method to update See alsod_vertexMass using mass matrix coefficient when a new Triangle is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:38378,update,update,38378,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability," ; SOFA - Topic: Choosing what parts of a robot to be elastic. /cimg-error-by-adding-flexible-plugin; ; SOFA - Topic: [SOLVED] CImg error by adding flexible plugin. /citing-sofa-framework; ; SOFA - Topic: Citing SOFA Framework. /clang-error-while-compiling-sofa; ; SOFA - Topic: [SOLVED] Clang error while compiling Sofa. /clarification-of-mapping-gui; ; SOFA - Topic: Clarification of mapping GUI. /clarify-feasibility-in-sofa-dry-fabric-handling; . /feed; ; [SOLVED] Clarify feasibility in SOFA – dry fabric handling – SOFA. SOFA - Topic: [SOLVED] Clarify feasibility in SOFA – dry fabric handling. /cloning_to_make_pull_request; ; SOFA - Topic: [SOLVED] cloning_to_make_pull_request. /cloth-on-a-table-with-collision-and-friction; ; SOFA - Topic: Cloth on a table with Collision and friction. /cmake-based-installer-for-sofa-framework; . /feed; ; CMake-based installer for SOFA framework – SOFA. /page; . /2; ; SOFA - Topic: CMake-based installer for SOFA framework. /5; ; SOFA - Topic: CMake-based installer for SOFA framework. SOFA - Topic: CMake-based installer for SOFA framework. /cmake-cant-find-boost-library; ; SOFA - Topic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES give",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:274334,install,installer,274334,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['installer']
Deployability, ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – Visco-Elasticity. /x-ray-rendering; ; SOFA – X-Ray Rendering. /xxl-robot; ; SOFA – XXL Robot. SOFA – Plugins. /publications; . /add-a-publication-with-hal; ; SOFA – Add a publication with HAL. /feed; . 	Comments on: Publications	. SOFA – Publications. /submit; ; SOFA – Submit your asset. comments; . /feed; . 	Comments for SOFA	. community; . /feedback; ; SOFA – Feedback Form. /forum; . /feed; ; SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:246637,integrat,integration,246637,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Deployability, ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable versions. /differences-between-animationloops; . /feed; ; [SOLVED] Differences between AnimationLoops – SOFA. SOFA - Topic: [SOLVED] Differences between AnimationLoops. /difficulties-compiling-my-own-sofa-plugins-on-windows; ; SOFA - Topic: [SOLVED] Difficulties compiling my own SOFA plugins on Windows. /difficulty-compiling-applications-tutorials; ; SOFA - Topic: [SOLVED] Difficulty compiling applications/tutorials. /diffussion-for-tetrahedral-mesh; . /feed; ; [SOLVED] Diffusion for tetrahedral mesh – SOFA. SOFA - Topic: [SOLVED] Diffusion for tetrahedral mesh. /discover-the-new-release-v20-12; . /feed; ; Discover the new release v20.12! – SOFA. SOFA - Topic: Discover the new release v20.12!. /discover-the-new-release-v21-06; . /feed; ; Discover the new release v21.06! – SOFA. SOFA - Topic: Discover the new release v21.06!. /dlls-error-when-building-sofa-in-windows10; ; SOFA - Topic: DLLs error when building SOFA in Windows10. /dockerized-sofa-ros-2-sofarosconnector-etc; ; SOFA - Topic: Dockerized Sofa + ROS 2 + SofaROSConnector etc. /document-about-xml-grammar; ; SOFA - Topic: [SOLVED] Document about xml grammar. /documentation-for-attachconstraint; ; SOFA - Topic: [SOLVED] Documentation for attachconstraint?. /documentation-of-sofa-has-been-updated; ; SOFA - Topic: Documentation of SOFA has been updated!. /documents-of-classes-and-functions; ; SOFA - Topic: [SOLVED] Documents of classes and functions. /does-dir-notfound-bad; ; SOFA - Topic: [SOLVED] does DIR-NOTFOUND bad?. /does-sofa-have-intention-of-developing-mobile-application; . /feed; ; [SOLVED] Does Sofa have intention of developing mobile application? – SOFA. SOFA - Topic: [SOLVED] Does ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:288816,release,release,288816,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['release']
Deployability," ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ~MechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMechanicalState;  BaseMechanicalState ();  ;  ~BaseMechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:22841,update,update,22841,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['update'],['update']
Deployability," <TetrahedronBarycentricContactMapper.h>; Mapper for TetrahedronCollisionModel. ; More... Inheritance diagram for sofa::component::collision::response::mapper::ContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::collision::response::mapper::ContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >; Mapper for TetrahedronCollisionModel. . Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; sofa::Index addPoint (const Coord &P, sofa::Index index, Real &);  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Size, sofa::Size);  ;  BarycentricContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup () override;  ; MMechanicalState * createMapping (const char *name=""contactPoints"") override;  ; void resize (sofa::Size size) override;  ; void update () override;  ; void updateXfree () override;  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual void resize (Size size)=0;  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >; MCollisionModel * model;  ; MMapping::SPtr mapping;  ; MMapper::SPtr mapper;  ;  Static Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html:1597,update,update,1597,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html,2,['update'],"['update', 'updateXfree']"
Deployability," > &, Matrix6 &);  . Constructor details. ◆ ~HyperelasticMaterial(). template<class DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::~HyperelasticMaterial ; (; ). inlinevirtual . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >, and sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >, sofa::component::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html:2202,configurat,configuration,2202,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,1,['configurat'],['configuration']
Deployability," > & ; out, . const Data< typename Out::MatrixDeriv > & ; in . ). override . ◆ applyJT() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::applyJT ; (; const core::MechanicalParams * ; mparams, . Data< typename In::VecDeriv > & ; out, . const Data< typename Out::VecDeriv > & ; in . ). override . ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::getJ. override . ◆ getJs(). template<class TIn , class TOut > . const type::vector< linearalgebra::BaseMatrix * > * sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::getJs. overridevirtual . ◆ getMapper(). template<class TIn , class TOut > . TopologyBarycentricMapper<InDataTypes,OutDataTypes>* sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::getMapper ; (; ). inline . interface for continuous friction contact . ◆ handleTopologyChange(). template<class TIn , class TOut > . void sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::handleTopologyChange ; (; core::topology::Topology * ; t). override . ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::init ; (; void ; ). override . ◆ reinit(). template<class TIn , class TOut > . void sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::reinit. override . ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::linear::BarycentricMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(BarycentricMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(LinearMapping, TIn, TOut) ;  . ). sofacomponentmappinglinearBarycentricMapping; Generated on Mon Nov 11 2024 02:48:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html:6818,continuous,continuous,6818,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html,1,['continuous'],['continuous']
Deployability," > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Inherited, Inherit1)sofa::component::engine::select::SelectLabelROI< _T >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::select::SelectLabelROI< _T >; SOFA_CLASS(SOFA_TEMPLATE(SelectLabelROI, _T), DataEngine)sofa::component::engine::select::SelectLabelROI< _T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; T typedefsofa::component::engine::select::SelectLabelROI< _T >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~SelectLabelROI() overridesofa::component::engine::select::SelectLabelROI< _T >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html:12479,update,update,12479,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,5,['update'],"['update', 'updateAllInputsIfDirty', 'updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability," > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(DisplacementMatrixEngine, DataTypes), SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4))sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; DisplacementTransformEngine< DataTypes, type::Mat4x4 >::SOFA_CLASS(SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4), sofa::core::DataEngine)sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SxInversessofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html:15190,update,update,15190,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,5,['update'],"['update', 'updateAllInputsIfDirty', 'updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability," > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:2736,update,update,2736,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,1,['update'],['update']
Deployability," > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Protected Slots; virtual void raiseDialog ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ openFileButton. QPushButton* sofa::gui::qt::DataFileNameWidget::openFileButton. protected . ◆ openFilePath. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html:2509,update,update,2509,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,1,['update'],['update']
Deployability," > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Distances (sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer *hexaTopoContainer, core::behavior::MechanicalState< DataTypes > *targetPointSet);  ;  ~Distances () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:17442,update,update,17442,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['update'],['update']
Deployability," >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeSpring(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::removeSpring ; (; sofa::Index ; idSpring). ◆ setArrowSize(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::setArrowSize ; (; float ; s). inline . ◆ setDrawMode(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::setDrawMode ; (; int ; m). inline . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(SpringForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes) ;  . ). ◆ updateSpringsFromTopologyIndices(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::updateSpringsFromTopologyIndices. protected . ◆ updateTopologyIndices_springRemoved(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::updateTopologyIndices_springRemoved ; (; unsigned ; id). protected . ◆ updateTopologyIndicesFromSprings(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::updateTopologyIndicesFromSprings. protected . ◆ updateTopologyIndicesFromSprings_springAdded(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::updateTopologyIndicesFromSprings_springAdded. protected . Related details. ◆ SpringForceFieldInternalData< DataTypes >. template<class DataTypes > . friend class SpringForceFieldInternalData< DataTypes >. friend . sofacomponentsolidmechanicsspringSpringForceField; Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:41374,update,updateSpringsFromTopologyIndices,41374,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,3,['update'],"['updateSpringsFromTopologyIndices', 'updateTopologyIndicesFromSprings']"
Deployability," >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:14868,update,updateInternal,14868,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (QuatToRigidEngine, sofa::core::DataEngine);  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html:2447,update,update,2447,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,1,['update'],['update']
Deployability," > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RigidToQuatEngine, sofa::core::DataEngine);  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html:2390,update,update,2390,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,1,['update'],['update']
Deployability," > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html:15819,update,update,15819,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,1,['update'],['update']
Deployability," > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GenerateRigidMass, core::DataEngine);  ;  GenerateRigidMass ();  ;  ~GenerateRigidMass () override;  ; void init () override;  Initialization method called at graph modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Update the output values. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:2947,update,update,2947,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['update'],['update']
Deployability," BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:13666,update,updateInternal,13666,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['update'],['updateInternal']
Deployability," BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:10451,update,updateInternal,10451,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,3,['update'],['updateInternal']
Deployability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:7094,update,updateInternal,7094,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['update'],['updateInternal']
Deployability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:4800,update,updateInternal,4800,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,1,['update'],['updateInternal']
Deployability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:4289,update,updateInternal,4289,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,1,['update'],['updateInternal']
Deployability," BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; Type enum namesofa::component::topology::container::grid::SparseGridTopology; UP enum valuesofa::component::topology::container::grid::SparseGridTopology; updateEdges()sofa::component::topology::container::grid::SparseGridTopologyprotectedvirtual; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::component::topology::container::grid::SparseGridTopology; updateQuads()sofa::component::topology::container::grid::SparseGridTopologyprotectedvirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; voxelizeTriangleMesh(helper::io::Mesh *mesh, sofa::core::sptr< RegularGridTopology > regularGrid, type::vector< Type > &regularGridTypes) constsofa::component::topology::container::grid::SparseGridTopologyprotected; voxelSizesofa::component::topology::container::grid::SparseGridTopology; WEIGHT27sofa::component::topology::container::grid::SparseGridTopologystatic; writeDatas(std::map< std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html:46404,update,updateTetrahedra,46404,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,1,['update'],['updateTetrahedra']
Deployability," BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeQuadsAndGenerateHexas ();  ;  ~ExtrudeQuadsAndGenerateHexas () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:14841,update,update,14841,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['update'],['update']
Deployability," BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeMeshes ();  ;  ~MergeMeshes () override;  ; void createInputMeshesData (int nb=-1);  ; template<class T > ; void createInputDataVector (unsigned int nb, type::vector< Data< T > * > &vf, std::string name, std::string help);  ; template<class T > ; void deleteInputDataVector (type::vector< Data< T > * > &vf);  ; template<class T > ; void mergeInputDataVector (unsigned int nb, Data< T > &outF, const type::vector< Data< T > * > &inVF, const type::vector< Data< VecCoord > * > &inVFPos);  ; void mergeInputDataVector (unsigned int nb, Data< VecCoord > &outF, const type::vector< Data< VecCoord > * > &inVF);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html:15086,update,update,15086,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,1,['update'],['update']
Deployability," BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const VecReal & getR () const;  ; Real getRadius (const sofa::Index i) const;  ; const Coord & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSiz",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:5277,update,update,5277,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,1,['update'],['update']
Deployability," BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerSecondaryPass, VisualManagerPass)sofa::gl::component::shader::VisualManagerSecondaryPass; sofa::gl::component::shader::VisualManagerPass::SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; traceFullScreenQuad()sofa::gl::component::shader::VisualManagerSecondaryPassprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbindInput()sofa::gl::component::shader::VisualManagerSecondaryPass; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualManagerPass()sofa::gl::component::shader::VisualManagerPass; VisualManagerSecondaryPass()sofa::gl::component::shader::VisualManagerSecondaryPassprotected; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualManagerPass(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:13611,update,updateInternal,13611,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['update'],['updateInternal']
Deployability," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:14288,update,update,14288,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['update'],['update']
Deployability," ConstMultiMatrixDerivId id, type::vector< const InDataMatrixDeriv * > &v) const;  ; void getVecOutCoord (const MultiVecCoordId id, type::vector< OutDataVecCoord * > &v) const;  ; void getConstVecOutCoord (const ConstMultiVecCoordId id, type::vector< const OutDataVecCoord * > &v) const;  ; void getVecOutDeriv (const MultiVecDerivId id, type::vector< OutDataVecDeriv * > &v) const;  ; void getConstVecOutDeriv (const ConstMultiVecDerivId id, type::vector< const OutDataVecDeriv * > &v) const;  ; void getMatOutDeriv (const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) const;  ; void getConstMatOutDeriv (const ConstMultiMatrixDerivId id, type::vector< const OutDataMatrixDeriv * > &v) const;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:22537,update,update,22537,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,2,['update'],['update']
Deployability," DataTypes > . sofa::gl::component::engine::TextureInterpolation< DataTypes >::~TextureInterpolation ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resetGraph(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::resetGraph. protected . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::gl::component::engine::TextureInterpolation< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TextureInterpolation< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). ◆ standardLinearInterpolation(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::standardLinearInterpolation. protected . ◆ updateGraph(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::updateGraph. protected . sofaglcomponentengineTextureInterpolation; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html:21415,update,updateGraph,21415,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,2,['update'],['updateGraph']
Deployability," DataTypes >::~EllipsoidForceField. overrideprotected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::mechanicalload::EllipsoidForceField< DataTypes >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::mechanicalload::EllipsoidForceField< DataTypes >::addForce ; (; const sofa::core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::EllipsoidForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::EllipsoidForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::mechanicalload::EllipsoidForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html:22377,update,update,22377,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,1,['update'],['update']
Deployability," DataTypes >protected; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved centersofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved vradiussofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved stiffnesssofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved dampingsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED() DeprecatedAndRemoved colorsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~EllipsoidForceField() overridesofa::component::mechanicalload::EllipsoidForceField< DataTypes >protected; ~",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html:16948,update,updateInternal,16948,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,1,['update'],['updateInternal']
Deployability, DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; TriangleFiberDirection typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; triangleInfosofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangleInformation typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; TrianglesAroundVertex typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangularAnisotropicFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >protected; TriangularFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:28436,update,updateLinks,28436,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,1,['update'],['updateLinks']
Deployability," EndPointID **endPts)sofa::component::collision::detection::algorithm::ISAPBoxinline; ISAPBox()sofa::component::collision::detection::algorithm::ISAPBoxinline; ISAPBox(collision::geometry::Cube c)sofa::component::collision::detection::algorithm::ISAPBoxinline; max(int dim)sofa::component::collision::detection::algorithm::ISAPBoxinline; max(int dim) constsofa::component::collision::detection::algorithm::ISAPBoxinline; maxMoving(int axis, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; min(int dim)sofa::component::collision::detection::algorithm::ISAPBoxinline; min(int dim) constsofa::component::collision::detection::algorithm::ISAPBoxinline; minMoving(int axis, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; moving(int axis, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; moving(double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; overlaps(const ISAPBox &other, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBox; show() constsofa::component::collision::detection::algorithm::ISAPBoxinline; showEndPoints() constsofa::component::collision::detection::algorithm::ISAPBoxinline; squaredDistance(const ISAPBox &other) constsofa::component::collision::detection::algorithm::ISAPBox; tolerancesofa::component::collision::detection::algorithm::ISAPBoxstatic; update(double alarmDist)sofa::component::collision::detection::algorithm::ISAPBoxinline; updatedMax(int dim, EndPointID &end_point, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; updatedMin(int dim, EndPointID &end_point, double alarmDist) constsofa::component::collision::detection::algorithm::ISAPBoxinline; updateMax(int dim, double alarmDist)sofa::component::collision::detection::algorithm::ISAPBoxinline; updateMin(int dim, double alarmDist)sofa::component::collision::detection::algorithm::ISAPBoxinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box-members.html:2426,update,update,2426,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box-members.html,5,['update'],"['update', 'updateMax', 'updateMin', 'updatedMax', 'updatedMin']"
Deployability," Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  LineProjectiveConstraint ();  ; virtual ~LineProjectiveConstraint ();  ; void updateJacobian ();  Resize/update Jacobian matrix according to the linked mechanical state and the direction. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:18021,update,update,18021,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['update'],['update']
Deployability," Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; void preAssembleSystem (const core::MechanicalParams *) override;  ; virtual void associateLocalMatrixToComponents (const core::MechanicalParams *);  ; virtual void allocateSystem ();  ; virtual void resizeVectors (sofa::Size n);  Set the size of RHS and solution to n. More...;  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, TVector *globalVector);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  BaseMatrixLinearSystem ();  ; virtual void assembleSystem (const core::MechanicalParams *);  ; virtual void postAssembleSystem (const core::MechanicalParams *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:15945,update,update,15945,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,2,['update'],['update']
Deployability," Functions;  ObjectStateListener (QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_);  ;  ~ObjectStateListener () override;  ; void update () override;  Update this value. More...;  ; void notifyEndEdit () override;  Notify links that the DGNode has been modified. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html:1740,update,updated,1740,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,1,['update'],['updated']
Deployability," Functions;  SOFA_CLASS (TriangleModelInRegularGrid, TriangleCollisionModel< sofa::defaulttype::Vec3Types >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ;  Public Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  SOFA_CLASS (SOFA_TEMPLATE(TriangleCollisionModel, sofa::defaulttype::Vec3Types), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const core::behavior::MechanicalState< DataTypes > * getMechanicalState () const;  ; const VecCoord & getX () const;  ; const sofa::core::topology::BaseMeshTopology::SeqTriangles & getTriangles () const;  ; const VecDeriv & getNormals () const;  ; int getTriangleFlags (sofa::core::topology::BaseMeshTopology::TriangleID i);  ; Deriv velocity (sofa::Index index) const;  ; void computeBBox (const core::Exec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:3573,update,update,3573,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['update'],['update']
Deployability," Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html:1324,update,updateVisual,1324,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,1,['update'],['updateVisual']
Deployability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ; virtual void doCollisionReset ()=0;  Remove collision response from last step. More...;  ; virtual void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels)=0;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; virtual void doCollisionResponse ()=0;  Add collision response in the simulation graph. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:10548,update,update,10548,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['update'],['update']
Deployability," MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::Name = ""NeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html:2192,configurat,configuration,2192,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,1,['configurat'],['configuration']
Deployability," MechanicalParams * ; mparams, . const DataVecCoord & ; x . ); const. virtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ getTotalMass() [1/2]. template<class DataTypes , class GeometricalTypes > . const DiagonalMass< DataTypes, GeometricalTypes >::Real & sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::getTotalMass. virtual . ◆ getTotalMass() [2/2]. template<class DataTypes , class GeometricalTypes = DataTypes> . template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . SReal sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::getTotalMass ; (; ); const. inline . Method to update See alsod_vertexMass when a new Triangle is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_vertexMass when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass when a Hexahedron is removed.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:45480,update,update,45480,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability," More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ; bool updateMatrix;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  QuadularBendingSprings ();  ;  ~QuadularBendingSprings ();  ; void init () ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html:2894,update,updateMatrix,2894,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,1,['update'],['updateMatrix']
Deployability," More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html:2237,update,update,2237,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,1,['update'],['update']
Deployability," More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Constructor details. ◆ ExecParams(). sofa::core::ExecParams::ExecParams ; (; ). inline . Function details. ◆ checkValidStorage(). bool sofa::core::ExecParams::checkValidStorage ; (; ); const. ◆ defaultInstance(). ExecParams * sofa::core::ExecParams::defaultInstance ; (; ). static . Get the default ExecParams, to be used to provide a default values for method parameters. . ◆ execMode(). ExecMode sofa::core::ExecParams::execMode ; (; ); const. inline . Mode of execution requested. . ◆ nbThreads(). int sofa::core::ExecParams::nbThreads ; (; ); const. inline . Number of threads currently known to Sofa. . ◆ setExecMode(). ExecParams& sofa::core::ExecParams::setExecMode ; (; ExecMode ; v). inline . Request a specific mode of execution. . ◆ setThreadID(). ExecParams& sofa::core::ExecParams::setThreadID ; (; int ; v). inline . Specify the index of the current thread. . ◆ threadID(). int sofa::core::ExecParams::threadID ; (; ); const. inline . Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) . ◆ update(). void sofa::core::ExecParams::update ; (; ). Make sure this instance is up-to-date relative to the current thread. . Enum details. ◆ ExecMode. enum sofa::core::ExecParams::ExecMode. Modes of execution. . EnumeratorEXEC_NONE ; EXEC_DEFAULT ; EXEC_DEBUG ; EXEC_GPU ; EXEC_GRAPH . sofacoreExecParams; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_exec_params.html:2463,update,update,2463,api/master/sofa/html/classsofa_1_1core_1_1_exec_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_exec_params.html,2,['update'],['update']
Deployability, More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Constructor details. ◆ DataTrackerFunctor(). template<typename FunctorType > . sofa::core::DataTrackerFunctor< FunctorType >::DataTrackerFunctor ; (; FunctorType & ; functor). inline . Function details. ◆ setDirtyValue(). template<typename FunctorType > . void sofa::core::DataTrackerFunctor< FunctorType >::setDirtyValue ; (; ). inlineoverridevirtual . The ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html:1909,update,updateIfDirty,1909,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html,2,['update'],"['update', 'updateIfDirty']"
Deployability, More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_callback. std::function<sofa::core::objectmodel::ComponentState(const DataTracker&)> sofa::core::DataTrackerCallback::m_callback. protected . ◆ m_owner. sofa::core::objectmodel::Base* sofa::core::DataTrackerCallback::m_owner {nullptr}. protected . Function details. ◆ setCallback(). void sofa::core::DataTrackerCallback::setCallback ; (; std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ; f). set the update function to call when askin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html:3987,update,updateIfDirty,3987,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyHandler;  TopologyHandler ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_topologyData. template<class ElementType , class VecT > . t_topologicalData* sofa::core::topology::TopologyDataHandler< ElementType, VecT >::m_topologyData. protected . Apply adding function on moved elements. . Constructor details. ◆ TopologyDataHandler() [1/2]. template<typename ElementType , typename VecT > . sofa::core::topology::TopologyDataHandler< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html:14756,update,updateIfDirty,14756,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html:11173,update,updateIfDirty,11173,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; virtual void swapPostProcess (Index i1, Index i2);  ; virtual void removePostProcess (sofa::Index elemId);  ; virtual void addPostProcess (sofa::Index dataLastId);  ; virtual void updateLastIndex (Index posLastIndex, Index newGlobalId);  ;  Protected Member Functions inherited from sofa::core::topology::TopologyData< ElementType, VecT >; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:16632,update,updateIfDirty,16632,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability, More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  Method to properly remove TopologyHandler. More...;  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void unlinkFromElementDa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:15982,update,updateIfDirty,15982,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void swapPostProcess (Index i1, Index i2) override;  ; void removePostProcess (sofa::Index elemId) override;  ; void addPostProcess (sofa::Index dataLastId) override;  ; void updateLastIndex (Index posLastIndex, Index newGlobalId) override;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyData< ElementType, VecT >; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:16183,update,updateIfDirty,16183,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:9408,update,updateIfDirty,9408,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< std::string >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attribut",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:9272,update,updateIfDirty,9272,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions;  TopologyHandler ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_callbackMap. std::map< core::topology::TopologyChangeType, TopologyChangeCallback> sofa::core::topology::TopologyHandler::m_callbackMap. protected . ◆ m_data_name. std::string sofa::core::topology::TopologyHandler::m_data_name. protected . use to define data handled name. . ◆ m_prefix. std::string sofa::core::topology::TopologyHandler::m_prefix. protected . use to define engine name. . ◆ m_registeredElements. std::set<sofa::geometry::Ele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html:8267,update,updateIfDirty,8267,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Static Public Member Functions; static constexpr bool isCopyOnWrite ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:9784,update,updateIfDirty,9784,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Static Public Member Functions; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:7555,update,updateIfDirty,7555,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:5755,update,updateIfDirty,5755,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,30,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool remove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:4758,update,updateIfDirty,4758,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,94,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:4415,update,updateIfDirty,4415,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:6017,update,updateIfDirty,6017,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,16,['update'],"['update', 'updateIfDirty']"
Deployability, More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< void * >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< void * >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const Bas,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html:8890,update,updateIfDirty,8890,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,2,['update'],"['update', 'updateIfDirty']"
Deployability," Parameters. cparamscontains the MultiMatrixDerivId which allows to retrieve the constraint jacobian to use for each mechanical object. ; resultthe variable where the result will be added ; factintegrator parameter . Returnsfalse if the solver does not support this operation, of it the system matrix is not invertible ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ computeResidual(). virtual void sofa::core::behavior::LinearSolver::computeResidual ; (; const core::ExecParams * ; , . linearalgebra::BaseVector * ;  . ). inlinevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute mparams->dF() = J^t lambda the result is written in mparams->dF() ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ freezeSystemMatrix(). virtual void sofa::core::behavior::LinearSolver::freezeSystemMatrix ; (; ). inlinevirtual . Ask the solver to no longer update the system matrix. . ◆ getSystemBaseMatrix(). virtual linearalgebra::BaseMatrix* sofa::core::behavior::LinearSolver::getSystemBaseMatrix ; (; ). inlinevirtual . Get the linear system matrix, or nullptr if this solver does not build it. ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ getSystemInverseBaseMatrix(). virtual linearalgebra::BaseMatrix* sofa::core::behavior::LinearSolver::getSystemInverseBaseMatrix ; (; ). inlinevirtual . Get the linear system inverse matrix, or nullptr if this solver does not build it. . ◆ getSystemLHBaseVector(). virtual linearalgebra::BaseVector* sofa::core::behavior::LinearSolver::getSystemLHBaseVector ; (; ). inlinevirtual . Get the linear system left-hand term vector, or nullptr if this solver does not build it. ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ getSystemRHBaseVector(). virtual linearalgebra::BaseVector* sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html:19612,update,update,19612,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,1,['update'],['update']
Deployability," Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:1126,update,update,1126,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['update'],['update']
Deployability," Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:1647,configurat,configurationSetting,1647,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['configurat'],['configurationSetting']
Deployability," Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass when a Hexahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAREMOVED event is fired. . ◆ handleEvent(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/5]. void sofa::component::mass::DiagonalMass< Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [2/5]. void sofa::component::mass::DiagonalMass< Rigid2Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [3/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initial",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:46562,update,update,46562,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability," Reference . #include <DataTrackerCallback.h>; A DDGNode with trackable input Data (containing a DataTracker) ; More... Inheritance diagram for sofa::core::DataTrackerDDGNode:. [legend]; Detailed Description; A DDGNode with trackable input Data (containing a DataTracker) . Protected Attributes; Tracking Data mechanism; each Data added to the DataTracker is tracked to be able to check if its value changed since their last clean, called by default in DataEngine::cleanDirty(). . DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html:1239,update,updateAllInputsIfDirty,1239,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,1,['update'],['updateAllInputsIfDirty']
Deployability," Reference . #include <IdentityContactMapper.h>; Specialization of IdentityContactMapper when mapping to the same DataTypes, as no mapping is required in this case. ; More... Inheritance diagram for sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >:. [legend]; Detailed Description; template<class TCollisionModel>; class sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >; Specialization of IdentityContactMapper when mapping to the same DataTypes, as no mapping is required in this case. . Public Attributes; MCollisionModel * model;  . Public Member Functions;  IdentityContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup ();  ; MMechanicalState * createMapping (const char *=""contactPoints"");  ; void resize (Size);  ; Index addPoint (const Coord &, Index index, Real &);  ; void update ();  ; void updateXfree ();  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >; virtual ~BaseContactMapper ();  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Attribute details. ◆ model. template<class TCollisionMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html:1418,update,update,1418,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,2,['update'],"['update', 'updateXfree']"
Deployability," SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataContentValue< T, false > Class Template Reference . #include <DataContentValue.h>. Public Member Functions;  DataContentValue ();  ;  DataContentValue (const T &value);  ;  DataContentValue (const DataContentValue &dc);  ; DataContentValue & operator= (const DataContentValue &dc);  ; T * beginEdit ();  ; void endEdit ();  ; const T & getValue () const;  ; void setValue (const T &value);  ; void release ();  . Constructor details. ◆ DataContentValue() [1/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; ). inline . ◆ DataContentValue() [2/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; const T & ; value). inlineexplicit . ◆ DataContentValue() [3/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; const DataContentValue< T, false > & ; dc). inline . Function details. ◆ beginEdit(). template<class T > . T* sofa::core::objectmodel::DataContentValue< T, false >::beginEdit ; (; ). inline . ◆ endEdit(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::endEdit ; (; ). inline . ◆ getValue(). template<class T > . const T& sofa::core::objectmodel::DataContentValue< T, false >::getValue ; (; ); const. inline . ◆ operator=(). template<class T > . DataContentValue& sofa::core::objectmodel::DataContentValue< T, false >::operator= ; (; const DataContentValue< T, false > & ; dc). inline . ◆ release(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::release ; (; ). inline . ◆ setValue(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::setValue ; (; const T & ; value). inline . sofacoreobjectmodelDataContentValue< T, false >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4.html:1728,release,release,1728,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4.html,2,['release'],['release']
Deployability," SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE2(MixedInteractionForceField, TDataTypes1, TDataTypes2), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2))sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; SOFA_CLASS(SOFA_TEMPLATE2(InteractionEllipsoidForceField, TDataTypes1, TDataTypes2), SOFA_TEMPLATE2(core::behavior::MixedInteractionForceField, TDataTypes1, TDataTypes2))sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; sofa::core::behavior::MixedInteractionForceField::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; stiffnesssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; varssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >protected; VecCoord1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; VecCoord2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; VecData typedefsofa::core::objectmodel::Base; VecDeriv1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; VecDeriv2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vradiussofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html:19370,update,updateInternal,19370,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,1,['update'],['updateInternal']
Deployability," SOFA_CLASS(SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; Stiffness typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; vertexInfosofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html:20910,update,updateLinks,20910,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,1,['update'],['updateLinks']
Deployability," SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void rotateConstraints (bool back);  ; void rotateConstraints (bool back);  ; void rotateResponse ();  ; void rotateResponse ();  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; Deprecated API; void applyContactForce (const linearalgebra::BaseVector *f) override;  ; void resetContactForce () override;  ; Unbuilt constraint system during resolution; void resetForUnbuiltResolution (SReal *f, std::list< unsigned int > &) override;  ; bool hasConstraintNumber (int index) override;  ; void addConstraintDisplacement (SReal *d, int begin, int end) override;  ; void setConstraintDForce (SReal *df, int begin, int end, bool update) override;  ; void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *W, int begin, int end) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void addConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void removeConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void computeMotionCorrectionFromLambda (const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) override;  ; void applyMotionCorrection (const core::ConstraintParams *cparams, core::MultiVecCoordId x, core::MultiVecDerivId v, core::MultiVecDerivId dx, core::ConstMultiVecDerivId correction) override;  ; void appl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:7544,update,update,7544,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['update'],['update']
Deployability," SReal fact) override;  ; void applyConstraintForce (const sofa::core::ConstraintParams *cparams, sofa::core::MultiVecDerivId dx, const linearalgebra::BaseVector *f) override;  Apply the contactforce dx = Minv * J^t * f and store the result in dx VecId. More...;  ; void computeResidual (const core::ExecParams *params, linearalgebra::BaseVector *f) override;  ; MatrixInvertData * getMatrixInvertData (linearalgebra::BaseMatrix *m);  ;  Public Member Functions inherited from sofa::component::linearsolver::BaseMatrixLinearSolver< Matrix, Vector >;  SOFA_CLASS (SOFA_TEMPLATE2(BaseMatrixLinearSolver, Matrix, Vector), sofa::core::behavior::LinearSolver);  ;  Public Member Functions inherited from sofa::core::behavior::LinearSolver;  SOFA_ABSTRACT_CLASS (LinearSolver, BaseLinearSolver);  ; virtual bool supportNonSymmetricSystem () const;  Returns true if the solver supports non-symmetric systems. More...;  ; virtual bool hasUpdatedMatrix ();  Indicate if the solver updated the system after the last call of setSystemMBKMatrix (should return true if isParallelSolver return false) More...;  ; virtual void updateSystemMatrix ();  This function is use for the preconditioner it must be called at each time step event if setSystemMBKMatrix is not called. More...;  ; virtual void init_partial_solve ();  ; virtual void partial_solve (std::list< linearalgebra::BaseMatrix::Index > &, std::list< linearalgebra::BaseMatrix::Index > &, bool);  ; virtual linearalgebra::BaseMatrix * getSystemInverseBaseMatrix ();  Get the linear system inverse matrix, or nullptr if this solver does not build it. More...;  ; virtual bool readFile (std::istream &);  Read the Matrix solver from a file. More...;  ; virtual bool writeFile (std::ostream &);  Read the Matrix solver from a file. More...;  ; virtual void freezeSystemMatrix ();  Ask the solver to no longer update the system matrix. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseLinearSolver;  SOFA_ABSTRACT_CLASS (BaseLine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html:7309,update,updated,7309,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,1,['update'],['updated']
Deployability," Shell Array. More...;  ; void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void createQuadsInHexahedronArray ();  Creates the array of quad indices for each hexahedron. More...;  ; void createTetrahedraAroundVertexArray ();  Creates the TetrahedraAroundVertex Array. More...;  ; void createTetrahedraAroundEdgeArray ();  Creates the TetrahedraAroundEdge Array. More...;  ; void createTetrahedraAroundTriangleArray ();  Creates the TetrahedraAroundTriangle Array. More...;  ; void createHexahedraAroundVertexArray ();  Creates the HexahedraAroundVertex Array. More...;  ; void createHexahedraAroundEdgeArray ();  Creates the HexahedraAroundEdge Array. More...;  ; void createHexahedraAroundQuadArray ();  Creates the HexahedraAroundQuad Array. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseMeshTopology;  BaseMeshTopology ();  ;  Protected Member Functions inherited from sofa::core::topology::Topology;  Topology ();  ; virtual ~Topology ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:33059,update,update,33059,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,10,['update'],['update']
Deployability," T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:14520,update,update,14520,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['update'],['update']
Deployability," TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:3149,update,updateDataValue,3149,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,3,['update'],"['updateDataValue', 'updateVisibility', 'updateWidgetValue']"
Deployability," TOut >protected; SOFA_CLASS(SOFA_TEMPLATE2(RigidMapping, TIn, TOut), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >protected; SPtr typedefsofa::core::objectmodel::Base; StiffnessSparseMatrixEigen typedefsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; updateK(const core::MechanicalParams *, core::ConstMultiVecDerivId)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateOmega(typename InDeriv::Rot &omega, const OutDeriv &out, const OutCoord &rotatedpoint)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; updateOmega(typename InDeriv::Rot &omega, const OutDeriv &out, const OutCoord &rotatedpoint)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:23513,update,updateK,23513,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['update'],['updateK']
Deployability," TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html:33246,update,updateTetrahedra,33246,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,1,['update'],['updateTetrahedra']
Deployability," Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps assembly. /16; ; SOFA - Topic: [SOLVED] Forceps assembly. /4; ; SOFA - Topic: [SOLVED] Forceps assembly. SOFA - Topic: [SOLVED] Forceps assembly. /forces-not-getting-rendered-with-geomagic-touch; ; SOFA - Topic: [SOLVED] Forces not getting rendered with Geomagic touch. /forces-on-bending-pneunet; ; SOFA - Topic: [SOLVED] Forces on bending pneunet. /forum-help; ; SOFA - Topic: forum help. /fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:306321,integrat,integration,306321,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Deployability," TriangleInformation &triangleInfo);  ; void computeStressPerVertex ();  Method to compute the averageStress per vertex. Call if. More...;  ; virtual void applyStiffness (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  f += Kx where K is the stiffness matrix and x a displacement More...;  ; void initSmall (int i, Index &a, Index &b, Index &c);  ; void accumulateForceSmall (VecCoord &f, const VecCoord &p);  ; void applyStiffnessSmall (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  ; void initLarge (int i, Index &a, Index &b, Index &c);  ; void accumulateForceLarge (VecCoord &f, const VecCoord &p);  ; void applyStiffnessLarge (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Meth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:23693,update,update,23693,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['update'],['update']
Deployability," VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TranslateTransformMatrixEngine ();  ;  ~TranslateTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html:13377,update,update,13377,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,1,['update'],['update']
Deployability, [SOLVED] SofaPython3 module not found. /sofapython3-on-win-11; ; SOFA - Topic: [SOLVED] SofaPython3 on Win 11. /sofapython3-pygame-rendering-example-not-working; ; SOFA - Topic: [SOLVED] SofaPython3 pygame rendering example not working. /sofapython3-seg-fault-with-cvxpy; ; SOFA - Topic: SofaPython3 Seg Fault with CVXPY. /sofapython3-signal-catching; ; SOFA - Topic: SofaPython3 signal catching. /sofapython3-troubles-starting-sofa-gui-from-python-script; ; SOFA - Topic: SofaPython3: Troubles starting Sofa GUI from Python script. /sofapython3-windows-10; ; SOFA - Topic: [SOLVED] SofaPython3 Windows 10. /sofapython3-windows-10-compile-error; ; SOFA - Topic: SofaPython3 windows 10 compile error. /sofapython3-with-python-3-6; ; SOFA - Topic: [SOLVED] SofaPython3 with Python 3.6. /sofapython3-with-sofa-in-windows-10; ; SOFA - Topic: [SOLVED] Sofapython3 with SOFA in Windows 10. /sofapython3-with-v20-12-02-binary-install-on-win10; ; SOFA - Topic: [SOLVED] SofaPython3 with v20.12.02 binary install on Win10. /sofapython-monitor-error-with-mechanicalobject; ; SOFA - Topic: SofaPython Monitor error with MechanicalObject. /sofapython-not-found; ; SOFA - Topic: [SOLVED] SofaPython NOT found. /sofapython-pick-objects; ; SOFA - Topic: [SOLVED] SofaPython Pick objects. /sofapython-simulation-naning-after-runtime-model-changes; ; SOFA - Topic: SofaPython Simulation NaN'ing after runtime model changes. /sofa-registry-objectfactory-problem; . /page; . /14; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /4; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /8; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /sofa-research-teams-and-companies-are-hiring; ; SOFA - Topic: SOFA research teams and companies are hiring. /sofaros-connector; ; SOFA - Topic: SofaRos Connector. /sofa-scenes-not-displayed-correctly; ; SOFA - Topic: SOFA scenes not displayed correctly. /sofa-scene-with-impos,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:395324,install,install,395324,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['install']
Deployability," aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologicalChangeProcessor, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void readDataFile ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setTime (double time);  ; void processTopologicalChanges ();  ; void processTopologicalChanges (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateTriangleIncisionInformation ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:6741,update,updateTriangleIncisionInformation,6741,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['update'],['updateTriangleIncisionInformation']
Deployability," all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  LineProjectiveConstraint ();  ; virtual ~LineProjectiveConstraint ();  ; void updateJacobian ();  Resize/update Jacobian matrix according to the linked mechanical state and the direction. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:17170,update,updateJacobian,17170,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,2,['update'],"['update', 'updateJacobian']"
Deployability," all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  UncoupledConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ; virtual ~UncoupledConstraintCorrection ();  ; void computeDx (const Data< VecDeriv > &f, VecDeriv &x);  Compute dx correction from motion space force vector. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:17756,update,update,17756,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['update'],['update']
Deployability," all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  LinearSolverConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ;  ~LinearSolverConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:13435,update,update,13435,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['update'],['update']
Deployability," and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:3422,update,updateAllInputsIfDirty,3422,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,26,['update'],['updateAllInputsIfDirty']
Deployability," at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes $ f += B v + K x $; This method must be implemented by the component, and is usually called by the generic ForceField::addForce() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::addKToMatrix ; (; const core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ addSpring() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:32340,update,update,32340,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['update'],['update']
Deployability," bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Attribute details. ◆ cpt. int sofa::component::odesolver::backward::VariationalSymplecticSolver::cpt. ◆ d_computeHamiltonian. Data<bool> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_computeHamiltonian. Compute hamiltonian. . ◆ d_explicit. Data<bool> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_explicit. Use explicit integration scheme. . ◆ d_fileName. Data<std::string> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_fileName. File name where kinetic and potential energies are saved in a CSV file. . ◆ d_hamiltonianEnergy. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_hamiltonianEnergy. hamiltonian energy . ◆ d_newtonError. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_newtonError. Error tolerance for Newton iterations. . ◆ d_newtonSteps. Data<unsigned int> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_newtonSteps. Maximum number of Newton steps. . ◆ d_rayleighMass. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_rayleighMass. Rayleigh damping coefficient related to mass, > 0. . ◆ d_rayleighStiffness. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_rayleighStiffness. Rayleigh damping coefficient related to stiffness, > 0. . ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:17267,integrat,integration,17267,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['integrat'],['integration']
Deployability," bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedTranslationProjectiveConstraint ();  ; virtual ~FixedTranslationProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:17356,update,update,17356,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['update'],['update']
Deployability," by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html:3606,pipeline,pipeline,3606,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,1,['pipeline'],['pipeline']
Deployability," class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_ATTRIBUTE_DISABLED ; (; ""v23.06"" ; , . ""v23.12"" ; , . ""Use m_matrixJ instead"" ;  . ). protected . ◆ SOFA_ATTRIBUTE_DISABLED() [13/14]. template<class TIn , class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_ATTRIBUTE_DISABLED ; (; ""v23.06"" ; , . ""v23.12"" ; , . ""Use m_rotatedPoints instead"" ;  . ). ◆ SOFA_ATTRIBUTE_DISABLED() [14/14]. template<class TIn , class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_ATTRIBUTE_DISABLED ; (; ""v23.06"" ; , . ""v23.12"" ; , . ""Use m_updateJ instead"" ;  . ). protected . ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(RigidMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(core::Mapping, TIn, TOut) ;  . ). ◆ updateK() [1/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [2/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [3/3]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). overridevirtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:39956,update,updateK,39956,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['update'],['updateK']
Deployability," coefs . ). Method to initialize See alsoEdgeRestInformation when a new edge is created. Will be set as creation callback in the EdgeData . d_edgeInfo . ◆ applyTriangleCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::applyTriangleCreation ; (; Index ; triangleIndex, . TriangleRestInformation & ; tinfo, . const core::topology::BaseMeshTopology::Triangle & ; triangle, . const sofa::type::vector< Index > & ; ancestors, . const sofa::type::vector< SReal > & ; coefs . ). Method to initialize See alsoTriangleRestInformation when a new triangle is created. Will be set as creation callback in the TriangleData . d_triangleInfo . ◆ applyTriangleDestruction(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::applyTriangleDestruction ; (; Index ; triangleIndex, . TriangleRestInformation & ; tinfo . ). Method to update See alsod_triangleInfo when a triangle is removed. Will be set as destruction callback in the TriangleData . d_triangleInfo . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getEdgeInfo(). template<class DataTypes > . sofa::core::topology::EdgeData<sofa::type::vector<EdgeRestInformation> >& sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::getEdgeInfo ; (; ). inlineprotected . ◆ getLambda(). template<class Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html:28458,update,update,28458,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,1,['update'],['update']
Deployability, communication. /communicationcontroller; . /feed; ; #communicationcontroller – SOFA. SOFA - Topic Tag: #communicationcontroller. /compile; . /feed; ; compile – SOFA. SOFA - Topic Tag: compile. /compliance; . /feed; ; compliance – SOFA. SOFA - Topic Tag: compliance. /compliant; . /feed; ; Compliant – SOFA. SOFA - Topic Tag: Compliant. /complie-softrobots; . /feed; ; Complie SoftRobots – SOFA. SOFA - Topic Tag: Complie SoftRobots. /component; . /feed; ; component – SOFA. SOFA - Topic Tag: component. /component-declaration; . /feed; ; component declaration – SOFA. SOFA - Topic Tag: component declaration. /components; . /feed; ; Components – SOFA. SOFA - Topic Tag: Components. /computation-time; . /feed; ; Computation Time – SOFA. SOFA - Topic Tag: Computation Time. /comp-vtu-precomputedconstraintcorrection-dentistry-tongue; . /feed; ; .comp .vtu PrecomputedConstraintCorrection dentistry tongue – SOFA. SOFA - Topic Tag: .comp .vtu PrecomputedConstraintCorrection dentistry tongue. /configurations; . /feed; ; configurations – SOFA. SOFA - Topic Tag: configurations. /connect; . /feed; ; connect – SOFA. SOFA - Topic Tag: connect. /connect-sofa; . /feed; ; Connect SOFA – SOFA. SOFA - Topic Tag: Connect SOFA. /constraint; . /feed; ; constraint – SOFA. SOFA - Topic Tag: constraint. /constraint-forces; . /feed; ; Constraint Forces – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-cons,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:436432,configurat,configurations,436432,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['configurat'],['configurations']
Deployability," computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method retrieves the force and dx vector from the two MechanicalState and call the internal addDForce(VecDeriv1&,VecDeriv2&,const VecDeriv1&,const VecDeriv2&,SReal,SReal) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ addForce() [1/2]. template<class TDataTypes1 , class TDataTypes2 > . virtual void sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >::addForce ; (; const MechanicalParams * ; mparams, . DataVecDeriv1 & ; f1, . DataVecDeriv2 & ; f2, . const DataVecCoord1 & ; x1, . const DataVecCoord2 & ; x2, . const DataVecDeriv1 & ; v1, . const DataVecDeriv2 & ; v2 . ). pure virtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes $ f += B v + K x $; This method must be implemented by the component, and is usually called by the generic ForceField::addForce() method. ; Implemented in sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >. ◆ addForce() [2/2]. template<class DataTypes1 , class DataTypes2 > . void sofa::core::behavior::MixedInteractionForceField< DataTypes1, DataTypes2 >::addForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; fId . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes $ f += B v + K x $; This method retrieves the force, x and v vector from the two MechanicalState and call the internal addForce(VecDeriv&,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:22279,update,update,22279,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['update'],['update']
Deployability," const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html:4840,update,updateInternal,4840,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,2,['update'],['updateInternal']
Deployability," const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ProjectiveTransformEngine ();  ;  ~ProjectiveTransformEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:13748,update,update,13748,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['update'],['update']
Deployability," const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::component::engine::generate::MeshTetraStuffing; snapssofa::component::engine::generate::MeshTetraStuffing; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(MeshTetraStuffing, core::objectmodel::BaseObject)sofa::component::engine::generate::MeshTetraStuffing; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; splitPointssofa::component::engine::generate::MeshTetraStuffing; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::generate::MeshTetraStuffing; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshTetraStuffing; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vbboxsofa::component::engine::generate::MeshTetraStuffing; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshTetraStuffing() overridesofa::component::engine::generate::MeshTetraStuffingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:15814,update,update,15814,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,5,['update'],"['update', 'updateAllInputsIfDirty', 'updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability," const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TransformPosition ();  ;  ~TransformPosition () override;  ; void getTransfoFromTxt ();  ; void getTransfoFromTrm ();  ; void getTransfoFromTfm ();  ; void selectTransformationMethod ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:14482,update,update,14482,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,1,['update'],['update']
Deployability," const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OglShaderMacro ();  ;  ~OglShaderMacro () override;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:10478,update,update,10478,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,1,['update'],['update']
Deployability," const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  InvertTransformMatrixEngine ();  ;  ~InvertTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:12058,update,update,12058,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['update'],['update']
Deployability," const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RotateTransformMatrixEngine ();  ;  ~RotateTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:13328,update,update,13328,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,1,['update'],['update']
Deployability," const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:10570,update,update,10570,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,1,['update'],['update']
Deployability," const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:15886,integrat,integrateStiffness,15886,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['integrat'],['integrateStiffness']
Deployability," const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [2/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [3/3]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). overridevirtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateOmega() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::updateOmega ; (; typename InDeriv::Rot & ; omega, . const OutDeriv & ; out, . const OutCoord & ; rotatedpoint . ). ◆ updateOmega() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateOmega ; (; typename InDeriv::Rot & ; omega, . const OutDeriv & ; out, . const OutCoord & ; rotatedpoint . ). Enum details. ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorN . ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorNIn . ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorNOut . sofacomponentmappingnonlinearRigidMapping; Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:41129,update,updateOmega,41129,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,4,['update'],['updateOmega']
Deployability," const std::string &path, const BaseLink *link);  . Protected Member Functions;  Vertex2Frame ();  ;  ~Vertex2Frame () override;  ; type::Quat< SReal > computeOrientation (const CPos &xAxis, const CPos &yAxis, const CPos &zAxis);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:14464,update,update,14464,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['update'],['update']
Deployability," const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedRotationProjectiveConstraint ();  ;  ~FixedRotationProjectiveConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html:15341,update,update,15341,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,1,['update'],['update']
Deployability," containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:13487,update,updateVisual,13487,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,6,['update'],"['update', 'updateVisual']"
Deployability," core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3069,pipeline,pipeline,3069,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,3,['pipeline'],['pipeline']
Deployability, coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisplay pointData C++ – SOFA. SOFA - Topic Tag: DataDisplay pointData C++. /debian-package-cmake; . /feed; ; debian package cmake – SOFA. SOFA - Topic Tag: debian package cmake. /debug; . /feed; ; debug – SOFA. SOFA - Topic Tag: debug. /default-shader; . /feed; ; default shader – SOFA. SOFA - Topic Tag: default shader. /deformable; . /feed; ; deformable – SOFA. SOFA - Topic Tag: deformable. /deformable-object; . /feed; ; Deformable object – SOFA. SOFA - Topic Tag: Deformable object. /deformation; . /fee,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438932,integrat,integration,438932,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Deployability," creation and modification, during top-down traversal. More...;  ; void initFromTopology ();  ; void initPositionFromVertices ();  ; void initFromFileMesh ();  ; void exportOBJ (std::string name, std::ostream *out, std::ostream *mtl, sofa::Index &vindex, sofa::Index &nindex, sofa::Index &tindex, int &count) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:11484,update,updateVisual,11484,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['update'],['updateVisual']
Deployability," d_vertexMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Hexahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAREMOVED event is fired. Method to initialize . MassType when a new Edge is created to compute mass coefficient matrix. Will be set as creation callback in the EdgeData . d_edgeMass . ◆ applyEdgeMassCreation() [2/2]. template<class DataTypes , class GeometricalTypes = DataTypes> . template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::applyEdgeMassCreation ; (; Index ; , . MassType & ; EdgeMass, . const core::topology::BaseMeshTopology::Edge & ; , . const sofa::type::vector< Index > & ; , . const sofa::type::vector< SReal > & ;  . ). ◆ applyEdgeMassDestruction(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::applyEdgeMassDestruction ; (; Index ; id, . MassType & ; EdgeMass . ). protected . Method to update See alsod_edgeMass when a Edge is removed. Will be set as destruction callback in the EdgeData . d_edgeMass . ◆ a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:39569,update,update,39569,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability, data COM port. /8; ; SOFA - Topic: [SOLVED] Connecting sofa to an external data COM port. SOFA - Topic: [SOLVED] Connecting sofa to an external data COM port. /consistency-of-units-in-sofa; ; SOFA - Topic: [SOLVED] Consistency of units in Sofa. /constrain-and-control-movements-of-an-object; ; SOFA - Topic: Constrain and control movements of an object. /constraining-a-spring; ; SOFA - Topic: [SOLVED] Constraining a spring. /constraint-on-collision-model-points; ; SOFA - Topic: Constraint on collision model points. /constraint-tutorial-scene-crash; . /feed; ; [SOLVED] Constraint Tutorial scene crash – SOFA. SOFA - Topic: [SOLVED] Constraint Tutorial scene crash. /contactlistener-error-on-sofapython3; ; SOFA - Topic: [SOLVED] ContactListener error on SofaPython3. /continuous-collision-detection; ; SOFA - Topic: Continuous collision detection. /continuously-grid-topology; ; SOFA - Topic: [SOLVED] Continuously Grid Topology. /continuous-rotation-of-view-by-mouse-click-and-move; ; SOFA - Topic: [SOLVED] Continuous rotation of view by mouse click and move. /contributing-to-sofa; ; SOFA - Topic: [SOLVED] Contributing to SOFA. /contributor-list-updated; ; SOFA - Topic: Contributor list updated!. /control-actuators-and-receive-sensor-variables-of-scene-scn; ; SOFA - Topic: Control actuators and receive sensor variables of scene .scn. /control-actuators-and-receive-sensor-variables-of-scene-scn-legged-robot; ; SOFA - Topic: [SOLVED] Control actuators and receive sensor variables of scene .scn Legged Robot. /converting-the-stl-mesh-to-vtk-mesh; ; SOFA - Topic: [SOLVED] Converting the STL mesh to VTK mesh. /could-not-find-git-for-clone-of-sofapython3; ; SOFA - Topic: [SOLVED] could not find git for clone of SofaPython3. /could-not-read-value-for-data-field-position-and-segfault; ; SOFA - Topic: [SOLVED] “Could not read value for data field position” and segfault. /could-sofa-use-full-python-instead-of-being-embedded-in-xml-file-using-component; . /feed; ; [SOLVED] Could sofa us,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:281061,continuous,continuous-rotation-of-view-by-mouse-click-and-move,281061,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['continuous'],['continuous-rotation-of-view-by-mouse-click-and-move']
Deployability," data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContactResponse(). std::string sofa::component::collision::response::contact::CollisionResponse::getContactResponse ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2 . ). overridevirtual . Implements sofa::core::collision::ContactManager.; Reimplemented in sofa::component::collision::response::contact::RuleBasedContactManager. ◆ getDefaultResponseType(). std::string sofa::component::collision::response::contact::CollisionResponse::getDefaultResponseType ; (; ); const. inline . ◆ init(). void sofa::component::collision::response::contact::CollisionResponse::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initializeResponseOptions(). sofa::helper::OptionsGroup sofa::component::collision::response::contact::CollisionResponse::initializeResponseOptions ; (; sofa::core::objectmodel::BaseContext * ; pipeline). staticprotected . ◆ removeContacts(). void sofa::component::collision::response::contact::CollisionResponse::removeContacts ; (; const ContactVector & ; c). overridevirtual . virtual methods used for cleaning the pipeline after a dynamic graph node deletion. ; Contacts can be attached to a deleted node and their deletion is a problem for the pipeline. Parameters. cis the list of deleted contacts. . Reimplemented from sofa::core::collision::ContactManager. ◆ removeInactiveContacts(). void sofa::component::collision::response::contact::CollisionResponse::removeInactiveContacts ; (; const DetectionOutputMap & ; outputsMap, . Size & ; nbContact . ). protected . ◆ reset(). void sofa::component::collision::response::contact::CollisionResponse::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setContactTags(). void sofa::component::collisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:21073,pipeline,pipeline,21073,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['pipeline'],['pipeline']
Deployability, default value. ; Implements sofa::core::objectmodel::BaseData. ◆ read() [1/5]. template<class T > . bool sofa::core::objectmodel::Data< T >::read ; (; const std::string & ; s). overridevirtual . Try to read argument value from an input stream. Return false if failed ; Implements sofa::core::objectmodel::BaseData. ◆ read() [2/5]. bool SOFA_CORE_API sofa::core::objectmodel::Data< std::string >::read ; (; const std::string & ; str). virtual . Specialization for reading strings. ; Implements sofa::core::objectmodel::BaseData. ◆ read() [3/5]. bool SOFA_CORE_API sofa::core::objectmodel::Data< bool >::read ; (; const std::string & ; str). virtual . Specialization for reading booleans. ; Implements sofa::core::objectmodel::BaseData. ◆ read() [4/5]. bool sofa::core::objectmodel::Data< std::string >::read ; (; const std::string & ; str). virtual . Specialization for reading strings. ; Implements sofa::core::objectmodel::BaseData. ◆ read() [5/5]. bool sofa::core::objectmodel::Data< bool >::read ; (; const std::string & ; str). virtual . Specialization for reading booleans. ; Implements sofa::core::objectmodel::BaseData. ◆ readValue() [1/3]. template<class T > . std::istream & sofa::core::objectmodel::Data< T >::readValue ; (; std::istream & ; in). protected . ◆ readValue() [2/3]. std::istream & sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags >::readValue ; (; std::istream & ; in). protected . ◆ readValue() [3/3]. SOFA_CORE_API std::istream & sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags >::readValue ; (; std::istream & ; in). protected . ◆ setValue(). template<class T = void*> . void sofa::core::objectmodel::Data< T >::setValue ; (; const T & ; value). inline . WarningwriteOnly (the Data is not updated before being set) . ◆ templateName(). template<class T = void*> . static std::string sofa::core::objectmodel::Data< T >::templateName ; (; ). inlinestatic . sofacoreobjectmodelData; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:18445,update,updated,18445,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['update'],['updated']
Deployability," depend on it. . ◆ removeChild(). void sofa::simulation::Node::removeChild ; (; BaseNode::SPtr ; node). finalvirtual . Remove a child node. ; Remove a child. ; Implements sofa::core::objectmodel::BaseNode. ◆ removeControllers(). void sofa::simulation::Node::removeControllers ; (; ). virtual . Remove odesolvers and mastercontroler. . ◆ removeListener(). void sofa::simulation::Node::removeListener ; (; MutationListener * ; obj). virtual . ◆ removeObject(). bool sofa::simulation::Node::removeObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj). finalvirtual . Remove an object. ; Implements sofa::core::objectmodel::BaseNode. ◆ setDebug(). Node * sofa::simulation::Node::setDebug ; (; bool ; b). ◆ setDefaultVisualContextValue(). void sofa::simulation::Node::setDefaultVisualContextValue ; (; ). virtual . Called after initialization to set the default value of the visual context. . ◆ setSleeping(). void sofa::simulation::Node::setSleeping ; (; bool ; val). overridevirtual . override context setSleeping to add notification. ; Reimplemented from sofa::core::objectmodel::Context. ◆ SOFA_ABSTRACT_CLASS2(). sofa::simulation::Node::SOFA_ABSTRACT_CLASS2 ; (; Node ; , . BaseNode ; , . Context ;  . ). ◆ updateContext(). void sofa::simulation::Node::updateContext ; (; ). virtual . Update the whole context values, based on parent and local ContextObjects. ; Reimplemented in sofa::simulation::graph::DAGNode. ◆ updateSimulationContext(). void sofa::simulation::Node::updateSimulationContext ; (; ). virtual . Update the simulation context values(gravity, time...), based on parent and local ContextObjects. ; Reimplemented in sofa::simulation::graph::DAGNode. ◆ updateVisualContext(). void sofa::simulation::Node::updateVisualContext ; (; ). virtual . Update the visual context values, based on parent and local ContextObjects. . Related details. ◆ VisitorScheduler. friend class VisitorScheduler. friend . sofasimulationNode; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:50678,update,updateContext,50678,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,6,['update'],"['updateContext', 'updateSimulationContext', 'updateVisualContext']"
Deployability," details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addForce ; (; const sofa::core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::addKToMatrix ; (; sofa::linearalgebra::BaseMatrix * ; matrix, . SReal ; kFact, . unsigned int & ; offset . ). overridevirtual . Internal addKToMatrix Overloaded function, usually called from the generic addKToMatrix version. This addKToMatrix version directly gives access to the matrix to fill, the stiffness factor and the offset used to identify where the force field must add its contributions in the matrix. Parameters. matrixthe global stiffness matrix in which the force field adds its contribution. The matrix is global, i.e. different objects can add their contributio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html:29311,update,update,29311,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,1,['update'],['update']
Deployability, displacement export. /distortion; . /feed; ; Distortion – SOFA. SOFA - Topic Tag: Distortion. /dlls-issue; . /feed; ; DLLs issue – SOFA. SOFA - Topic Tag: DLLs issue. /docker; . /feed; ; docker – SOFA. SOFA - Topic Tag: docker. /documentation; . /feed; ; documentation – SOFA. SOFA - Topic Tag: documentation. /documentation-color-alpha; . /feed; ; documentation color alpha – SOFA. SOFA - Topic Tag: documentation color alpha. /doe; . /feed; ; doe – SOFA. SOFA - Topic Tag: doe. /dynamic-systems; . /feed; ; Dynamic systems – SOFA. SOFA - Topic Tag: Dynamic systems. /edge_removal; . /feed; ; edge_removal – SOFA. SOFA - Topic Tag: edge_removal. /eigen; . /feed; ; Eigen – SOFA. SOFA - Topic Tag: Eigen. /elastic; . /feed; ; Elastic – SOFA. SOFA - Topic Tag: Elastic. /elasticity; . /feed; ; elasticity – SOFA. SOFA - Topic Tag: elasticity. /elastoplastic; . /feed; ; Elastoplastic – SOFA. SOFA - Topic Tag: Elastoplastic. /energy; . /feed; ; Energy – SOFA. SOFA - Topic Tag: Energy. /engine-data-update-energy; . /feed; ; engine data update energy – SOFA. SOFA - Topic Tag: engine data update energy. /error; . /feed; ; error – SOFA. SOFA - Topic Tag: error. /error-5; . /feed; ; Error 5 – SOFA. SOFA - Topic Tag: Error 5. /error-determination; . /feed; ; error determination – SOFA. SOFA - Topic Tag: error determination. /event; . /feed; ; event – SOFA. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /fee,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:441450,update,update-energy,441450,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['update'],['update-energy']
Deployability," displayed. More...;  ; void bwdDraw (VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:4718,update,update,4718,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,1,['update'],['update']
Deployability, error: filesystem. /sofapython3-module-not-found; ; SOFA - Topic: [SOLVED] SofaPython3 module not found. /sofapython3-on-win-11; ; SOFA - Topic: [SOLVED] SofaPython3 on Win 11. /sofapython3-pygame-rendering-example-not-working; ; SOFA - Topic: [SOLVED] SofaPython3 pygame rendering example not working. /sofapython3-seg-fault-with-cvxpy; ; SOFA - Topic: SofaPython3 Seg Fault with CVXPY. /sofapython3-signal-catching; ; SOFA - Topic: SofaPython3 signal catching. /sofapython3-troubles-starting-sofa-gui-from-python-script; ; SOFA - Topic: SofaPython3: Troubles starting Sofa GUI from Python script. /sofapython3-windows-10; ; SOFA - Topic: [SOLVED] SofaPython3 Windows 10. /sofapython3-windows-10-compile-error; ; SOFA - Topic: SofaPython3 windows 10 compile error. /sofapython3-with-python-3-6; ; SOFA - Topic: [SOLVED] SofaPython3 with Python 3.6. /sofapython3-with-sofa-in-windows-10; ; SOFA - Topic: [SOLVED] Sofapython3 with SOFA in Windows 10. /sofapython3-with-v20-12-02-binary-install-on-win10; ; SOFA - Topic: [SOLVED] SofaPython3 with v20.12.02 binary install on Win10. /sofapython-monitor-error-with-mechanicalobject; ; SOFA - Topic: SofaPython Monitor error with MechanicalObject. /sofapython-not-found; ; SOFA - Topic: [SOLVED] SofaPython NOT found. /sofapython-pick-objects; ; SOFA - Topic: [SOLVED] SofaPython Pick objects. /sofapython-simulation-naning-after-runtime-model-changes; ; SOFA - Topic: SofaPython Simulation NaN'ing after runtime model changes. /sofa-registry-objectfactory-problem; . /page; . /14; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /4; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /8; ; SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. SOFA - Topic: [SOLVED] Sofa registry (ObjectFactory) problem. /sofa-research-teams-and-companies-are-hiring; ; SOFA - Topic: SOFA research teams and companies are hiring. /sofaros-connector; ; SOFA - Topic: SofaRos Connector. /sofa-scenes-not-displayed-correctly; ; SOFA -,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:395247,install,install-on-,395247,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['install-on-']
Deployability," event is fired . ◆ applyQuadCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::applyQuadCreation ; (; const sofa::type::vector< Index > & ; quadAdded, . const sofa::type::vector< core::topology::BaseMeshTopology::Quad > & ; , . const sofa::type::vector< sofa::type::vector< Index > > & ; , . const sofa::type::vector< sofa::type::vector< SReal > > & ;  . ). Method to update See alsod_edgeInfo when a new quad is created. Will be set as callback in the EdgeData . d_edgeInfo when QUADSADDED event is fired to create a new spring between new created triangles. . ◆ applyQuadDestruction(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::applyQuadDestruction ; (; const sofa::type::vector< Index > & ; quadRemoved). Method to update See alsod_edgeInfo when a quad is removed. Will be set as callback in the EdgeData . d_edgeInfo when QUADSREMOVED event is fired to remove spring if needed or update pair of quad. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ computeForce(). template<class DataTypes > . auto sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::computeForce ; (; const VecDeriv & ; v, . const EdgeInformation & ; einfo, . const typename EdgeInformation::Spring & ; spring, . Coord ; direction, . Real ; distance . ). protected . ◆ computeLocalJacobian(). template<class DataTypes > . auto sofa::component::solidm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html:26079,update,update,26079,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,1,['update'],['update']
Deployability," from sofa::core::objectmodel::BaseObject. ◆ rebuildSystem(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::rebuildSystem ; (; SReal ; , . SReal ;  . ). overridevirtual . Rebuild the system using a mass and force factor Experimental API used to investigate convergence issues. ; Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ resetContactForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::resetContactForce. overridevirtual . Implements sofa::core::behavior::BaseConstraintCorrection. ◆ resetForUnbuiltResolution(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::resetForUnbuiltResolution ; (; SReal * ; f, . std::list< unsigned int > & ; renumbering . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ setConstraintDForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::setConstraintDForce ; (; SReal * ; df, . int ; begin, . int ; end, . bool ; update . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LinearSolverConstraintCorrection< TDataTypes >, TDataTypes) ; , . SOFA_TEMPLATE(sofa::core::behavior::ConstraintCorrection, TDataTypes) ;  . ). ◆ verify_constraints(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::verify_constraints. sofacomponentconstraintlagrangiancorrectionLinearSolverConstraintCorrection; Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:27491,update,update,27491,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['update'],['update']
Deployability," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10198,integrat,integration,10198,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,4,"['integrat', 'update']","['integration', 'update']"
Deployability," gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::dJ[4]. derivatives of J . ◆ fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::fiberDirection. fiber direction in rest configuration . ◆ restVolume. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::restVolume. rest volume . ◆ shapeVector. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::shapeVector[4]. shape vector at the rest configuration . ◆ strainEnergy. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::strainEnergy. deformation gradient = gradPhi ; right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) . ◆ tetraEdges. template<class DataTypes > . float sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::tetraEdges[6] {}. ◆ tetraIndices. template<class DataTypes > . float sofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html:2824,configurat,configuration,2824,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,1,['configurat'],['configuration']
Deployability," inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RayCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ; int addRay (const type::Vec3 &origin, const type::Vec3 &direction, SReal length);  ; Ray getRay (int index);  ; int getNbRay () const;  ; void setNbRay (int n);  ; void applyTranslation (const double dx, const double dy, const double dz);  ; virtual void addContact (response::contact::BaseRayContact *contact);  ; virtual void removeContact (response::contact::BaseRayContact *contact);  ; virtual const std::set< response::contact::BaseRayContact * > & getContacts () const;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:3602,update,update,3602,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,1,['update'],['update']
Deployability," inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:21905,update,update,21905,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['update'],['update']
Deployability," initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; static void setContactTags (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::Contact::SPtr contact);  ; static sofa::helper::OptionsGroup initializeResponseOptions (sofa::core::objectmodel::BaseContext *pipeline);  . Attribute details. ◆ d_rules. Data< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::d_rules. ◆ d_variables. Data< std::string > sofa::component::collision::response::contact::RuleBasedContactManager::d_variables. Define a list of variables to be used inside the rules. . ◆ rules. sofa::core::objectmodel::RenamedData< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::rules. ◆ variablesData. std::map<std::string,Data<std::string>* > sofa::component::collision::response::contact::RuleBasedContactManager::variablesData. protected . Constructor details. ◆ RuleBasedContactManager(). sofa::component::collision::res",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:17859,pipeline,pipeline,17859,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['pipeline'],['pipeline']
Deployability," inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. ; Reimplemented from sofa::core::CollisionModel. ◆ getElemEdgeIndex(). template<class TDataTypes > . virtual sofa::Index sofa::component::collision::geometry::LineCollisionModel< TDataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:26137,update,update,26137,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['update'],['update']
Deployability," instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SmoothMeshEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:4194,update,update,4194,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['update'],['update']
Deployability," int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglViewport, core::visual::VisualManager)sofa::gl::component::rendering2d::OglViewport; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Viewport typedefsofa::gl::component::rendering2d::OglViewport; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglViewport() overridesofa::gl::component::rendering2d::OglViewportprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html:12923,update,updateInternal,12923,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,1,['update'],['updateInternal']
Deployability," int idROI);  ; void findVertexOnBorder (const Triangle &t, unsigned int idROI);  ; void findVertexOnBorder (const Tetra &t, unsigned int idROI);  ; bool isPointChecked (unsigned int id, sofa::type::vector< bool > &pointChecked);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:18412,update,update,18412,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['update'],['update']
Deployability," int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AMDOrderingMethod, BaseEigenOrderingMethod< Eigen::AMDOrdering< int >>)sofa::component::linearsolver::ordering::AMDOrderingMethod; BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:10437,update,updateInternal,10437,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," it affect the output derivative of the given order.; FF: What is the meaning of the parameters ? ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::VariationalSymplecticSolver::getVelocityIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ init(). void sofa::component::odesolver::backward::VariationalSymplecticSolver::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). void sofa::component::odesolver::backward::VariationalSymplecticSolver::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ SOFA_CLASS2(). sofa::component::odesolver::backward::VariationalSymplecticSolver::SOFA_CLASS2 ; (; VariationalSymplecticSolver ; , . sofa::core::behavior::OdeSolver ; , . sofa::core::behavior::LinearSolverAccessor ;  . ). ◆ solve(). void sofa::component::odesolver::backward::VariationalSymplecticSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverbackwardVariationalSymplecticSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:24439,integrat,integration,24439,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['integrat'],['integration']
Deployability," last attached point free (only used for Rigid DOFs) More...;  ; Data< bool > f_restRotations;  true to use rest rotations local offsets (only used for Rigid DOFs) More...;  ; Data< type::Vec3 > f_lastPos;  position at which the attach constraint should become inactive More...;  ; Data< type::Vec3 > f_lastDir;  direction from lastPos at which the attach coustraint should become inactive More...;  ; Data< bool > f_clamp;  true to clamp particles at lastPos instead of freeing them. More...;  ; Data< Real > f_minDistance;  the constraint become inactive if the distance between the points attached is bigger than minDistance. More...;  ; Data< Real > d_positionFactor;  IN: Factor applied to projection of position. More...;  ; Data< Real > d_velocityFactor;  IN: Factor applied to projection of velocity. More...;  ; Data< Real > d_responseFactor;  IN: Factor applied to projection of force/acceleration. More...;  ; Data< type::vector< Real > > d_constraintFactor;  Vector of factors adapting the application of the constraint per pair of points (0 -> the constraint is released. 1 -> the constraint is fully constrained) More...;  ; type::vector< bool > activeFlags;  ; type::vector< bool > constraintReleased;  ; type::vector< Real > lastDist;  ; type::vector< type::Quat< SReal > > restRotations;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at run",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:2604,release,released,2604,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,1,['release'],['released']
Deployability, learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 2022: register now!. /sofa-week-2023-register-now; ; SOFA – SOFA Week 2023: register now!. /sofa-week-2024-registration-is-open; ; SOFA – SOFA Week 2024: registration is open!. /soft-robotics-summer-school-in-lille; ; SOFA – Soft-Robotics Summer School in Lille. /softrobots-inverse-plugin-open-source-release; ; SOFA – SoftRobots.Inverse plugin open-source release!. /spin-offs-from-sofa-against-covid-19; ; SOFA – Spin-offs from SOFA against Covid-19. /stc11-join-us-in-june-to-design-the-sofa-roadmap; ; SOFA – STC#11: join us in June to design the SOFA roadmap!. /stc13-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:9615,release,released,9615,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability," link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMatrixLinearSystem ();  ; virtual void preAssembleSystem (const core::MechanicalParams *);  ; virtual void assembleSystem (const core::MechanicalParams *);  ; virtual void postAssembleSystem (const core::MechanicalParams *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=fa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html:10695,update,update,10695,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,1,['update'],['update']
Deployability," method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sofa::component::visual::VisualModelImpl, and sofa::component::visual::Visual3DText. ◆ drawVisual(). void sofa::core::visual::VisualModel::drawVisual ; (; const VisualParams * ; vparams). finalvirtual . Display the VisualModel object. ; TODO(dmarchal, 2023-06-09): Deprecate VI and use NVI design pattern: In one year, remove the virtual keyword so that everyone will have to override doDrawVisual; . ◆ exportOBJ(). virtual void sofa::core::visual::VisualModel::exportOBJ ; (; std::string ; , . std::ostream * ; , . std::ostream * ; , . sofa::Index & ; , . sofa::Index & ; , . sofa::Index & ; , . int & ;  . ). inlinevirtual . Append this mesh to an OBJ format stream. ; The number of vertices position, normal, and texture coordinates already written is given as parameters. This method should update them. ; Reimplemented in sofa::gl::component::rendering3d::OglCylinderModel, and sofa::component::visual::VisualModelImpl. ◆ fwdDraw(). virtual void sofa::core::visual::VisualModel::fwdDraw ; (; VisualParams * ; ). inlinevirtual . Called before objects in the current branch are displayed. ; Reimplemented in sofa::component::visual::VisualStyle, sofa::component::visual::VisualTransform, sofa::gl::component::shader::VisualManagerPass, sofa::gl::component::shader::OrderIndependentTransparencyManager, sofa::gl::component::shader::OglTexturePointer, sofa::gl::component::shader::OglTexture, sofa::gl::component::shader::OglShaderVisualModel, sofa::gl::component::shader::OglRenderingSRGB, sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >, sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >, sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >, sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:20723,update,update,20723,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['update'],['update']
Deployability," new Triangle is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_vertexMass when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass when a Hexahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAREMOVED event is fired. . ◆ handleEvent(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/5]. void sofa::component::mass::DiagonalMass< Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [2/5]. void sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:46195,update,update,46195,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability, of a mesh model (OglModel). /opengl-and-directx; ; SOFA - Topic: opengl and directX. /opengl-error-when-compiling-sofa-on-macos; ; SOFA - Topic: [SOLVED] OpenGL Error when Compiling SOFA on MacOS. /open-obj-or-stl-files; . /feed; ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues with haptics and deformable objects – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /3; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /8; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performanc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:360173,update,update,360173,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['update'],['update']
Deployability, of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. . Protected Attributes; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ inputs. DDGLinkContainer sofa::core::objectmodel::DDGNode::inputs. protected . ◆ outputs. DDGLinkContainer sofa::core::objectmodel::DDGNode::outputs. prote,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html:1810,update,updated,1810,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,1,['update'],['updated']
Deployability," of the element inside the vector map See alsom_map2Elements ; Parameters. {Index}element index of the full Data vector to find in the vector map . Returns{type::vector<Index>} positions of all the occurrence of the element in the vector map. return empty vector if not found. ; Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ removePostProcess(). void sofa::core::topology::TopologySubsetIndices::removePostProcess ; (; sofa::Index ; elemId). overrideprotectedvirtual . Internal method called at the end of See alsoremove method to apply internal mechanism, such as updating the map size ; Parameters. nbElementsNumber of element removed. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ swapPostProcess(). void sofa::core::topology::TopologySubsetIndices::swapPostProcess ; (; Index ; i1, . Index ; i2 . ). overrideprotectedvirtual . Internal method called at the end of See alsoswap method to apply internal mechanism, such as map swap. ; Parameters. i1First element index to be swapped. ; i2Second element index to be swapped with first one. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ updateLastIndex(). void sofa::core::topology::TopologySubsetIndices::updateLastIndex ; (; Index ; posLastIndex, . Index ; newGlobalId . ). overrideprotectedvirtual . Internal method to update the last element of this Data and/or map when the topology buffer is reduced. Parameters. posLastIndexIndex position of the last topology element in this subset. ; newGlobalIdGlobal topology element index to be set at Data[posLastIndex]. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. sofacoretopologyTopologySubsetIndices; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:24990,update,updateLastIndex,24990,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,3,['update'],"['update', 'updateLastIndex']"
Deployability," override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; virtual SReal getKs () const;  ; virtual SReal getKd () const;  ; void setKs (const SReal ks);  ; void setKd (const SReal kd);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > & getEdgeInfo ();  ; void applyEdgeCreation (Index edgeIndex, EdgeInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void applyQuadCreation (const sofa::type::vector< Index > &quadAdded, const sofa::type::vector< core::topology::BaseMeshTopology::Quad > &, const sofa::type::vector< sofa::type::vector< Index > > &, const sofa::type::vector< sofa::type::vector< SReal > > &);  ; void applyQuadDestruction (const sofa::type::vector< Index > &quadRemoved);  ; void applyPointDestruction (const sofa::type::vector< Index > &pointIndices);  Method to update. More...;  ; void applyPointRenumbering (const sofa::type::vector< Index > &pointToRenumber);  Method to update. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addCla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html:5779,update,update,5779,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,1,['update'],['update']
Deployability," override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ innerWidget_. QSimpleEdit sofa::gui::qt::QLinkSimpleEdit::innerWidget_. protected . Constructor details. ◆ QLinkSimpleEdit(). sofa::gui::qt::QLinkSimpleEdit::QLinkSimpleEdit ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::BaseLink * ; link . ). Function details. ◆ createWidgets(). bool sofa::gui::qt::QLinkSimpleEdit::createWidgets ; (; ). overridevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::LinkWidget. ◆ numColumnWidget(). unsigned int sofa::gui::qt::QLinkSimpleEdit::numColumnWidget ; (; ). inlineoverridevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::LinkWidget. ◆ readFromLink(). void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html:1864,update,updateLinkValue,1864,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,2,['update'],"['updateLinkValue', 'updateWidgetValue']"
Deployability," override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:3935,update,updateVisual,3935,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,2,['update'],"['update', 'updateVisual']"
Deployability," pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeMaterial (int);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ _comboBox. QComboBox* sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_comboBox. protected . ◆ _currentMaterial. core::objectmodel::Data<Material> sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_currentMaterial. protected . ◆ _currentMaterialPos. int sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_currentMaterialPos. protected . ◆ _materialDataWidget. MaterialDataWidget* sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_materialDataWidget. protected . ◆ _vectorEditedMaterial. VectorMaterial sofa::gui::qt::materialdatawidget_h::Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html:3446,update,updateDataValue,3446,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,2,['update'],"['updateDataValue', 'updateWidgetValue']"
Deployability, presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 20,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8998,release,released,8998,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability," protected . The type of topology to build the mass from the topology. . ◆ m_topology. template<class DataTypes , class GeometricalTypes = DataTypes> . template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . sofa::core::topology::BaseMeshTopology* sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::m_topology. protected . Initial value:= 0 >; void applyEdgeMassHexahedronDestruction(const sofa::type::vector<Index>& ); sofa::type::vector< Index >. Pointer to the topology container. Will be set by link. ; Method to update See alsod_edgeMass using mass matrix coefficient when a new Triangle is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Triangle is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when HEXAHEDRAADDED ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:33428,update,update,33428,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability," protected . ◆ GearSpringForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::GearSpringForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2 . ). protected . ◆ ~GearSpringForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::~GearSpringForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::addForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:26254,integrat,integrated,26254,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['integrat'],['integrated']
Deployability," protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ applyTetrahedronCreation(). template<class DataTypes > . void sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::applyTetrahedronCreation ; (; const sofa::type::vector< Index > & ; tetrahedronAdded, . const sofa::type::vector< core::topology::BaseMeshTopology::Tetrahedron > & ; , . const sofa::type::vector< sofa::type::vector< Index > > & ; , . const sofa::type::vector< sofa::type::vector< SReal > > & ;  . ). Method to update See alsod_edgeInfo when a new Tetrahedron is created. Will be set as callback in the EdgeData . d_edgeInfo when TETRAHEDRAADDED event is fired to create a new spring in created Tetrahedron. . ◆ applyTetrahedronDestruction(). template<class DataTypes > . vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html:24573,update,update,24573,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,1,['update'],['update']
Deployability," setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setDisplayed(bool b)sofa::core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const void * &value)sofa::core::objectmodel::Data< void * >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; swap(unsigned int, unsigned int)sofa::core::topology::BaseTopologyData< T >inlinevirtual; templateName()sofa::core::objectmodel::Data< void * >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< void * >; ValueType typedefsofa::core::objectmodel::Data< void * >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< void * >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html:11586,update,update,11586,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html,3,['update'],"['update', 'updateIfDirty', 'updateValueFromLink']"
Deployability," setDx(VecDerivId dx)sofa::core::ConstraintParamsinline; setDx(MultiVecDerivId dx)sofa::core::ConstraintParamsinline; setDx(const StateSet &g, MultiVecDerivId dx)sofa::core::ConstraintParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setExecParams(const core::ExecParams *params)sofa::core::ConstraintParams; setJ(MatrixDerivId j)sofa::core::ConstraintParamsinline; setJ(MultiMatrixDerivId j)sofa::core::ConstraintParamsinline; setJ(const StateSet &g, MatrixDerivId j)sofa::core::ConstraintParamsinline; setLambda(VecDerivId lambda)sofa::core::ConstraintParamsinline; setLambda(MultiVecDerivId lambda)sofa::core::ConstraintParamsinline; setLambda(const StateSet &g, MultiVecDerivId lambda)sofa::core::ConstraintParamsinline; setOrder(ConstraintOrder o)sofa::core::ConstraintParamsinline; setSmoothFactor(double v)sofa::core::ConstraintParamsinline; setThreadID(int v)sofa::core::ExecParamsinline; setV(ConstVecDerivId v)sofa::core::ConstraintParamsinline; setV(ConstMultiVecDerivId v)sofa::core::ConstraintParamsinline; setV(const StateSet &g, ConstVecDerivId v)sofa::core::ConstraintParamsinline; setX(ConstVecCoordId v)sofa::core::ConstraintParamsinline; setX(ConstMultiVecCoordId v)sofa::core::ConstraintParamsinline; setX(const StateSet &g, ConstVecCoordId v)sofa::core::ConstraintParamsinline; smoothFactor() constsofa::core::ConstraintParamsinline; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto POSsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto VELsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto ACCsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto POS_AND_VELsofa::core::ConstraintParams; threadID() constsofa::core::ExecParamsinline; update()sofa::core::ExecParams; v() constsofa::core::ConstraintParamsinline; v()sofa::core::ConstraintParamsinline; x() constsofa::core::ConstraintParamsinline; x()sofa::core::ConstraintParamsinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html:3672,update,update,3672,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html,1,['update'],['update']
Deployability," setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(ClipPlane, core::visual::VisualModel)sofa::gl::component::rendering3d::ClipPlane; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; wasActivesofa::gl::component::rendering3d::ClipPlaneprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ClipPlane() overridesofa::gl::component::rendering3d::ClipPlaneprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:11560,update,updateInternal,11560,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateVisual']"
Deployability," setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeSurface< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeSurface",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:12860,update,update,12860,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['update'],['update']
Deployability," setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GenerateSphere, DataTypes), core::DataEngine)sofa::component::engine::generate::GenerateSphere< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON enum valuesofa::component::engine::generate::GenerateSphere< DataTypes >; Tetrahedron typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateSphere() overridesofa::component::engine::generate::GenerateSphere< DataTypes >inl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:14277,update,update,14277,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['update'],['update']
Deployability," setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeEdgesAndGenerateQuads() overridesofa::component::engine::generate::ExtrudeEdgesAndG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html:13553,update,updateIfDirty,13553,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,1,['update'],['updateIfDirty']
Deployability," setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeQuadsAndGenerateHexas, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeQuadsAndGenerateHexas() overridesofa::component::engine::generate::ExtrudeQuadsAndG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html:13780,update,updateIfDirty,13780,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html,1,['update'],['updateIfDirty']
Deployability," setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OrderIndependentTransparencyManager, core::visual::VisualManager)sofa::gl::component::shader::OrderIndependentTransparencyManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OrderIndependentTransparencyManager() overridesofa::gl::component::shader::OrderIndependentTransparencyManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:12498,update,updateInternal,12498,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,1,['update'],['updateInternal']
Deployability," sofa::Index quadIndex, const SReal *baryCoords);  ; void addPointInTetra (const sofa::Index tetraIndex, const SReal *baryCoords, const sofa::Index pointIndex);  ; void addPointInCube (const sofa::Index cubeIndex, const SReal *baryCoords);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:4546,update,updateAllInputsIfDirty,4546,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['update'],['updateAllInputsIfDirty']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x3Variable() overridesofa::gl::component::shader::OglMatrix4x3Variableinline; ~OglShaderE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html:13890,update,updateInternal,13890,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,1,['update'],['updateInternal']
Deployability," sofa::component::linearsolver::BaseMatrixLinearSolver< Matrix, Vector >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BaseMatrixLinearSolver, Matrix, Vector), sofa::core::behavior::LinearSolver);  ; virtual void invert (Matrix &M)=0;  ; virtual void solve (Matrix &M, Vector &solution, Vector &rh)=0;  ; virtual Matrix * getSystemMatrix ()=0;  ;  Public Member Functions inherited from sofa::core::behavior::LinearSolver;  SOFA_ABSTRACT_CLASS (LinearSolver, BaseLinearSolver);  ; virtual void resetSystem ()=0;  Reset the current linear system. More...;  ; virtual void setSystemMBKMatrix (const MechanicalParams *mparams)=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool isAsyncSolver ();  Indicate if the solver update the system in parallel. More...;  ; virtual bool supportNonSymmetricSystem () const;  Returns true if the solver supports non-symmetric systems. More...;  ; virtual bool hasUpdatedMatrix ();  Indicate if the solver updated the system after the last call of setSystemMBKMatrix (should return true if isParallelSolver return false) More...;  ; virtual void updateSystemMatrix ();  This function is use for the preconditioner it must be called at each time step event if setSystemMBKMatrix is not called. More...;  ; virtual void setSystemRHVector (core::MultiVecDerivId v)=0;  Set the linear system right-hand term vector, from the values contained in the (Mechanical/Physical)State objects. More...;  ; virtual void setSystemLHVector (core::MultiVecDerivId v)=0;  ; virtual void solveSystem ()=0;  Solve the system as constructed using the previous methods. More...;  ; virtual void init_partial_solve ();  ; virtual void partial_solve (std::list< linearalgebra::BaseMatrix::Index > &, std::list< linearalgebra::BaseMatrix::Index > &, bool);  ; virtual void invertSystem ();  Invert the system, this method is optional because it's called when solveSystem() is called for the first time. More...;  ; virtual bool addMInvJt (linearalgebra::BaseMa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:1369,update,updated,1369,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,1,['update'],['updated']
Deployability," sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ handleEvent(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reset(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TaitSurfacePressureForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ storeResetState(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::storeResetState. overridevirtual . Save the initial state for later uses in reset() ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::updateFromTopology. protectedvirtual . Enum details. ◆ anonymous enum. template<class DataTypes > . anonymous enum. EnumeratorDerivSize . sofacomponentmechanicalloadTaitSurfacePressureForceField; Generated on Mon Nov 11 2024 02:54:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:37461,update,updateFromTopology,37461,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,2,['update'],['updateFromTopology']
Deployability," sofa::component::playback::ReadState; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CompareState ();  ;  Protected Member Functions inherited from sofa::component::playback::ReadState;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:12491,update,update,12491,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['update'],['update']
Deployability," sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:4193,update,update,4193,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['update'],['update']
Deployability," sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshBoundaryROI, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; bool inROI (const PointID &index) const;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:2603,update,update,2603,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['update'],['update']
Deployability," specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void propagateTopologicalEngineChanges ();  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. TODO: temporary duplication of topological events (commented by default) More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:15256,update,update,15256,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['update'],['update']
Deployability," std::string &name) override;  create a new graph(or tree) and return its root node. More...;  ; virtual NodeSPtr createNewNode (const std::string &name) override;  creates and returns a new node. More...;  ; bool isDirectedAcyclicGraph () override;  Can the simulation handle a directed acyclic graph? More...;  ;  Public Member Functions inherited from sofa::simulation::Simulation;  Simulation ();  ; virtual ~Simulation ();  ;  Simulation (const Simulation &n)=delete;  ; Simulation & operator= (const Simulation &n)=delete;  ; virtual void print (Node *root)=delete;  Print all object in the graph. More...;  ; virtual void init (Node *root)=delete;  Initialize the objects. More...;  ; virtual void initNode (Node *node)=delete;  Init a node without changing the context of the simulation. More...;  ; virtual void animate (Node *root, SReal dt=0.0)=delete;  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; virtual void updateVisual (Node *root)=delete;  Update the Visual Models: triggers the Mappings. More...;  ; virtual void reset (Node *root)=delete;  Reset to initial state. More...;  ; virtual void initTextures (Node *root)=delete;  Initialize the textures. More...;  ; virtual void updateContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void updateVisualContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox)=delete;  ; virtual void draw (sofa::core::visual::VisualParams *vparams, Node *root)=delete;  Render the scene. More...;  ; virtual void exportOBJ (Node *root, const char *filename, bool exportMTL=true)=delete;  Export a scene to an OBJ 3D Scene. More...;  ; virtual void exportXML (Node *root, const char *fileName=n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html:1682,update,updateVisual,1682,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,1,['update'],['updateVisual']
Deployability," std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::ContactManagerinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContactManager, CollisionAlgorithm)sofa::core::collision::ContactManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedContactssofa::core::collision::ContactManagerprotected; storedIntersectionMethodsofa::core::collision::ContactManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContactManager() overridesofa::core::collision::ContactManagerinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:11159,update,updateInternal,11159,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; SOFA_CLASS(GenerateRigidMass, core::DataEngine)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; volumesofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateRigidMass() overridesofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:14422,update,updateInternal,14422,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< float >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html:15355,update,update,15355,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,1,['update'],['update']
Deployability," std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GenerateGrid, DataTypes), core::DataEngine)sofa::component::engine::generate::GenerateGrid< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; Vec3Int typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; VecCoord typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateGrid() overridesofa::component::engine::generate::GenerateGrid< DataTypes >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:13614,update,updateInternal,13614,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SlicedVolumetricModel()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SlicedVolumetricModel, core::visual::VisualModel)sofa::gl::component::rendering3d::SlicedVolumetricModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texture_datasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecCoord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; vRightsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; vUpsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~SlicedVolumetricModel() overridesofa::gl::component::rendering3d::SlicedVolumetricModelprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:13747,update,updateVisual,13747,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['update'],['updateVisual']
Deployability," storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; TextCoords2D typedefsofa::component::topology::container::grid::GridTopology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:38226,update,updateHexahedra,38226,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,4,['update'],['updateHexahedra']
Deployability," t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FileMessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::FileMessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~FileMessageHandlerComponent() overridesofa::component::sceneutility::FileMessageHandlerComponent.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:10157,update,updateInternal,10157,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability," template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::mechanicalload::ConicalForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. inlineoverridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ isIn(). template<class DataTypes > . bool sofa::component::mechanicalload::ConicalForceField< DataTypes >::isIn ; (; Coord ; p). virtual . ◆ setCone(). template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::setCone ; (; const Coord & ; center, . Coord ; height, . Real ; angle . ). ◆ setDamping(). template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::setDamping ; (; Real ; damp). ◆ setStiffness(). template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::setStiffness ; (; Real ; stiff). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::mechanicalload::ConicalForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ConicalForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ updateStiffness(). template<class DataTypes > . void sofa::component::mechanicalload::ConicalForceField< DataTypes >::updateStiffness ; (; const VecCoord & ; x). virtual . sofacomponentmechanicalloadConicalForceField; Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:23591,update,updateStiffness,23591,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,2,['update'],['updateStiffness']
Deployability," template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlineoverridevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhyperelasticmaterialSTVenantKirchhoff; Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html:3625,configurat,configuration,3625,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,1,['configurat'],['configuration']
Deployability," tetraVertices, . std::vector< sofa::type::Vec3 > & ; normalVertices . ). protected . ◆ computeBoundingTree(). void sofa::component::collision::geometry::TetrahedronCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ draw() [1/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. void sofa::component::collision::geometry::TetrahedronCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getMechanicalState(). core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TetrahedronCollisionModel::getMechanicalState ; (; ). inline . ◆ init(). void sofa::component::collision::geometry::TetrahedronCollisionModel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). void sofa::component::collision::geometry::TetrahedronCollisionModel::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). sofa::component::collision::geometry::TetrahedronCollisionModel::SOFA_CLASS ; (; TetrahedronCollisionModel ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). void sofa::component::collision::geometry::TetrahedronCollisionModel::updateFromTopology ; (; ). protectedvirtual . Related details. ◆ Tetrahedron. friend class Tetrahedron. friend . sofacomponentcollisiongeometryTetrahedronCollisionModel; Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:24561,update,updateFromTopology,24561,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,2,['update'],['updateFromTopology']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of change",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html:10931,update,updated,10931,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; virtual void swapPostProcess (Index i1, Index i2);  ; virtual void removePostProcess (sofa::Index elemId);  ; virtual void addPostProcess (sofa::Index dataLastId);  ; virtual void updateLastIndex (Index posLastIndex, Index newGlobalId);  ;  Protected Member Functions inherited from sofa::core::topology::TopologyData< ElementType, VecT >; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:16390,update,updated,16390,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ; void unlinkFromElementDataArray (s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:15740,update,updated,15740,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void swapPostProcess (Index i1, Index i2) override;  ; void removePostProcess (sofa::Index elemId) override;  ; void addPostProcess (sofa::Index dataLastId) override;  ; void updateLastIndex (Index posLastIndex, Index newGlobalId) override;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyData< ElementType, VecT >; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:15941,update,updated,15941,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:9166,update,updated,9166,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< std::string >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:9030,update,updated,9030,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Static Public Member Functions; static constexpr bool isCopyOnWrite ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:9542,update,updated,9542,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Static Public Member Functions; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:7313,update,updated,7313,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['update'],['updated']
Deployability," the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< void * >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  ;  Protected Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html:8648,update,updated,8648,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,1,['update'],['updated']
Deployability," the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:3386,update,update,3386,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['update'],['update']
Deployability," the selected step. . Protected Attributes; int m_bufferSize;  copy of the series size to check if selection is not out of bound More...;  ; QPointF m_lineSelect;  2D point of the line to draw the selection More...;  ; QPointF m_lineOrigin;  ; int m_pointSelected;  Step number selected on the graph. -1 if none. More...;  ; int m_maxY;  Stored value of the Y axis max. More...;  . Public Member Functions;  ProfilerChartView (QChart *chart, QWidget *parent, int bufferSize);  ; void updateYMax (int y);  method to update the max value of the Y axis (for line rendering). More...;  . Protected Member Functions; virtual void mousePressEvent (QMouseEvent *event);  Override to catch mouse selection on the graph. More...;  ; virtual void drawForeground (QPainter *painter, const QRectF &rect);  Override to draw line at the step selected. More...;  . Signals; void pointSelected (int);  signal emitted when a step has been selected on the graph More...;  . Public Slots; void updateSelection (int x);  method to update the selection on the graph. More...;  . Attribute details. ◆ m_bufferSize. int sofa::gui::qt::ProfilerChartView::m_bufferSize. protected . copy of the series size to check if selection is not out of bound . ◆ m_lineOrigin. QPointF sofa::gui::qt::ProfilerChartView::m_lineOrigin. protected . ◆ m_lineSelect. QPointF sofa::gui::qt::ProfilerChartView::m_lineSelect. protected . 2D point of the line to draw the selection . ◆ m_maxY. int sofa::gui::qt::ProfilerChartView::m_maxY. protected . Stored value of the Y axis max. . ◆ m_pointSelected. int sofa::gui::qt::ProfilerChartView::m_pointSelected. protected . Step number selected on the graph. -1 if none. . Constructor details. ◆ ProfilerChartView(). sofa::gui::qt::ProfilerChartView::ProfilerChartView ; (; QChart * ; chart, . QWidget * ; parent, . int ; bufferSize . ). Function details. ◆ drawForeground(). void sofa::gui::qt::ProfilerChartView::drawForeground ; (; QPainter * ; painter, . const QRectF & ; rect . ). protectedvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html:1770,update,updateSelection,1770,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,2,['update'],"['update', 'updateSelection']"
Deployability," the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(JoinPoints, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:2210,update,update,2210,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['update'],['update']
Deployability," the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; bool checkMultipass (sofa::core::objectmodel::BaseContext *con);  ;  Protected Member Functions inherited from sofa::core::visual::VisualManager;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:14735,update,update,14735,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,1,['update'],['update']
Deployability," time for the response. . Public Attributes; std::pair< core::CollisionElementIterator, core::CollisionElementIterator > elem;  Pair of colliding elements. More...;  ; ContactId id;  Unique id of the contact for the given pair of collision models. More...;  ; type::Vec3 point [2];  Contact points on the surface of each model. They are expressed in the local coordinate system of the model if any is defined.. More...;  ; type::Vec3 normal;  Normal of the contact, pointing outward from the first model. More...;  ; double value;  Store information for the collision Response. Depending on the kind of contact, can be a distance, or a pression, ... More...;  ; double deltaT;  If using a continuous collision detection, estimated of time of contact. More...;  . Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  DetectionOutput ();  . Attribute details. ◆ deltaT. double sofa::core::collision::DetectionOutput::deltaT. If using a continuous collision detection, estimated of time of contact. . ◆ elem. std::pair<core::CollisionElementIterator, core::CollisionElementIterator> sofa::core::collision::DetectionOutput::elem. Pair of colliding elements. . ◆ id. ContactId sofa::core::collision::DetectionOutput::id. Unique id of the contact for the given pair of collision models. . ◆ normal. type::Vec3 sofa::core::collision::DetectionOutput::normal. Normal of the contact, pointing outward from the first model. . ◆ point. type::Vec3 sofa::core::collision::DetectionOutput::point[2]. Contact points on the surface of each model. They are expressed in the local coordinate system of the model if any is defined.. . ◆ value. double sofa::core::collision::DetectionOutput::value. Store information for the collision Response. Depending on the kind of contact, can be a distance, or a pression, ... . Constructor details. ◆ DetectionOutput(). sofa::core::collision::DetectionOutput::DetectionOutput ; (; ). inline . Function details. ◆ SOFA_ATTRIBUTE_REPLACED__",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output.html:2068,continuous,continuous,2068,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output.html,1,['continuous'],['continuous']
Deployability," to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergePoints ();  ;  ~MergePoints () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html:13424,update,update,13424,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,1,['update'],['update']
Deployability," to update . d_vertexMass using mass matrix coefficient when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Hexahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAREMOVED event is fired. Method to initialize . MassType when a new Edge is created to compute mass coefficient matrix. Will be set as creation callback in the EdgeData . d_edgeMass . ◆ applyEdgeMassCreation() [2/2]. template<class DataTypes , class GeometricalTypes = DataTypes> . template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::applyEdgeMassCreation ; (; Index ; , . MassType & ; EdgeMass, . const core::topology::BaseMeshTopology::Edge & ; , . const sofa::type::vector< Index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:39142,update,update,39142,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability," type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ disable(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::disable. ◆ doInitVisual(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::doInitVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::doUpdateVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . if attributes are not static, update the buffer ; Reimplemented from sofa::core::visual::VisualModel. ◆ enable(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::enable. ◆ endEdit(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::endEdit. ◆ fwdDraw(). template<int size, unsigned int type, class DataTypes > . void sofa::gl::component::shader::OglAttribute< size, type, DataTypes >::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ getSESizePerVertex(). template<int size, unsigned int type, class TDataTypes > . int sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >::getSESizePerVertex ; (; ). inlineoverridevirtual . Reimplemented from sofa::core::visual::ShaderElement. ◆ getSETotalSize(). template<int size, unsigned int type, cla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:20543,update,update,20543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['update'],['update']
Deployability," using mass matrix coefficient when a Triangle is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Hexahedron is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when HEXAHEDRAREMOVED event is fired. . l_topology . Constructor details. ◆ MeshMatrixMass(). template<class DataTypes , class GeometricalTypes > . sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::MeshMatrixMass. protected . ◆ ~MeshMatrixMass(). template<class DataTypes , class GeometricalTypes > . sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::~MeshMatrixMass. overrideprotected . Function details. ◆ accFromF(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::accFromF ; (; const core::MechanicalPara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:34244,update,update,34244,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability, v18.12. /problem-adding-uncoupledconstraintcorrection; ; SOFA - Topic: [SOLVED] Problem adding UncoupledConstraintCorrection. /problem-compiling-sofa-v16-08; ; SOFA - Topic: [SOLVED] Problem compiling Sofa v16.08. /problem-compiling-sofa-with-python3; ; SOFA - Topic: Problem Compiling SOFA with Python3. /problem-compiling-sofa-with-python3-2; ; SOFA - Topic: Problem Compiling SOFA with Python3. /problem-configuring-sofa-with-eigen3; ; SOFA - Topic: [SOLVED] Problem configuring SOFA with Eigen3. /problem-downloading-the-source-files-from-git-repositary; ; SOFA - Topic: [SOLVED] Problem downloading the source files from git repositary. /problem-for-beam-mass-simulation; ; SOFA - Topic: Problem for beam-mass simulation. /problem-in-generating-cmake-gui-when-building-sofa; ; SOFA - Topic: [SOLVED] Problem in generating Cmake-gui when building Sofa. /problem-in-installing-cmake; ; SOFA - Topic: [SOLVED] Problem in installing Cmake. /problem-in-installing-stlib; . /feed; ; [SOLVED] Problem in installing STlib – SOFA. SOFA - Topic: [SOLVED] Problem in installing STlib. /problem-in-running-new-version-of-sofa-20-12; ; SOFA - Topic: Problem in running new version of Sofa 20.12. /problem-of-the-variables-control-of-legged-robot-with-flexible-passive-trunk; ; SOFA - Topic: Problem of the Variables Control of Legged Robot with Flexible Passive Trunk. /problems-applying-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Problems applying SofaCUDA plugin. /problems-at-lauching-runsofa; ; SOFA - Topic: [SOLVED] Problems at lauching runSofa. /problems-finding-collision-algorithms; ; SOFA - Topic: [SOLVED] Problems finding collision algorithms. /problems-generating-mesh-with-cgalplugin-and-tetrahedronsettopologycontainer; ; SOFA - Topic: [SOLVED] Problems generating mesh with CGALPlugin and TetrahedronSetTopologyContainer. /problems-importing-sofa-gui-sofapython3; ; SOFA - Topic: Problems importing Sofa.Gui (SofaPython3). /problems-in-model-order-reduction; ; SOFA - Topic: [SOLVED] Problems,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:364768,install,installing,364768,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['installing']
Deployability," value. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ drawStep(). virtual void sofa::core::visual::VisualLoop::drawStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Render the scene. ; Reimplemented in sofa::gl::component::shader::CompositingVisualLoop, and sofa::simulation::DefaultVisualManagerLoop. ◆ initStep(). virtual void sofa::core::visual::VisualLoop::initStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Initialize the textures. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ insertInNode(). bool sofa::core::visual::VisualLoop::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::visual::VisualLoop::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::core::visual::VisualLoop::SOFA_CLASS ; (; VisualLoop ; , . VisualModel ;  . ). ◆ updateContextStep(). virtual void sofa::core::visual::VisualLoop::updateContextStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Update contexts. Required before drawing the scene if root flags are modified. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. ◆ updateStep(). virtual void sofa::core::visual::VisualLoop::updateStep ; (; sofa::core::visual::VisualParams * ; ). inlinevirtual . Update the Visual Models: triggers the Mappings. ; Reimplemented in sofa::simulation::DefaultVisualManagerLoop. sofacorevisualVisualLoop; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:17440,update,updateContextStep,17440,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,4,['update'],"['updateContextStep', 'updateStep']"
Deployability," vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ROIValueMapper ();  ;  ~ROIValueMapper () override;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:13269,update,update,13269,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['update'],['update']
Deployability," vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SelectLabelROI ();  ;  ~SelectLabelROI () override;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html:13164,update,update,13164,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,1,['update'],['update']
Deployability," version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1639,pipeline,pipeline,1639,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['pipeline'],['pipeline']
Deployability," virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; virtual sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void applyDJT (const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:8705,update,updateK,8705,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,2,['update'],['updateK']
Deployability," virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html:5044,update,updateVisual,5044,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,1,['update'],['updateVisual']
Deployability," void clearErrors ();  . Protected Member Functions; virtual void updateSceneGraph (sofa::core::BaseMapping *multiMapping, const type::vector< simulation::Node * > &ancestorInputs, type::vector< simulation::Node * > &otherInputs, type::vector< simulation::Node * > &outputs)=0;  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Constructor details. ◆ BaseMultiMappingElement(). sofa::simulation::xml::BaseMultiMappingElement::BaseMultiMappingElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; parent = nullptr . ). Function details. ◆ initNode(). bool sofa::simulation::xml::BaseMultiMappingElement::initNode ; (; ). overridevirtual . Implements sofa::simulation::xml::BaseElement. ◆ updateSceneGraph(). virtual void sofa::simulation::xml::BaseMultiMappingElement::updateSceneGraph ; (; sofa::core::BaseMapping * ; multiMapping, . const type::vector< simulation::Node * > & ; ancestorInputs, . type::vector< simulation::Node * > & ; otherInputs, . type::vector< simulation::Node * > & ; outputs . ). protectedpure virtual . sofasimulationxmlBaseMultiMappingElement; Generated on Mon Nov 11 2024 03:34:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:6867,update,updateSceneGraph,6867,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,2,['update'],['updateSceneGraph']
Deployability," void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  AverageCoord ();  ;  ~AverageCoord () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:13867,update,update,13867,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['update'],['update']
Deployability," void reinit () override;  ; void apply (const sofa::core::MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in) override;  ; void applyJ (const sofa::core::MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in) override;  ; void applyJT (const sofa::core::MechanicalParams *mparams, InDataVecDeriv &out, const OutDataVecDeriv &in) override;  ; void applyJT (const sofa::core::ConstraintParams *cparams, InDataMatrixDeriv &out, const OutDataMatrixDeriv &in) override;  ; const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions; void updateWeights ();  ;  SkinningMapping ();  ; virtual ~SkinningMapping ();  . Attribute details. ◆ _J. template<class TIn , class TOut > . SparseJMatrixEigen sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::_J. protected . rotated child coordinates : dp = Omega_i x f_rotatedPos : . ◆ d_index. template<class TIn , class TOut > . Data< type::vector<sofa::type::SVector<unsigned int> > > sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::d_index. protected . parent indices for each child. . ◆ d_initPos. template<class TIn , class TOut > . Data<OutVecCoord> sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::d_initPos. protected . initial child coordinates in the world reference frame. . ◆ d_nbRef. template<class TIn , class TOut > . Data< type::vector<unsigned int> > sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::d_nbRef. protected . jacobian matrix for compliant API ; Number of primitives influencing each point. . ◆ d_showFromIndex. template<class TIn , ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html:3243,update,updateWeights,3243,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,1,['update'],['updateWeights']
Deployability," you put your engine's impl. More...;  ; template<class V > ; void applyIndex (V &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:3573,update,updateAllInputsIfDirty,3573,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html:5766,update,updateVisual,5766,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,1,['update'],['updateVisual']
Deployability,"  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; Real getMassDensity () const;  ; template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > ; SReal getTotalMass () const;  ; std::size_t getMassCount ();  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void addMass (const MassType &mass);  ; void resize (int vsize);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; SReal getKineticEnergy (const core::MechanicalParams *mparams, const DataVecDeriv &v) const override;  vMv/2 using dof->getV() override More...;  ; SReal getPoten",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:6326,update,update,6326,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability,"  ; bool isTriangleInStrictROI (const Triangle &t) const override;  ;  Protected Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  BaseROI ();  ;  ~BaseROI () override=default;  ; bool isPointIn (const PointID pid) const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ; virtual bool isQuadInROI (const Quad &q) const;  ; virtual bool isQuadInStrictROI (const Quad &q) const;  ; virtual bool isTetrahedronInROI (const Tetra &t) const;  ; virtual bool isTetrahedronInStrictROI (const Tetra &t) const;  ; virtual bool isHexahedronInROI (const Hexa &t) const;  ; virtual bool isHexahedronInStrictROI (const Hexa &t) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:19560,update,update,19560,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,1,['update'],['update']
Deployability,"  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  ConstantForceField ();  ; sofa::core::objectmodel::ComponentState updateFromIndices ();  Functions updating data. More...;  ; sofa::core::objectmodel::ComponentState updateFromForcesVector ();  ; sofa::core::objectmodel::ComponentState updateFromTotalForce ();  ; bool checkForce (const Deriv &force);  Functions checking inputs before update. More...;  ; bool checkForces (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromSingleForce (const Deriv singleForce);  Functions computing and updating the constant force vector. More...;  ; sofa::core::objectmodel::ComponentState computeForceFromForcesVector (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromTotalForce (const Deriv &totalForce);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:17537,update,updateFromForcesVector,17537,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,3,['update'],"['update', 'updateFromForcesVector', 'updateFromTotalForce']"
Deployability,"  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:4192,update,update,4192,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,13,['update'],['update']
Deployability,"  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html:14366,update,update,14366,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,5,['update'],['update']
Deployability,"  ; sofa::core::objectmodel::Data< std::string > * getData ();  ; const sofa::core::objectmodel::Data< std::string > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Protected Slots; virtual void raiseDialog ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute detai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html:2406,update,update,2406,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,1,['update'],['update']
Deployability,"  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Contact ();  ;  ~Contact () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:11492,update,update,11492,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,1,['update'],['update']
Deployability,"  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:15125,update,update,15125,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['update'],['update']
Deployability,"  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html:3557,update,updateVisual,3557,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,2,['update'],"['update', 'updateVisual']"
Deployability,"  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html:3085,update,updateAllInputsIfDirty,3085,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,7,['update'],['updateAllInputsIfDirty']
Deployability,"  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:15849,update,update,15849,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,11,['update'],['update']
Deployability,"  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairInteractionProjectiveConstraintSet (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:16407,update,update,16407,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,1,['update'],['update']
Deployability,"  ;  ~BaseROI () override=default;  ; bool isPointIn (const PointID pid) const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:20865,update,update,20865,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['update'],['update']
Deployability,"  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshBarycentricMapperEngine ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:14303,update,update,14303,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['update'],['update']
Deployability,"  ConstantForceField ();  ; sofa::core::objectmodel::ComponentState updateFromIndices ();  Functions updating data. More...;  ; sofa::core::objectmodel::ComponentState updateFromForcesVector ();  ; sofa::core::objectmodel::ComponentState updateFromTotalForce ();  ; bool checkForce (const Deriv &force);  Functions checking inputs before update. More...;  ; bool checkForces (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromSingleForce (const Deriv singleForce);  Functions computing and updating the constant force vector. More...;  ; sofa::core::objectmodel::ComponentState computeForceFromForcesVector (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromTotalForce (const Deriv &totalForce);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:18795,update,update,18795,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,1,['update'],['update']
Deployability,"  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ CenterPointTopologicalMapping(). sofa::component::topology::mapping::CenterPointTopologicalMapping::CenterPointTopologicalMapping ; (; ). protected . Constructor. . ◆ ~CenterPointTopologicalMapping(). sofa::component::topology::mapping::CenterPointTopologicalMapping::~CenterPointTopologicalMapping ; (; ). inlineoverrideprotected . Destructor. ; Does nothing. . Function details. ◆ getFromIndex(). Index sofa::component::topology::mapping::CenterPointTopologicalMapping::getFromIndex ; (; Index ; ind). inlineoverridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ getGlobIndex(). Index sofa::component::topology::mapping::CenterPointTopologicalMapping::getGlobIndex ; (; Index ; ind). inlineoverridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ init(). void sofa::component::topology::mapping::CenterPointTopologicalMapping::init ; (; void ; ). overridevirtual . Initializes the target BaseTopology from the source BaseTopology. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::topology::mapping::CenterPointTopologicalMapping::SOFA_CLASS ; (; CenterPointTopologicalMapping ; , . sofa::core::topology::TopologicalMapping ;  . ). ◆ updateTopologicalMappingTopDown(). void sofa::component::topology::mapping::CenterPointTopologicalMapping::updateTopologicalMappingTopDown ; (; ). overridevirtual . Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : ; Implements sofa::core::topology::TopologicalMapping. sofacomponenttopologymappingCenterPointTopologicalMapping; Generated on Mon Nov 11 2024 03:10:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html:17900,update,updateTopologicalMappingTopDown,17900,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,2,['update'],['updateTopologicalMappingTopDown']
Deployability,"  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PrimitiveUpdate, sofa::core::DataEngine);  ;  PrimitiveUpdate (MeshTopology *t);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this no",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:1721,update,update,1721,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['update'],['update']
Deployability,"  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedProjectiveConstraint ();  ; virtual ~FixedProjectiveConstraint ();  ; void checkIndices ();  Function check values of given indices. More...;  ; void computeBBoxForIndices (const type::vector< Index > &indices);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:17901,update,update,17901,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['update'],['update']
Deployability,"  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_symplectic. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_symplectic. If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (standard Euler, less robust). . ◆ d_threadSafeVisitor. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_threadSafeVisitor. If true, do not use realloc and free visitors in fwdInteractionForceField. . ◆ l_linearSolver. SingleLink<EulerExplicitSolver, core::behavior::LinearSolver, BaseLink::FLAG_STRONGLINK> sofa::component::odesolver::forward::EulerExplicitSolver::l_linearSolver. Constructor details. ◆ EulerExplicitSolver(). sofa::component::odesolver::forward::EulerExplicitSolver::EulerExplicitSolver ; (; ). protected . Function details. ◆ addSeparateGravity(). void sofa::component::odesolver::forward::EulerExplicitSolver::addSeparateGravity ; (; sofa::simulation::common::MechanicalOperations * ; mop, . SReal ; dt, . core::MultiVecDerivId ; v . ). staticprotected . Gravity times time step size is added to the velocity for some masses v += g * dt . ◆ as",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:16906,update,updated,16906,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['update'],['updated']
Deployability," – Italy. /prizes-for-defrost-success-in-soft-robotics; ; SOFA – Prizes for Defrost: success in soft-robotics. /publication-about-cardiac-electrophysiology-in-media; ; SOFA – Publication about cardiac electrophysiology in MedIA. /registration-to-the-sofa-week-2019-is-open; ; SOFA – Registration to the SOFA Week 2019 is open!. /research-is-going-forward-with-sofa; ; SOFA – Research is going forward with SOFA!. /share-your-publications-with-sofa; ; SOFA – Share your publications with SOFA!. /sofa-at-cmbbe-2023; ; SOFA – SOFA at CMBBE 2023. /sofa-at-eit-health-matchmaking-in-uppsala-sweden; ; SOFA – SOFA at EIT-Health matchmaking in Uppsala, Sweden. /sofa-at-fosdem-2017-in-brussels; ; SOFA – SOFA at FOSDEM 2017 in Brussels. /sofa-at-station-f; ; SOFA – SOFA at STATION F. /sofa-at-vivatech-2023; ; SOFA – SOFA at Vivatech 2023!. /sofa-at-vph-2022; ; SOFA – SOFA at VPH 2022. /sofa-at-vr-meetings-2016-in-lille; ; SOFA – SOFA at VR Meetings 2016 in Lille. /sofa-being-integrated-in-unity3d; ; SOFA – SOFA being integrated in Unity3D. /sofa-day-2016-in-strasbourg; ; SOFA – SOFA Day 2016 in Strasbourg. /sofa-gets-a-brand-new-design; . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:7421,integrat,integrated-in-,7421,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['integrat'],"['integrated', 'integrated-in-']"
Deployability," ◆ StopperLagrangianConstraint(). template<class DataTypes > . sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::StopperLagrangianConstraint ; (; MechanicalState * ; object = nullptr). protected . ◆ ~StopperLagrangianConstraint(). template<class DataTypes > . virtual sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::~StopperLagrangianConstraint ; (; ). inlineprotectedvirtual . Function details. ◆ buildConstraintMatrix(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::buildConstraintMatrix ; (; const core::ConstraintParams * ; cParams, . DataMatrixDeriv & ; c, . unsigned int & ; cIndex, . const DataVecCoord & ; x . ). overridevirtual . Construct the Jacobian Matrix; Parameters. cis the result constraint sparse matrix ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; xis the position vector used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::Constraint< DataTypes >. ◆ getConstraintIdentifiers(). template<class DataTypes > . virtual type::vector<std::string> sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::getConstraintIdentifiers ; (; ). inlinefinaloverrideprotectedvirtual . Reimplemented from sofa::core::behavior::Constraint< DataTypes >. ◆ getConstraintResolution(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >::getConstraintResolution ; (; const core::ConstraintParams * ; cParams, . std::vector< core::behavior::ConstraintResolution * > & ; resTab, . unsigned int & ; offset . ). overridevirtual .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html:21610,update,update,21610,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,1,['update'],['update']
Deployability," ◆ m_massTopologyType. template<class DataTypes , class GeometricalTypes = DataTypes> . sofa::geometry::ElementType sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::m_massTopologyType. protected . The type of topology to build the mass from the topology. . ◆ m_topology. template<class DataTypes , class GeometricalTypes = DataTypes> . template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . sofa::core::topology::BaseMeshTopology* sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::m_topology. protected . Initial value:= 0 >; void applyEdgeMassHexahedronDestruction(const sofa::type::vector<Index>& ); sofa::type::vector< Index >. Pointer to the topology container. Will be set by link. ; Method to update See alsod_edgeMass using mass matrix coefficient when a new Triangle is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Triangle is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_edgeMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the EdgeData . d_edgeMass to update the mass vector when TETRAHEDRAREMOVED even",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:33223,update,update,33223,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability,"&out, const Mat4x4 &inv, const Coord &x);  ; void mult (defaulttype::Rigid3Types::Coord &out, const defaulttype::Rigid3Types::Coord &inv, const Coord &x);  ; void mult (type::Mat4x4 &out, const type::Mat4x4 &inv, const Coord &x);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:17055,update,update,17055,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['update'],['update']
Deployability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  JoinPoints ();  ;  ~JoinPoints () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:13331,update,update,13331,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['update'],['update']
Deployability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MapIndices ();  ;  ~MapIndices () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:14056,update,update,14056,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['update'],['update']
Deployability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  DirectionProjectiveConstraint ();  ; virtual ~DirectionProjectiveConstraint ();  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:17890,update,update,17890,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['update'],['update']
Deployability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  TrianglePressureForceField ();  ;  ~TrianglePressureForceField () override;  ; void updateTriangleInformation ();  ; void initTriangleInformation ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:17708,update,updateTriangleInformation,17708,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,2,['update'],"['update', 'updateTriangleInformation']"
Deployability,"&typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ correctionId. sofa::core::ConstMultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::correctionId. ◆ cparams. const sofa::core::ConstraintParams* sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::cparams. ◆ dxId. sofa::core::MultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::dxId. ◆ offset. int sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::offset. ◆ positionFactor. const double sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::positionFactor. use the OdeSolver to get the position integration factor . ◆ velocityFactor. const double sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::velocityFactor. use the OdeSolver to get the position integration factor . ◆ vId. sofa::core::MultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::vId. ◆ xId. sofa::core::MultiVecCoordId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::xId. Constructor details. ◆ MechanicalIntegrateConstraintsVisitor(). sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::MechanicalIntegrateConstraintsVisitor ; (; const core::ConstraintParams * ; cparams, . double ; pf, . double ; vf, . sofa::core::ConstMultiVecDerivId ; correction, . sofa::core::MultiVecDerivId ; dx = sofa::core::MultiVecDerivId(sofa::core::VecDerivId::dx()), . sofa::core::MultiVecCoordId ; x = sofa::core::MultiVecCoordId(sofa::core::VecCoordId::position()), . sofa::core::MultiVecDerivId ; v = sofa::core::MultiVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html:13275,integrat,integration,13275,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,1,['integrat'],['integration']
Deployability,"&x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensity (Real d);  ; Real getDensity ();  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:9030,integrat,integrateMass,9030,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateMass']
Deployability,"&x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void initTextures ();  ; virtual void update ();  ; void setDensit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:6582,integrat,integrateMass,6582,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateMass']
Deployability,"() More...;  . Friends; class BaseNode;  BaseNode can set the context of its own objects. More...;  . Context accessors; typedef sofa::core::objectmodel::MultiLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK|BaseLink::FLAG_STRONGLINK > LinkSlaves;  ; typedef LinkSlaves::Container VecSlaves;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  . events; Methods related to Event processing . Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  . internalupdate; Methods related to tracking of data and the internal update . void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  . control; Basic control . void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:10624,update,update,10624,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['update'],['update']
Deployability,"() const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SimpleTesselatedHexaTopologicalMapping ();  Constructor. More...;  ;  ~SimpleTesselatedHexaTopologicalMapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologicalMapping;  TopologicalMapping ();  ;  ~TopologicalMapping () override;  ; bool checkTopologyInputTypes ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:13429,update,update,13429,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,1,['update'],['update']
Deployability,() function. SOFA - Topic: [SOLVED] viewAll() function. /view-port-via-hdmi-port; . /feed; ; [SOLVED] View Port via HDMI port – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] View Port via HDMI port. /5; ; SOFA - Topic: [SOLVED] View Port via HDMI port. SOFA - Topic: [SOLVED] View Port via HDMI port. /visualisation-of-2d-scenes-in-sofa; . /feed; ; [SOLVED] Visualisation of 2D scenes in SOFA – SOFA. SOFA - Topic: [SOLVED] Visualisation of 2D scenes in SOFA. /visualization-bug-with-a-softrobots-plugin-example; . /feed; ; [SOLVED] Visualization bug with a SoftRobots plugin example – SOFA. SOFA - Topic: [SOLVED] Visualization bug with a SoftRobots plugin example. /visualizing-diagonalcompliance-compliance-plugin; ; SOFA - Topic: [SOLVED] Visualizing DiagonalCompliance (Compliance Plugin). /visualizing-the-difference-between-two-models-as-a-hot-plot; ; SOFA - Topic: [SOLVED] visualizing the difference between two models as a hot plot. /visual-not-updated-using-python; . /feed; ; Visual not updated using python – SOFA. SOFA - Topic: Visual not updated using python. /visual-not-updating-when-using-with-a-glfw-window-imgui; ; SOFA - Topic: Visual not updating when using with a GLFW window (ImGUI). /visual-problem-tutorial-sofa-v-18-06; ; SOFA - Topic: [SOLVED] Visual Problem Tutorial SOFA v.18.06. /visual-studio-cant-work-with-more-than-260-character-length-variables; ; SOFA - Topic: visual studio cant work with more than 260 character-length variables. /volume-of-element; ; SOFA - Topic: Volume of element. /volumetric-mesh-generation-error; ; SOFA - Topic: [SOLVED] Volumetric Mesh Generation Error. /volumetric-mesh-generation-of-woven-t-yarn; . /page; . /2; ; SOFA - Topic: [SOLVED] Volumetric Mesh Generation of Woven T-yarn. SOFA - Topic: [SOLVED] Volumetric Mesh Generation of Woven T-yarn. /voxelization-of-meshes; ; SOFA - Topic: Voxelization of meshes. /vs-code-sofaruntime-importplugin-cannot-be-resolved; ; SOFA - Topic: [SOLVED] VS code SofaRuntime.importPlugin cannot be re,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:417795,update,updated,417795,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['update'],['updated']
Deployability,"() override;  ; void getBBox (Vec3 &minBBox, Vec3 &maxBBox);  ; void generateRandomDirections ();  ; Vec3 generateRandomPoint (const Vec3 &minBBox, const Vec3 &maxBBox);  ; bool isInside (Coord p);  ; bool testDistance (Coord p);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:15685,update,update,15685,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['update'],['update']
Deployability,(). virtual unsigned int sofa::gui::qt::LinkWidget::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented in sofa::gui::qt::QLinkSimpleEdit. ◆ readFromLink(). virtual void sofa::gui::qt::LinkWidget::readFromLink ; (; ). protectedpure virtual . The implementation of this method tells how the widget reads the value of the link. ; Implemented in sofa::gui::qt::QLinkSimpleEdit. ◆ setLink(). virtual void sofa::gui::qt::LinkWidget::setLink ; (; MyLink * ; d). inlinevirtual . ◆ setWidgetDirty [1/2]. void sofa::gui::qt::LinkWidget::setWidgetDirty ; (; ). inlineslot . You call this slot anytime you want to specify that the widget value is out of sync with the underlying link value. . ◆ setWidgetDirty [2/2]. void sofa::gui::qt::LinkWidget::setWidgetDirty ; (; bool ; b). inlineslot . ◆ sizeWidget(). virtual unsigned int sofa::gui::qt::LinkWidget::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented in sofa::gui::qt::QLinkSimpleEdit. ◆ updateLinkValue. void sofa::gui::qt::LinkWidget::updateLinkValue ; (; ). inlineslot . Checks that widget has been edited emit LinkOwnerDirty in case the name field has been modified . ◆ updateVisibility(). void sofa::gui::qt::LinkWidget::updateVisibility ; (; ). inline . ◆ updateWidgetValue. void sofa::gui::qt::LinkWidget::updateWidgetValue ; (; ). inlineslot . First checks that the widget is not currently being edited checks that the link has changed since the last time the widget has read the link value. ultimately read the link value. . ◆ WidgetDirty. void sofa::gui::qt::LinkWidget::WidgetDirty ; (; bool ; ). signal . Emitted each time setWidgetDirty is called. You can also emit it if you want to tell the widget value is out of sync with the underlying link value. . ◆ writeToLink(). virtual void sofa::gui::qt::LinkWidget::writeToLink ; (; ). protectedpure virtual . The implementation of this methods needs to tell how the widget can write its value in the link ; Implemented in sofa::gui::qt,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html:4298,update,updateLinkValue,4298,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,1,['update'],['updateLinkValue']
Deployability,"();  ; void init ();  . Variables; int AddFrameButtonSettingClass;  ; int AddRecordedCameraButtonSettingClass;  ; int StartNavigationButtonSettingClass;  ; int AttachBodyButtonSettingClass;  ; int ConstraintAttachButtonSettingClass;  ; int FixPickedParticleButtonSettingClass;  . Function Documentation. ◆ getModuleName(). const char * sofa::gui::component::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::component::getModuleVersion ; (; ). ◆ init(). SOFA_GUI_COMPONENT_API void sofa::gui::component::init ; (; ). ◆ initExternalModule(). void sofa::gui::component::initExternalModule ; (; ). Variable Documentation. ◆ AddFrameButtonSettingClass. int sofa::gui::component::AddFrameButtonSettingClass. Initial value:= core::RegisterObject(""Add a frame to a skinned model""); .add< AddFrameButtonSetting >(); .addAlias(""AddFrameButton""). ◆ AddRecordedCameraButtonSettingClass. int sofa::gui::component::AddRecordedCameraButtonSettingClass. Initial value:= core::RegisterObject(""Save Camera's View Point Button configuration""); .add< AddRecordedCameraButtonSetting >(); .addAlias(""AddRecordedCameraButton""). ◆ AttachBodyButtonSettingClass. int sofa::gui::component::AttachBodyButtonSettingClass. Initial value:= core::RegisterObject(""Attach Body Button configuration""); .add< AttachBodyButtonSetting >(); .addAlias(""AttachBodyButton""). ◆ ConstraintAttachButtonSettingClass. int sofa::gui::component::ConstraintAttachButtonSettingClass. Initial value:= core::RegisterObject(""Attach an object to the mouse using lagrangian multiplier""); .add< ConstraintAttachButtonSetting >(). ◆ FixPickedParticleButtonSettingClass. int sofa::gui::component::FixPickedParticleButtonSettingClass. Initial value:= core::RegisterObject(""Fix a picked particle in space""); .add< FixPickedParticleButtonSetting >(); .addAlias(""FixPickedParticleButton""). ◆ StartNavigationButtonSettingClass. int sofa::gui::component::StartNavigationButtonSettingClass. Initial value:= core::RegisterObject(""Start Navigation Bu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html:1708,configurat,configuration,1708,api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,1,['configurat'],['configuration']
Deployability,"(; ). protected . ◆ ~SubsetTopologicalMapping(). sofa::component::topology::mapping::SubsetTopologicalMapping::~SubsetTopologicalMapping ; (; ). overrideprotected . Function details. ◆ getFromIndex(). Index sofa::component::topology::mapping::SubsetTopologicalMapping::getFromIndex ; (; Index ; ind). overridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ getGlobIndex(). Index sofa::component::topology::mapping::SubsetTopologicalMapping::getGlobIndex ; (; Index ; ind). overridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ init(). void sofa::component::topology::mapping::SubsetTopologicalMapping::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isTheOutputTopologySubdividingTheInputOne(). bool sofa::component::topology::mapping::SubsetTopologicalMapping::isTheOutputTopologySubdividingTheInputOne ; (; ). inlineoverridevirtual . return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) ; Reimplemented from sofa::core::topology::TopologicalMapping. ◆ SOFA_CLASS(). sofa::component::topology::mapping::SubsetTopologicalMapping::SOFA_CLASS ; (; SubsetTopologicalMapping ; , . sofa::core::topology::TopologicalMapping ;  . ). ◆ updateTopologicalMappingTopDown(). void sofa::component::topology::mapping::SubsetTopologicalMapping::updateTopologicalMappingTopDown ; (; ). overridevirtual . Translates the TopologyChange objects from the source to the target. ; Translates each of the TopologyChange objects waiting in the source list so that they have a meaning and reflect the effects of the first topology changes on the second topology. ; Implements sofa::core::topology::TopologicalMapping. sofacomponenttopologymappingSubsetTopologicalMapping; Generated on Mon Nov 11 2024 03:10:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:26423,update,updateTopologicalMappingTopDown,26423,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,2,['update'],['updateTopologicalMappingTopDown']
Deployability,"(BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html:12415,update,update,12415,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,1,['update'],['update']
Deployability,"(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:10018,update,updateInternal,10018,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"(LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  ; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:2194,update,updateLinks,2194,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['update'],['updateLinks']
Deployability,"(Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  LocalMinDistance ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:21742,update,update,21742,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['update'],['update']
Deployability,"(T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  ParabolicProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mstate=nullptr);  ;  ~ParabolicProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:16596,update,update,16596,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['update'],['update']
Deployability,"(const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const InCoord &a, const InCoord &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:21286,update,update,21286,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['update'],['update']
Deployability,"(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swap() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; swapT(T t, int nestedDataSize)sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >inline; write(ofstream &out, int n, int groups, int binary) overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseVTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; ~VTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:10864,update,updateInternal,10864,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshSubsetEngine, DataTypes), Inherited)sofa::component::engine::select::MeshSubsetEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglessofa::component::engine::select::MeshSubsetEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshSubsetEngine() overridesofa::component::engine::select::MeshSubsetEngine< DataTypes >p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:14586,update,update,14586,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['update'],['update']
Deployability,"(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BackgroundSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::BackgroundSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:10270,update,updateInternal,10270,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(AbstractTransformMatrixEngine, core::DataEngine)sofa::component::engine::transform::AbstractTransformMatrixEngine; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(InvertTransformMatrixEngine, AbstractTransformMatrixEngine)sofa::component::engine::transform::InvertTransformMatrixEngine; sofa::component::engine::transform::AbstractTransformMatrixEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~AbstractTransformMatrixEngine() overridesofa::component::engine::transform::AbstractTransformMatrixEngineinlineprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~InvertTransformMatrixEngine() overridesofa::component::engine::transform::InvertTransformMatrixEngin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html:12597,update,updateAllInputsIfDirty,12597,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(AbstractTransformMatrixEngine, core::DataEngine)sofa::component::engine::transform::AbstractTransformMatrixEngine; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(RotateTransformMatrixEngine, AbstractTransformMatrixEngine)sofa::component::engine::transform::RotateTransformMatrixEngine; sofa::component::engine::transform::AbstractTransformMatrixEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~AbstractTransformMatrixEngine() overridesofa::component::engine::transform::AbstractTransformMatrixEngineinlineprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~RotateTransformMatrixEngine() overridesofa::component::engine::transform::RotateTransformMatrixEngin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html:12673,update,updateAllInputsIfDirty,12673,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop)sofa::simulation::DefaultAnimationLoop; sofa::core::behavior::BaseAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::simulation::DefaultAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateInternalData(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMapping(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; updateSimulationContext(const sofa::core::ExecParams *params, SReal dt, SReal startTime) constsofa::simulation::DefaultAnimationLoopprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html:12706,update,updateInternal,12706,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,1,['update'],['updateInternal']
Deployability,") const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RayTraceNarrowPhase ()=default;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html:12041,update,update,12041,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,1,['update'],['update']
Deployability,") override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices) override;  ; void accFromF (const core::MechanicalParams *mparams, DataVecDeriv &a, const DataVecDeriv &f) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; SReal getKineticEnergy (const core::MechanicalParams *, const DataVecDeriv &) const override;  < vMv/2 using dof->getV() override More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &) const override;  ; SReal getPotentialEnergy (const core::MechanicalParams *) const override;  Mgx. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; SReal getElementMass (Index index) const override;  Get the mass relative to the DOF at index. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:4367,integrat,integrateMass,4367,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateMass']
Deployability,"))sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; sofa::component::constraint::projective::FixedProjectiveConstraint::SOFA_CLASS(SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecBool typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedProjectiveConstraint()sofa::component::constraint::projective::Fix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:18896,update,updateLinks,18896,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['update'],['updateLinks']
Deployability,"), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::SphereForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; sphereCentersofa::component::mechanicalload::SphereForceField< DataTypes >; SphereForceField()sofa::component::mechanicalload::SphereForceField< DataTypes >protected; sphereRadiussofa::component::mechanicalload::SphereForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; stiffnesssofa::component::mechanicalload::SphereForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStiffness(const VecCoord &x)sofa::component::mechanicalload::SphereForceField< DataTypes >virtual; VecCoord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::Sin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:16788,update,updateLinks,16788,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['update'],['updateLinks']
Deployability,"), sofa::core::behavior::LinearSolver);  ; virtual void invert (Matrix &M)=0;  ; virtual void solve (Matrix &M, Vector &solution, Vector &rh)=0;  ; virtual Matrix * getSystemMatrix ()=0;  ;  Public Member Functions inherited from sofa::core::behavior::LinearSolver;  SOFA_ABSTRACT_CLASS (LinearSolver, BaseLinearSolver);  ; virtual void resetSystem ()=0;  Reset the current linear system. More...;  ; virtual void setSystemMBKMatrix (const MechanicalParams *mparams)=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool isAsyncSolver ();  Indicate if the solver update the system in parallel. More...;  ; virtual bool supportNonSymmetricSystem () const;  Returns true if the solver supports non-symmetric systems. More...;  ; virtual bool hasUpdatedMatrix ();  Indicate if the solver updated the system after the last call of setSystemMBKMatrix (should return true if isParallelSolver return false) More...;  ; virtual void updateSystemMatrix ();  This function is use for the preconditioner it must be called at each time step event if setSystemMBKMatrix is not called. More...;  ; virtual void setSystemRHVector (core::MultiVecDerivId v)=0;  Set the linear system right-hand term vector, from the values contained in the (Mechanical/Physical)State objects. More...;  ; virtual void setSystemLHVector (core::MultiVecDerivId v)=0;  ; virtual void solveSystem ()=0;  Solve the system as constructed using the previous methods. More...;  ; virtual void init_partial_solve ();  ; virtual void partial_solve (std::list< linearalgebra::BaseMatrix::Index > &, std::list< linearalgebra::BaseMatrix::Index > &, bool);  ; virtual void invertSystem ();  Invert the system, this method is optional because it's called when solveSystem() is called for the first time. More...;  ; virtual bool addMInvJt (linearalgebra::BaseMatrix *result, linearalgebra::BaseMatrix *J, SReal fact);  ; virtual bool buildComplianceMatrix (const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:1509,update,updateSystemMatrix,1509,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,1,['update'],['updateSystemMatrix']
Deployability,"). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::core::loader::MeshLoader::load ; (; ). finalvirtual . Implements sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::MeshLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::MeshLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setRotation(). void sofa::core::loader::MeshLoader::setRotation ; (; SReal ; rx, . SReal ; ry, . SReal ; rz . ). inline . ◆ setScale(). void sofa::core::loader::MeshLoader::setScale ; (; SReal ; sx, . SReal ; sy, . SReal ; sz . ). inline . ◆ setTransformation(). void sofa::core::loader::MeshLoader::setTransformation ; (; const sofa::type::Matrix4 & ; t). inline . ◆ setTranslation(). void sofa::core::loader::MeshLoader::setTranslation ; (; SReal ; dx, . SReal ; dy, . SReal ; dz . ). inline . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::MeshLoader::SOFA_ABSTRACT_CLASS ; (; MeshLoader ; , . BaseLoader ;  . ). ◆ updateElements(). void sofa::core::loader::MeshLoader::updateElements ; (; ). virtual . ◆ updateMesh(). void sofa::core::loader::MeshLoader::updateMesh ; (; ). virtual . ◆ updateNormals(). void sofa::core::loader::MeshLoader::updateNormals ; (; ). virtual . ◆ updatePoints(). void sofa::core::loader::MeshLoader::updatePoints ; (; ). virtual . sofacoreloaderMeshLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:30805,update,updateElements,30805,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,8,['update'],"['updateElements', 'updateMesh', 'updateNormals', 'updatePoints']"
Deployability,");  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:4766,update,updateInternal,4766,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['update'],['updateInternal']
Deployability,");  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TrailRenderer ();  ; void storeParticlePositions ();  ; void removeFirstElements ();  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  He",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:13905,update,update,13905,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['update'],['update']
Deployability,");  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TriangleModelInRegularGrid ();  ;  ~TriangleModelInRegularGrid ();  ;  Protected Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:17846,update,updateFromTopology,17846,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,2,['update'],"['updateFromTopology', 'updateNormals']"
Deployability,");  Remove odesolvers and mastercontroler. More...;  ; Node * getChild (const std::string &name) const;  Find a child node given its name. More...;  ; Node * getTreeNode (const std::string &name) const;  Get a descendant node given its name. More...;  ; Node * getNodeInGraph (const std::string &absolutePath) const;  Get a node in the scene graph matching the given absolute path. More...;  ; Children getChildren () const override;  Get children nodes. More...;  ; BaseContext * getRootContext () const override;  Get the root context of the graph. More...;  ; Node * setDebug (bool);  ; bool getDebug () const;  ; void printComponents ();  ; const BaseContext * getContext () const override;  Get this node context. More...;  ; BaseContext * getContext () override;  Get this node context. More...;  ; void propagateEvent (const sofa::core::ExecParams *params, sofa::core::objectmodel::Event *event) override;  Propagate an event. More...;  ; virtual void updateVisualContext ();  Update the visual context values, based on parent and local ContextObjects. More...;  ; virtual void initialize ();  Must be called after each graph modification. Do not call it directly, apply an InitVisitor instead. More...;  ; virtual void setDefaultVisualContextValue ();  Called after initialization to set the default value of the visual context. More...;  ; void setSleeping (bool val) override;  override context setSleeping to add notification. More...;  ; virtual void addListener (MutationListener *obj);  ; virtual void removeListener (MutationListener *obj);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init (const sofa::core::ExecParams *params);  Initialize the components. More...;  ; bool isInitialized () const;  ; void reinit (const sofa::core::ExecParams *params);  Apply modifications to the components. More...;  ; void draw (sofa::core::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:5404,update,updateVisualContext,5404,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['update'],['updateVisualContext']
Deployability,")sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTarget(unsigned index, const InCoord &position)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; updateTarget(unsigned index, SReal x, SReal y, SReal z) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:20146,update,updateK,20146,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['update'],['updateK']
Deployability,")sofa::component::mass::UniformMass< DataTypes >; sofa::core::behavior::Mass::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass)sofa::core::behavior::Mass< DataTypes >; ForceField< DataTypes >::SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TMassType typedefsofa::component::mass::UniformMass< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; UniformMass()sofa::component::mass::UniformMass< DataTypes >protected; updateFromTotalMass()sofa::component::mass::UniformMass< DataTypes >; updateFromVertexMass()sofa::component::mass::UniformMass< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mass::UniformMass< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mass::UniformMass< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseMass() override=defaultsofa::core::behavior::BaseMassprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~Mass() overridesofa::core::behavior::Mass< DataTypes >protected; ~SingleStateA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:22935,update,updateInternal,22935,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['update'],['updateInternal']
Deployability,")sofa::core::DataEngine; PairStateAccessor< DataTypes, DataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes))sofa::component::engine::select::NearestPointROI< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~NearestPointROI() overridesofa::component::engine::select::NearestPointROI< DataTypes >; ~PairStateAccessor() overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:15546,update,updateIfDirty,15546,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['update'],['updateIfDirty']
Deployability,")sofa::core::behavior::LinearSolver; sofa::core::behavior::BaseLinearSolver::SOFA_ABSTRACT_CLASS(BaseLinearSolver, objectmodel::BaseObject)sofa::core::behavior::BaseLinearSolver; SOFA_CLASS(SOFA_TEMPLATE2(BaseMatrixLinearSolver, Matrix, Vector), sofa::core::behavior::LinearSolver)sofa::component::linearsolver::BaseMatrixLinearSolver< Matrix, Vector >; sofa::core::behavior::LinearSolver::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(Matrix &M, Vector &solution, Vector &rh) override=0sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >pure virtual; solveSystem() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; supportNonSymmetricSystem() constsofa::core::behavior::LinearSolverinlinevirtual; ThreadManager typedefsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateSystemMatrix()sofa::core::behavior::LinearSolverinlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeFile(std::ostream &)sofa::core::behavior::LinearSolverinlinevirtual; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~LinearSolver() overridesofa::core::behavior::LinearSolverprotected; ~MatrixLinearSolver() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:18651,update,updateInternal,18651,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,3,['update'],"['updateInternal', 'updateLinks', 'updateSystemMatrix']"
Deployability,")sofa::core::collision::Contact; SOFA_CLASS(SOFA_TEMPLATE3(FrictionContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact)sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; sofa::core::collision::Contact::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tolsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; TOutputVector typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TVec1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; TVec2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected; ~ContactIdentifier()=defaultsofa::component::collision::response::contact::ContactIdentifiervirtual; ~FrictionContact() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:16146,update,updateInternal,16146,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,")sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:9923,update,updateInternal,9923,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,")sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GroupFilterYoungModulus, DataTypes), core::DataEngine)sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GroupFilterYoungModulus() overridesofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html:12810,update,update,12810,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus-members.html,5,['update'],"['update', 'updateAllInputsIfDirty', 'updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability,")sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(OdeSolver, objectmodel::BaseObject)sofa::core::behavior::OdeSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(NewmarkImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor)sofa::component::odesolver::backward::NewmarkImplicitSolver; solve(const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) overridesofa::component::odesolver::backward::NewmarkImplicitSolvervirtual; sofa::core::behavior::OdeSolver::solve(const core::ExecParams *params, SReal dt)sofa::core::behavior::OdeSolverinlinevirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OdeSolver() overridesofa::core::behavior::OdeSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:11915,update,updateInternal,11915,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,")sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt)=0sofa::core::behavior::BaseAnimationLooppure virtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html:10125,update,updateInternal,10125,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2254,patch,patchStructsofa,2254,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,1,['patch'],['patchStructsofa']
Deployability,* > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_callback. std::function<sofa::core::objectmodel::ComponentState(const DataTracker&)> sofa::core::DataTrackerCallback::m_callback. protected . ◆ m_owner. sofa::c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html:3745,update,updated,3745,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,1,['update'],['updated']
Deployability,"* > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:5513,update,updated,5513,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,15,['update'],['updated']
Deployability,"* > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:4516,update,updated,4516,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,47,['update'],['updated']
Deployability,"* > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *des",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:4173,update,updated,4173,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['update'],['updated']
Deployability,"* > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:5775,update,updated,5775,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,8,['update'],['updated']
Deployability,"* > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::gl::component::shader::OglTexture; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglTexture;  OglTexture ();  ;  ~OglTexture () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:16868,update,update,16868,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,1,['update'],['update']
Deployability,"*&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:12813,update,update,12813,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['update'],['update']
Deployability,"*alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionAlgorithm ();  ; virtual void changeInstance (Instance)=0;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html:10226,update,update,10226,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,1,['update'],['update']
Deployability,"*attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::transform::MapIndices< T >; SOFA_CLASS(SOFA_TEMPLATE(MapIndices, T), core::DataEngine)sofa::component::engine::transform::MapIndices< T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Value typedefsofa::component::engine::transform::MapIndices< T >; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::transform::MapIndices< T >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecValue typedefsofa::component::engine::transform::MapIndices< T >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MapIndices() overridesofa::component::engine::transform::MapIndices< T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html:12901,update,updateIfDirty,12901,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,1,['update'],['updateIfDirty']
Deployability,", . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). virtual . Perform dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implements sofa::core::behavior::BaseMechanicalState. ◆ addFromBaseVectorSameSize() [2/3]. SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::MechanicalObject< defaulttype::Rigid3Types >::addFromBaseVectorSameSize ; (; core::VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). virtual . Perform dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implements sofa::core::behavior::BaseMechanicalState. ◆ addFromBaseVectorSameSize() [3/3]. template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::addFromBaseVectorSameSize ; (; core::VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). overridevirtual . src and dest must have the same size. Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implements sofa::core::behavior::BaseMechanicalState. ◆ addToBaseVector(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::addToBaseVector ; (; linearalgebra::BaseVector * ; dest, . core::ConstVecId ; src, . uns",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:46543,update,updated,46543,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['update'],['updated']
Deployability,", . core::VecDerivId ; f = core::VecDerivId::force() . ). overridevirtual . Add stored external forces to F. ; Reimplemented from sofa::core::behavior::BaseMechanicalState. ◆ addBBox(). template<class DataTypes > . bool sofa::component::statecontainer::MechanicalObject< DataTypes >::addBBox ; (; SReal * ; minBBox, . SReal * ; maxBBox . ). overridevirtual . update the given bounding box, to include this ; Reimplemented from sofa::core::behavior::BaseMechanicalState. ◆ addFromBaseVectorDifferentSize() [1/3]. void sofa::component::statecontainer::MechanicalObject< defaulttype::Rigid3Types >::addFromBaseVectorDifferentSize ; (; core::VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). virtual . Perform dest[ offset + i ][j] += src[i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the MechanicalObject local vector specified by VecId dest. It will be updated to the first scalar value after the ones used by this operation when this method returns. . Implements sofa::core::behavior::BaseMechanicalState. ◆ addFromBaseVectorDifferentSize() [2/3]. SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::MechanicalObject< defaulttype::Rigid3Types >::addFromBaseVectorDifferentSize ; (; core::VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). virtual . Perform dest[ offset + i ][j] += src[i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the MechanicalObject local vector specified by VecId dest. It will be updated to the first scalar value after the ones used by this operation when this method returns. . Implements sofa::core::behavior::BaseMechanicalState. ◆ addFromBaseVectorDifferentSize() [3/3]. template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::addFromBaseVectorDifferentSize ; (; core::VecId ; dest, . const linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:43875,update,updated,43875,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['update'],['updated']
Deployability,", BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MixedInteractionConstraint (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~MixedInteractionConstraint () override;  ; virtual type::vector< std::string > getInteractionIdentifiers () override final;  ; virtual type::vector< std::string > getMixedInteractionIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  BaseInteractionConstraint ();  ;  ~BaseInteractionConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:17462,update,update,17462,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['update'],['update']
Deployability,", BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:5597,update,update,5597,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['update'],['update']
Deployability,", DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedralTensorMassForceField()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecType typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:18615,update,updateLameCoefficients,18615,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['update'],['updateLameCoefficients']
Deployability,", MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMateri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html:2703,configurat,configuration,2703,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,1,['configurat'],['configuration']
Deployability,", SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes))sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; sofa::component::constraint::projective::FixedProjectiveConstraint::SOFA_CLASS(SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecBool typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedProjectiveConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:18843,update,updateInternal,18843,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['update'],['updateInternal']
Deployability,", SOFA_TEMPLATE(core::behavior::Constraint, DataTypes))sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; sofa::core::behavior::Constraint::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Constraint, DataTypes), BaseConstraint, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::Constraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; StopperLagrangianConstraint(MechanicalState *object=nullptr)sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >protected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::Constraint< DataTypes >virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:17142,update,updateInternal,17142,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['update'],['updateInternal']
Deployability,", SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::ForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::ForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html:16770,update,updateInternal,16770,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,1,['update'],['updateInternal']
Deployability,", SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTarget(unsigned index, const InCoord &position)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; updateTarget(unsigned index, SReal x, SReal y, SReal z) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DistanceFromTargetMapping() overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >protected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:20394,update,updateTarget,20394,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,2,['update'],['updateTarget']
Deployability,", StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PositionBasedDynamicsProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; stiffnesssofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocitysofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html:17535,update,updateInternal,17535,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,1,['update'],['updateInternal']
Deployability,", [this](DataTracker& tracker){ // Increment the state counter but without changing the state. return d_componentState.getValue(); }, {&d_componentState});; A member function with the same signature - core::objectmodel::ComponentState(DataTracker&) - can also be used.; The update of the inputs is done for you before calling the callback, and they are also cleaned for you after the call. Thus there's no need to manually call updateAllInputsIfDirty() or cleanDirty() (see implementation of update() . Protected Attributes; std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> m_callback;  ; sofa::core::objectmodel::Base * m_owner {nullptr};  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions; void setCallback (std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> f);  ; void update () override;  Calls the callback when one of the data has changed. More...;  ; void setOwner (sofa::core::objectmodel::Base *owner);  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html:2232,update,update,2232,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,1,['update'],['update']
Deployability,", bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; inputssofa::core::objectmodel::DDGNodeprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; integrateMesh()sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; integrateTriangle(type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDirty() constsofa::core::objectmodel::DDGNodeinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_densitysofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:9206,integrat,integrateTriangle,9206,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['integrat'],['integrateTriangle']
Deployability,", const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:17447,update,updateInternal,17447,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,3,['update'],['updateInternal']
Deployability,", const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html:10029,update,update,10029,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,1,['update'],['update']
Deployability,", const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:10655,update,update,10655,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['update'],['update']
Deployability,", const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  WriteTopology ();  ;  ~WriteTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:13479,update,update,13479,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['update'],['update']
Deployability,", const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeVectors ();  ;  ~MergeVectors () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:13679,update,update,13679,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['update'],['update']
Deployability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(SOFA_TEMPLATE3(BarycentricStickContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact)sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; sofa::core::collision::Contact::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TOutputVector typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~BarycentricStickContact() overridesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:15660,update,updateInternal,15660,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeSurface< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeSurface() overridesofa::component::engine::generate::ExtrudeSurface< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:12961,update,updateIfDirty,12961,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,3,['update'],"['updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability,", int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(RayTraceNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::RayTraceNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html:12499,update,updateInternal,12499,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,", it produces gaps between the tetrahedra) . ◆ d_drawTetrahedra. template<class DataTypes > . Data<bool> sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::d_drawTetrahedra. protected . if true, draw the tetrahedra in the topology . ◆ d_showTetrahedraIndices. template<class DataTypes > . Data<bool> sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::d_showTetrahedraIndices. protected . Debug : view Tetrahedrons indices. . ◆ initializedCubatureTables. template<class DataTypes > . bool sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::initializedCubatureTables. protected . ◆ m_badTetraIds. template<class DataTypes > . sofa::type::vector<TetraID> sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::m_badTetraIds. protected . vector of Tetrahedron ID which do not respect ; See alsocheckTetrahedronValidity . buffer updated only by method . computeBadTetrahedron . ◆ m_container. template<class DataTypes > . TetrahedronSetTopologyContainer* sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::m_container. protected . ◆ m_intialNbPoints. template<class DataTypes > . unsigned int sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::m_intialNbPoints. protected . ◆ m_modifier. template<class DataTypes > . TetrahedronSetTopologyModifier* sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::m_modifier. protected . ◆ tetrahedronNumericalIntegration. template<class DataTypes > . NumericalIntegrationDescriptor<Real,4> sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::tetrahedronNumericalIntegration. protected . include cubature points . Constructor details. ◆ TetrahedronSetGeometryAlgorithms(). template<class DataTypes > . sofa::component::topology::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:41033,update,updated,41033,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,1,['update'],['updated']
Deployability,", sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ addFromBuffer(). virtual void sofa::core::behavior::BaseMechanicalState::addFromBuffer ; (; VecId ; dst, . const SReal * ; src, . unsigned int ; n . ). pure virtual . Add data from an external, user-allocated buffer. ; Exact element count must be provided for consistency checks. . ◆ addToBaseVector(). virtual void sofa::core::behavior::BaseMechanicalState::addToBaseVector ; (; linearalgebra::BaseVector * ; dest, . ConstVecId ; src, . unsigned int & ; offset . ). pure virtual . Add data to a global BaseVector from the state stored in a local vector. ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ applyRotation() [1/2]. virtual void sofa::core::behavior::BaseMechanicalState::applyRotation ; (; const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Rotate the current state. ; This method is optional, it is used when the user want to interactively change the position of an object using Euler angles ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ applyRotation() [2/2]. virtual void sofa::core::behavior::BaseMechanicalState::applyRotation ; (; const type::Quat< SReal > ; q). pure virtual . Rotate the current state. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:26346,update,updated,26346,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['update'],['updated']
Deployability,", std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseConstraint, BaseConstraintSet)sofa::core::behavior::BaseConstraint; sofa::core::behavior::BaseConstraintSet::SOFA_ABSTRACT_CLASS(BaseConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintSet; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda)=0sofa::core::behavior::BaseConstraintpure virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::BaseConstraintinlineprotected; ~BaseConstraintSet() overridesofa::core::behavior::BaseConstraintSetprotected; ~BaseObject() overridesofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:12011,update,updateInternal,12011,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['update'],['updateInternal']
Deployability,", unsigned int &offset) override;  Copy data to a global BaseMatrix from the state stored in a local vector. More...;  ; void addToBaseVector (linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void addFromBaseVectorSameSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void addFromBaseVectorDifferentSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; virtual type::Vec3 getTranslation () const;  ; virtual type::Vec3 getRotation () const;  ; type::Vec3 getScale () const override;  ; Integration related methods; void beginIntegration (SReal dt) override;  Called at the beginning of each integration step. More...;  ; void endIntegration (const core::ExecParams *params, SReal dt) override;  Called at the end of each integration step. More...;  ; void accumulateForce (const core::ExecParams *params, core::VecDerivId f=core::VecDerivId::force()) override;  Add stored external forces to F. More...;  ; void vAvail (const core::ExecParams *params, core::VecCoordId &v) override;  Increment the index of the given VecCoordId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAvail (const core::ExecParams *params, core::VecDerivId &v) override;  Increment the index of the given VecDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &properties={}) override;  Increment the index of the given MatrixDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecDerivId v, const core::VecIdProperties &properties={}) override;  Allo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:13813,integrat,integration,13813,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['integrat'],['integration']
Deployability,", unsigned int > &edgeCount, PointPair &edge);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MeshBoundaryROI ();  ;  ~MeshBoundaryROI () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:13903,update,update,13903,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['update'],['update']
Deployability,- Topic: [SOLVED] Documents of classes and functions. /does-dir-notfound-bad; ; SOFA - Topic: [SOLVED] does DIR-NOTFOUND bad?. /does-sofa-have-intention-of-developing-mobile-application; . /feed; ; [SOLVED] Does Sofa have intention of developing mobile application? – SOFA. SOFA - Topic: [SOLVED] Does Sofa have intention of developing mobile application?. /doubts-about-how-forcefield-and-mapping-interact; ; SOFA - Topic: Doubts about how ForceField and mapping interact. /doubts-complie-sofarobots-and-sofapython3; ; SOFA - Topic: Doubts: Complie SofaRobots and Sofapython3. /do-you-know-robot-sophia; ; SOFA - Topic: Do you know Robot Sophia?. /dropping-a-cell-into-a-nucleus; ; SOFA - Topic: dropping a cell into a nucleus. /duplicated-components-in-xml-export; ; SOFA - Topic: [SOLVED] Duplicated components in xml export. /during_downloading_sources; ; SOFA - Topic: [SOLVED] during_downloading_sources. /during-installation-of-sofa-in-cmke-gui-i-have-got-following-configuration-error; ; SOFA - Topic: During installation of sofa in Cmke-gui I have got following Configuration error. /easiest-way-from-stl-to-vtk; . /embed; ; SOFA - Topic: [SOLVED] Easiest way from STL to VTK. SOFA - Topic: [SOLVED] Easiest way from STL to VTK. /eigen-cmake-error; ; SOFA - Topic: Eigen CMake Error. /elastic-behaviour-and-tetrahedronfemforcefield; . /feed; ; [SOLVED] Elastic behaviour and TetrahedronFEMForceField – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /3; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /6; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /7; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /9; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /elasticity-measurement; ; SOFA - Topic: Elasticity measurement. /elastoplastic-deformation; ; SOFA - Topic: [SOLVED] ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:290423,install,installation-of-sofa-in-cmke-gui-i-have-got-following-configuration-error,290423,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['install'],"['installation', 'installation-of-sofa-in-cmke-gui-i-have-got-following-configuration-error']"
Deployability,"-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MergeROIs, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html:2699,update,update,2699,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,1,['update'],['update']
Deployability,-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8706,release,released,8706,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,"-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ computeContinuousBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::computeContinuousBoundingTree ; (; SReal ; , . int ; maxDepth = 0 . ). overridevirtual . Create or update the bounding volume hierarchy, accounting for motions within the given timestep. ; Default to computeBoundingTree(). ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [1/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; , . sofa::Index ;  . ). overridevirtual . Render an collision element. ; Reimplemented from sofa::core::CollisionModel. ◆ draw() [2/2]. template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getCollisionTopology(). template<class TDataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getCollisionTopology ; (; ). inlineoverridevirtual . BaseMeshTopology associated to the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:28291,update,update,28291,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['update'],['update']
Deployability,"-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectResponse(). void sofa::component::odesolver::forward::EulerExplicitSolver::projectResponse ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; vecId . ). staticprotected . Apply projective constraints, such as FixedProjectiveConstraint. . ◆ SOFA_CLASS(). sofa::component::odesolver::forward::EulerExplicitSolver::SOFA_CLASS ; (; EulerExplicitSolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::EulerExplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. ◆ solveConstraints(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveConstraints ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; acc . ). staticprotected . ◆ solveSystem(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveSystem ; (; core::MultiVecDerivId ; solution, . core::MultiVecDerivId ; rhs . ); const. protected . ◆ updateState(). void sofa::component::odesolver::forward::EulerExplicitSolver::updateState ; (; sofa::simulation::common::VectorOperations * ; vop, . sofa::simulation::common::MechanicalOperations * ; mop, . sofa::core::MultiVecCoordId ; xResult, . sofa::core::MultiVecDerivId ; vResult, . const sofa::core::behavior::MultiVecDeriv & ; acc, . SReal ; dt . ); const. protected . Update state variable (new position and velocity) based on the computed acceleration The update takes constraints into account . sofacomponentodesolverforwardEulerExplicitSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:21027,update,updateState,21027,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,3,['update'],"['update', 'updateState']"
Deployability,-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8779,release,released,8779,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8666,release,released,8666,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,"-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /install-wants-administrative-privileges; ; SOFA - Topic: [SOLVED] Install wants administrative privileges. /interaction-with-geomagic-touch-using-sofapython3; ; SOFA - Topic: Interaction with Geomagic Touch using SofaPython3. /interactiverecorded-camera; . /feed; ; [SOLVED] Interactive/Recorded Camera – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /4; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /interactive-training-system-for-interventional-electrocardiology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:334674,install,installing-cgal-plugin,334674,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['installing-cgal-plugin']
Deployability,"-simulation-tree; ; SOFA - Topic: [SOLVED] init and cleanup methods in simulation tree. /initialize-and-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /install-wants-administrative-privileges; ; SOFA - Topic: [SOLVED] Install wants administrative privileges. /interaction-with-geomagic-touch-using-sofapython3; ; SOFA - Topic: Interaction with Geomagic Touch using SofaPython3. /interactiverecorded-camera; . /feed; ; [SOLVED] Interactive/Recorded Camera – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /4; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. SOFA - Topic: ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:334542,install,install-additional-libraries-for-visual-sudio-,334542,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['install-additional-libraries-for-visual-sudio-']
Deployability,-to-make-sofa-17-06-no-target-specified; ; SOFA - Topic: [SOLVED] Unable to make Sofa 17.06: No target specified. /undefined-reference-to-boostprogram_optionsabstrac_variables_mapoperator; ; SOFA - Topic: [SOLVED] undefined reference to 'boost::program_options::abstrac_variables_map::operator'. /unit-of-young-modulus-in-tetrahedronfemforcefield-and-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Unit of Young Modulus in TetrahedronFEMForceField and SurfacePressureConstraint. /units-of-simulation; . /feed; ; [SOLVED] Units of simulation – SOFA. SOFA - Topic: [SOLVED] Units of simulation. /units-por-pressure-at-fingercontroller-py; ; SOFA - Topic: [SOLVED] Units por pressure at fingerController.py. /upcoming-interesting-call-for-papers; ; SOFA - Topic: Upcoming interesting call for papers!. /update-an-engine-at-every-step; . /feed; ; [SOLVED] Update an engine at every step – SOFA. SOFA - Topic: [SOLVED] Update an engine at every step. /update-parameters-during-simulation; ; SOFA - Topic: [SOLVED] Update parameters during simulation. /usage-of-basedata-and-singlelink; ; SOFA - Topic: [SOLVED] usage of BaseData and SingleLink. /use_sofa_in_batch_mode; ; SOFA - Topic: [SOLVED] use_SOFA_in_batch_mode. /use-eigensparsematrix-in-sofapython3; ; SOFA - Topic: [SOLVED] Use Eigen::SparseMatrix in SofaPython3. /use-geomagic-plugin-with-sofa-binaries; ; SOFA - Topic: [SOLVED] Use Geomagic plugin with SOFA binaries. /useqt-in-plugin; ; SOFA - Topic: [SOLVED] UseQt in Plugin. /use-sofa-framework-in-unreal-engine; ; SOFA - Topic: Use Sofa-framework in Unreal Engine. /using-2-phantom-omni; ; SOFA - Topic: Using 2 Phantom Omni. /using-a-novint-falcon-with-sofa-on-a-64-bits-architecture; ; SOFA - Topic: [SOLVED] Using a Novint Falcon with SOFA on a 64 bits architecture. /using-beamadapter-and-interventional-controller; ; SOFA - Topic: [SOLVED] Using BeamAdapter and Interventional controller. /using-beams-when-modeling-the-vessels-as-a-mechanical-structure; ; SOFA - Topic: [SOLVED] ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:412009,update,update-parameters-during-simulation,412009,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['update'],['update-parameters-during-simulation']
Deployability,-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin install CMake. /snake0-vtu-not-found-in-modelorderreduction; ; SOFA - Topic: snake0.vtu not found in ModelOrderReduction. /sofa_python-plugin-in-windows; ; SOFA - Topic: [SOLVED] SOFA_Python Plugin in Windows. /sofa_scenecreat; ; SOFA - Topic: [SOLVED] SOFA_SceneCreat. /sofa-20-06-is-only-partly-linked; ; SOFA - Topic: [SOLVED] Sofa 20.06 is only partly linked. /sofa-as-physical-engine-problem; ; SOFA - Topic: [SOLVED] Sofa as physical engine problem. /sofabasetopology-h-no-such-file-or-directory; ; SOFA - Topic: [SOLVED] SofaBaseTopology/*.h: No such file or directory. /sofa-beginning; ; SOFA - Topic: SOFA beginning. /sofa-binaries-v19-06-missing-library-libicui18n-so-55; ; SOFA - Topic: Sofa binaries v19.06 : Missing library libicui18n.so.55. /sofa-binary-with-python-env; ; SOFA - Topic: [SOLVED] Sofa Binary with python env. /sofa-build-error-in-windows-10-x64-vs-2019; ; SOFA - Topic: [SOLVED] Sofa Build Error in Windows 10 x64 VS 2019. /sofa-build-failed-v,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:388000,install,install-cmake,388000,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['install'],"['install', 'install-cmake']"
Deployability,". Coord ; Q, . Real ; contactDistance, . int ; m1, . int ; m2, . long ; id = 0, . PersistentID ; localid = 0 . ). ◆ addContact() [3/3]. template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::addContact ; (; SReal ; mu, . Deriv ; norm, . Real ; contactDistance, . int ; m1, . int ; m2, . long ; id = 0, . PersistentID ; localid = 0 . ). ◆ buildConstraintMatrix(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::buildConstraintMatrix ; (; const core::ConstraintParams * ; cParams, . DataMatrixDeriv & ; c1, . DataMatrixDeriv & ; c2, . unsigned int & ; cIndex, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ). overridevirtual . Construct the Jacobian Matrix; Parameters. c1and c2 are the results constraint sparse matrix ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; x1and x2 are the position vectors used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::PairInteractionConstraint< DataTypes >. ◆ clear(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getConstraintInfo(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:25632,update,update,25632,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['update'],['update']
Deployability,". Data<SReal> sofa::component::odesolver::forward::DampVelocitySolver::d_threshold. Threshold under which the velocities are canceled. . ◆ rate. sofa::core::objectmodel::RenamedData<SReal> sofa::component::odesolver::forward::DampVelocitySolver::rate. ◆ threshold. sofa::core::objectmodel::RenamedData<SReal> sofa::component::odesolver::forward::DampVelocitySolver::threshold. Constructor details. ◆ DampVelocitySolver(). sofa::component::odesolver::forward::DampVelocitySolver::DampVelocitySolver ; (; ). protected . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::forward::DampVelocitySolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::forward::DampVelocitySolver::getSolutionIntegrationFactor ; (; int ; ); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS(). sofa::component::odesolver::forward::DampVelocitySolver::SOFA_CLASS ; (; DampVelocitySolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::DampVelocitySolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverforwardDampVelocitySolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html:16066,integrat,integration,16066,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,1,['integrat'],['integration']
Deployability,". Link to be set to the topology container in the component graph. . ◆ m_topology. template<class DataTypes > . core::topology::BaseMeshTopology* sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::m_topology. protected . ◆ myMaterial. template<class DataTypes > . material::HyperelasticMaterial<DataTypes>* sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::myMaterial. protected . the array that describes the complete material energy and its derivatives . ◆ myposition. template<class DataTypes > . VecCoord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::myposition. protected . ◆ tetrahedronInfo. template<class DataTypes > . core::topology::TetrahedronData<tetrahedronRestInfoVector> sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::tetrahedronInfo. protected . Internal tetrahedron data. . ◆ updateMatrix. template<class DataTypes > . bool sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::updateMatrix. protected . the initial positions of the points . Constructor details. ◆ StandardTetrahedralFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::StandardTetrahedralFEMForceField. protected . ◆ ~StandardTetrahedralFEMForceField(). template<class DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::~StandardTetrahedralFEMForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html:23926,update,updateMatrix,23926,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,1,['update'],['updateMatrix']
Deployability,". More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_symplectic. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_symplectic. If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (standard Euler, less robust). . ◆ d_threadSafeVisitor. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_threadSafeVisitor. If true, do not use realloc and free visitors in fwdInteractionForceField. . ◆ l_linearSolver. SingleLink<EulerExplicitSolver, core::behavior::LinearSolver, BaseLink::FLAG_STRONGLINK> sofa::component::odesolver::forward::EulerExplicitSolver::l_linearSolver. Constructor details. ◆ EulerExplicitSolver(). sofa::component::odesolver::forward::EulerExplicitSolver::EulerExplicitSolver ; (; ). protected . Function details. ◆ addSeparateGravity(). void sofa::component::odesolver::forward::EulerExplicitSolver::addSeparateGravity ; (; sofa::simulation::common::MechanicalOperations * ; mop, . SReal ; dt, . core::MultiVecDerivId ; v . ). staticprotected . Gravity times time step size is added to the velocity for some masses v += g * dt . ◆ assembleSystemMatrix(). void sofa::component::odesolver::forward::EulerExplicitSolver::assembleSystemM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:17006,update,updated,17006,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['update'],['updated']
Deployability,". More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  AddFrameButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:9893,update,update,9893,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,1,['update'],['update']
Deployability,". More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  IndexValueMapper ();  ;  ~IndexValueMapper () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:13053,update,update,13053,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['update'],['update']
Deployability,". More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshSubsetEngine ();  ;  ~MeshSubsetEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:14165,update,update,14165,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['update'],['update']
Deployability,". More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SmoothMeshEngine ();  ;  ~SmoothMeshEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:14545,update,update,14545,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['update'],['update']
Deployability,". More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_handleEventTriggersUpdate. Data< bool > sofa::component::controller::Controller::d_handleEventTriggersUpdate. protected . Event handling frequency controls the controller update frequency. . ◆ handleEventTriggersUpdate. sofa::core::objectmodel::RenamedData< bool > sofa::component::controller::Controller::handleEventTriggersUpdate. protected . Constructor details. ◆ Controller(). sofa::component::controller::Controller::Controller ; (; ). protected . Default constructor. . ◆ ~Controller(). sofa::component::controller::Controller::~Controller ; (; ). overrideprotected . Destructor. . Function details. ◆ handleEvent(). void sofa::component::controller::Controller::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ onBeginAnimationStep(). virtual void sofa::component::controller::Controller::onBeginAnimationStep ; (; const double ; ). inlinevirtual . Begin Animation event callback. ; Reimplemented in sofa::component::controller::MechanicalStateController< DataTypes >. ◆ onEndAnimationStep(). virtual void sofa::component::controller::Controller::onEnd",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:14634,update,update,14634,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,1,['update'],['update']
Deployability,". More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeBoundingTree (int maxDepth=0)=0;  Create or update the bounding volume hierarchy. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren (Index) const;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren (Index) const;  Return the list (as a pair of iterators) of external children of an element. More...;  ; virtual bool isLeaf (Index) const;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; virtual void draw (const core::visual::VisualParams *, Index);  Render an collision element. More...;  ; void draw (const core::visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:7235,update,update,7235,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['update'],['update']
Deployability,". More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TopologyBoundingTrasher ();  ;  ~TopologyBoundingTrasher () override;  ; void filterElementsToRemove ();  ; void removeElements ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:12589,update,update,12589,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['update'],['update']
Deployability,". More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:3194,update,updateVisual,3194,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,2,['update'],"['update', 'updateVisual']"
Deployability,". More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; bool inROI (const PointID &index) const;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:3241,update,updateAllInputsIfDirty,3241,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['update'],['updateAllInputsIfDirty']
Deployability,". More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_barycentricPositions. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_barycentricPositions. Output : Barycentric positions of the mapped points. . ◆ d_bComputeLinearInterpolation. template<class DataTypes > . Data<bool> sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_bComputeLinearInterpolation. if true, computes a linear interpolation (debug) . ◆ d_imputMeshName. template<class DataTypes > . core::objectmodel::lifecycle::RemovedData sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_imputMeshName. Initial value:{this, ""v20.12"", ""v22.12"", ""InputMeshName"",; ""Input data 'InputMeshName' changed for 'topology', please update your scene""; ""(see PR#1487)"" }. ◆ d_inputPositions. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_inputPositions. Initial positions of the master points. . ◆ d_interpolationIndices. template<class DataTypes > . Data< sofa::type::vector<sofa::type::vector< sofa::Index > > > sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_interpolationIndices. Indices of a linear interpolation. . ◆ d_interpolationValues. template<class DataTypes > . Data< sofa::type::vector<sofa::type::vector< Real > > > sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_interpolationValues. Values of a linear interpolation. . ◆ d_mappedPointPositions. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >::d_mappedPointPositions. Initial positions of the points to be mapped. . ◆ d_tableElements",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:18474,update,update,18474,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['update'],['update']
Deployability,". Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ getPotentialEnergy() [5/5]. SReal sofa::component::mass::DiagonalMass< Rigid2Types >::getPotentialEnergy ; (; const MechanicalParams * ; mparams, . const DataVecCoord & ; x . ); const. virtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ getTotalMass() [1/2]. template<class DataTypes , class GeometricalTypes > . const DiagonalMass< DataTypes, GeometricalTypes >::Real & sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::getTotalMass. virtual . ◆ getTotalMass() [2/2]. template<class DataTypes , class GeometricalTypes = DataTypes> . template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . SReal sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::getTotalMass ; (; ); const. inline . Method to update See alsod_vertexMass when a new Triangle is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_vertexMass when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass when a new Hexahedron is created. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:45302,update,update,45302,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability,". VecDerivId ; f = VecDerivId::force() . ). inlinevirtual . Add stored external forces to F. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ addBBox(). virtual bool sofa::core::behavior::BaseMechanicalState::addBBox ; (; SReal * ; , . SReal * ;  . ). inlinevirtual . Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ addFromBaseVectorDifferentSize(). virtual void sofa::core::behavior::BaseMechanicalState::addFromBaseVectorDifferentSize ; (; VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). pure virtual . Perform dest[ offset + i ][j] += src[i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the MechanicalObject local vector specified by VecId dest. It will be updated to the first scalar value after the ones used by this operation when this method returns. . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ addFromBaseVectorSameSize(). virtual void sofa::core::behavior::BaseMechanicalState::addFromBaseVectorSameSize ; (; VecId ; dest, . const linearalgebra::BaseVector * ; src, . unsigned int & ; offset . ). pure virtual . Perform dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implemented in sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:24299,update,updated,24299,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['update'],['updated']
Deployability,". inline . ◆ setNx(). void sofa::component::topology::container::constant::CubeTopology::setNx ; (; int ; n). inline . ◆ setNy(). void sofa::component::topology::container::constant::CubeTopology::setNy ; (; int ; n). inline . ◆ setNz(). void sofa::component::topology::container::constant::CubeTopology::setNz ; (; int ; n). inline . ◆ setP0(). void sofa::component::topology::container::constant::CubeTopology::setP0 ; (; const Vec3 & ; val). inline . ◆ setPos(). void sofa::component::topology::container::constant::CubeTopology::setPos ; (; SReal ; xmin, . SReal ; xmax, . SReal ; ymin, . SReal ; ymax, . SReal ; zmin, . SReal ; zmax . ). ◆ setSize() [1/2]. void sofa::component::topology::container::constant::CubeTopology::setSize ; (; ). protectedvirtual . ◆ setSize() [2/2]. void sofa::component::topology::container::constant::CubeTopology::setSize ; (; int ; nx, . int ; ny, . int ; nz . ). ◆ setSplitNormals(). void sofa::component::topology::container::constant::CubeTopology::setSplitNormals ; (; bool ; b). inline . ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). sofa::component::topology::container::constant::CubeTopology::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). ◆ SOFA_CLASS(). sofa::component::topology::container::constant::CubeTopology::SOFA_CLASS ; (; CubeTopology ; , . MeshTopology ;  . ). ◆ updateEdges(). void sofa::component::topology::container::constant::CubeTopology::updateEdges ; (; ). protected . ◆ updatePoints(). void sofa::component::topology::container::constant::CubeTopology::updatePoints ; (; ). protected . ◆ updateQuads(). void sofa::component::topology::container::constant::CubeTopology::updateQuads ; (; ). protected . Enum details. ◆ Plane. enum sofa::component::topology::container::constant::CubeTopology::Plane. EnumeratorPLANE_UNKNOWN ; PLANE_X0 ; PLANE_X1 ; PLANE_Y0 ; PLANE_Y1 ; PLANE_Z0 ; PLANE_Z1 . sofacomponenttopologycontainerconstantCubeTopology; Generated on Mon Nov 11 2024 03:10:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:47006,update,updateEdges,47006,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,6,['update'],"['updateEdges', 'updatePoints', 'updateQuads']"
Deployability,". template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::generateRigid. protected . generates the RigidMass from the mesh integral . ◆ GetCustomTemplateName(). template<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class MassType > . sofa::component::engine::gen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21508,integrat,integrateMesh,21508,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateMesh']
Deployability,". template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::applyEdgeMassCreation ; (; Index ; edgeIndex, . MassType & ; EdgeMass, . const core::topology::BaseMeshTopology::Edge & ; , . const sofa::type::vector< Index > & ; , . const sofa::type::vector< SReal > & ;  . ). protected . Method to update See alsod_vertexMass using mass matrix coefficient when a new Triangle is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Triangle is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TRIANGLESREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Quad is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Quad is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when QUADSREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Tetrahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Tetrahedron is removed. Will be set as callback in the PointData . d_vertexMass to update the mass vector when TETRAHEDRAREMOVED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a new Hexahedron is created. Will be set as callback in the PointData . d_vertexMass to update the mass vector when HEXAHEDRAADDED event is fired. Method to update . d_vertexMass using mass matrix coefficient when a Hexahedron is removed. Will be set as callback in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:38517,update,update,38517,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['update'],['update']
Deployability,". ◆ RootNodeChanged. void sofa::gui::qt::QSofaListView::RootNodeChanged ; (; sofa::simulation::Node * ; newroot, . const char * ; newpath . ). signal . ◆ RunSofaDoubleClicked. void sofa::gui::qt::QSofaListView::RunSofaDoubleClicked ; (; QTreeWidgetItem * ; item, . int ; index . ). protectedslot . ◆ RunSofaRightClicked. void sofa::gui::qt::QSofaListView::RunSofaRightClicked ; (; const QPoint & ; point). protectedslot . ◆ SaveNode. void sofa::gui::qt::QSofaListView::SaveNode ; (; ). protectedslot . ◆ setPropertyWidget(). void sofa::gui::qt::QSofaListView::setPropertyWidget ; (; QDisplayPropertyWidget * ; propertyWid). inline . ◆ setRoot(). void sofa::gui::qt::QSofaListView::setRoot ; (; sofa::simulation::Node * ; root). ◆ transformObject(). void sofa::gui::qt::QSofaListView::transformObject ; (; sofa::simulation::Node * ; node, . double ; dx, . double ; dy, . double ; dz, . double ; rx, . double ; ry, . double ; rz, . double ; scale . ). protecteddelete . ◆ update(). void sofa::gui::qt::QSofaListView::update ; (; ). Updates the view so it is synchronized with the simulation graph. The view can be visually de-synchronized with the simulation graph. This happens when the view is ""frozen"" for performance reason. In that case, use isDirty to get current view state or the dirtynessChanged() signal. To resynchronize the view call the update method. . ◆ Updated. void sofa::gui::qt::QSofaListView::Updated ; (; ). signal . ◆ updateMatchingObjectmodel [1/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item). protectedslot . ◆ updateMatchingObjectmodel [2/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item, . int ;  . ). protectedslot . ◆ UpdateOpenedDialogs. void sofa::gui::qt::QSofaListView::UpdateOpenedDialogs ; (; ). slot . ◆ WakeUpNode. void sofa::gui::qt::QSofaListView::WakeUpNode ; (; ). protectedslot . sofaguiqtQSofaListView; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:11527,update,update,11527,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,6,['update'],"['update', 'updateMatchingObjectmodel']"
Deployability,".. > >;  ; class  TClass;  ; class  HasGetCustomTemplateName;  ; class  HasGetCustomClassName;  ; class  HasName;  ; class  HasDataTypeInfo;  ; class  HasGetDefaultTemplateName;  ; class  HasDeprecatedTemplateName;  ; class  HasDeprecatedShortName;  ; class  HasDeprecatedClassName;  ; class  BaseClassNameHelper;  ; class  BaseContext;  Base class for Context classes, storing shared variables and parameters. More...;  ; class  BaseData;  Abstract base class for Data. More...;  ; class  WriteAccessWithRawPtr;  ; class  BaseLink;  Abstract base class for all links in the scene grapn, independently of their type. More...;  ; class  BaseNode;  Base class for simulation nodes. More...;  ; class  BaseObject;  Base class for simulation components. More...;  ; class  BaseObjectDescription;  Base Interface for classes containing the description of an object, used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is us",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:2237,configurat,configuration,2237,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['configurat'],['configuration']
Deployability,"...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:9507,update,updateInternal,9507,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,1,['update'],['updateInternal']
Deployability,"...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< TDataTypes > * beginEdit ();  ; void endEdit ();  ; const type::vector< TDataTypes > & getValue () const;  ; void setValue (const type::vector< TDataTypes > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:2438,update,update,2438,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['update'],['update']
Deployability,"...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBuffer ();  ; void updateQuadsIndicesBuffer ();  ;  Public Member Functions inherited from sofa::component::visual::VisualModelImpl;  SOFA_CLASS2 (VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; bool hasOpaque ();  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void drawShadow (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);  ; void flipFaces ();  ; void setFilename (std::string s);  ; std::string getFilename ();  ; voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:9010,update,updateBuffers,9010,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,10,['update'],"['updateBuffers', 'updateEdgesIndicesBuffer', 'updateQuadsIndicesBuffer', 'updateTrianglesIndicesBuffer', 'updateVertexBuffer']"
Deployability,"...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _higher_mstate. core::behavior::MechanicalState<defaulttype::Vec3Types>* sofa::component::collision::geometry::TriangleModelInRegularGrid::_higher_mstate. ◆ _higher_topo. sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TriangleModelInRegularGrid::_higher_topo. ◆ _topology. sofa::core::topology::BaseMeshTopology* sofa::component::collision::geometry::TriangleModelInRegularGrid::_topology. Constructor details. ◆ TriangleModelInRegularGrid(). sofa::component::collision::geometry::TriangleModelInRegularGrid::TriangleModelInRegularGrid ; (; ). protected . ◆ ~TriangleModelInRegularGrid(). sofa::component::collision::geometry::TriangleModelInRegularGrid::~TriangleModelInRegularGrid ; (; ). protected . Function details. ◆ computeBoundingTree(). void sofa::component::collision::geometry::TriangleModelInRegularGrid::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Create or update the bounding volume hierarchy. ; Implements sofa::core::CollisionModel. ◆ init(). void sofa::component::collision::geometry::TriangleModelInRegularGrid::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::geometry::TriangleModelInRegularGrid::SOFA_CLASS ; (; TriangleModelInRegularGrid ; , . TriangleCollisionModel< sofa::defaulttype::Vec3Types > ;  . ). sofacomponentcollisiongeometryTriangleModelInRegularGrid; Generated on Mon Nov 11 2024 02:25:39 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:24710,update,update,24710,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['update'],['update']
Deployability,"...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::helper::TriangleOctreeRoot;  TriangleOctreeRoot ();  ;  ~TriangleOctreeRoot ();  ; void buildOctree ();  ; void buildOctree (const SeqTriangles *triangles, const VecCoord *pos);  . Protected Member Functions;  TriangleOctreeModel ();  ;  Protected Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:18958,update,update,18958,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,1,['update'],['update']
Deployability,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:16387,update,update,16387,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,4,['update'],['update']
Deployability,"...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2494,update,updateVisibility,2494,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,1,['update'],['updateVisibility']
Deployability,"...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMatrixProjectionMethod (const PairMechanicalStates &states);  ;  BaseMatrixProjectionMethod ()=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool is",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html:10956,update,update,10956,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,1,['update'],['update']
Deployability,"...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Camera ();  ;  ~Camera () override;  ;  Protected Member Functions inherited from sofa::component::visual::BaseCamera; void updateOutputData ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:12858,update,updateOutputData,12858,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,2,['update'],"['update', 'updateOutputData']"
Deployability,"...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DampVelocitySolver ();  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html:11584,update,update,11584,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,1,['update'],['update']
Deployability,"...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html:9526,update,update,9526,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,1,['update'],['update']
Deployability,"...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html:3335,update,updateVisual,3335,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,1,['update'],['updateVisual']
Deployability,"..;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:9601,update,updatePath,9601,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,2,['update'],"['update', 'updatePath']"
Deployability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  StartNavigationButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html:9911,update,update,9911,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,1,['update'],['update']
Deployability,"..;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OrderIndependentTransparencyManager ();  ;  ~OrderIndependentTransparencyManager () override;  ; void drawOpaques (core::visual::VisualParams *vp);  ; void drawTransparents (core::visual::VisualParams *vp, sofa::gl::GLSLShader *oitShader);  ;  Protected Member Functions inherited from sofa::core::visual::VisualManager;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:13705,update,update,13705,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,1,['update'],['update']
Deployability,"..;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairInteractionConstraint (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionConstraint () override;  ; virtual type::vector< std::string > getInteractionIdentifiers () override final;  ; virtual type::vector< std::string > getPairInteractionIdentifiers ();  ; void storeLambda (const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  BaseInteractionConstraint ();  ;  ~BaseInteractionConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:17674,update,update,17674,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,1,['update'],['update']
Deployability,"..;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html:11245,update,update,11245,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,1,['update'],['update']
Deployability,".;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:6142,update,updateMesh,6142,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,4,['update'],"['updateElements', 'updateMesh', 'updateNormals', 'updatePoints']"
Deployability,".;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (DataDisplay, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:5319,update,updateVisual,5319,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,2,['update'],"['update', 'updateVisual']"
Deployability,".;  ; bool isTheOutputTopologySubdividingTheInputOne () override;  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; Index getGlobIndex (Index ind) override;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:6425,update,updateTopologicalMappingBottomUp,6425,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['update'],['updateTopologicalMappingBottomUp']
Deployability,".;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Indices2ValuesMapper ();  ;  ~Indices2ValuesMapper () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html:13104,update,update,13104,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,1,['update'],['update']
Deployability,".;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html:11496,update,update,11496,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,1,['update'],['update']
Deployability,".;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Gravity ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ContextObject;  ContextObject ();  ;  ~ContextObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html:10683,update,update,10683,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,1,['update'],['update']
Deployability,".;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool canCollideWithElement (sofa::Index index, CollisionModel *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; Deriv getNormal (sofa::Index index);  ; const Deriv & velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void updateNormals ();  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. Mor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:6369,update,updateNormals,6369,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['update'],['updateNormals']
Deployability,"/changing-topology-during-runtime; ; SOFA - Topic: Changing topology during runtime. /choosing-what-parts-of-a-robot-to-be-elastic; ; SOFA - Topic: Choosing what parts of a robot to be elastic. /cimg-error-by-adding-flexible-plugin; ; SOFA - Topic: [SOLVED] CImg error by adding flexible plugin. /citing-sofa-framework; ; SOFA - Topic: Citing SOFA Framework. /clang-error-while-compiling-sofa; ; SOFA - Topic: [SOLVED] Clang error while compiling Sofa. /clarification-of-mapping-gui; ; SOFA - Topic: Clarification of mapping GUI. /clarify-feasibility-in-sofa-dry-fabric-handling; . /feed; ; [SOLVED] Clarify feasibility in SOFA – dry fabric handling – SOFA. SOFA - Topic: [SOLVED] Clarify feasibility in SOFA – dry fabric handling. /cloning_to_make_pull_request; ; SOFA - Topic: [SOLVED] cloning_to_make_pull_request. /cloth-on-a-table-with-collision-and-friction; ; SOFA - Topic: Cloth on a table with Collision and friction. /cmake-based-installer-for-sofa-framework; . /feed; ; CMake-based installer for SOFA framework – SOFA. /page; . /2; ; SOFA - Topic: CMake-based installer for SOFA framework. /5; ; SOFA - Topic: CMake-based installer for SOFA framework. SOFA - Topic: CMake-based installer for SOFA framework. /cmake-cant-find-boost-library; ; SOFA - Topic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in buil",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:274194,install,installer,274194,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['installer']
Deployability,/feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisplay pointData C++ – SOFA. SOFA - Topic Tag: DataDisplay pointData C++. /debian-package-cmake; . /feed; ; debian package cmake – SOFA. SOFA - Topic Tag: debian package cmake. /debug; . /feed; ; debug – SOFA. SOFA - Topic Tag: debug. /default-shader; . /feed; ; default shader – SOFA. SOFA - Topic Tag: default shader. /deformable; . /feed; ; deformable – SOFA. SOFA - Topic Tag: deformable. /deformable-object; . /feed; ; Deformable object – SOFA. SOFA - Topic T,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438888,integrat,integration,438888,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Deployability,/feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: rigif. /robots; . /feed; ; Robots – SOFA. SOFA - Topic Tag: Robots. /r,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:468051,release,release,468051,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['release']
Deployability,06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 2022: register now!. /sofa-week-2023-register-now; ; SOFA – SOFA Week 2023: register now!. /sofa-week-2024-registration-is-open; ; SOFA – SOFA Week 2024: registration is open!. /soft-robotics-summer-school-in-lille; ; SOFA – Soft-Robotics Summer School in Lille. /softrobots-inverse-plugin-open-source-release; ; SOFA – SoftRobots.Inverse plugin open-source release!. /spin-offs-from-sofa-against-covid-19; ; SOFA – Spin-offs from SOFA against Covid-19. /stc11-join-us-in-june-to-design-the-sofa-roadmap; ; SOFA – STC#11: join us in June to design the SOFA roadmap!. /stc13-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA – STC#13: co-design the SOFA roadmap!. /stc15-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA – STC#15: jo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:9728,release,released,9728,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,"1/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::PolynomialSpringsForceField. protected . ◆ PolynomialSpringsForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::PolynomialSpringsForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2 . ). protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; data_f1, . DataVecDeriv & ; data_f2, . const DataVecCoord & ; data_p1, . const DataVecCoord & ; data_p2, . const DataVecDeriv & ; data_v1, . const DataVecDeriv & ; data_v2 . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:28793,integrat,integrated,28793,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['integrat'],['integrated']
Deployability,12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 2022: register now!. /sofa-week-2023-register-now; ; SOFA – SOFA Week 2023: register now!. /sofa-week-2024-registration-is-open; ; SOFA – SOFA Week 2024: registration is open!. /soft-robotics-summer-school-in-lille; ; SOFA – Soft-Robotics Summer School in Lille. /softrobots-inverse-plugin-open-source-release; ; SOFA – SoftRobots.Inverse plugin open-source release!. /spin-offs-from-sofa-against-covid-19; ; SOFA – Spin-offs from SOFA against Covid-19. /stc11-join-us-in-june-to-design-the-sofa-roadmap; ; SOFA – STC#11: join us in June to design the SOFA roadmap!. /stc13-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA – STC#13: co-design the SOFA roadma,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:9655,release,released,9655,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 2022: register now!. /sofa-week-2023-register-now; ; SOFA – SOFA Week 2023: register now!. /sofa-week-2024-registration-is-open; ; SOFA – SOFA Week 2024: registration is open!. /soft-robotics-summer-school-in-lille; ; SOFA – Soft-Robotics Summer School in Lille. /softrobots-inverse-plugin-open-source-release; ; SOFA – SoftRobots.Inverse plugin open-source release!. /spin-offs-from-sofa-against-covid-19; ; SOFA – Spin-offs from SOFA against Covid-19. /stc11-join-us-in-june-to-design-the-sofa-roadmap; ; SOFA – STC#11: join us in June to design the SOFA roadmap!. /stc13-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA – STC#13: co-design the SOFA roadmap!. /stc15-join-us-in-may-to-design-the-sofa-roadmap; ; SOFA – STC#15: join us in May to design the SOFA roadmap!. /stc17-join-us-in-june-to-desig,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:9801,release,released,9801,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,"2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions; void addSpringForce (SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, int i, const Spring &spring);  Accumulate the spring force and compute and store its stiffness. More...;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, int i, const Spring &spring);  Apply the stiffness, i.e. accumulate df given dx. More...;  ;  FrameSpringForceField ();  ;  FrameSpringForceField (MechanicalState *object1, MechanicalState *object2);  ;  Protected Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  PairInteractionForceField (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:18076,update,update,18076,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['update'],['update']
Deployability,"2(SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass)sofa::core::behavior::Mass< DataTypes >; ForceField< DataTypes >::SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; TetrahedronID typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; TMassType typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; TriangleID typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMass typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseMass() override=defaultsofa::core::behavior::BaseMassprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DiagonalMass() override=defaultsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:26534,update,updateInternal,26534,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['update'],['updateInternal']
Deployability,2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8812,release,released,8812,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,22; ; SOFA – Meet us at RoboSoft 2022!. /meet-us-at-siggraph-asia-2017; ; SOFA – Meet us at SIGGRAPH Asia 2017. /new-article-about-the-consortium; ; SOFA – New article about the Consortium. /new-consortium-member-kyungpook-university; ; SOFA – New Consortium member: Kyungpook University. /new-engineering-forces-for-sofa; ; SOFA – New engineering forces for SOFA. /new-framework-for-soft-robots-with-sofa; ; SOFA – New framework for soft robots with SOFA. /new-geomagic-plugin; ; SOFA – New Geomagic plugin. /new-job-available-at-anatoscope; ; SOFA – New job available at Anatoscope!. /new-plugin-for-visco-elasticity; ; SOFA – New plugin for Visco-Elasticity!. /new-publications-with-sofa; ; SOFA – New publications with SOFA : May 2017. /new-publications-with-sofa-sept-2017; ; SOFA – New publications with SOFA : Sept 2017. /new-sofa-achievements-share-it; ; SOFA – New SOFA achievements? Share it!. /new-sofa-papers-accepted; ; SOFA – New SOFA papers accepted!. /new-sofa-release-v16-08-available; ; SOFA – New SOFA release (v16.08) available!. /next-sofa-technical-committee-in-sophia; ; SOFA – Next SOFA Technical Committee in Sophia!. /opening-ceremony-of-our-new-building; ; SOFA – Opening ceremony of our new building!. /open-source-release-of-ros-connector; ; SOFA – Open-source release of ROS connector!. /our-membership-contract-now-available; ; SOFA – Our Membership contract now available. /page; . /10; ; SOFA – News. /11; ; SOFA – News. /12; ; SOFA – News. /13; ; SOFA – News. /14; ; SOFA – News. /15; ; SOFA – News. /16; ; SOFA – News. /17; ; SOFA – News. /18; ; SOFA – News. /19; ; SOFA – News. /2; ; SOFA – News. /20; ; SOFA – News. /21; ; SOFA – News. /22; ; SOFA – News. /23; ; SOFA – News. /24; ; SOFA – News. /25; ; SOFA – News. /26; ; SOFA – News. /27; ; SOFA – News. /28; ; SOFA – News. /3; ; SOFA – News. /4; ; SOFA – News. /5; ; SOFA – News. /6; ; SOFA – News. /7; ; SOFA – News. /8; ; SOFA – News. /9; ; SOFA – News. /participation-at-fosdem-2019; ; SOFA – Participation ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:5218,release,release-,5218,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['release'],"['release', 'release-']"
Deployability,"3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >)sofa::component::visual::VisualModelImpl; SPtr typedefsofa::core::objectmodel::Base; srgbTexturingsofa::component::visual::VisualModelImpl; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateBuffers()sofa::component::visual::VisualModelImplinlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useTopologysofa::component::visual::VisualModelImpl; Vec3Real typedefsofa::component::visual::VisualModelImpl; VecCoord typedefsofa::component::visual::VisualModelImpl; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::visual::VisualModelImpl; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTexCoord typedefsofa::component::visual::VisualModelImpl; VecVisualEdge typedefsofa::component::visual::VisualModelImpl; VecVisualQuad typedefsofa::component::visual::VisualModelImpl; VecVisualTriangle typedefsofa::component::visual::VisualModelImpl; visual_index_type typedefsofa::component::visual::VisualModelImpl; VisualEdge typedefsofa::component::visual::VisualModelImpl; VisualModel()sofa::core::visual::VisualModelprotected; VisualModelImpl()sofa::component::visual::VisualModelImplprotected; VisualQuad typedefsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:22473,update,updateVisual,22473,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['update'],['updateVisual']
Deployability,"7.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps assembly. /16; ; SOFA - Topic: [SOLVED] Forceps assembly. /4; ; SOFA - Topic: [SOLVED] Forceps assembly. SOFA - Topic: [SOLVED] Forceps assembly. /forces-not-getting-rendered-with-geomagic-touch; ; SOFA - Topic: [SOLVED] Forces not getting rendered with Geomagic touch. /forces-on-bending-pneunet; ; SOFA - Topic: [SOLVED] Forces on bending pneunet. /forum-help; ; SOFA - Topic: forum help. /forum-is-moving-to-github-discussions; ; SOFA - Topic: W",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:306382,integrat,integration,306382,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Deployability,": [SOLVED] Errors occurred in building with VS2012 on Win 7 64bit. /errors-when-compiling-cgalplugin-in-vs2017; ; SOFA - Topic: [SOLVED] errors when compiling CGALPLUGIN in VS2017. /errors-when-installing-the-cgal-plugin; ; SOFA - Topic: [SOLVED] Errors when installing the CGAL plugin. /errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Errors while building sofa. /errors-while-building-sofa-python-3; ; SOFA - Topic: Errors While Building Sofa Python 3. /errors-while-building-sofapython3-windows; ; SOFA - Topic: [SOLVED] Errors while building SofaPython3 (Windows). /error-when-compiling-sofapython3; ; SOFA - Topic: [SOLVED] Error when compiling SofaPython3. /error-when-loading-sofapython-plugin; ; SOFA - Topic: Error when loading SofaPython plugin. /error-when-running-scene-in-python-interpreter-with-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Error when running scene in python interpreter with SofaPython3 plugin. /error-while-building-sofa-for-softrobots-plugin-installation; ; SOFA - Topic: Error while building Sofa for SoftRobots plugin installation. /error-while-building-sofa-on-windows-7-qglviewerqt-conflict; ; SOFA - Topic: [SOLVED] Error while building SOFA on Windows 7, QGLViewer/Qt conflict. /error-while-buildin-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while building SOFA in Linux. /error-while-build-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while build SOFA in Linux. /error-while-compiling-sofa-in-mac-os-yosemitegl-shader-support-requires-glew; ; SOFA - Topic: [SOLVED] Error while compiling SOFA in Mac OS Yosemite:""GL Shader support requires GLEW."". /error-while-compiling-sofa-v2012-with-sofapython-3; ; SOFA - Topic: Error while compiling SOFA v2012 with Sofapython 3. /error-while-compiling-softrobots-and-stilib-plugin; ; SOFA - Topic: [SOLVED] Error while compiling Softrobots and STILIB plugin. /error-while-sofapython3-installation; ; SOFA - Topic: [SOLVED] Error while SofaPython3 installation. /error-while-use-sofa-c-template-in-tutorial; ; SOF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:297913,install,installation,297913,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['install'],['installation']
Deployability,": [SOLVED] Triangular FEM Methods. /5; ; SOFA - Topic: [SOLVED] Triangular FEM Methods. SOFA - Topic: [SOLVED] Triangular FEM Methods. /turning-off-collisions-between-a-set-of-objects; . /feed; ; [SOLVED] Turning off collisions between a set of objects? – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /5; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /tutorial-example-firststeps-step3-pyscn; ; SOFA - Topic: Tutorial Example FirstSteps (step3.pyscn). /two-way-force-propagation; ; SOFA - Topic: [SOLVED] Two-way force propagation. /ubuntu-14-04-qtcreator; . /feed; ; [SOLVED] Ubuntu 14.04 + QtCreator – SOFA. SOFA - Topic: [SOLVED] Ubuntu 14.04 + QtCreator. /ubuntu-18-sofa-20-kernel-error; ; SOFA - Topic: [SOLVED] Ubuntu 18 – Sofa 20 – Linking CXX Shared Library Errors. /ubuntu-software-center-to-install-sofa; . /feed; ; [SOLVED] Ubuntu Software Center to install SOFA – SOFA. SOFA - Topic: [SOLVED] Ubuntu Software Center to install SOFA. /udk-comment-sont-leves-les-mappable-keys; ; SOFA - Topic: UDK : Comment sont levés les ""Mappable keys"". /unable-to-assign-rest_position-to-mo-in-sofapython3-plugin-in-debug-mode; ; SOFA - Topic: Unable to assign rest_position to MO in SofaPython3 plugin in Debug mode. /unable-to-build-main-cpp-in-sofaphysicsapi; ; SOFA - Topic: Unable to build main.cpp in SofaPhysicsAPI. /unable-to-build-of-sofaguiglut; ; SOFA - Topic: Unable to build of SofaGuiGlut. /unable-to-create-bilateralinteractionconstraint; ; SOFA - Topic: [SOLVED] Unable to create ‘BilateralInteractionConstraint’. /unable-to-link-qt5-dlls-could-not-find-qt-plugin-platform-windows; ; SOFA - Topic: [SOLVED] Unable to link Qt5 dlls: could not find Qt plugin platform ""windows"". /unable-to-load-mesh; ; SOFA - Topic: [SOLVED] Unable to load mesh. /unable-to-load-py-scene-from-softrobot-plugin; ; SOFA - Topic: [SOLVED] Unable to load .py",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:410032,install,install,410032,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['install']
Deployability,"::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine)sofa::component::engine::generate::ExtrudeSurface< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecCoord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ExtrudeSurface() overridesofa::component::engine::generate::Extrude",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:12905,update,updateAllInputsIfDirty,12905,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LightManager, core::visual::VisualManager)sofa::gl::component::shader::LightManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~LightManager() overridesofa::gl::component::shader::LightManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:12444,update,updateInternal,12444,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateVisual']"
Deployability,"::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualGrid, VisualModel);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  VisualGrid ();  ;  ~VisualGrid () override=default;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateGrid ();  ; void buildGrid ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shado",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:3428,update,updateGrid,3428,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,1,['update'],['updateGrid']
Deployability,"::BaseInteractionConstraint::SOFA_ABSTRACT_CLASS2(BaseInteractionConstraint, BaseConstraint, StateAccessor)sofa::core::behavior::BaseInteractionConstraint; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::PairInteractionConstraint< TDataTypes >virtual; storeLambda(const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda)sofa::core::behavior::PairInteractionConstraint< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::BaseConstraintinlineprotected; ~BaseConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:17407,update,updateLinks,17407,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['update'],['updateLinks']
Deployability,"::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TransformPosition, DataTypes), core::DataEngine)sofa::component::engine::transform::TransformPosition< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TransformationMethod enum namesofa::component::engine::transform::TransformPosition< DataTypes >; transformationMethodsofa::component::engine::transform::TransformPosition< DataTypes >protected; TransformPosition()sofa::component::engine::transform::TransformPosition< DataTypes >protected; TRANSLATION enum valuesofa::component::engine::transform::TransformPosition< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec16 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; Vec4 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecCoord typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TransformPosition() overridesofa::component::engine::transform::TransformPosition< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:15400,update,updateInternal,15400,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['update'],['updateInternal']
Deployability,"::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(DiagonalVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecIndex typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html:15765,update,updateLinks,15765,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,1,['update'],['updateLinks']
Deployability,"::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(OglCylinderModel, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::OglCylinderModel; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; Vec3State typedefsofa::gl::component::rendering3d::OglCylinderModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualState()sofa::core::visual::VisualState< defaulttype::Vec3Types >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; WriteCoord typedefsofa::core::State< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:14411,update,updateVisual,14411,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['update'],['updateVisual']
Deployability,"::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(CenterPointTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::CenterPointTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::CenterPointTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CenterPointTopologicalMapping() overridesofa::component::topology::mapping::CenterPointTopologicalMappinginlineprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:12383,update,updateInternal,12383,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateTopologicalMappingBottomUp', 'updateTopologicalMappingTopDown']"
Deployability,"::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection)sofa::core::behavior::ConstraintCorrection< TDataTypes >; sofa::core::behavior::BaseConstraintCorrection::SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(SOFA_TEMPLATE(PrecomputedConstraintCorrection, TDataTypes), SOFA_TEMPLATE(core::behavior::ConstraintCorrection, TDataTypes))sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; sofa::core::behavior::ConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintCorrection() overridesofa::core::behavior::BaseConstraintCorrectionprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConstraintCorrection() override=defaultsofa::core::behavior::ConstraintCorrection< TDataTypes >protected; ~Prec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:24014,update,updateInternal,24014,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['update'],['updateInternal']
Deployability,"::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(CylinderCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TCylinder< DataTypes > classsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >friend; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecAxisCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecCoord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeHeights()sofa::component::collision::geometry::CylinderCollisionModel< TDataType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:17558,update,updateLinks,17558,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,1,['update'],['updateLinks']
Deployability,"::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(OglCylinderModel, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::OglCylinderModel; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; Vec3State typedefsofa::gl::component::rendering3d::OglCylinderModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualState()sofa::core::visual::VisualState< defaulttype::Vec3Types >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; WriteCoord typedefsofa::core::State< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:14341,update,updateLinks,14341,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['update'],['updateLinks']
Deployability,"::BilateralLagrangianConstraint< DataTypes >; sofa::core::behavior::PairInteractionConstraint::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::PairInteractionConstraint< TDataTypes >virtual; storeLambda(const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda)sofa::core::behavior::PairInteractionConstraint< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SubsetIndices typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Basepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:24081,update,updateInternal,24081,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['update'],['updateInternal']
Deployability,"::Distances< DataTypes >; showGoalDistanceMapsofa::component::engine::analyze::Distances< DataTypes >; showGradientMapsofa::component::engine::analyze::Distances< DataTypes >; showGradientsScaleFactorsofa::component::engine::analyze::Distances< DataTypes >; showMapIndexsofa::component::engine::analyze::Distances< DataTypes >; showTextScaleFactorsofa::component::engine::analyze::Distances< DataTypes >; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(Distances, DataTypes), core::DataEngine)sofa::component::engine::analyze::Distances< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::analyze::Distances< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecVecCoord typedefsofa::component::engine::analyze::Distances< DataTypes >; VVD typedefsofa::component::engine::analyze::Distances< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zonesFramePairsofa::component::engine::analyze::Distances< DataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:15031,update,updateIfDirty,15031,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['update'],['updateIfDirty']
Deployability,"::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedralTensorMassForceField()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecType typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::Forc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:18800,update,updateMatrixsofa,18800,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['update'],['updateMatrixsofa']
Deployability,"::FreeMotionAnimationLoop::FreeMotionAnimationLoop ; (; ). protected . ◆ ~FreeMotionAnimationLoop(). sofa::component::animationloop::FreeMotionAnimationLoop::~FreeMotionAnimationLoop ; (; ). overrideprotected . The ConstraintSolver used in this animation loop (required) . Function details. ◆ computeFreeMotion(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ computeFreeMotionAndCollisionDetection(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ init(). void sofa::component::animationloop::FreeMotionAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::FreeMotionAnimationLoop::SOFA_CLASS ; (; FreeMotionAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::FreeMotionAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopFreeMotionAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:19543,integrat,integrations,19543,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['integrat'],['integrations']
Deployability,"::InverseStorage * sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::getInverse ; (; std::string ; name). static . ◆ getInverseMap(). template<class TDataTypes > . static std::map<std::string, InverseStorage>& sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::getInverseMap ; (; ). inlinestatic . ◆ hasConstraintNumber(). template<class DataTypes > . bool sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::hasConstraintNumber ; (; int ; index). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ loadCompliance(). template<class DataTypes > . bool sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::loadCompliance ; (; std::string ; fileName). protected . Load compliance matrix from memory or external file according to fileName. ; ReturnsLoading success. . ◆ releaseInverse(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::releaseInverse ; (; std::string ; name, . InverseStorage * ; inv . ). static . ◆ resetContactForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::resetContactForce. overridevirtual . Implements sofa::core::behavior::BaseConstraintCorrection. ◆ resetForUnbuiltResolution(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::resetForUnbuiltResolution ; (; SReal * ; f, . std::list< unsigned int > & ;  . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ rotateConstraints() [1/5]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< defaulttype::Rigid3Typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:35711,release,releaseInverse,35711,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['release'],['releaseInverse']
Deployability,::LinkWidget::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented in sofa::gui::qt::QLinkSimpleEdit. ◆ readFromLink(). virtual void sofa::gui::qt::LinkWidget::readFromLink ; (; ). protectedpure virtual . The implementation of this method tells how the widget reads the value of the link. ; Implemented in sofa::gui::qt::QLinkSimpleEdit. ◆ setLink(). virtual void sofa::gui::qt::LinkWidget::setLink ; (; MyLink * ; d). inlinevirtual . ◆ setWidgetDirty [1/2]. void sofa::gui::qt::LinkWidget::setWidgetDirty ; (; ). inlineslot . You call this slot anytime you want to specify that the widget value is out of sync with the underlying link value. . ◆ setWidgetDirty [2/2]. void sofa::gui::qt::LinkWidget::setWidgetDirty ; (; bool ; b). inlineslot . ◆ sizeWidget(). virtual unsigned int sofa::gui::qt::LinkWidget::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented in sofa::gui::qt::QLinkSimpleEdit. ◆ updateLinkValue. void sofa::gui::qt::LinkWidget::updateLinkValue ; (; ). inlineslot . Checks that widget has been edited emit LinkOwnerDirty in case the name field has been modified . ◆ updateVisibility(). void sofa::gui::qt::LinkWidget::updateVisibility ; (; ). inline . ◆ updateWidgetValue. void sofa::gui::qt::LinkWidget::updateWidgetValue ; (; ). inlineslot . First checks that the widget is not currently being edited checks that the link has changed since the last time the widget has read the link value. ultimately read the link value. . ◆ WidgetDirty. void sofa::gui::qt::LinkWidget::WidgetDirty ; (; bool ; ). signal . Emitted each time setWidgetDirty is called. You can also emit it if you want to tell the widget value is out of sync with the underlying link value. . ◆ writeToLink(). virtual void sofa::gui::qt::LinkWidget::writeToLink ; (; ). protectedpure virtual . The implementation of this methods needs to tell how the widget can write its value in the link ; Implemented in sofa::gui::qt::QLinkSimpleEdit. sofaguiqtLinkWidge,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html:4347,update,updateLinkValue,4347,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,1,['update'],['updateLinkValue']
Deployability,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3833,install,install,3833,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['install'],['install']
Deployability,"::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(RotationMatrixSystem, TMatrix, TVector), SOFA_TEMPLATE2(linearsystem::TypedMatrixLinearSystem, TMatrix, TVector))sofa::component::linearsolver::preconditioner::RotationMatrixSystem< TMatrix, TVector >; sofa::component::linearsystem::TypedMatrixLinearSystem::SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html:15069,update,updateInternal,15069,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_rotation_matrix_system-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::MultiVecDerivId, const linearalgebra::BaseVector *);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void computeResidual (const core::ExecParams *params, linearalgebra::BaseVector *f);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void checkLinearSystem ();  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >; SingleLink< OrderingMethodAccessor, core::behavior::BaseOrderingMethod, BaseLink::FLAG_STRONGLINK > l_orderingMethod;  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLLTFactory >; DeprecatedAndRemoved d_orderingMethod;  ; std::string m_selectedOrderingMethod;  ; std::unique_ptr< BaseEigenSolverProxy > m_solver;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real > Mfiltered;  ; std::unique_ptr< EigenSparseMatrixMap > m_map;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real >::VecIndex MfilteredrowBegin;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real >::VecIndex MfilteredcolsIndex;  ;  Static Protected Attributes inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLLTFactory >; static constexpr unsigned int s_defaultOrderingMethod;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLLTFactory >; Eigen::ComputationInfo getSolverInfo () const;  ; void updateSolverOderingMethod ();  . Function details. ◆ SOFA_CLASS(). template<class TBlockType > . sofa::component::linearsolver::direct::EigenSimplicialLLT< TBlockType >::SOFA_CLASS ; (; SOFA_TEMPLATE(EigenSimplicialLLT< TBlockType >, TBlockType) ; , . SOFA_TEMPLATE2(EigenDirectSparseSolver,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html:6079,update,updateSolverOderingMethod,6079,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html,1,['update'],['updateSolverOderingMethod']
Deployability,"::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBuffer ();  ; void updateQuadsIndicesBuffer ();  ;  Public Member Functions inherited from sofa::component::visual::VisualModelImpl;  SOFA_CLASS2 (VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; bool hasOpaque ();  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void drawShadow (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:12091,update,updateBuffers,12091,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,5,['update'],"['updateBuffers', 'updateEdgesIndicesBuffer', 'updateQuadsIndicesBuffer', 'updateTrianglesIndicesBuffer', 'updateVertexBuffer']"
Deployability,"::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14727,update,updateInternal,14727,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,1,['update'],['updateInternal']
Deployability,"::SphereROI< DataTypes >; sofa::component::engine::select::BaseROI::SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SphereROI()sofa::component::engine::select::SphereROI< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testEdgeAngle(const Edge &e) constsofa::component::engine::select::SphereROI< DataTypes >protected; testTriangleAngle(const Triangle &t) constsofa::component::engine::select::SphereROI< DataTypes >protected; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triAnglesofa::component::engine::select::SphereROI< DataTypes >; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html:19392,update,updateAllInputsIfDirty,19392,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"::Vec3);  ; void integrateMesh ();  integrates the whole mesh More...;  ; void integrateTriangle (type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2);  ; void generateRigid ();  generates the RigidMass from the mesh integral More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:15019,update,update,15019,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['update'],['update']
Deployability,"::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:3702,update,updateVisual,3702,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,26,['update'],"['update', 'updateVisual']"
Deployability,"::backward::EulerImplicitSolver Class Reference . #include <EulerImplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::EulerImplicitSolver:. [legend]; Detailed Description; Semi-implicit time integrator using backward Euler scheme for first and second degree ODEs. (default: second); 2nd Order ***; This is based on [Baraff and Witkin, Large Steps in Cloth Simulation, SIGGRAPH 1998] The integration scheme is based on the following equations:; ; The unknown is ; Newton's law is ; is the mass matrix. is the stiffness implemented (or not) by the force fields. is the damping implemented (or not) by the force fields. An additional, uniform Rayleigh damping is imposed by the solver.; This corresponds to the following equation system:. Moreover, the projective constraints filter out the forbidden motions. This is equivalent with multiplying vectors with a projection matrix . Finally, the equation system set by this ode solver is:. 1st Order ***; This integration scheme is based on the following equation:. Applied to this mechanical system:. . Trapezoidal Rule ***; The trapezoidal scheme is based on. With this and the same techniques as for the implicit Euler scheme we receive for *** 2nd Order *** equations. and for *** 1st Order ***; . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighStiffness;  ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; sofa::core::objectmodel::RenamedData< SReal > f_velocityDamping;  ; sofa::core::objectmodel::RenamedData< bool > f_firstOrder;  ; sofa::core::objectmodel::RenamedData< bool > f_solveConstraint;  ; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness, > 0. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass, > 0. More...;  ; Data< SReal > d_velocityDamping;  Velocity decay coefficient (no decay if null) More...;  ; Data< bool > d_firstOrder;  Use backward Euler scheme for first order ODE system, wh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:1295,integrat,integration,1295,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['integrat'],['integration']
Deployability,"::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedPlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedPlaneProjectiveConstraint()sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >protected; ~ProjectiveConstraintSet() overridesofa::core::beha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:17733,update,updateLinks,17733,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['update'],['updateLinks']
Deployability,"::component::mapping::linear::SkinningMapping< TIn, TOut >; OutDeriv typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; OutMatrixDeriv typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; OutReal typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; OutVecCoord typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; OutVecDeriv typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; Real typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; reinit() overridesofa::component::mapping::linear::SkinningMapping< TIn, TOut >; SeqTriangles typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; setWeights(const type::vector< sofa::type::SVector< InReal > > &weights, const type::vector< sofa::type::SVector< unsigned int > > &indices, const type::vector< unsigned int > &nbrefs)sofa::component::mapping::linear::SkinningMapping< TIn, TOut >; showFromIndexsofa::component::mapping::linear::SkinningMapping< TIn, TOut >protected; showWeightssofa::component::mapping::linear::SkinningMapping< TIn, TOut >protected; SkinningMapping()sofa::component::mapping::linear::SkinningMapping< TIn, TOut >protected; SOFA_CLASS(SOFA_TEMPLATE2(SkinningMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut))sofa::component::mapping::linear::SkinningMapping< TIn, TOut >; sofa::component::mapping::linear::crtp::CRTPLinearMapping::SOFA_CLASS(SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping)sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >; SparseJMatrixEigen typedefsofa::component::mapping::linear::SkinningMapping< TIn, TOut >; trianglessofa::component::mapping::linear::SkinningMapping< TIn, TOut >; updateWeights()sofa::component::mapping::linear::SkinningMapping< TIn, TOut >protected; weightsofa::component::mapping::linear::SkinningMapping< TIn, TOut >protected; ~SkinningMapping()sofa::component::mapping::linear::SkinningMapping< TIn, TOut >protectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping-members.html:5514,update,updateWeights,5514,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping-members.html,1,['update'],['updateWeights']
Deployability,"::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::vradius. ellipsoid radius . Constructor details. ◆ InteractionEllipsoidForceField(). template<typename TDataTypes1 , typename TDataTypes2 > . sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::InteractionEllipsoidForceField ; (; ). inlineprotected . Function details. ◆ addDForce(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv1 & ; df1, . DataVecDeriv2 & ; df2, . const DataVecDeriv1 & ; dx1, . const DataVecDeriv2 & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += K dx $; This method must be implemented by the component, and is usually called by the generic MixedInteractionForceField::addDForce() method. ; Implements sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >. ◆ addForce(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::addForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv1 & ; f1, . DataVecDeriv2 & ; f2, . const DataVecCoord1 & ; x1, . const DataVecCoord2 & ; x2, . const DataVecDeriv1 & ; v1, . const DataVecDeriv2 & ; v2 . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:24936,integrat,integrated,24936,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['integrat'],['integrated']
Deployability,"::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >, sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >, sofa::component::mechanicalload::SphereForceField< DataTypes >, sofa::component::mechanicalload::QuadPressureForceField< DataTypes >, sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >, sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >, sofa::component::mechanicalload::TorsionForceField< DataTypes >, sofa::component::mechanicalload::TorsionForceField< DataTypes >, sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >, and sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >. ◆ addForce() [2/2]. template<class DataTypes > . void sofa::core::behavior::ForceField< DataTypes >::addForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; fId . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This method retrieves the force, x and v vector from the MechanicalState and call the internal addForce(const MechanicalParams*, DataVecDeriv&,const DataVecCoord&,const DataVecDeriv&) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ addKToMatrix() [1/2]. template<class DataTypes > . void sofa::core::behavior::ForceField< DataTypes >::addKToMatrix ; (; const MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ addKToMatrix() [2/2]. template<class DataTypes > . void sofa::core::behavior::Force",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:29624,update,update,29624,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['update'],['update']
Deployability,"::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)))sofa::gl::component::shader::OglUInt2Attribute; OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglUInt2Attribute()sofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:16178,update,updateVisual,16178,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,1,['update'],['updateVisual']
Deployability,"::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)))sofa::gl::component::shader::OglUInt3Attribute; OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglUInt3Attribute()sofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:16178,update,updateVisual,16178,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,1,['update'],['updateVisual']
Deployability,"::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)))sofa::gl::component::shader::OglUInt4Attribute; OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglUInt4Attribute()sofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:16178,update,updateVisual,16178,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,1,['update'],['updateVisual']
Deployability,"::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13579,update,updateLinks,13579,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,1,['update'],['updateLinks']
Deployability,"::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >, sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >, sofa::component::solidmechanics::spring::SpringForceField< DataTypes >, sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >, and sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >. ◆ addForce() [2/2]. template<class DataTypes > . void sofa::core::behavior::PairInteractionForceField< DataTypes >::addForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; fId . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes $ f += B v + K x $; This method retrieves the force, x and v vector from the two MechanicalState and call the internal addForce(VecDeriv&,VecDeriv&,const VecCoord&,const VecCoord&,const VecDeriv&,const VecDeriv&) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::core::behavior::PairInteractionForceField< TDataTypes >::canCreate ; (; T * ; obj, . objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ create(). template<class TDataTypes > . template<class T > . static T::SPtr sofa::core::behavior::PairInteractionForceField< TDataTypes >::create ; (; T * ; , . core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html:24709,update,update,24709,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,1,['update'],['update']
Deployability,"::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedronDiffusionFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedronDiffusionFEMForceField()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecCoord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VectorReal typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:17426,update,updateInternal,17426,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['update'],['updateInternal']
Deployability,"::core::collision::ContactManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(RuleBasedContactManager, CollisionResponse)sofa::component::collision::response::contact::RuleBasedContactManager; sofa::component::collision::response::contact::CollisionResponse::SOFA_CLASS(CollisionResponse, sofa::core::collision::ContactManager)sofa::component::collision::response::contact::CollisionResponse; sofa::core::collision::ContactManager::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedContactMapsofa::component::collision::response::contact::CollisionResponseprotected; storedContactssofa::core::collision::ContactManagerprotected; storedIntersectionMethodsofa::core::collision::ContactManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; variablesDatasofa::component::collision::response::contact::RuleBasedContactManagerprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionResponse() override=defaultsofa::component::collision::response::contact::CollisionResponseprotected; ~ContactManager() overridesofa::core::collision::ContactManagerinlineprotected; ~RuleBasedContactManager() overridesofa::component::collision::response::contact::RuleBasedContactManagerprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:14519,update,updateInternal,14519,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::visual::VisualGrid; SOFA_CLASS(VisualGrid, VisualModel)sofa::component::visual::VisualGrid; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateGrid()sofa::component::visual::VisualGrid; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualGrid()sofa::component::visual::VisualGrid; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualGrid() override=defaultsofa::component::visual::VisualGrid; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:12008,update,updateGrid,12008,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,5,['update'],"['updateGrid', 'updateInternal', 'updateLinks', 'updateVisual']"
Deployability,"::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html:12141,update,update,12141,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,13,['update'],['update']
Deployability,"::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; size_t m_systemSize;  Save system size for update of indices (doUpdateInternal) More...;  ; bool m_isTotalForceUsed;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:3186,update,update,3186,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,1,['update'],['update']
Deployability,"::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(RandomPointDistributionInSurface, DataTypes), core::DataEngine)sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testDistance(Coord p)sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesOctreesofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >protected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >; VecCoord typedefsofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~RandomPointDistributionInSurface() overridesofa::component::engine::generate::Rand",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html:14683,update,updateIfDirty,14683,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,1,['update'],['updateIfDirty']
Deployability,"::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13747,update,updateInternal,13747,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['update'],['updateInternal']
Deployability,"::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairBoxROI ();  ;  ~PairBoxROI () override;  ; bool isPointInBox (const CPos &p, const Vec6 &b);  ; bool isPointInBox (const PointID &pid, const Vec6 &b);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html:14572,update,update,14572,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,1,['update'],['update']
Deployability,"::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(DetectionOutputVector *outputs)=0sofa::core::collision::Contactpure virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool)sofa::core::collision::Contactinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:10476,update,updateInternal,10476,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:14702,update,update,14702,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['update'],['update']
Deployability,"::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:4961,update,updateVisual,4961,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,1,['update'],['updateVisual']
Deployability,"::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:14922,update,updateVisual,14922,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['update'],['updateVisual']
Deployability,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int))sofa::gl::component::shader::OglUIntAttribute; OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglUIntAttribute()sofa::gl::component::shader::OglUIntAttributeinlinevirtual; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:15499,update,updateVisual,15499,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,1,['update'],['updateVisual']
Deployability,"::getTriangles ; (; ); const. inline . ◆ getX(). template<class TDataTypes > . const VecCoord& sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::getX ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TriangleCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::updateFromTopology. protectedvirtual . ◆ updateNormals(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::updateNormals. protectedvirtual . ◆ velocity(). template<class DataTypes > . DataTypes::Deriv sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Enum details. ◆ anonymous enum. template<class TDataTypes > . anonymous enum. EnumeratorNBARY . ◆ TriangleFlag. template<class TDataTypes > . enum sofa::component::collision::geometry::TriangleCollisionModel::TriangleFlag. EnumeratorFLAG_P1 Point 1 is attached to this triangle. . FLAG_P2 Point 2 is attached to this triangle. . FLAG_P3 Point 3 is attached to this triangle. . FLAG_E23 Edge 2-3 is attached to this triangle. . FLAG_E31 Edge 3-1 is attached to this triangle. . FLAG_E12 Edge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:31493,update,updateFromTopology,31493,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['update'],['updateFromTopology']
Deployability,"::getX ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::resize ; (; sofa::Size ; s). overridevirtual . Set the number of elements. ; Reimplemented from sofa::core::CollisionModel. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TriangleCollisionModel< TDataTypes >, TDataTypes) ; , . core::CollisionModel ;  . ). ◆ updateFromTopology(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::updateFromTopology. protectedvirtual . ◆ updateNormals(). template<class DataTypes > . void sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::updateNormals. protectedvirtual . ◆ velocity(). template<class DataTypes > . DataTypes::Deriv sofa::component::collision::geometry::TriangleCollisionModel< DataTypes >::velocity ; (; sofa::Index ; index); const. inline . Enum details. ◆ anonymous enum. template<class TDataTypes > . anonymous enum. EnumeratorNBARY . ◆ TriangleFlag. template<class TDataTypes > . enum sofa::component::collision::geometry::TriangleCollisionModel::TriangleFlag. EnumeratorFLAG_P1 Point 1 is attached to this triangle. . FLAG_P2 Point 2 is attached to this triangle. . FLAG_P3 Point 3 is attached to this triangle. . FLAG_E23 Edge 2-3 is attached to this triangle. . FLAG_E31 Edge 3-1 is attached to this triangle. . FLAG_E12 Edge 1-2 is attached to this triangle. . FLAG_BE23 Edge 2-3 is attached to this triangle and is a boundary. . FLAG_BE31 Edge 3-1 is attached to this triangle and is a boundar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:31665,update,updateNormals,31665,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['update'],['updateNormals']
Deployability,"::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DirectionalLight, Light)sofa::gl::component::shader::DirectionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectionalLight() overridesofa::gl::component::shader::DirectionalLight; ~Light() overridesofa::gl::component::shader::Lightprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:15102,update,updateInternal,15102,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateVisual']"
Deployability,"::gui::common::AddRecordedCameraOperation:. [legend]. Protected Attributes; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html:1440,release,released,1440,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,1,['release'],['released']
Deployability,"::gui::qt::ProfilerChartView Class Reference . #include <SofaWindowProfiler.h>; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; More... Inheritance diagram for sofa::gui::qt::ProfilerChartView:. [legend]; Detailed Description; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; See alsoSofaWindowProfiler Will also override drawForeground to draw a line to show the selected step. . Protected Attributes; int m_bufferSize;  copy of the series size to check if selection is not out of bound More...;  ; QPointF m_lineSelect;  2D point of the line to draw the selection More...;  ; QPointF m_lineOrigin;  ; int m_pointSelected;  Step number selected on the graph. -1 if none. More...;  ; int m_maxY;  Stored value of the Y axis max. More...;  . Public Member Functions;  ProfilerChartView (QChart *chart, QWidget *parent, int bufferSize);  ; void updateYMax (int y);  method to update the max value of the Y axis (for line rendering). More...;  . Protected Member Functions; virtual void mousePressEvent (QMouseEvent *event);  Override to catch mouse selection on the graph. More...;  ; virtual void drawForeground (QPainter *painter, const QRectF &rect);  Override to draw line at the step selected. More...;  . Signals; void pointSelected (int);  signal emitted when a step has been selected on the graph More...;  . Public Slots; void updateSelection (int x);  method to update the selection on the graph. More...;  . Attribute details. ◆ m_bufferSize. int sofa::gui::qt::ProfilerChartView::m_bufferSize. protected . copy of the series size to check if selection is not out of bound . ◆ m_lineOrigin. QPointF sofa::gui::qt::ProfilerChartView::m_lineOrigin. protected . ◆ m_lineSelect. QPointF sofa::gui::qt::ProfilerChartView::m_lineSelect. protected . 2D point of the line to draw the selection . ◆ m_maxY. int sofa::gui::qt::ProfilerC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html:1279,update,updateYMax,1279,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,2,['update'],"['update', 'updateYMax']"
Deployability,"::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1343,release,released,1343,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,1,['release'],['released']
Deployability,"::nonlinear::SquareDistanceMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; SquareDistanceMapping()sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected; ~SquareDistanceMapping() overridesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:19010,update,updateInternal,19010,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,3,['update'],"['updateInternal', 'updateK', 'updateLinks']"
Deployability,"::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LineAxis, VisualModel)sofa::component::visual::LineAxis; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLine()sofa::component::visual::LineAxis; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:11608,update,updateInternal,11608,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,5,['update'],"['updateInternal', 'updateLine', 'updateLinks', 'updateVisual']"
Deployability,"::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(COLAMDOrderingMethod, BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int >>)sofa::component::linearsolver::ordering::COLAMDOrderingMethod; BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:10464,update,updateInternal,10464,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergeVectors, VecT), core::DataEngine)sofa::component::engine::generate::MergeVectors< VecT >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Value typedefsofa::component::engine::generate::MergeVectors< VecT >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecValue typedefsofa::component::engine::generate::MergeVectors< VecT >; vf_inputssofa::component::engine::generate::MergeVectors< VecT >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergeVectors() overridesofa::component::engine::generate::MergeVectors< VecT >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html:12375,update,updateInternal,12375,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Vector operations; virtual void addForce (const MechanicalParams *mparams, MultiVecDerivId fId)=0;  Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField. More...;  ; virtual void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId)=0;  Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce(). More...;  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual SReal getPotentialEnergy (const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0;  Get the potential energy associated to this ForceField during the last call of addForce( const MechanicalParams* mparams );. More...;  ; Matrix operations; virtual void addKToMatrix (const MechanicalParams *mparams, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:2489,update,update,2489,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['update'],['update']
Deployability,"::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:11896,update,update,11896,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['update'],['update']
Deployability,"::objectmodel::BaseObject)sofa::core::DataEngine; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(SOFA_TEMPLATE(AverageCoord, DataTypes), core::DataEngine)sofa::component::engine::analyze::AverageCoord< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::analyze::AverageCoord< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::analyze::AverageCoord< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~AverageCoord() overridesofa::component::engine::analyze::AverageCoord< DataTypes >inlineprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAcces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html:13745,update,updateInternal,13745,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,1,['update'],['updateInternal']
Deployability,"::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection)sofa::core::behavior::ConstraintCorrection< TDataTypes >; sofa::core::behavior::BaseConstraintCorrection::SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(SOFA_TEMPLATE(LinearSolverConstraintCorrection, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ConstraintCorrection, TDataTypes))sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; sofa::core::behavior::ConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; verify_constraints()sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; wire_optimizationsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintCorrection() over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:18258,update,updateInternal,18258,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['update'],['updateInternal']
Deployability,"::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:17795,update,update,17795,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['update'],['update']
Deployability,"::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ValuesFromPositions, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html:4003,update,update,4003,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,1,['update'],['update']
Deployability,"::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< RGBAColor >inline; getData() constsofa::gui::qt::TDataWidget< RGBAColor >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_colorPickersofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_nameEditsofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< RGBAColor >; numColumnWidget()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetinlinevirtual; readFromData()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotectedvirtual; RGBAColorDataWidget(QWidget *parent, const char *name, Data< RGBAColor > *data)sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetinline; setData(MyTData *d)sofa::gui::qt::TDataWidget< RGBAColor >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< RGBAColor >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< RGBAColor >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< RGBAColor >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html:2660,update,updateDataValue,2660,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html,3,['update'],"['updateDataValue', 'updateVisibility', 'updateWidgetValue']"
Deployability,"::qt::QSofaListViewprotected; PutNodeToSleep()sofa::gui::qt::QSofaListViewprotectedslot; QSofaListView(const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::QSofaListView; RemoveNode()sofa::gui::qt::QSofaListViewprotectedslot; RequestActivation(sofa::simulation::Node *, bool)sofa::gui::qt::QSofaListViewsignal; RequestExportOBJ(sofa::simulation::Node *node, bool exportMTL)sofa::gui::qt::QSofaListViewsignal; RequestSaving(sofa::simulation::Node *)sofa::gui::qt::QSofaListViewsignal; RequestSleeping(sofa::simulation::Node *, bool)sofa::gui::qt::QSofaListViewsignal; RootNodeChanged(sofa::simulation::Node *newroot, const char *newpath)sofa::gui::qt::QSofaListViewsignal; RunSofaDoubleClicked(QTreeWidgetItem *item, int index)sofa::gui::qt::QSofaListViewprotectedslot; RunSofaRightClicked(const QPoint &point)sofa::gui::qt::QSofaListViewprotectedslot; SaveNode()sofa::gui::qt::QSofaListViewprotectedslot; setPropertyWidget(QDisplayPropertyWidget *propertyWid)sofa::gui::qt::QSofaListViewinline; setRoot(sofa::simulation::Node *)sofa::gui::qt::QSofaListView; setViewToDirty()sofa::gui::qt::SofaSceneGraphWidget; SofaSceneGraphWidget(QWidget *parent)sofa::gui::qt::SofaSceneGraphWidgetinline; transformObject(sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=deletesofa::gui::qt::QSofaListViewprotected; unLock()sofa::gui::qt::SofaSceneGraphWidget; update()sofa::gui::qt::QSofaListView; Updated()sofa::gui::qt::QSofaListViewsignal; updateMatchingObjectmodel(QTreeWidgetItem *item, int)sofa::gui::qt::QSofaListViewprotectedslot; updateMatchingObjectmodel(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotectedslot; UpdateOpenedDialogs()sofa::gui::qt::QSofaListViewslot; WakeUpNode()sofa::gui::qt::QSofaListViewprotectedslot; ~QSofaListView() overridesofa::gui::qt::QSofaListView; ~SofaSceneGraphWidget()sofa::gui::qt::SofaSceneGraphWidgetinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html:5102,update,update,5102,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,3,['update'],"['update', 'updateMatchingObjectmodel']"
Deployability,"::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; mappingsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; MCollisionModel typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; MMapping typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; MMechanicalObject typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; MMechanicalState typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; modelsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; nbpsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; needInitsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; outmodelsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; Real typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; resize(Size size)sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >virtual; setCollisionModel(MCollisionModel *model)sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; SubsetContactMapper()sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; update()sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >virtual; updateXfree()sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >virtual; VecCoord typedefsofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >; ~BaseContactMapper()sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >inlinevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper-members.html:3851,update,update,3851,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper-members.html,2,['update'],"['update', 'updateXfree']"
Deployability,"::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Variable; OglVariable< type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt2Variable()sofa::gl::component::shader::OglInt2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 2,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:13567,update,updateLinks,13567,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,1,['update'],['updateLinks']
Deployability,"::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Variable; OglVariable< type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt3Variable()sofa::gl::component::shader::OglInt3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 3,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:13567,update,updateLinks,13567,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,1,['update'],['updateLinks']
Deployability,"::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Variable; OglVariable< type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt4Variable()sofa::gl::component::shader::OglInt4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 4,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:13567,update,updateLinks,13567,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,1,['update'],['updateLinks']
Deployability,"::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; DestType * getIndex (std::size_t index) const;  ; virtual void added (DestPtr ptr, std::size_t index)=0;  ; virtual void removed (DestPtr ptr, std::size_t index)=0;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *object, Base *from);  ; static std::string CreateString (BaseData *data, Base *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  . Attribute details. ◆ ActiveFlags. template<class TOwnerType , class TDestType , unsigned TFlags> . constexpr unsigned sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::ActiveFlags ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:4528,update,updateCounter,4528,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['update'],['updateCounter']
Deployability,"::string &path);  Read a file written in a very basic ini-like format. More...;  . Function details. ◆ downcaseString(). std::string sofa::helper::Utils::downcaseString ; (; const std::string & ; s). static . Convert a string to lower case. . ◆ getExecutableDirectory(). const std::string & sofa::helper::Utils::getExecutableDirectory ; (; ). static . Get the path to the directory of the executable that is currently running. . ◆ getExecutablePath(). const std::string & sofa::helper::Utils::getExecutablePath ; (; ). static . Get the path of the executable that is currently running. ; Note that this function uses various non-portable tricks to achieve its goal, and it might not be the most reliable thing ever written. . ◆ getSofaPathPrefix(). const std::string & sofa::helper::Utils::getSofaPathPrefix ; (; ). static . Get the path to the ""root"" path of Sofa (i.e. the build directory or the installation prefix). ; WarningThis function is meant to be used only by the applications that are distributed with SOFA ; ReturnsThe ABSOLUTE path of Sofa build dir (or install dir) . ◆ getSofaPathTo(). const std::string sofa::helper::Utils::getSofaPathTo ; (; const std::string & ; pathFromBuildDir). static . Construct a path based on the build dir path of Sofa. ; WarningThis function is meant to be used only by the applications that are distributed with SOFA: it uses getSofaPathPrefix() ; ReturnsThe ABSOLUTE path of anything in Sofa build dir (or install dir) . ◆ getSofaUserLocalDirectory(). const std::string & sofa::helper::Utils::getSofaUserLocalDirectory ; (; ). static . Get the path to the SOFA directory into the current user local config directory. . ◆ getUserLocalDirectory(). const std::string & sofa::helper::Utils::getUserLocalDirectory ; (; ). static . Get the path to the current user local config directory. . ◆ narrowString(). std::string sofa::helper::Utils::narrowString ; (; const std::wstring & ; ws). static . Convert a wstring to a string. ; ReturnsThe converted string on",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html:2820,install,install,2820,api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,1,['install'],['install']
Deployability,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:12091,update,updateInternal,12091,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(WriteState, core::objectmodel::BaseObject)sofa::component::playback::WriteState; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; timeToTestEnergyIncreasesofa::component::playback::WriteStateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; validInitsofa::component::playback::WriteStateprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteState()sofa::component::playback::WriteStateprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~WriteState() overridesofa::component::playback::WriteStateprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:11011,update,updateInternal,11011,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(GenericConstraintCorrection, core::behavior::BaseConstraintCorrection)sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection; sofa::core::behavior::BaseConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintCorrection() overridesofa::core::behavior::BaseConstraintCorrectionprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~GenericConstraintCorrection() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:14196,update,updateInternal,14196,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >protected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html:11228,update,updateInternal,11228,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited)sofa::component::engine::generate::MeshClosingEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; trianglessofa::component::engine::generate::MeshClosingEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSeqIndex typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshClosingEngine() overridesofa::component::engine::generate::MeshClosingEngine< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:13683,update,updateInternal,13683,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DefaultVisualManagerLoop, sofa::core::visual::VisualLoop)sofa::simulation::DefaultVisualManagerLoop; sofa::core::visual::VisualLoop::SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DefaultVisualManagerLoop() overridesofa::simulation::DefaultVisualManagerLoopprotected; ~VisualLoop() overridesofa::core::visual::VisualLoopinlineprotected; ~VisualModel() overridesofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:12082,update,updateLinks,12082,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['update'],['updateLinks']
Deployability,"::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SOFA_TEMPLATE(TopologyBoundingTrasher, DataTypes), core::objectmodel::BaseObject)sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetraModifiersofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; TopologyBoundingTrasher()sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleModifiersofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; Vec6 typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; VecCoord typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector3 typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~TopologyBoundingTrasher() overridesofa::component::topology::utility::TopologyBoundin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:11840,update,updateInternal,11840,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['update'],['updateInternal']
Deployability,"::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SpotLight, PositionalLight)sofa::gl::component::shader::SpotLight; sofa::gl::component::shader::PositionalLight::SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SpotLight()sofa::gl::component::shader::SpotLight; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Light() overridesofa::gl::component::shader::Lightprotected; ~PositionalLight() overridesofa::gl::component::shader::PositionalLight; ~SpotLight() overridesofa::gl::component::shader::SpotLight; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:15582,update,updateLinks,15582,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,3,['update'],"['updateLinks', 'updateVisual']"
Deployability,"::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:2255,update,updateVisual,2255,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,2,['update'],"['update', 'updateVisual']"
Deployability,"::system::PluginManager::addOnPluginCleanupCallbacks ; (; const std::string & ; key, . std::function< void()> ; callback . ). ◆ addOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::addOnPluginLoadedCallback ; (; const std::string & ; key, . std::function< void(const std::string &, const Plugin &)> ; callback . ). ◆ checkDuplicatedPlugin(). bool sofa::helper::system::PluginManager::checkDuplicatedPlugin ; (; const Plugin & ; plugin, . const std::string & ; pluginPath . ). ◆ cleanup(). void sofa::helper::system::PluginManager::cleanup ; (; ). ◆ findPlugin(). std::string sofa::helper::system::PluginManager::findPlugin ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . int ; maxRecursiveDepth = 3 . ). ◆ getDefaultSuffix(). std::string sofa::helper::system::PluginManager::getDefaultSuffix ; (; ). static . Get the default suffix applied to plugin names to find the actual lib to load Returns ""_d"" in debug configuration and an empty string otherwise . Get the default suffix applied to plugin names to find the actual lib to load (depends on platform, version, debug/release build) . ◆ getEntryFromPlugin(). template<typename Entry > . bool sofa::helper::system::PluginManager::getEntryFromPlugin ; (; const Plugin * ; plugin, . Entry & ; entry . ). inline . ◆ getInstance(). PluginManager & sofa::helper::system::PluginManager::getInstance ; (; ). static . ◆ getPlugin(). Plugin * sofa::helper::system::PluginManager::getPlugin ; (; const std::string & ; plugin, . const std::string & ; = getDefaultSuffix(), . bool ; = true . ). ◆ getPluginByName(). Plugin * sofa::helper::system::PluginManager::getPluginByName ; (; const std::string & ; pluginName). ◆ getPluginMap(). PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; plu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:4390,configurat,configuration,4390,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['configurat'],['configuration']
Deployability,"::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; TextCoords2D typedefsofa::component::topology::container::grid::GridTopology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:38312,update,updateInternal,38312,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,4,['update'],['updateInternal']
Deployability,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13847,update,updateInternal,13847,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13886,update,updateVisual,13886,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,1,['update'],['updateVisual']
Deployability,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13886,update,updateVisual,13886,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,1,['update'],['updateVisual']
Deployability,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13886,update,updateVisual,13886,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,1,['update'],['updateVisual']
Deployability,":AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Function details. ◆ defaultPerformerType(). virtual std::string sofa::gui::common::ConstraintAttachOperation::defaultPerformerType ; (; ). inlineprotectedvirtual . Reimplemented from sofa::gui::common::AttachOperation. ◆ getDescription(). static std::string sofa::gui::common::ConstraintAttachOperation::getDescription ; (; ). inlinestatic . sofaguicommonConstraintAttachOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html:2665,release,released,2665,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,1,['release'],['released']
Deployability,":Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; StiffnessMatrix typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; TriangleFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html:23251,update,updateInternal,23251,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,1,['update'],['updateInternal']
Deployability,":Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergeMeshes, DataTypes), core::DataEngine)sofa::component::engine::generate::MergeMeshes< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MergeMeshes< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::generate::MergeMeshes< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vf_edgessofa::component::engine::generate::MergeMeshes< DataTypes >; vf_hexahedrasofa::component::engine::generate::MergeMeshes< DataTypes >; vf_polygonssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_positionssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_quadssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_tetrahedrasofa::component::engine::generate::MergeMeshes< DataType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:13641,update,update,13641,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,1,['update'],['update']
Deployability,":Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergePoints, DataTypes), core::DataEngine)sofa::component::engine::generate::MergePoints< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MergePoints< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergePoints() overridesofa::component::engine::generate::MergePoints< DataTypes >inlineprotec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html:12645,update,update,12645,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html,1,['update'],['update']
Deployability,":Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ProximityROI, DataTypes), core::DataEngine)sofa::component::engine::select::ProximityROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::select::ProximityROI< DataTypes >; Vec6 typedefsofa::component::engine::select::ProximityROI< DataTypes >; VecCoord typedefsofa::component::engine::select::ProximityROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html:13375,update,update,13375,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,1,['update'],['update']
Deployability,":Base; setReferencePosition(sofa::type::Transform< SReal > &) overridesofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >inlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ForceFeedback, core::behavior::BaseController)sofa::component::haptics::ForceFeedback; sofa::core::behavior::BaseController::SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >)sofa::component::haptics::NullForceFeedbackT< TDataTypes >; sofa::component::haptics::MechanicalStateForceFeedback::SOFA_CLASS(SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback)sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >; sofa::component::haptics::ForceFeedback::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html:11412,update,updateInternal,11412,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine)sofa::component::engine::select::PlaneROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::PlaneROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::PlaneROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec10 typedefsofa::component::engine::select::PlaneROI< DataTypes >; Vec3 typedefsofa::component::engine::select::PlaneROI< DataTypes >; Vec6 typedefsofa::component::engine::select::PlaneROI< DataTypes >; VecCoord typedefsofa::component::engine::select::PlaneROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:14861,update,update,14861,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['update'],['update']
Deployability,":Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doUpdate ()=0;  Where you put your engine's impl. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:14722,update,update,14722,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['update'],['update']
Deployability,":BaseLinkinline; setPath(const std::string &path)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; setValidator(ValidatorFn fn)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink()sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink(const BaseLink::InitLink< OwnerType > &init)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink(const BaseLink::InitLink< OwnerType > &init, DestPtr val)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; storePath() constsofa::core::objectmodel::BaseLinkinline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >static; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; TraitsContainer typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; TraitsDestPtr typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; TraitsValueType typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValidatorFn typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; ValueType typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~SingleLink()sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlinevirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html:10042,update,updateCounter,10042,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,2,['update'],"['updateCounter', 'updateLinks']"
Deployability,":BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateEdges()sofa::component::topology::container::constant::CubeTopologyprotected; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePoints()sofa::component::topology::container::constant::CubeTopologyprotected; updateQuads()sofa::component::topology::container::constant::CubeTopologyprotected; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html:38300,update,updateQuads,38300,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,2,['update'],['updateQuads']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x3Variable() overridesofa::gl::component::shader::OglMatrix4x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html:13943,update,updateLinks,13943,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,1,['update'],['updateLinks']
Deployability,":BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void copyFromBaseVector (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void copyToBaseMatrix (linearalgebra::BaseMatrix *dest, core::ConstMatrixDerivId src, unsigned int &offset) override;  Copy data to a global BaseMatrix from the state stored in a local vector. More...;  ; void addToBaseVector (linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void addFromBaseVectorSameSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void addFromBaseVectorDifferentSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; virtual type::Vec3 getTranslation () const;  ; virtual type::Vec3 getRotation () const;  ; type::Vec3 getScale () const override;  ; Integration related methods; void beginIntegration (SReal dt) override;  Called at the beginning of each integration step. More...;  ; void endIntegration (const core::ExecParams *params, SReal dt) override;  Called at the end of each integration step. More...;  ; void accumulateForce (const core::ExecParams *params, core::VecDerivId f=core::VecDerivId::force()) override;  Add stored external forces to F. More...;  ; void vAvail (const core::ExecParams *params, core::VecCoordId &v) override;  Increment the index of the given VecCoordId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAvail (const core::ExecParams *params, core::VecDerivId &v) override;  Increment the index of the given VecDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:13683,integrat,integration,13683,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['integrat'],['integration']
Deployability,":DataContentValue< T, true > Class Template Reference . #include <DataContentValue.h>. Public Member Functions;  DataContentValue ();  ;  DataContentValue (const T &value);  ;  DataContentValue (const DataContentValue &dc);  ;  ~DataContentValue ();  ; DataContentValue & operator= (const DataContentValue &dc);  ; T * beginEdit ();  ; void endEdit ();  ; const T & getValue () const;  ; void setValue (const T &value);  ; void release ();  . Constructor details. ◆ DataContentValue() [1/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; ). inline . ◆ DataContentValue() [2/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; const T & ; value). inlineexplicit . ◆ DataContentValue() [3/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; const DataContentValue< T, true > & ; dc). inline . ◆ ~DataContentValue(). template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::~DataContentValue ; (; ). inline . Function details. ◆ beginEdit(). template<class T > . T* sofa::core::objectmodel::DataContentValue< T, true >::beginEdit ; (; ). inline . ◆ endEdit(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, true >::endEdit ; (; ). inline . ◆ getValue(). template<class T > . const T& sofa::core::objectmodel::DataContentValue< T, true >::getValue ; (; ); const. inline . ◆ operator=(). template<class T > . DataContentValue& sofa::core::objectmodel::DataContentValue< T, true >::operator= ; (; const DataContentValue< T, true > & ; dc). inline . ◆ release(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, true >::release ; (; ). inline . ◆ setValue(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, true >::setValue ; (; const T & ; value). inline . sofacoreobjectmodelDataContentValue< T, true >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4.html:1876,release,release,1876,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4.html,2,['release'],['release']
Deployability,":DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html:12457,update,update,12457,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,2,['update'],['update']
Deployability,":DirectionProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SparseMatrix typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~DirectionProjectiveConstraint()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:18503,update,updateLinks,18503,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['update'],['updateLinks']
Deployability,":EdgeSetGeometryAlgorithms< DataTypes >; sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; topoContainersofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:31702,update,updateInternal,31702,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['update'],['updateInternal']
Deployability,":FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DistanceFromTargetMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void createTarget (unsigned index, const InCoord &position, Real distance);  Add a target with a desired distance. More...;  ; void updateTarget (unsigned index, const InCoord &position);  Update the position of a target. More...;  ; void updateTarget (unsigned index, SReal x, SReal y, SReal z) override;  ; void clear ();  Remove all targets. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:5633,update,updateTarget,5633,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['update'],['updateTarget']
Deployability,":FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  UniformLagrangianConstraint ();  ; virtual type::vector< std::string > getConstraintIdentifiers () override final;  ; virtual type::vector< std::string > getStopperIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:15514,update,update,15514,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['update'],['update']
Deployability,":InDataTypes >. ◆ createMapping(). template<class TCollisionModel > . MMechanicalState* sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::createMapping ; (; const char * ; = ""contactPoints""). inlinevirtual . Implements sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >. ◆ resize(). template<class TCollisionModel > . void sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::resize ; (; Size ; ). inlinevirtual . Implements sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >. ◆ setCollisionModel(). template<class TCollisionModel > . void sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::setCollisionModel ; (; MCollisionModel * ; model). inline . ◆ update(). template<class TCollisionModel > . void sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::update ; (; ). inlinevirtual . Implements sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >. ◆ updateX0(). template<class TCollisionModel > . void sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::updateX0 ; (; ). inline . ◆ updateXfree(). template<class TCollisionModel > . void sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >::updateXfree ; (; ). inlinevirtual . Implements sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >. sofacomponentcollisionresponsemapperIdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >; Generated on Mon Nov 11 2024 02:31:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html:4582,update,update,4582,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,3,['update'],"['update', 'updateXfree']"
Deployability,":MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const Coord_t< In > &a, const Coord_t< In > &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:21021,update,update,21021,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,2,['update'],['update']
Deployability,":MultiVecDerivId, const linearalgebra::BaseVector *);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void computeResidual (const core::ExecParams *params, linearalgebra::BaseVector *f);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void checkLinearSystem ();  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >; SingleLink< OrderingMethodAccessor, core::behavior::BaseOrderingMethod, BaseLink::FLAG_STRONGLINK > l_orderingMethod;  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; DeprecatedAndRemoved d_orderingMethod;  ; std::string m_selectedOrderingMethod;  ; std::unique_ptr< BaseEigenSolverProxy > m_solver;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real > Mfiltered;  ; std::unique_ptr< EigenSparseMatrixMap > m_map;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real >::VecIndex MfilteredrowBegin;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real >::VecIndex MfilteredcolsIndex;  ;  Static Protected Attributes inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; static constexpr unsigned int s_defaultOrderingMethod;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; Eigen::ComputationInfo getSolverInfo () const;  ; void updateSolverOderingMethod ();  . Function details. ◆ SOFA_CLASS(). template<class TBlockType > . sofa::component::linearsolver::direct::EigenSimplicialLDLT< TBlockType >::SOFA_CLASS ; (; SOFA_TEMPLATE(EigenSimplicialLDLT< TBlockType >, TBlockType) ; , . SOFA_TEMPLATE2(EigenDirectSparseSolv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html:6111,update,updateSolverOderingMethod,6111,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html,1,['update'],['updateSolverOderingMethod']
Deployability,":OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)))sofa::gl::component::shader::OglFloat2Attribute; OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; ~OglFloat2Attribute()sofa::gl::component::shader::OglFloat2Attributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:15803,update,updateVisual,15803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['update'],['updateVisual']
Deployability,":OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)))sofa::gl::component::shader::OglFloat3Attribute; OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; ~OglFloat3Attribute()sofa::gl::component::shader::OglFloat3Attributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:15803,update,updateVisual,15803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['update'],['updateVisual']
Deployability,":OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)))sofa::gl::component::shader::OglFloat4Attribute; OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; ~OglFloat4Attribute()sofa::gl::component::shader::OglFloat4Attributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:15803,update,updateVisual,15803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['update'],['updateVisual']
Deployability,":OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::Ogl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14780,update,updateLinks,14780,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,1,['update'],['updateLinks']
Deployability,":Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; testValidity(collision::geometry::Sphere &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistanceinline; testValidity(collision::geometry::Point &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistance; testValidity(collision::geometry::Line &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistance; testValidity(collision::geometry::Triangle &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistance; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLMDFilterssofa::component::collision::detection::intersection::LocalMinDistance; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProximityIntersection() overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlineprotected; ~DiscreteInters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:23067,update,updateLinks,23067,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['update'],['updateLinks']
Deployability,":ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVariable, OglVariable< float >)sofa::gl::component::shader::OglFloatVariable; OglVariable< float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< float >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< float >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVariable()sofa::gl::component::shader::OglFloatVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:13312,update,updateInternal,13312,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,1,['update'],['updateInternal']
Deployability,":Tetra2TriangleTopologicalMapping::noNewTriangles. protected . Constructor details. ◆ Tetra2TriangleTopologicalMapping(). sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::Tetra2TriangleTopologicalMapping ; (; ). protected . Constructor. . ◆ ~Tetra2TriangleTopologicalMapping(). sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::~Tetra2TriangleTopologicalMapping ; (; ). overrideprotecteddefault . Destructor. ; Does nothing. . Function details. ◆ checkTopologies(). bool sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::checkTopologies ; (; ). overridevirtual . Method to check the topology mapping maps regarding the upper topology. ; Reimplemented from sofa::core::topology::TopologicalMapping. ◆ getFromIndex(). Index sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::getFromIndex ; (; Index ; ind). overridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ init(). void sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::init ; (; void ; ). overridevirtual . Initializes the target BaseTopology from the source BaseTopology. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::SOFA_CLASS ; (; Tetra2TriangleTopologicalMapping ; , . sofa::core::topology::TopologicalMapping ;  . ). ◆ updateTopologicalMappingTopDown(). void sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::updateTopologicalMappingTopDown ; (; ). overridevirtual . Translates the TopologyChange objects from the source to the target. ; Translates each of the TopologyChange objects waiting in the source list so that they have a meaning and reflect the effects of the first topology changes on the second topology. ; Implements sofa::core::topology::TopologicalMapping. sofacomponenttopologymappingTetra2TriangleTopologicalMapping; Generated on Mon Nov 11 2024 03:10:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html:20128,update,updateTopologicalMappingTopDown,20128,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,2,['update'],['updateTopologicalMappingTopDown']
Deployability,":TrianglePressureForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initTriangleInformation(). template<class DataTypes > . void sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::initTriangleInformation. protected . ◆ setPressure(). template<class DataTypes > . void sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::setPressure ; (; Deriv ; _pressure). inline . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TrianglePressureForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). ◆ updateTriangleInformation(). template<class DataTypes > . void sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >::updateTriangleInformation. protected . sofacomponentmechanicalloadTrianglePressureForceField; Generated on Mon Nov 11 2024 02:54:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:28806,update,updateTriangleInformation,28806,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,2,['update'],['updateTriangleInformation']
Deployability,":VisualManager Class Reference . #include <VisualManager.h>. Inheritance diagram for sofa::core::visual::VisualManager:. [legend]. Public Member Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html:1222,update,updateVisual,1222,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,2,['update'],"['update', 'updateVisual']"
Deployability,":VisualModelImpl::d_rotation. Initial Rotation of the object. . ◆ d_scale. Data< Vec3Real > sofa::component::visual::VisualModelImpl::d_scale. Initial Scale of the object. . ◆ d_scaleTex. Data< TexCoord > sofa::component::visual::VisualModelImpl::d_scaleTex. Scale of the texture. . ◆ d_srgbTexturing. Data< bool > sofa::component::visual::VisualModelImpl::d_srgbTexturing. ◆ d_texturename. sofa::core::objectmodel::DataFileName sofa::component::visual::VisualModelImpl::d_texturename. ◆ d_translation. Data< Vec3Real > sofa::component::visual::VisualModelImpl::d_translation. Initial Translation of the object. . ◆ d_translationTex. Data< TexCoord > sofa::component::visual::VisualModelImpl::d_translationTex. Translation of the texture. . ◆ d_triangles. core::topology::TriangleData< VecVisualTriangle > sofa::component::visual::VisualModelImpl::d_triangles. triangles of the model . ◆ d_updateNormals. Data<bool> sofa::component::visual::VisualModelImpl::d_updateNormals. True if normals should be updated at each iteration. . ◆ d_updateTangents. Data<bool> sofa::component::visual::VisualModelImpl::d_updateTangents. True if tangents should be updated at each iteration. . ◆ d_useNormals. Data<bool> sofa::component::visual::VisualModelImpl::d_useNormals. True if normals should be read from file. . ◆ d_vbitangents. core::topology::PointData< VecCoord > sofa::component::visual::VisualModelImpl::d_vbitangents. tangents for normal mapping . ◆ d_vertices2. Data< VecCoord > sofa::component::visual::VisualModelImpl::d_vertices2. vertices of the model (only if vertices have multiple normals/texcoords, otherwise positions are used) . ◆ d_vertNormIdx. Data< type::vector<visual_index_type> > sofa::component::visual::VisualModelImpl::d_vertNormIdx. Similarly this vector store which input normal is used for each vertex If it is empty then each vertex correspond to one normal . ◆ d_vertPosIdx. Data< type::vector<visual_index_type> > sofa::component::visual::VisualModelImpl::d_vertPosIdx. If vert",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:30350,update,updated,30350,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['update'],['updated']
Deployability,":VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:4037,update,updateVisual,4037,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,2,['update'],['updateVisual']
Deployability,":behavior::Constraint, DataTypes))sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; sofa::core::behavior::Constraint::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Constraint, DataTypes), BaseConstraint, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::Constraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::Constraint< DataTypes >virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; UniformLagrangianConstraint()sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:16423,update,updateLinks,16423,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['update'],['updateLinks']
Deployability,":behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; xPsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:17726,update,updateInternal,17726,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['update'],['updateInternal']
Deployability,":behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; Tetrahedron typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; tetrahedronInfosofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected; updateTopologyInformation()sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecCoord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMat3x3 typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetrahedronRestInformation typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; writeDatas(std::map< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:23358,update,updateMatrixsofa,23358,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['update'],['updateMatrixsofa']
Deployability,":collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has chang",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:16939,update,update,16939,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['update'],['update']
Deployability,":collision::response::mapper::BaseContactMapper< TDataTypes > Class Template Referenceabstract . #include <BaseContactMapper.h>; Base class common to all mappers able to provide a MechanicalState of a given type. ; More... Inheritance diagram for sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >; Base class common to all mappers able to provide a MechanicalState of a given type. . Public Member Functions; virtual ~BaseContactMapper ();  ; virtual MMechanicalState * createMapping (const char *name=""contactPoints"")=0;  ; virtual void cleanup ()=0;  ; virtual void resize (Size size)=0;  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  ; virtual void update ()=0;  ; virtual void updateXfree ()=0;  . Static Public Member Functions; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; template<class TCollisionModel > ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Constructor details. ◆ ~BaseContactMapper(). template<class TDataTypes > . virtual sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >::~BaseContactMapper ; (; ). inlinevirtual . Function details. ◆ addPoint(). template<class TDataTypes > . virtual Index sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >::addPoint ; (; const Coord & ; , . Index ; , . Real & ;  . ). inlinevirtual . Adding a point of the global referentiel to the mapping. . ◆ addPointB() [1/2]. template<class T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_base_contact_mapper.html:1355,update,update,1355,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_base_contact_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_base_contact_mapper.html,2,['update'],"['update', 'updateXfree']"
Deployability,":component::mass::DiagonalMass< DataTypes, GeometricalTypes >::DiagonalMass. protected . ◆ ~DiagonalMass(). template<class DataTypes , class GeometricalTypes = DataTypes> . sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::~DiagonalMass ; (; ). overrideprotecteddefault . Function details. ◆ accFromF(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::accFromF ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; a, . const DataVecDeriv & ; f . ). overridevirtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ addForce(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addGravityToV(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::addGravityToV ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; d_v . ). overridevirtual . Reimplemented from sofa::core::behavior::Mass< DataTypes >. ◆ addMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::addMass ; (; const MassType & ; mass). ◆ addMDx(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::addMDx ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f, . const DataVecDeriv ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:32514,update,update,32514,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['update'],['update']
Deployability,":component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html:16369,update,updateInternal,16369,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateVisual']"
Deployability,":container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::addQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order, . QuadraturePointArray ; qpa . ). add a quadrature method in the map . ◆ getIntegrationOrders(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::IntegrationOrder > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getIntegrationOrders ; (; const QuadratureMethod ; qt); const. returns the quadrature integration orders available for a given method . ◆ getQuadratureMethod(). template<typename Real , int N> . NumericalIntegrationDescriptor< Real, N >::QuadraturePointArray sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order . ); const. returns the set of quadrature points associated with a given quadrature method and integration order . ◆ getQuadratureMethods(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::QuadratureMethod > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethods. returns all the indices corresponding to all available quadrature methods . Enum details. ◆ QuadratureMethod. template<typename Real , int N> . enum sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor::QuadratureMethod. EnumeratorGAUSS_LEGENDRE_METHOD ; GAUSS_LOBATO_ME",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:2815,integrat,integration,2815,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['integrat'],['integration']
Deployability,":copyToBaseVector ; (; linearalgebra::BaseVector * ; dest, . ConstVecId ; src, . unsigned int & ; offset . ). pure virtual . Copy data to a global BaseVector from the state stored in a local vector. ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ copyToBuffer(). virtual void sofa::core::behavior::BaseMechanicalState::copyToBuffer ; (; SReal * ; dst, . ConstVecId ; src, . unsigned int ; n . ); const. pure virtual . Copy data to an external, user-allocated buffer. ; Exact element count must be provided for consistency checks. . ◆ endIntegration(). virtual void sofa::core::behavior::BaseMechanicalState::endIntegration ; (; const ExecParams * ; params, . SReal ;  . ). inlinevirtual . Called at the end of each integration step. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ exportGnuplot(). virtual void sofa::core::behavior::BaseMechanicalState::exportGnuplot ; (; SReal ; ). inlinevirtual . Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ getConstraintJacobian(). virtual void sofa::core::behavior::BaseMechanicalState::getConstraintJacobian ; (; const ConstraintParams * ; params, . sofa::linearalgebra::BaseMatrix * ; J, . unsigned int & ; off . ). pure virtual . build the jacobian of the constraint in a baseMatrix ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ getConstraintJacobianTimesVecDeriv(). virtual SReal sofa::core::behavior::BaseMechanicalState::getConstraintJacobianTimesVecDeriv ; (; unsigned int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:32200,integrat,integration,32200,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Deployability,":core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13897,pipeline,pipeline,13897,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['pipeline'],['pipeline']
Deployability,":core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:21030,update,updateInternal,21030,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['update'],['updateInternal']
Deployability,":core::behavior::SingleStateAccessor< TDataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, TDataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ForceField< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< TDataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< TDataTypes >protected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:14434,update,updateLinks,14434,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['update'],['updateLinks']
Deployability,":core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; PairStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< TDataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(PairInteractionProjectiveConstraintSet, TDataTypes), BaseInteractionProjectiveConstraintSet, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes))sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; sofa::StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; sofa::core::behavior::StateAccessor::StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~PairInteractionProjectiveConstraintSet() overridesofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >protected; ~PairStateAcc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:16356,update,updateInternal,16356,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['update'],['updateInternal']
Deployability,":core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(ConstantForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::ConstantForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateFromForcesVector()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateFromIndices()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateFromTotalForce()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecIndex typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:17456,update,updateFromForcesVector,17456,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['update'],['updateFromForcesVector']
Deployability,":core::collision::Intersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() constsofa::core::collision::Intersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Intersection() overridesofa::core::collision::Intersectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:10532,update,updateInternal,10532,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:10064,update,updateInternal,10064,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMaterial() overridesofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:10320,update,updateInternal,10320,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MathOp, VecT), core::DataEngine)sofa::component::engine::transform::MathOp< VecT >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Value typedefsofa::component::engine::transform::MathOp< VecT >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecValue typedefsofa::component::engine::transform::MathOp< VecT >; vf_inputssofa::component::engine::transform::MathOp< VecT >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html:12292,update,update,12292,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,1,['update'],['update']
Deployability,":core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ClusteringEngine, DataTypes), core::DataEngine)sofa::component::engine::analyze::ClusteringEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VD typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; VecCoord typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VI typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; VVD typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; VVI typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html:13149,update,updateIfDirty,13149,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,1,['update'],['updateIfDirty']
Deployability,":core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:15048,update,update,15048,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['update'],['update']
Deployability,":core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPathType(PathType pathType)sofa::core::objectmodel::DataFileName; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const std::string &value)sofa::core::objectmodel::Data< std::string >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; templateName()sofa::core::objectmodel::Data< std::string >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updatePath()sofa::core::objectmodel::DataFileNameprotected; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< std::string >; ValueType typedefsofa::core::objectmodel::Data< std::string >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< std::string >inline; ~DataFileName() override=defaultsofa::core::objectmodel::DataFileName; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html:9746,update,update,9746,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html,4,['update'],"['update', 'updateIfDirty', 'updatePath', 'updateValueFromLink']"
Deployability,":core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; PairStateAccessor< DataTypes, DataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes))sofa::component::engine::select::NearestPointROI< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~NearestPoint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:15445,update,update,15445,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['update'],['update']
Deployability,":core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:3155,update,update,3155,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['update'],['update']
Deployability,":core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; removed(DestPtr ptr, std::size_t index)=0sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >protectedpure virtual; removePath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; rend() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; set(Base *baseptr, size_t index=0)sofa::core::objectmodel::BaseLinkinline; setFlag(LinkFlagsEnum flag, bool b)sofa::core::objectmodel::BaseLinkinline; setHelp(const std::string &val)sofa::core::objectmodel::BaseLinkinline; setLinkedBase(Base *link)sofa::core::objectmodel::BaseLink; setName(const std::string &name)sofa::core::objectmodel::BaseLinkinline; setOwner(OwnerType *owner)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::setOwner(Base *owner)sofa::core::objectmodel::BaseLinkinline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; storePath() constsofa::core::objectmodel::BaseLinkinline; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TraitsContainer typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; TraitsDestPtr typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; TraitsValueType typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValueType typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html:7465,update,updateCounter,7465,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,2,['update'],"['updateCounter', 'updateLinks']"
Deployability,":engine::select::ValuesFromPositions< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::ValuesFromPositions< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::ValuesFromPositions< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ValuesFromPositions< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). ◆ updateValues(). template<class DataTypes > . void sofa::component::engine::select::ValuesFromPositions< DataTypes >::updateValues ; (; TempData & ; _data). protected . ◆ updateVectors(). template<class DataTypes > . void sofa::component::engine::select::ValuesFromPositions< DataTypes >::updateVectors ; (; TempData & ; _data). protected . ◆ valueFromEdge(). template<class DataTypes > . ValuesFromPositions< DataTypes >::Real sofa::component::engine::select::ValuesFromPositions< DataTypes >::valueFromEdge ; (; const Edge & ; e, . const TempData & ; data . ). protected . ◆ valueFromPoint(). template<class DataTypes > . ValuesFromPositions< DataTypes >::Real sofa::component::engine::select::ValuesFromPositions< DataTypes >::valueFromPoint ; (; const PointID & ; pid, . const TempData & ; data . ). protected . ◆ valueFromPosition(). template<class DataTypes > . ValuesFromPositions< DataTypes >::Real sofa::component::engine::select::ValuesFromPositions< DataTypes >::valueFromPosition ; (; const CPos & ; p, . const TempData & ; data . ). protected . ◆ valueFromTetrahedron(). template<class DataTypes > . ValuesFromPositions< DataTypes >::Real sofa::component::engine::select::ValuesFromPositions< DataTypes >::valueFromTetrahedron ; (; const Tetra & ; t, . const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html:24324,update,updateVectors,24324,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,1,['update'],['updateVectors']
Deployability,:gl::component::rendering3d::OglModelprotected; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; texturessofa::gl::component::rendering3d::OglModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesRevisionsofa::gl::component::rendering3d::OglModelprotected; update()sofa::gl::component::rendering3d::MergeVisualModelsinlineprotected; updateBuffers() overridesofa::gl::component::rendering3d::OglModelvirtual; updateEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateVertexBuffer()sofa::gl::component::rendering3d::OglModel; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useEdgessofa::gl::component::rendering3d::OglModelprotected; useQuadssofa::gl::component::rendering3d::OglModelprotected; useTopologysofa::component::visual::VisualModelImpl; useTrianglessofa::gl::component::rendering3d::OglModelprotected; vbosofa::gl::component::rendering3d::OglModelprotected; VBOGenDonesofa::gl::component::rendering3d::OglModelprotected; Vec3Real typedefsofa::component::visual::VisualModelImpl; VecCoord typedefsofa::component::visual::VisualModelImpl; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::visual::VisualModelImpl; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTexCoord typedefsofa::component::visual::VisualModelImpl; VecVisualEdge typedefsofa::component::visual::VisualModelImpl; VecVisualQuad typedefsofa::component::visual::VisualModelImpl; VecVisualTriangle typedefsofa::co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:27857,update,updateVisual,27857,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,1,['update'],['updateVisual']
Deployability,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html:1948,update,updateDataValue,1948,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,2,['update'],"['updateDataValue', 'updateWidgetValue']"
Deployability,":helper::Decompose< Real >::SVD ; (; const type::Mat< 3, 3, Real > & ; F, . type::Mat< 3, 3, Real > & ; U, . type::Vec< 3, Real > & ; S, . type::Mat< 3, 3, Real > & ; V . ). static . SVD F = U*F_diagonal*V based on the Eigensystem decomposition of FtF all eigenvalues are positive Warning U & V are not guarantee to be rotations (they can be reflexions), eigenvalues are not sorted . ◆ SVD_stable() [1/3]. template<class Real > . bool sofa::helper::Decompose< Real >::SVD_stable ; (; const type::Mat< 2, 2, Real > & ; F, . type::Mat< 2, 2, Real > & ; U, . type::Vec< 2, Real > & ; S, . type::Mat< 2, 2, Real > & ; V . ). static . ◆ SVD_stable() [2/3]. template<class Real > . bool sofa::helper::Decompose< Real >::SVD_stable ; (; const type::Mat< 3, 2, Real > & ; F, . type::Mat< 3, 2, Real > & ; U, . type::Vec< 2, Real > & ; S, . type::Mat< 2, 2, Real > & ; V . ). static . SVD based on the Eigensystem decomposition of FtF with robustness against inversion and degenerate configurations Returnstrue in a degenerate case U & V are rotations Warning eigenvalues are not guaranteed to be positive, eigenvalues are not sorted . ◆ SVD_stable() [3/3]. template<class Real > . bool sofa::helper::Decompose< Real >::SVD_stable ; (; const type::Mat< 3, 3, Real > & ; F, . type::Mat< 3, 3, Real > & ; U, . type::Vec< 3, Real > & ; S, . type::Mat< 3, 3, Real > & ; V . ). static . SVD based on the Eigensystem decomposition of FtF with robustness against inversion and degenerate configurations Returnstrue iff the stabilization processed an inverted rotation or a degenerate case U & V are rotations Warning eigenvalues are not guaranteed to be positive, eigenvalues are not sorted . ◆ SVDGradient_dUdV() [1/2]. template<class Real > . bool sofa::helper::Decompose< Real >::SVDGradient_dUdV ; (; const type::Mat< 3, 2, Real > & ; U, . const type::Vec< 2, Real > & ; S, . const type::Mat< 2, 2, Real > & ; V, . const type::Mat< 3, 2, Real > & ; dM, . type::Mat< 3, 2, Real > & ; dU, . type::Mat< 2, 2, Real > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html:23297,configurat,configurations,23297,api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,1,['configurat'],['configurations']
Deployability,":map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ScaleTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html:2560,update,update,2560,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,1,['update'],['update']
Deployability,":mechanicalload::PlaneForceField< DataTypes >::PlaneForceField. protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. This addDForce version directly gives access to df and dx vectors through its parameters. Parameters. mparams; dfOutput vector to fill, result of ; dxInput vector used to compute . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implements sofa::core::behavior::ForceField< DataTypes >. ◆ addKToMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::addKToMatrix ; (; const core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::PlaneForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html:23694,update,update,23694,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,1,['update'],['update']
Deployability,":mechanicalload::SphereForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; sphereCentersofa::component::mechanicalload::SphereForceField< DataTypes >; SphereForceField()sofa::component::mechanicalload::SphereForceField< DataTypes >protected; sphereRadiussofa::component::mechanicalload::SphereForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; stiffnesssofa::component::mechanicalload::SphereForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStiffness(const VecCoord &x)sofa::component::mechanicalload::SphereForceField< DataTypes >virtual; VecCoord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< DataTypes >protected; ~StateAccessor() override=defaul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:16858,update,updateStiffness,16858,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['update'],['updateStiffness']
Deployability,":nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:16184,update,update,16184,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['update'],['update']
Deployability,":objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMass, StateAccessor)sofa::core::behavior::BaseMass; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMass() override=defaultsofa::core::behavior::BaseMassprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:11599,update,updateInternal,11599,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ConstraintSolver, objectmodel::BaseObject)sofa::core::behavior::ConstraintSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solveConstraint(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())sofa::core::behavior::ConstraintSolvervirtual; solveSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; solveSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConstraintSolver() overridesofa::core::behavior::ConstraintSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:11635,update,updateInternal,11635,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,2,['update'],"['updateInternal', 'updateLinks']"
Deployability,":objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualStyle, sofa::core::visual::VisualModel)sofa::component::visual::VisualStyle; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualParams typedefsofa::component::visual::VisualStyle; VisualStyle()sofa::component::visual::VisualStyleprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:11293,update,updateInternal,11293,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateVisual']"
Deployability,":objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:17878,update,update,17878,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['update'],['update']
Deployability,":objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(Spiral, DataTypes), core::DataEngine)sofa::component::engine::generate::Spiral< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spiral()sofa::component::engine::generate::Spiral< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec6 typedefsofa::component::engine::generate::Spiral< DataTypes >; VecCoord typedefsofa::component::engine::generate::Spiral< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~Spiral() overridesofa::component::engine::generate::Spiral< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html:12351,update,updateIfDirty,12351,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,3,['update'],"['updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability,":objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initializeResponseOptions(sofa::core::objectmodel::BaseContext *pipeline)sofa::component::collision::response::contact::CollisionResponseprotectedstatic; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::ContactManagerprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html:8744,pipeline,pipeline,8744,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,1,['pipeline'],['pipeline']
Deployability,":objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initializeResponseOptions(sofa::core::objectmodel::BaseContext *pipeline)sofa::component::collision::response::contact::CollisionResponseprotectedstatic; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; instancesofa::core::collision::CollisionAlgorithmprotected; Instance typedefsofa::core::collision::CollisionAlgorithm; intersectionMethodsofa::core::collision::ContactManagerprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:9036,pipeline,pipeline,9036,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['pipeline'],['pipeline']
Deployability,":objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ValuesFromPositions, DataTypes), core::DataEngine)sofa::component::engine::select::ValuesFromPositions< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateValues(TempData &_data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; updateVectors(TempData &_data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromEdge(const Edge &e, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromPoint(const PointID &pid, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromPosition(const CPos &p, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromTetrahedron(const Tetra &t, const TempData &data)sofa::component::engine::select::ValuesFromPositions< DataTypes >protected; valueFromTriangle(const Triangle &t, const Te",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html:14185,update,updateAllInputsIfDirty,14185,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,":objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(Tetra2TriangleTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra2TriangleTopologicalMapping()sofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Tetra2TriangleTopologicalMapping() override=defaultsofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:13151,update,updateInternal,13151,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,4,['update'],"['updateInternal', 'updateLinks', 'updateTopologicalMappingBottomUp', 'updateTopologicalMappingTopDown']"
Deployability,":objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html:17090,update,update,17090,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,1,['update'],['update']
Deployability,":objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17167,update,updateLinks,17167,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,1,['update'],['updateLinks']
Deployability,":odesolver::backward::NewmarkImplicitSolver::d_velocityDamping. Velocity decay coefficient (no decay if null) . ◆ pID. sofa::core::MultiVecDerivId sofa::component::odesolver::backward::NewmarkImplicitSolver::pID. protected . Constructor details. ◆ NewmarkImplicitSolver(). sofa::component::odesolver::backward::NewmarkImplicitSolver::NewmarkImplicitSolver ; (; ). protected . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the compliance for contact corrections. For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getPositionIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:18161,integrat,integrator,18161,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['integrat'],['integrator']
Deployability,":qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< T >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html:2134,update,updateDataValue,2134,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget-members.html,3,['update'],"['updateDataValue', 'updateVisibility', 'updateWidgetValue']"
Deployability,":qt::DisplayFlagsDataWidget, and sofa::gui::qt::DataFileNameWidget. ◆ setFilled(). void sofa::gui::qt::DataWidget::setFilled ; (; bool ; value). inline . method to warn if Data has not been filled at constructor. . ◆ setWidgetDirty. void sofa::gui::qt::DataWidget::setWidgetDirty ; (; bool ; b = true). slot . You call this slot anytime you want to specify that the widget value is out of sync with the underlying data value. . ◆ sizeWidget(). virtual unsigned int sofa::gui::qt::DataWidget::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::TableDataWidget< T, FLAGS >, sofa::gui::qt::GraphDataWidget< T >, and sofa::gui::qt::DisplayFlagsDataWidget. ◆ updateDataValue. void sofa::gui::qt::DataWidget::updateDataValue ; (; ). slot . Checks that widget has been edited emit DataOwnerDirty in case the name field has been modified . ◆ updateVisibility(). void sofa::gui::qt::DataWidget::updateVisibility ; (; ). ◆ updateWidgetValue. void sofa::gui::qt::DataWidget::updateWidgetValue ; (; ). slot . First checks that the widget is not currently being edited checks that the data has changed since the last time the widget has read the data value. ultimately read the data value. . ◆ WidgetDirty. void sofa::gui::qt::DataWidget::WidgetDirty ; (; bool ; ). signal . Emitted each time setWidgetDirty is called. You can also emit it if you want to tell the widget value is out of sync with the underlying data value. . ◆ writeToData(). virtual void sofa::gui::qt::DataWidget::writeToData ; (; ). protectedpure virtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::RadioDataWidget, sofa::gui::qt::SimpleDataWidget< T, Container >, sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >, sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >, sofa::gui::qt::rgbacolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html:8666,update,updateWidgetValue,8666,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,1,['update'],['updateWidgetValue']
Deployability,":simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::core::behavior::MultiMatrixAccessor * ; matrix). inline . ◆ getMatrixDimension() [2/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::Size * const ; nbRow, . sofa::Size * const ; nbCol, . sofa::core::behavior::MultiMatrixAccessor * ; matrix = nullptr . ). ◆ integrateVelocity(). void sofa::simulation::common::MechanicalOperations::integrateVelocity ; (; core::MultiVecDerivId ; res, . core::ConstMultiVecCoordId ; x, . core::ConstMultiVecDerivId ; v, . SReal ; dt . ). res = x + v.dt . ◆ multiVector2BaseVector(). void sofa::simulation::common::MechanicalOperations::multiVector2BaseVector ; (; core::ConstMultiVecId ; src, . linearalgebra::BaseVector * ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ multiVectorPeqBaseVector(). void sofa::simulation::common::MechanicalOperations::multiVectorPeqBaseVector ; (; core::MultiVecDerivId ; dest, . const linearalgebra::BaseVector * ; src, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ operator const core::MechanicalParams *(). sofa::simulation::common::MechanicalOperations::operator const core::MechanicalParams * ; (; ). inline . ◆ operator->(). core::MechanicalParams* sofa::simulation::common::MechanicalOperations::operator-> ; (; ). inline . ◆ print() [1/2]. void sofa::simulation::common::MechanicalOperations::print ; (; core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:12648,integrat,integrateVelocity,12648,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['integrat'],['integrateVelocity']
Deployability,":string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(Indices2ValuesMapper, DataTypes), sofa::core::DataEngine)sofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; VecCoord typedefsofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html:12772,update,update,12772,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,1,['update'],['update']
Deployability,":string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(NormalsFromPoints, DataTypes), core::DataEngine)sofa::component::engine::generate::NormalsFromPoints< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglessofa::component::engine::generate::NormalsFromPoints< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useAnglessofa::component::engine::generate::NormalsFromPoints< DataTypes >; VecCoord typedefsofa::component::engine::generate::NormalsFromPoints< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~NormalsFromPoints() overridesofa::component::engine::generate::NormalsFromPoints< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html:12705,update,updateIfDirty,12705,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,3,['update'],"['updateIfDirty', 'updateInternal', 'updateLinks']"
Deployability,":string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine)sofa::component::engine::select::PlaneROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::PlaneROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::PlaneROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec10 typedefsofa::component::engine::select::PlaneROI< DataTypes >; Vec3 typedefsofa::component::engine::select::PlaneROI< DataTypes >; Vec6 typedefsofa::component::engine::select::PlaneROI< DataTypes >; VecCoord typedefsofa::component::engine::select::PlaneROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:14906,update,updateAllInputsIfDirty,14906,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,":type::Vec3)sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SparseMatrix typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~DirectionProjectiveConstraint()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >protectedvirtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:18450,update,updateInternal,18450,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['update'],['updateInternal']
Deployability,":vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:17923,update,updateAllInputsIfDirty,17923,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['update'],['updateAllInputsIfDirty']
Deployability,":vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SlicedVolumetricModel()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SlicedVolumetricModel, core::visual::VisualModel)sofa::gl::component::rendering3d::SlicedVolumetricModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texture_datasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecCoord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; vRightsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; vUpsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~SlicedVolumetricModel() overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:13557,update,updateInternal,13557,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['update'],['updateInternal']
Deployability,:visual::BaseCamera; STEREO_INTERLACED enum valuesofa::component::visual::BaseCamera; STEREO_NONE enum valuesofa::component::visual::BaseCamera; STEREO_SIDE_BY_SIDE enum valuesofa::component::visual::BaseCamera; STEREO_SIDE_BY_SIDE_HALF enum valuesofa::component::visual::BaseCamera; STEREO_TOP_BOTTOM enum valuesofa::component::visual::BaseCamera; STEREO_TOP_BOTTOM_HALF enum valuesofa::component::visual::BaseCamera; StereoMode enum namesofa::component::visual::BaseCamera; StereoStrategy enum namesofa::component::visual::BaseCamera; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TOEDIN enum valuesofa::component::visual::BaseCamera; toRay() constsofa::component::visual::BaseCamera; TRACKBALL_MODE enum valuesofa::component::visual::RecordedCamera; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; translate(const type::Vec3 &t)sofa::component::visual::BaseCamera; translateLookAt(const type::Vec3 &t)sofa::component::visual::BaseCamera; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateOutputData()sofa::component::visual::BaseCameraprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; viewportPointToRay(const type::Vec3 &p)sofa::component::visual::BaseCamera; viewportToScreenPoint(const type::Vec3 &p) constsofa::component::visual::BaseCamera; viewportToWorldPoint(const type::Vec3 &p)sofa::component::visual::BaseCamera; WHEEL_ZOOM_MODE enum valuesofa::component::visual::RecordedCamera; WORLD_CENTER_PIVOT enum valuesofa::component::visual::RecordedCamera; worldToCameraCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; worldToCameraTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; worldToScreenCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; worldToScreenPoint(const type::Vec3 &p)sofa::component:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:20618,update,updateInternal,20618,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['update'],['updateInternal']
Deployability,:visual::BaseCamera; STEREO_SIDE_BY_SIDE enum valuesofa::component::visual::BaseCamera; STEREO_SIDE_BY_SIDE_HALF enum valuesofa::component::visual::BaseCamera; STEREO_TOP_BOTTOM enum valuesofa::component::visual::BaseCamera; STEREO_TOP_BOTTOM_HALF enum valuesofa::component::visual::BaseCamera; StereoMode enum namesofa::component::visual::BaseCamera; StereoStrategy enum namesofa::component::visual::BaseCamera; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TOEDIN enum valuesofa::component::visual::BaseCamera; toRay() constsofa::component::visual::BaseCamera; TRACKBALL_MODE enum valuesofa::component::visual::RecordedCamera; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; translate(const type::Vec3 &t)sofa::component::visual::BaseCamera; translateLookAt(const type::Vec3 &t)sofa::component::visual::BaseCamera; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateOutputData()sofa::component::visual::BaseCameraprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; viewportPointToRay(const type::Vec3 &p)sofa::component::visual::BaseCamera; viewportToScreenPoint(const type::Vec3 &p) constsofa::component::visual::BaseCamera; viewportToWorldPoint(const type::Vec3 &p)sofa::component::visual::BaseCamera; WHEEL_ZOOM_MODE enum valuesofa::component::visual::RecordedCamera; WORLD_CENTER_PIVOT enum valuesofa::component::visual::RecordedCamera; worldToCameraCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; worldToCameraTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; worldToScreenCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; worldToScreenPoint(const type::Vec3 &p)sofa::component::visual::BaseCamera; worldToViewportPoint(const type::Vec3 &p)sofa::component::visual::BaseCamera; writeDatas(std::map< std:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:20741,update,updateOutputData,20741,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['update'],['updateOutputData']
Deployability,":visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:14852,update,updateLinks,14852,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['update'],['updateLinks']
Deployability,"; (; ""v23.06"" ; , . ""v23.12"" ; , . ""Use m_rotatedPoints instead"" ;  . ). ◆ SOFA_ATTRIBUTE_DISABLED() [14/14]. template<class TIn , class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_ATTRIBUTE_DISABLED ; (; ""v23.06"" ; , . ""v23.12"" ; , . ""Use m_updateJ instead"" ;  . ). protected . ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(RigidMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(core::Mapping, TIn, TOut) ;  . ). ◆ updateK() [1/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [2/3]. void sofa::component::mapping::nonlinear::RigidMapping< sofa::defaulttype::Rigid2Types, sofa::defaulttype::Vec2Types >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). virtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateK() [3/3]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::updateK ; (; const core::MechanicalParams * ; , . core::ConstMultiVecDerivId ;  . ). overridevirtual . Compute the geometric stiffness matrix based on given child forces K = dJ^T * outForce Default implementation does nothing, corresponding to a linear mapping. ; Reimplemented from sofa::core::BaseMapping. ◆ updateOmega() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::updateOmega ; (; typename InDer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:40258,update,updateK,40258,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['update'],['updateK']
Deployability,"; (; const core::visual::VisualParams * ; vparams). overridevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented from sofa::core::visual::VisualModel. ◆ drawTransparent(). void sofa::component::visual::VisualModelImpl::drawTransparent ; (; const core::visual::VisualParams * ; ). overridevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented from sofa::core::visual::VisualModel. ◆ exportOBJ(). void sofa::component::visual::VisualModelImpl::exportOBJ ; (; std::string ; name, . std::ostream * ; out, . std::ostream * ; mtl, . sofa::Index & ; vindex, . sofa::Index & ; nindex, . sofa::Index & ; tindex, . int & ; count . ). overridevirtual . Append this mesh to an OBJ format stream. The number of vertices position, normal, and texture coordinates already written is given as parameters This method should update them ; Reimplemented from sofa::core::visual::VisualModel. ◆ flipFaces(). void sofa::component::visual::VisualModelImpl::flipFaces ; (; ). ◆ getCastShadow(). bool sofa::component::visual::VisualModelImpl::getCastShadow ; (; ); const. inline . ◆ GetCustomTemplateName(). static std::string sofa::component::visual::VisualModelImpl::GetCustomTemplateName ; (; ). inlinestatic . Returns the sofa class name. By default the name of the c++ class is exposed... More details on the name customization infrastructure is in NameDecoder.h . ◆ getEdges(). const VecVisualEdge& sofa::component::visual::VisualModelImpl::getEdges ; (; ); const. inline . ◆ getFilename(). std::string sofa::component::visual::VisualModelImpl::getFilename ; (; ). inline . ◆ getQuads(). const VecVisualQuad& sofa::component::visual::VisualModelImpl::getQuads ; (; ); const. inline . ◆ getTriangles(). const VecVisualTriangle& sofa::component::visual::VisualModelImpl::getTriangles ; (; ); const.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:42362,update,update,42362,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['update'],['update']
Deployability,"; ). ◆ rotateResponse() [1/5]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< defaulttype::Rigid3Types >::rotateResponse ; (; ). ◆ rotateResponse() [2/5]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< defaulttype::Vec1Types >::rotateResponse ; (; ). ◆ rotateResponse() [3/5]. template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::rotateResponse. virtual . ◆ rotateResponse() [4/5]. void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< defaulttype::Rigid3Types >::rotateResponse ; (; ). ◆ rotateResponse() [5/5]. void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< defaulttype::Vec1Types >::rotateResponse ; (; ). ◆ saveCompliance(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::saveCompliance ; (; const std::string & ; fileName). protected . Save compliance matrix into a file. . ◆ setConstraintDForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< DataTypes >::setConstraintDForce ; (; SReal * ; df, . int ; begin, . int ; end, . bool ; update . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PrecomputedConstraintCorrection< TDataTypes >, TDataTypes) ; , . SOFA_TEMPLATE(core::behavior::ConstraintCorrection, TDataTypes) ;  . ). sofacomponentconstraintlagrangiancorrectionPrecomputedConstraintCorrection; Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:39016,update,update,39016,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['update'],['update']
Deployability,"; Detailed Description; This event is propagated along the objects when a key on the keyboard is released. ; AuthorJuan Pablo de la Plata . Protected Attributes; char m_char;  Store the key. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  KeyreleasedEvent (char);  Constructor. More...;  ;  ~KeyreleasedEvent () override;  Destructor. More...;  ; char getKey () const;  Return the key released. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ m_char. char sofa::core::objectmodel::KeyreleasedEvent::m_char. protected . Store the key. . Constructor details. ◆ KeyreleasedEvent(). sofa::core::objectmodel::KeyreleasedEvent::KeyreleasedEvent ; (; char ; c). Constructor. . ◆ ~KeyreleasedEvent(). sofa::core::objectmodel::KeyreleasedEvent::~KeyreleasedEvent ; (; ). override . Destructor. . Function details. ◆ GetClassName(). static const char* sofa::core::objectmodel::KeyreleasedEvent::GetClassName ; (; ). inlinestatic . ◆ getKey(). char sofa::core::objectmodel::KeyreleasedEvent::getKey ; (; ); const. Return the key released. . sofacoreobjectmodelKeyreleasedEvent; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html:2402,release,released,2402,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html,1,['release'],['released']
Deployability,"; List of all members . sofa::component::topology::mapping::CenterPointTopologicalMapping Class Reference . #include <CenterPointTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::CenterPointTopologicalMapping:. [legend]; Detailed Description; This class, called CenterPointTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = any MeshTopology OUTPUT TOPOLOGY = A PointSetTopologie, as the boundary of the INPUT TOPOLOGY; Each primitive in the input Topology will be mapped to a point in the output topology.; CenterPointTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Member Functions;  SOFA_CLASS (CenterPointTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : More...;  ; Index getGlobIndex (Index ind) override;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html:1144,update,updateTopologicalMappingTopDown,1144,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,1,['update'],['updateTopologicalMappingTopDown']
Deployability,"; MOUSE_BUTTON button;  . Public Member Functions;  QInciseOperation ();  ; int getIncisionMethod () const override;  ; int getSnapingBorderValue () const override;  ; int getSnapingValue () const override;  ; bool getCompleteIncision () override;  ; bool getKeepPoint () override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::InciseOperation;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (bool i);  ; void setFinishIncision (bool i);  ; void setkeepPoint (bool i);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::InciseOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html:2637,release,released,2637,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,1,['release'],['released']
Deployability,"; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::gui::qt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:2034,update,updateVisibility,2034,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,1,['update'],['updateVisibility']
Deployability,; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – SOFA. SOFA - Topic Tag: Incision2D. /input; . /feed; ; input – SOFA. SOFA - Topic Tag: input. /input-and-output-in-sofa-scn-file; . /feed; ; Input and Output in SOFA .scn file – SOFA. SOFA - Topic Tag: Input and Output in SOFA .scn file. /installation; . /feed; ; installation – SOFA. SOFA - Topic Tag: installation. /installation-error; . /feed; ; Installation error – SOFA. SOFA - Topic Tag: Installation error. /instrument; . /feed; ; instrument – SOFA. SOFA - Topic Tag: instrument. /integrator-optimization-vec-multivec-deriv-coord-types; . /feed; ; integrator optimization vec multivec deriv coord types – SOFA. SOFA - Topic Tag: integrator optimization vec multivec deriv coord types. /interaction; . /feed; ; interaction – SOFA. SOFA - Topic Tag: interaction. /interactions; . /feed; ; interactions – SOFA. SOFA - Topic Tag: interactions. /interventionalradiologycontroller-inl; . /feed; ; InterventionalRadiologyController.inl – SOFA. SOFA - Topic Tag: InterventionalRadiologyController.inl. /is-sofa-right-for-this; . /feed; ; Is SOFA right for this? – SOFA. SOFA - Topic Tag: Is SOFA right for this?. /jacobian; . /feed; ; Jacobian – SOFA. SOFA - Topic Tag: Jacobian. /joint-constraint; . /feed; ; joint constraint – SOFA. SOFA - Topic Tag: joint constraint. /jointspringforcefield; . /feed; ; JointSpringForceField –,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:450092,install,installation-error,450092,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['install'],['installation-error']
Deployability,"; QTreeWidgetItem * item_;  ; core::objectmodel::Base * basenode;  ; core::objectmodel::BaseData * data_;  ; const ModifyObjectFlags dialogFlags_;  ; QWidget * messageTab;  ; QTextBrowser * messageEdit;  ; QTabWidget * dialogTab;  ; QPushButton * buttonUpdate;  ; int m_numMessages;  ; std::vector< QTabulationModifyObject * > m_tabs;  . Public Member Functions;  ModifyObject (void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~ModifyObject () override;  ; const ModifyObjectFlags & getFlags ();  ; void createDialog (core::objectmodel::Base *node);  ; void createDialog (core::objectmodel::BaseData *data);  ; bool hideData (core::objectmodel::BaseData *data);  ; void readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Public Slots; void openExternalBrowser (const QUrl &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:1444,update,updateConsole,1444,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['update'],['updateConsole']
Deployability,; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been released!. /sofa-v23-06-has-been-released; ; SOFA – SOFA v23.06 has been released!. /sofa-v23-12-has-been-released; ; SOFA – SOFA v23.12 has been released!. /sofa-v24-06-has-been-released; ; SOFA – SOFA v24.06 has been released!. /sofa-week-2018-experience; ; SOFA – SOFA Week 2018 Experience. /sofa-week-2021-register-now; ; SOFA – SOFA Week 2021: register now!. /sofa-week-2022-register-now; ; SOFA – SOFA Week 2022: register now!. /sofa-week-2023-register-now; ; SOFA – SOFA Week 2023: register now!. /sofa-week-2024-registration-is-open; ; SOFA – SOFA Week 2024: registration is open!. /soft-robotics-summer-school-in-lille; ; SOFA – Soft-Robotics Summer School in Lille. /softrobots-inverse-plugin-open-source-release; ; SOFA – SoftRobots.Inverse plugin open-source release!. /spin-offs-from-sofa-against-covid-19; ; SOFA – Spin-offs from SOFA against Covid-19. /stc11-join-us-in-june-to-design-the-sofa-roadmap; ; SOFA – STC#11: join us in June to design the SOFA roadmap!. /stc13-join-us-in-m,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:9582,release,released,9582,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['release'],['released']
Deployability,"; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)))sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; SOFA_CLASS(SOFA_TEMPLATE(EigenSimplicialLDLT, TBlockType), SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, MainSimplicialLDLTFactory))sofa::component::linearsolver::direct::EigenSimplicialLDLT< TBlockType >; EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >::SOFA_CLASS(OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > >)sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >; solve(Matrix &A, Vector &x, Vector &b) overridesofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; updateSolverOderingMethod()sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >protected; Vector typedefsofa::component::linearsolver::direct::EigenSimplicialLDLT< TBlockType >; ~EigenDirectSparseSolver() override=defaultsofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >; ~OrderingMethodAccessor() override=defaultsofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t-members.html:8377,update,updateSolverOderingMethod,8377,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t-members.html,1,['update'],['updateSolverOderingMethod']
Deployability,"; See alsod_edgeInfo when points are renumbered. Will be set as callback when POINTSRENUMBERING event is fired . ◆ applyTriangleCreation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::applyTriangleCreation ; (; const type::vector< Index > & ; triangleAdded, . const type::vector< core::topology::BaseMeshTopology::Triangle > & ; , . const type::vector< type::vector< Index > > & ; , . const type::vector< type::vector< SReal > > & ;  . ). protected . Method to update See alsod_edgeInfo when a new triangle is created. Will be set as callback in the EdgeData . d_edgeInfo when TRIANGLESADDED event is fired to create a new spring between new created triangles. . ◆ applyTriangleDestruction(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::applyTriangleDestruction ; (; const type::vector< Index > & ; triangleRemoved). protected . Method to update See alsod_edgeInfo when a triangle is removed. Will be set as callback in the EdgeData . d_edgeInfo when TRIANGLESREMOVED event is fired to remove spring if needed or update pair of triangles. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimple",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:26744,update,update,26744,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,1,['update'],['update']
Deployability,"; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(PointCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; TPoint< DataTypes > classsofa::component::collision::geometry::PointCollisionModel< TDataTypes >friend; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::PointCollisionModel< TDataTypes >; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecIndex typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::PointCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::Collision",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:17237,update,updateNormals,17237,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,1,['update'],['updateNormals']
Deployability,"; class  data_widget_container< sofa::core::topology::Topology::Tetrahedron >;  ; class  vector_data_trait< sofa::core::topology::Topology::Hexahedron >;  ; class  data_widget_container< sofa::core::topology::Topology::Hexahedron >;  ; class  vector_data_trait< sofa::type::Vec< N, T > >;  sofa::defaulttype::Vec support More...;  ; class  data_widget_container< sofa::type::Vec< N, T > >;  ; class  vector_data_trait< Quat< T > >;  std::helper::Quater support More...;  ; class  data_widget_container< Quat< T > >;  ; class  data_widget_trait< Polynomial_LD< Real, N > >;  ; class  vector_data_trait< sofa::type::Mat< L, C, T > >;  sofa::type::Mat support More...;  ; class  data_widget_container< sofa::type::Mat< L, C, T > >;  ; class  RadioDataWidget;  OptionsGroup support. More...;  ; class  SofaMouseManager;  ; class  SofaPluginManager;  ; union  ObjectModelPtr;  ; struct  ObjectModel;  ; class  SofaSceneGraphWidget;  ; class  CaptureOptionsWidget;  ; class  MovieOptionsWidget;  ; class  SofaVideoRecorderManager;  ; class  SofaWindowDataGraph;  ; class  ProfilerChartView;  The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. More...;  ; class  SofaWindowProfiler;  The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: More...;  ; class  struct_data_trait;  Generic data structures support. More...;  ; class  struct_data_trait_var;  ; class  struct_data_widget_container;  ; class  struct_data_widget_container< T, 0 >;  ; class  default_struct_data_trait_var;  ; class  struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >;  Rigids (as data-structures) support. More...;  ; class  data_widget_container< sofa::defaulttype::RigidCoord< N, T > >;  ; class  struct_data_trait< sofa::defaulttype::RigidMass< N, T > >;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:6601,update,update,6601,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['update'],['update']
Deployability,"; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  HexahedralFEMForceField ();  ; virtual ~HexahedralFEMForceField ();  ; virtual void computeElementStiffness (ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes);  ; Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; void computeMaterialStiffness (MaterialStiffness &m, double youngModulus, double poissonRatio);  compute the hookean material matrix More...;  ; void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; void initLarge (const int i);  ; void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  ; virtual void accumulateForceLarge (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ; void initPolar (const int i);  ; void computeRotationPolar (Transformation &r, type::Vec< 8, Coord > &nodes);  ; virtual void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:18480,integrat,integrateStiffness,18480,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Deployability,"; cparams, . InDataMatrixDeriv & ; out, . const OutDataMatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::applyJT ; (; const sofa::core::MechanicalParams * ; mparams, . InDataVecDeriv & ; out, . const OutDataVecDeriv & ; in . ). override . ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::getJ. override . ◆ getJs(). template<class TIn , class TOut > . const sofa::type::vector< sofa::linearalgebra::BaseMatrix * > * sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::getJs. override . ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::init ; (; void ; ). override . ◆ reinit(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::reinit. override . ◆ setWeights(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::setWeights ; (; const type::vector< sofa::type::SVector< InReal > > & ; weights, . const type::vector< sofa::type::SVector< unsigned int > > & ; indices, . const type::vector< unsigned int > & ; nbrefs . ). ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(SkinningMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(LinearMapping, TIn, TOut) ;  . ). ◆ updateWeights(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::updateWeights. protected . sofacomponentmappinglinearSkinningMapping; Generated on Mon Nov 11 2024 02:50:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html:9323,update,updateWeights,9323,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,2,['update'],['updateWeights']
Deployability,"; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; spatial_dimensionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:18492,update,updateInternal,18492,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['update'],['updateInternal']
Deployability,"; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::collision::response::contact::BaseRayContact;  BaseRayContact (CollisionModel1 *model1, core::collision::Intersection *instersectionMethod);  ;  ~BaseRayContact () override;  ;  Protected Member Functions inherited from sofa::core::collision::Contact;  Contact ();  ;  ~Contact () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:13752,update,update,13752,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['update'],['update']
Deployability,"; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ProximityROI ();  ;  ~ProximityROI () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html:15090,update,update,15090,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,1,['update'],['update']
Deployability,"; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData ();  ; const sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html:2048,update,updateVisibility,2048,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,1,['update'],['updateVisibility']
Deployability,"; virtual bool registerTopology (sofa::core::topology::BaseMeshTopology *_topology, bool printLog=false);  ; void addCallBack (core::topology::TopologyChangeType type, TopologyChangeCallback callback);  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyHandler;  TopologyHandler ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false Mor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html:14426,update,updated,14426,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,1,['update'],['updated']
Deployability,"; virtual bool registerTopology (sofa::core::topology::BaseMeshTopology *_topology, bool printLog=false);  ; void addCallBack (core::topology::TopologyChangeType type, TopologyChangeCallback callback);  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions;  TopologyHandler ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_callbackMap. std::map< core::topology::TopologyChang",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html:7937,update,updated,7937,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,1,['update'],['updated']
Deployability,"; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  InputEventReader ();  Default Constructor. More...;  ;  ~InputEventReader () override;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html:9424,update,update,9424,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html,1,['update'],['update']
Deployability,"; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) final;  ; virtual void roiInit ();  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:8584,update,updateAllInputsIfDirty,8584,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,1,['update'],['updateAllInputsIfDirty']
Deployability,"; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  Method to properly remove TopologyHandler. More...;  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< T >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:18620,update,update,18620,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,2,['update'],['update']
Deployability,"; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  Method to properly remove TopologyHandler. More...;  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< T >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< T >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:17630,update,update,17630,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['update'],['update']
Deployability,"; x2 . ). pure virtual . Construct the Jacobian Matrix; Parameters. c1and c2 are the results constraint sparse matrix ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; x1and x2 are the position vectors used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component . ◆ buildConstraintMatrix() [2/2]. template<class DataTypes1 , class DataTypes2 > . void sofa::core::behavior::MixedInteractionConstraint< DataTypes1, DataTypes2 >::buildConstraintMatrix ; (; const ConstraintParams * ; cParams, . MultiMatrixDerivId ; cId, . unsigned int & ; cIndex . ). overridevirtual . Construct the Jacobian Matrix; Parameters. cIdis the result constraint sparse matrix Id ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC) . Implements sofa::core::behavior::BaseConstraintSet. ◆ create(). template<class TDataTypes1 , class TDataTypes2 > . template<class T > . static T::SPtr sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >::create ; (; T * ; p0, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ getConstraintViolation() [1/4]. template<class TDataTypes1 , class TDataTypes2 > . virtual void sofa::core::behavior::BaseConstraintSet::getConstraintViolation. inline . Construct the Constraint violations vector; Parameters. vis the result vector that contains the whole constraints violations ; cIndexis the index of the next constraint equation ; cParamsdefines the state vectors to use for po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:22968,update,update,22968,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['update'],['update']
Deployability,";  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3389,update,updateDataValue,3389,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,2,['update'],"['updateDataValue', 'updateWidgetValue']"
Deployability,";  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions;  BilateralLagrangianConstraint (MechanicalState *object1, MechanicalState *object2);  ;  BilateralLagrangianConstraint (MechanicalState *object);  ;  BilateralLagrangianConstraint ();  ; virtual ~BilateralLagrangianConstraint ();  ;  Protected Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >;  PairInteractionConstraint (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionConstraint () override;  ; virtual type::vector< std::string > getInteractionIdentifiers () override final;  ; void storeLambda (const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  BaseInteractionConstraint ();  ;  ~BaseInteractionConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void track",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:20872,update,update,20872,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['update'],['update']
Deployability,";  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::Exe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:2476,update,updatePosition,2476,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,1,['update'],['updatePosition']
Deployability,";  ; Transform & operator*= (const Transform &f2);  Combine two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. More...;  ; SpatialVector< TReal > CreateSpatialVector ();  ; SpatialVector< TReal > DTrans ();  ; SpatialVector< TReal > operator* (const SpatialVector< TReal > &sv) const;  ; SpatialVector< TReal > operator/ (const SpatialVector< TReal > &sv) const;  Project a spatial vector from parent to child (the inverse of operator *). This method computes (*this).inversed()*sv without inverting (*this). More...;  ; void writeOpenGlMatrix (double *m) const;  Write an OpenGL matrix encoding the transformation of the coordinate system of the child wrt the coordinate system of the parent. More...;  ; void printInternal (std::ostream &) const;  Print the internal values (i.e. using Featherstone's conventions, see class documentation) More...;  ; Time integration; Methods used in time integration . Transform & operator+= (const SpatialVector< TReal > &a);  ; Transform & operator+= (const Transform &a);  ; template<class Real2 > ; Transform & operator*= (Real2 a);  ; template<class Real2 > ; Transform operator* (Real2 a) const;  . Static Public Member Functions; static Transform identity ();  The identity transform (child = parent) More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Transform &t);  ; std::istream & operator>> (std::istream &in, Transform &t);  read from an input stream More...;  . Attribute details. ◆ orientation_. template<class TReal > . Rot sofa::type::Transform< TReal >::orientation_. protected . child wrt parent . ◆ origin_. template<class TReal > . Vec sofa::type::Transform< TReal >::origin_. protected . parent wrt child . Constructor details. ◆ Transform() [1/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform. The default constructor does not initialize the transform. . ◆ Transform() [2/4",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:4834,integrat,integration,4834,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,2,['integrat'],['integration']
Deployability,";  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t);  ; void removed (DestPtr val, std::size_t);  ; void changed (DestPtr before, DestPtr val);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; DestType * getIndex (std::size_t index) const;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; static constexpr unsigned ActiveFlags;  ; static constexpr bool IsStrongLink;  ; static constexpr bool IsMultiLink;  ; static constexpr bool StorePath;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:5246,update,updateCounter,5246,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,1,['update'],['updateCounter']
Deployability,";  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; bool loadUnstructuredGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadPolydata (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadRectilinearGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadStructuredGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadStructuredPoints (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadImageData (tinyxml2::XMLHandle datasetFormatHandle);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement, int size, string type);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement, int size);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:10044,update,update,10044,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,1,['update'],['update']
Deployability,";  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  AddRecordedCameraButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html:9947,update,update,9947,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,1,['update'],['update']
Deployability,";  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  FixPickedParticleButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:11282,update,update,11282,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['update'],['update']
