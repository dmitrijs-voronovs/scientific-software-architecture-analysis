quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Safety,"Thank you for the prompt reply!; Ok I see. ; The idea is to run colabfold_search/colabfold_batch with a bunch or proteins at the same time. I've been using the API server but some of my jobs encountered ratelimits. To avoid this issue, I decided to build the databases and search against them locally. Sincerely,; Ilyes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1200976095:218,avoid,avoid,218,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/583#issuecomment-1200976095,1,['avoid'],['avoid']
Safety,Thank you for the very prompt response! Your correction of course solved my problem. I don't see the dual purpose of createtsv as a deficiency at all; I simply missed the the distinction between the command formats. Perhaps adding to the clustering format documentation a line that notes the different createtsv input formats for dual purposes would help avoid confusion.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050:355,avoid,avoid,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050,1,['avoid'],['avoid']
Safety,Thank you for your detailed report. The problems seems like a missing `clust` call. You can see an example how to use `clusthash` here https://github.com/soedinglab/MMseqs2/wiki#how-to-redundancy-filter-sequences-with-identical-length-and-100-length-overlap. So to make your example work you would need to add a `clust` call after `clusthash` . mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash test.mmseqsdb test.clusthashdb --min-seq-id 0.99 ; mmseqs clust test.mmseqsdb test.clusthashdb test.clust; mmseqs createseqfiledb test.mmseqsdb test.clust test.clust_clusters,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77#issuecomment-376401650:185,redund,redundancy-filter-sequences-with-identical-length-and-,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77#issuecomment-376401650,1,['redund'],['redundancy-filter-sequences-with-identical-length-and-']
Safety,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:214,sanity check,sanity check,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834,1,['sanity check'],['sanity check']
Safety,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:537,Abort,Aborted,537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744,1,['Abort'],['Aborted']
Safety,"Thanks a lot for your contribution and finding about this edge case. We try to avoid Modern C++ features, could you please implement this without `auto`, lambdas and std::replace. I think `FileUtil` might be an appropriate place for this function. The `SSTR(key)` branch is always numeric and doesn't require a call to `path_substitution`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873103775:79,avoid,avoid,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/467#issuecomment-873103775,1,['avoid'],['avoid']
Safety,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:587,detect,detection,587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,1,['detect'],['detection']
Safety,"Thanks for the hint. I'll try that. I'm using redundancy reduced database - pdb_05 is PDB Seqres database clustered with e-value 0.05, and the profiles are generated for pdb_05 sequences on nr70 database, which is nr clustered to 70% sequence identity. As to computer - yes, I'm using 120 cores single machine (it has four Xeons E7-4890 v2). The software; scales up amazingly. Now I'm computing 6it profiles for 31M sequences and; that will be accomplished in few days (prefiltering scores calculation took 65 h 52 m 33s). I see that when calculating S-W alignments the soft crunches the data using all given threads but after finishing million of sequences (or leaning towards finishing that million) it runs gradually on less and lass cores (perhaps some cores were given more time consuming alignments so the program might estimate times and balance threads more efficiently, but this is very minor and would be noticed for users working on big databases only), which might be a speed bottleneck for big dataset such as nr database processed on big machines. In few days I'll start tests also with MPI run, so that mmseqs2 will be ran; on 1600 CPUs on cluster (here I wish the software had used GPUs as the cluster I'm using has additionally some Firepros to use - I write it smiling as MMseqs2 is light years ahead of cd-hit, which I was using to date). I'll give you a feedback on the speed soon then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733:46,redund,redundancy,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733,1,['redund'],['redundancy']
Safety,"Thanks for the quick response!; For some cases, I do get a result for nucl-nucl alignment (used later to produce m8 file, as described [here](https://github.com/soedinglab/mmseqs2/wiki#how-to-add-sequence-identities-and-other-alignment-information-to-a-clustering-result)), do you think it would be risky/buggy to use such results? ; Would the best way to compute the alignments among cluster members is to run mmseqs search command for each representative sequence against its cluster members (as a DB)? Would it be better to externally compute the Smith-Waterman alignment for each representative and cluster member?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/462#issuecomment-868462603:299,risk,risky,299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/462#issuecomment-868462603,1,['risk'],['risky']
Safety,"Thanks for the suggestion. I'll do that for future runs to avoid the huge logfiles. Re: my original problem, I want to mention that I am using a Perl script (which parallel::forkmanager) to fork separate jobs for each sample in my list and then run each sample separately. I tried running mmseqs search with ""--threads 10"" using this same script, but I noticed that the intermediate steps in the command (extractorfs, align etc) all just used one process per sample. I am still trying to figure out if it is because of the parallel script or something to do with mmseqs itself. If I run the same search command on the terminal with ""--threads 10"" it goes fast. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, July 11, 2019 12:55:59 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @milot-mirdita<https://github.com/milot-mirdita> noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOM5JCFUYB7FDWEK7TP65JY7A5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZXE5VI#issuecomment-510545621>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMTYNMFATMDFBRTPR3P65JY7ANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405:59,avoid,avoid,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405,1,['avoid'],['avoid']
Safety,"Thanks for your answer, this is an interesting problem for many machine learning applications to avoid homology leakage. Here biology is not so important (for me at least). We want to be as fair as possible in this case.; ; So, if I understand correctly, this will do some prefiltering and then give back sparse similarity values which is indeed something that can be used for this purpose. Is this still the recommended way to do this, from the [user guide](https://mmseqs.com/latest/userguide.pdf)?. ````; fake_pref qdb tdb allvsallpref; mmseqs align qdb tdb allvsallpref allvsallaln; mmseqs convertalis qdb tdb allvsallaln allvsall.m8; ````. Thank you!; Sincerly,; P.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199:97,avoid,avoid,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199,1,['avoid'],['avoid']
Safety,"Thanks for your quick response! I wanted to make sure this was an uncommon error before escalating this to our HPC IT. They ended up upgrading the kernel on the node I was using, and the job finished successfully. It looked like some processes still entered D status but there wasn't an NFS timeout like before. This is all a little over my head, but the issue seems to be related to `kernel earlier than kernel-3.10.0-327.42.1.el7`, and the I/O from the analysis. Maybe that can help someone else if they run into issues running `easy-taxonomy` on HPC. I'll go ahead and close this issue now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932:291,timeout,timeout,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932,1,['timeout'],['timeout']
Safety,"Thats a bit of a usability trap on our side. `createsubdb` will only create a new subset database for the sequence db, but not for the header db (`_h` suffix). . You can either also create that:; ```; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db_h tcdb_found90.db_h; ```. Or save some space by creating symlinks:; ```; ln -s tcdb_found.db_h tcdb_found90.db_h; ln -s tcdb_found.db_h.index tcdb_found90.db_h.index; ```. Or pass the database with all entries to `result2flat`:; ```; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header; ```. Either of these will work. We'll think of something to avoid this trap.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102#issuecomment-403321117:648,avoid,avoid,648,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102#issuecomment-403321117,1,['avoid'],['avoid']
Safety,The PSSMCalculator computes the profiles: https://github.com/soedinglab/MMseqs2/blob/25fc2108e0da107de5da157d68e5e7d8274a69ea/src/alignment/PSSMCalculator.cpp#L153. It works well for our purposes (homology detection). I don't know if it will work for your purposes.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2140477022:206,detect,detection,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2140477022,1,['detect'],['detection']
Safety,"The default setting for threads of mmseqs2 is to just use all threads. This is not a safe default, especially if multiple people are working on the same system. One student who does not read the manual *carefully* can crash everything for everyone.; Would you consider setting the default to 1?; I realize this slows things down for people who *don't* read the manual/help-function. But I believe it is better to have safe defaults and mildly punish the people who *don't* read instructions than to have convenient defaults that severely punish everybody else...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539:85,safe,safe,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539,2,['safe'],['safe']
Safety,The issues occurs because the first 10 sequences look like DNA so we assume that the database is a nucleotide database. I changed the sampling strategy. So your sample is now detected as protein database.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/76#issuecomment-376079422:175,detect,detected,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/76#issuecomment-376079422,1,['detect'],['detected']
Safety,The only way currently is to use `translatenucs` to do a translation of your nucleotide sequence databases to amino acids and proceed from there. (Of course this has its own drawbacks and there is no way to detect frame shifts.). Hopefully we can get a master student in the future that implements a nucleotide prefilter.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/26#issuecomment-286151213:207,detect,detect,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/26#issuecomment-286151213,1,['detect'],['detect']
Safety,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:409,redund,redundant,409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531,1,['redund'],['redundant']
Safety,"The positions refer to the original sequences, in this case the query positions refer to nucleotide positions and the target positions refer to amino acid positions. The alignment happens on the amino-acid level, after the alignment we recover the original positions with the `offsetalignment` module within the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206:236,recover,recover,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206,1,['recover'],['recover']
Safety,The representative sequence obtained by easy-linclust is still redundant,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:63,redund,redundant,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['redund'],['redundant']
Safety,"The trap is likely the sequence identity estimation (see https://github.com/soedinglab/MMseqs2/wiki#how-does-mmseqs2-compute-the-sequence-identity). Adding `-a` or `--alignment-mode 3` fixes the issue. `easy-search` better detects when exact sequence identity is required, `search` does the sequence identity estimation by default and try to detect it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240:223,detect,detects,223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/842#issuecomment-2093919240,2,['detect'],"['detect', 'detects']"
Safety,These are my commands. ```; mmseqs createdb all.fasta all.mmseq; mmseqs linclust all.mmseq all.cluster tmpDir --threads 20 -e 1e-6 --min-seq-id 0.8 --coverage 0.8; mmseqs createtsv all.mmseq all.mmseq all.cluster all.cluster.tsv; mmseqs result2repseq all.mmseq all.cluster all.representatives; mmseqs result2flat all.mmseq all.mmseq all.representatives all.representatives.fasta --use-fasta-header; ```. I select set of clusters using `all.cluster.tsv` and the point is to recover only the clusters that i want.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438:473,recover,recover,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438,1,['recover'],['recover']
Safety,This is not a bug but a feature. I always want to write this. We do not merge intermediate files anymore to safe IO time. We internally handle the indexing of this multiple files. A file can be empty if a thread did not write any result e.g. this happens if the input database was very small or no homologous sequences was found.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-484998016:108,safe,safe,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-484998016,1,['safe'],['safe']
Safety,Trying out NEWMAPDB (soft link) in the following format; `mmseqs createtsv NEWMAPDB NEWMAPDB NEWCLUST NEWCLUST.tsv`. I receive the following error:; Start writing file to NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986:307,Abort,Aborted,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986,1,['Abort'],['Aborted']
Safety,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1417,Avoid,Avoid,1417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['Avoid'],['Avoid']
Safety,Unexpected Sequence Identity Values for Redundant Sequences,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:40,Redund,Redundant,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['Redund'],['Redundant']
Safety,We do have templates already implemented. I guess it wouldn’t be too hard to avoid the extra 6 byte.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2314224992:77,avoid,avoid,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2314224992,1,['avoid'],['avoid']
Safety,"What are the memory requirements for `clusthash`? I am trying to redundancy filter a database of about 1.4 billion proteins using `clusthash` and when running the program, I get the message; ```; Can not touch 271995225098 into main memory; ```; It then continues to run for ~30 mins and then progress just halts. I left it running for 10 hours with no change in progress. I first tried running with 64G memory and then 128G memory with the same results. Do all the sequences in the database need to fit into memory for `clusthash` to work? Would I be better off running `linclust` with `-c 100`?. Thank you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442:65,redund,redundancy,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442,1,['redund'],['redundancy']
Safety,"What exactly do you need? The MSA or the sequence detected in the uniprot? For the second you can just use the `mmseqs convertalis queryDB db/uniprot resultDB resultDB.m8 --format-output query,target,tseq` here the last value should be the detected target sequence from the uniprot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370:50,detect,detected,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/590#issuecomment-1277811370,2,['detect'],['detected']
Safety,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:888,abort,aborted,888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['abort'],['aborted']
Safety,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:871,predict,predicted,871,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791,1,['predict'],['predicted']
Safety,XX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatutil.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_basic.cpp.o; [ 6%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_data.cpp.o; [ 7%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_ioutil.cpp.o; [ 7%] Built target alp; Scanning dependencies of target ksw2; make[2]: Warning: File 'lib/ksw2/CMakeFiles/ksw2.dir/depend.make' has modification time 0.00049 s in the future; [ 7%] Building CXX object lib/ksw2/CMakeFiles/ksw2.dir/ksw2_extz2_sse.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 7%] Built target ksw2; Scanning dependencies of target generated; [ 8%] Generating ../generated/easysearch.sh.h; [ 8%] Generating ../generated/easycluster.sh.h; [ 9%] Generating ../generated/blastp.sh.h; [ 9%] Generating ../generated/blastpgp.sh.h; [ 9%] Generating ../generated/map.sh.h; [ 10%] Generating ../generated/linclust.sh.h; [ 10%] Generating ../generated/clustering.sh.h; [ 11%] Generating ../generated/cascaded_clustering.sh.h; [ 11%] Generating ../generated/update_clustering.sh.h; [ 11%] Generating ../generated/searchtargetprofile.sh.h; [ 12%] Generating ../generated/createindex.sh.h; [ 12%] Generating ../generated/translated_search.sh.h; [ 13%] Generating ../generated/taxonomy.sh.h; [ 13%] Generating ../generated/multihitdb.sh.h; [ 14%] Generating ../generated/multihitsearch.sh.h; [ 14%] Generating ../generated/summarizeresultsbyset.sh.h; [ 14%] Generating ../generated/nucleotide.out.h; [ 15%] Generating ../generated/blosu,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:4527,detect,detected,4527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['detect'],['detected']
Safety,"Ya, sure. We were comparing the results from MMSeqs to BLASTP. The query sequences were coming from a cnidarian, and while BLAST was consistently returning Hydra sequences as the top matches (as expected), in many cases these Hydra sequences were not being returned at all by MMSeqs. It was still finding a bunch of high quality matches, but not the predicted 'best hits'. I though it might have something to do with the indexing step. But that was just a guess, because I have only been messing around with MMSeqs for the past few days. Repeatedly recreating the database from scratch didn't seem to make a difference.; The GitHub version that I compiled, on the other hand, returned matches this morning much more in line with what I would expect. The top hits jive with what BLAST is returning. I'll have our student do a more thorough comparison, but superficially it looks great.; And fast! Once the index was in place, I don't think it took 20 minutes to query NR with 86K sequences. The same set, split across 50 blastp jobs, 2 cores each, has been running for over two days already.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278688912:350,predict,predicted,350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278688912,1,['predict'],['predicted']
Safety,You can not use the fasta header identifier. The `createsubdb` uses the internal numeric identifer given by `createdb`. ; I think it would be a great if MMseqs2 could support reciprocal best hit searches. Would you be willing to share you script? Here is the way I would script it. mmseqs search seqDbA seqDbB alnRes tmp ; # extract top hit; mmseqs filterdb alnRes alnResFilter --extract-lines 1; # transpose the result A->B changes to B->A; mmseqs swapdb alnResFilter alnResFilterSwaped ; # extract subset of detected sequences from seqDbB; mmseqs createsubdb alnResFilterSwaped.index seqDbB seqDbBSubdb ; mmseqs createsubdb alnResFilterSwaped.index seqDbB_h seqDbBSubdb_h; # perform second search ; mmseqs search seqDbBSubdb seqDbA alnRes tmp ; ... TODO check if detected from search A -> B and B-> A are the same,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462116242:510,detect,detected,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462116242,2,['detect'],['detected']
Safety,You set very high thresholds for coverage and sequence identity. Additional sensitivity in the clustering won't be able to combine many sequences due to the thresholds anyway. Linclust has a problem with long sequences where comparing one long sequence with another (short or long) sequence can return no common 20 (default `-m`) k-mers just by chance since one sequence is very long and it becomes unlikely to find the same k-mers. `--kmer-per-seq-scale` scales the number of `-m` k-mers up with sequence length to avoid this pitfall. Martin enable the parameter yesterday by default for nucleotide clustering.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617174684:516,avoid,avoid,516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617174684,1,['avoid'],['avoid']
Safety,"You want the best hit even at the risk of a false positive best hit?; For that you should add a few more parameters:; ```; mmseqs search ... -e 100000 --comp-bias-corr 0 --mask 0; ```. At this point you might want to use coverage (`-c`) or `--min-aln-len` to filter the results, since you will also get super short hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005:34,risk,risk,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005,1,['risk'],['risk']
Safety,[Question] Is easy-linclust a safe drop-in replacement for easy-cluster?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/696:30,safe,safe,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/696,1,['safe'],['safe']
Safety,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18062,Abort,Aborted,18062,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['Abort'],['Aborted']
Safety,_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprobproto.cpp.o; [ 2%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstat.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_localmaxstatmatrix.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_sim.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_pvalues.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogproblim.cpp.o; [ 4%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alignment_evaluer.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp_regression.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles/alp.dir/sls_alp.cpp.o; [ 5%] Building CXX object lib/alp/CMakeFiles,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:3006,detect,detected,3006,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['detect'],['detected']
Safety,"`colabfold_search` as well as `colabfold_batch` supports batch complex predictions. Just provide a fasta or csv fle with your complex sequences. Following is a `example.fasta`:; ```; >1; PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; >2 ; PIAQIHILEGRSDEQKE:PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK; ```. You can search the databases, build the MSAs and predict the complex structures using the following commands: ; ```; colabfold_search example.fasta db msas; colabfold_batch msas predictions; ```; Please update your local MMseqs2 to the newest version (see [MMseqs2 repository](mmseqs.com)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990:71,predict,predictions,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1053599990,3,['predict'],"['predict', 'predictions']"
Safety,"ad 0x7f741ce08700 (LWP 184976)]; [New Thread 0x7f741c607700 (LWP 184977)]; [New Thread 0x7f741be06700 (LWP 184978)]; [New Thread 0x7f741b605700 (LWP 184979)]; [New Thread 0x7f741ae04700 (LWP 184980)]; [New Thread 0x7f741a603700 (LWP 184981)]; [New Thread 0x7f7419e02700 (LWP 184982)]; [New Thread 0x7f7419601700 (LWP 184983)]; [New Thread 0x7f7418e00700 (LWP 184984)]; [New Thread 0x7f74185ff700 (LWP 184985)]; [New Thread 0x7f7417dfe700 (LWP 184986)]; [New Thread 0x7f74175fd700 (LWP 184987)]; Computing offsets.; [=================================================================] 100.00% 15.11M 19m 14s 460ms ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Thread 1 ""mmseqs"" received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt ; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7438921 in __GI_abort () at abort.c:79; #2 0x00007ffff7ef6892 in __gnu_cxx::__verbose_terminate_handler () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff7ef4f69 in __cxxabiv1::__terminate (handler=<optimized out>) at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff7ef4fab in std::terminate () at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff7ef5194 in __cxxabiv1::__cxa_throw (obj=0x555555ae5950, tinfo=0x7ffff7fad300 <typeinfo for std::bad_alloc>, dest=0x7ffff7ef3c64 <std::bad_alloc::~bad_alloc()>); at /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc+",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:36148,abort,abort,36148,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,1,['abort'],['abort']
Safety,add module to recover longest orf per read after fragment elimination during taxonomy assignment.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:14,recover,recover,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Safety,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4005,Detect,Detecting,4005,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,4,['Detect'],['Detecting']
Safety,"arch type 	0; Search iterations 	3; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter MSA_200/qdb ColabFold/Datas/uniref30_2202_db.idx MSA_200/tmp/5120310924584167703/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 64 --compressed 0 -v 3 . Index version: 16; Generated by: f5b588be54de35876eff90f3694b67e1d00856ef; ScoreMatrix: VTML80.out; Query database size: 98 type: Aminoacid; split was set to 3 but at least 4 are required. Please run with default paramerters; Target split mode. Searching through 3 splits; Estimated memory consumption: 60G; Process needs more than 56G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 32053680 type: Aminoacid; Process prefiltering step 1 of 3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: b4c1bc7cf89bc0bd577c5a9d3c1f7bedc1f74152; * Which MMseqs version: f5b588be54de35876eff90f3694b67e1d00856ef; * Server specifications: Intel(R) Xeon(R) W-2255 CPU, 64GB RAM; * Operating system and version: Ubuntu20 LTS. [nohupout.txt](https://github.com/soedinglab/MMseqs2/files/10728242/nohupout.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/667:5094,Avoid,Avoid,5094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/667,1,['Avoid'],['Avoid']
Safety,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7982,redund,redundancy,7982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['redund'],['redundancy']
Safety,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1516,safe,safe,1516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe']
Safety,"busercontent.com/32197833/170818420-30aeb0b4-2f69-462e-ab90-74001fc5a04b.png). ## Context. All the code is available at [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). It is (at least imitating) a MMseqs-derived project. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 34aa577a8f1c4269993fcd755526db4f742c5e86; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:3742,Detect,Detecting,3742,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,4,['Detect'],['Detecting']
Safety,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1370,safe,safe-path,1370,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:2427,timeout,timeout,2427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,2,['timeout'],['timeout']
Safety,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11385,Detect,Detecting,11385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,4,['Detect'],['Detecting']
Safety,"er, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as u",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265:1344,Abort,Aborted,1344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265,1,['Abort'],['Aborted']
Safety,filter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode 'Alignment died'; - '[' 0 -ne 0 ']'; - '[' 4 -gt 4 ']'; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 4 -lt 4 ']'; - let SENS=SENS+SENS_STEP_SIZE; - INPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 5 -le 4 ']'; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 resultDB; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:5180,Detect,Detect,5180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['Detect'],['Detect']
Safety,"gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. align //app/database/sequences/sequences //app/database/sequences/sequences; B tmp/17369488595077942690/pref_0 //app/clustering/sequences/sequences_output --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq; -id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 21474; 83647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0; --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:2 --gap-ex; tend nucl:5,aa:0 --zdrop 40 --threads 8 --compressed 0 -v 3. Compute score and coverage; Query database size: 74 type: Aminoacid; Target database size: 74 type: Aminoacid; Calculation of alignments; terminate called after throwing an instance of 'Sls::error'; Aborted; Error: Alignment died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ad5837b3444728411e6c90f8c6ba9370f665c443; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): lastest Docker container; * Operating system and version: Windows 10 (Docker in git bash)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/485:5439,Abort,Aborted,5439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/485,1,['Abort'],['Aborted']
Safety,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1275,Abort,Aborted,1275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Abort'],['Aborted']
Safety,"id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER_FRAG_PAR}; mmseqs rescorediagonal ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" --min-seq-id 0.9 -c 0.95 --cov-mode 1; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_frag"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_frag.index"" > ""$TMPPATH/order_frag""; mmseqs createsubdb ""$TMPPATH/order_frag"" $INPUT ""$TMPPATH/input_step_redundancy"". # filter redundancy; INPUT=""$TMPPATH/input_step_redundancy""; mmseqs clusthash $INPUT ""$TMPPATH/aln_redundancy"" --min-seq-id 0.9; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_redundancy.index"" > ""$TMPPATH/order_redundancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:2407,redund,redundancy,2407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['redund'],['redundancy']
Safety,idx.index creation is not 64-bit safe,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/868:33,safe,safe,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/868,1,['safe'],['safe']
Safety,"ion2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_trait",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:1459,Abort,Aborted,1459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['Abort'],['Aborted']
Safety,"ior appear to function as intended. Perhaps something in the profile generation or implementation of profile against consensus searches affects the interpretation of the -c parameter? Investigating the alignment data of the attached MSA with mmseqs convertalis (attached below) shows that all hits indeed passes the -c 0.8 cutoff? As such perhaps my understanding of what constitutes alignment coverage is lacking and in that case how would one go about retricting the ""coverage"" to only query-target pairs with lengths within 80% of each other? I have tried --covmode 5 with similar results. . ## Expected Behavior. Restriction of clustered protein sequence lengths by imposing cover limits via the -c parameter in conjunction with any --covmode. ## Current Behavior. Clusters containing sequences of vastly different lengths far outside the range of the -c cutoff. . ## Context. My protocol can be summarized roughly as:. 1) Collapse paralogs and create cluster representatives in order to reduce database redundancy using;; mmseqs cluster initial-database clusters -s 5 -c 0.8 --min-seq-id 0.9 --cluster_mode 0 --max-iterations 3 --max-seqs 100 --covmode 0. 2) Iterate profile generation and searches of profiles against consensus sequences; mmseqs search cluster-representatives cluster-representatives representative-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs result2profile cluster-representatives cluster-representatives representative-search profiles; mmseqs profile2consensus profiles initial-database consensus; mmseqs search profiles consensus profile-search -s 7 -c 0.8 --covmode 0 --maxseqs 300 -e 0.003; mmseqs clust --clustermode 0 consensus profile-search profile-clusters; mmseqs createsubdb profile-clusters initial-database new-cluster-representatives. Here new-cluster-representatives are used as input to round two of searches. . ## Alignment data ; query target fident qcov tcov; XP_645403.1 XP_640770.1 0.369 0.989 0.967; XP_635472.2 XP_640770.1 0.524 0.987 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698:1972,redund,redundancy,1972,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698,1,['redund'],['redundancy']
Safety,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1809,avoid,avoid,1809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['avoid'],['avoid']
Safety,"ld_data/colabfold_envdb_202108_db outdir/res_env /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp -e inf --expansion-mode 0 --db-load-mode 1 --threads 4. mmseqs align outdir/tmp/env/latest/profile_1 /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp outdir/res_env_exp_realign --db-load-mode 1 -e 10 --max-accept 1000 --threads 4 --alt-ali 10 -a. # Filter environmental results; mmseqs filterresult queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign outdir/res_env_exp_realign_filter --db-load-mode 1 --qid 0 --qsc 0.8 --diff 0 --max-seq-id 1.0 --threads 4 --filter-min-enable 100. # Convert environmental results to MSA; mmseqs result2msa queryDB /datasets/UniprotKB/colabfold_data/colabfold_envdb_202108_db outdir/res_env_exp_realign_filter outdir/env.a3m --msa-format-mode 6 --db-load-mode 1 --threads 4 --filter-msa 1 --filter-min-enable 1000 --diff 256 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. # Merge results; mmseqs mergedbs queryDB outdir/final.a3m outdir/uniref.a3m outdir/env.a3m. # Unpack results; mmseqs unpackdb outdir/final.a3m outdir --unpack-name-mode 0 --unpack-suffix .a3m; ```; As it stands, I am not converting from DB to a3m until after the filter (with diff =256) so maybe MSA sizes will be okay? Any thoughts?. What I changed from colabfold default, but plan to ""search"" over for MSA quality and run time: ; e_value (for search) -> 1e-4; max_seqs (for search) -> 25; max_accept (for alignment); diff -> (filter) 256. Thanks again. EDIT: Since I am doing an iterative search, would we expect an indexed and in memory target DB to speed up search? I am gathering no based on other conversations given that my use case is large batches and not single queries?. EDIT2: Re. the purpose - correct, I have no need to run structure prediction. The MSAs are going into MSATransformer, so there is no point for them to be extremely large or contain remote fragments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326:3961,predict,prediction,3961,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2429598326,1,['predict'],['prediction']
Safety,"m 0s 29ms; Writing results to: /tmp//2989869989197200687/result; [=================================================================] 514.46K 49s 642ms. Time for merging to result: 0h 0m 0s 988ms; Time for processing: 0h 0m 58s 569ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp//2989869989197200687/search_tmp/6775691152365959592/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 32 --compressed 0 -v 3 . [====terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; **Error: Convert Alignments died**. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 1f302134aa1c6c7c4e2b9da272fd26af33860780; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): AMD EPYC 7742 64-Core Processor; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471:26325,Abort,Aborted,26325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471,1,['Abort'],['Aborted']
Safety,"mary as of Sat Nov 4 11:38:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:39:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. *** Download Progress Summary as of Sat Nov 4 11:40:29 2023 ***; ======================================================================================================================; [#64439b 0B/0B CN:1 DL:0B]; FILE: /home/aomidi/data/tmp/3457120607534134943/pdb_seqres.txt.gz; ----------------------------------------------------------------------------------------------------------------------. [#64439b 0B/0B CN:1 DL:0B]; 11/04 11:40:29 [ERROR] CUID#7 - Download aborted. URI=https://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt.gz; Exception: [AbstractCommand.cc:340] errorCode=2 Timeout.; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772:2872,abort,aborted,2872,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772,2,"['Timeout', 'abort']","['Timeout', 'aborted']"
Safety,"mino acid sequences with 100% coverage. I expect after going through the prefiltering step and alignment step I would see 100% identical hits. ; ## Current Behavior; Instead I found hits with of approximately 93% with reported mismatches of 22 with the same e-values as those with 100% identity. ; ## Steps to Reproduce (for bugs). Attached is the example sequence I found for this bug ([redundant.zip](https://github.com/user-attachments/files/16111570/redundant.zip)). Protein sequence is 303 AA in length with fake names given to the same sequence. I ran the following commands to create the alignment file where I found the issue. . ```; mmseqs createdb redundant.fasta sequenceDB; mmseqs kmermatcher sequenceDB prefilterDB; mmseqs align sequenceDB sequenceDB prefilterDB alignmentDB; mmseqs convertalis sequenceDB sequenceDB alignmentDB alignmentFile; ```. ## MMseqs Output (for bugs); Below is the TSV file of the resulting alignment. As you can see these identical sequences sometimes match at 100% others at 93% with some amount of mismatch and all the same bit-scores etc. ; ![Screenshot from 2024-07-05 10-47-23](https://github.com/soedinglab/MMseqs2/assets/44539035/4d073d41-99e7-4abc-b057-70974cde7ab0). ## Context. I am attempting to replicate some uniref clusters and found this irregularity and chose to isolate and replicate the issue by creating a completely redundant database. This may be a related to #688 . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 6f45232ac8daca14e354ae320a4359056ec524c2. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled from release 15-6f452. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; AMD 3950X with 128GB DDR4 RAM. * Operating system and version:; Ubuntu 22.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861:1438,redund,redundant,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861,1,['redund'],['redundant']
Safety,"mmseqs fails to recover 100% ID hit on first iteration, fails with increased iterations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641:16,recover,recover,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641,1,['recover'],['recover']
Safety,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213:582,abort,aborted,582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/278:5141,Avoid,Avoid,5141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278,1,['Avoid'],['Avoid']
Safety,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:2205,timeout,timeout,2205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,3,"['Timeout', 'timeout']","['Timeout', 'timeout']"
Safety,"ould I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB work",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:583,Detect,Detecting,583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,4,['Detect'],['Detecting']
Safety,"ownloading NR database using ```mmseqs databases NR NR tmp```; ## Current Behavior; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```linux; NR_mapping exists and will be overwritten; nrtotaxmapping tmp/4742138305291860127/pdb.accession2taxid tmp/4742138305291860127/prot.accession2taxid NR NR_mapping --threads 40 -v 3; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; tmp/4742138305291860127/download.sh: line 391: 260807 Aborted ""${MMSEQS}"" nrtotaxmapping ""${TMP_PATH}/pdb.accession2taxid"" ""${TMP_PATH}/prot.accession2taxid"" ""${OUTDB}"" ""${OUTDB}_mapping"" ${THREADS_PAR}; Error: nrtotaxmapping died; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668:1222,Abort,Aborted,1222,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668,1,['Abort'],['Aborted']
Safety,"qs/test-nr-50m; ++ abspath tmp; ++ '[' -d tmp ']'; ++ cd tmp; ++ pwd; + TMP_PATH=/home/dabia/bench/mmseqs/tmp; + SENS=5; + '[' 5 -le 5 ']'; + notExists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that crashes with error:. ```; -------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; -------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[33336,1],0]; Exit code: 255; --------------------------------------------------------------------------. ```; And this is the core assignment:; ```; MCW rank 2 bound to socket 2[core 16[hwt 0-1]], socket 2[core 17[hwt 0-1]], socket 2[core 18[hwt 0-1]], socket 2[core 19[hwt 0-1]], socket 2[core 20[hwt 0-1]], socket 2[core 21[hwt 0-1]], socket 2[core 22[hwt 0-1]], socket 2[core 23[hwt 0-1]]: [../../../../../../../..][../../../../../../../..][BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..]; MCW rank 3 bound to socket 3[core 24[hwt 0-1]], socket 3[core 25[hwt 0-1]], socket 3[core 26[hwt 0-1]], socket 3[core 27[hwt 0-1]], socket 3[core 28[hwt 0-1]], socket 3[core 29[hwt 0-1]]",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:5518,abort,aborted,5518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,1,['abort'],['aborted']
Safety,rated/blosum75.out.h; [ 19%] Generating ../generated/blosum80.out.h; [ 20%] Generating ../generated/blosum85.out.h; [ 20%] Generating ../generated/blosum90.out.h; [ 21%] Generating ../generated/blosum95.out.h; [ 21%] Generating ../generated/blosum100.out.h; [ 21%] Generating ../generated/CovSeqidQscPercMinDiag.out.h; [ 22%] Generating ../generated/CovSeqidQscPercMinDiagTargetCov.out.h; [ 22%] Generating ../generated/ExpOpt3_8_polished.cs32.lib.h; [ 23%] Generating ../generated/Library255_may17.lib.h; [ 23%] Generating ../generated/K4000.crf.h; [ 23%] Generating ../generated/libPure_blosum62_255.lib.h; [ 24%] Generating ../generated/libPure_blosum62_32.lib.h; [ 24%] Built target generated; Scanning dependencies of target version; make[2]: Warning: File 'src/version/CMakeFiles/version.dir/depend.make' has modification time 0.00026 s in the future; [ 24%] Building CXX object src/version/CMakeFiles/version.dir/Version.cpp.o; [ 25%] Linking CXX static library libversion.a; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 25%] Built target version; Scanning dependencies of target mmseqs-framework; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Alignment.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/CompressedA3M.cpp.o; [ 26%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Main.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/Matcher.cpp.o; [ 27%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MsaFilter.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/MultipleAlignment.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/PSSMCalculator.cpp.o; [ 28%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/StripedSmithWaterman.cpp.o; [ 29%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/alignment/BandedNucleotideAligner.cpp.o; [ 29%] Building CXX obje,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:6987,detect,detected,6987,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['detect'],['detected']
Safety,recover longest orf after fragment elimination,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/832:0,recover,recover,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/832,1,['recover'],['recover']
Safety,"rite-lookup 1`. 3. Run MMSeqs2 cluster module with --cluster-reassign: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign`. 4. Run MMSeqs2 cluster module with --cluster-reassign and -a: ERROR; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5 --cluster-reassign -a`. 5. Run MMSeqs2 cluster module **without** --cluster-reassign and -a: SUCCESS; `mmseqs cluster AllPeptide_DB ConnComp_DB $TMPDIR --mask 0 -c 0.8 --cov-mode 0 -e 0.01 --max-seqs 50 --min-seq-id 0.9 --cluster-mode 1 --similarity-type 1 --cluster-steps 5`. ## MMseqs Output (for bugs); `m3131Alignment format is not supported!`; `31mmAlignment format is not supported!`; `Alignment format is not supported!`; `lignment format is not supported!ted!d_pref_swaped_aln: 0h 0m 1s 254ms`; `mm*** glibc detected *** mmseqs: free(): corrupted unsorted chunks: 0x00007f148cd69ce0Alignment format is not supported!; 3931m39/ngsprod/sanyalab/TEMP/9163273558071586774/cascaded_clustering.sh: line 240: 25359 Segmentation fault (core dumped) ""$MMSEQS"" clust ""${SOURCE}"" ""${TMP_PATH}/clu_accepted_plus_wrong_plus_single"" ""${2}"" ${TMP}4 of overall calculated).`; `Error: Clustering step 4 diednce.`. ## Context; I am trying to do the following; 1) cluster 2 million intra-species protein sequences that are at least over 80% identical to their homologs; 2) Generate descriptive statistics for each cluster; 3) Use the clusters to create HMMs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 12.113e3; * Which MMseqs version was used (Conda install): 12.113e3; * Server specifications (especially CPU support for AVX2/SSE ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415:1397,detect,detected,1397,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415,1,['detect'],['detected']
Safety,s (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unexpand: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uniq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unix2dos: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unlink: Perm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:13326,timeout,timeout,13326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['timeout'],['timeout']
Safety,"s on a node with 500gb memory. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. It will be difficult to send you my sequence file. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; createdb genecatalog/input.faa genecatalog/input_mmseqdb/db. MMseqs Version: 11.e1a1c. Converting sequences; [=================================================================================================== 1 Mio. sequences processed; =================================================================================================== 2 Mio. sequences processed; =================================================================================================== 3 Mio. sequences processed; ... =================================================================================================== 260 Mio. sequences processed; =================================================================================================== 261 Mio. sequences processed; =======================================================================================; ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. slurm error:; `slurmstepd: error: Detected 1 oom-kill event(s) in step 33218922.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.`. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/315:1470,Detect,Detected,1470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/315,1,['Detect'],['Detected']
Safety,s than the 64GB RAM of the machine I'm indexing on). But this indexing fails with the second output provided below? In fact the indexing fails also without the --split option (see third output below). All tests have been carried out using a compiled mmseqs cloned from a fresh git clone. The work directory has 76TB of free space. I'm really at a loss as to what the `Could not write to data file /` error message might indicate?; - Searching with the oversized index:. ```; -bash-4.2$ mmseqs search subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 ; Program call:; subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; Number search iterations 1; Start sensitivity 4; sensitivity step size 1; Sets the MPI runner . /home/hingamp.p; /home/hingamp.p; Program call:; subseq_Mms.1 uniref90.mms tmp/pref_1 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 100000 --offset-result 0 --split 0 --split-mode 2 --comp-bias-corr 1 --diag-score 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 1 . MMseqs Version: c5615b34c686b1cf0f2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:1763,Detect,Detect,1763,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['Detect'],['Detect']
Safety,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1070,safe,safe-path,1070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe-path']
Safety,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:2376,predict,predictor,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['predict'],['predictor']
Safety,"s. 12290763440 alignments calculated.; 12091764217 sequence pairs passed the thresholds (0.983809 of overall calculated).; 800.445801 hits per query sequence.; Time for processing: 1h 57m 38s 412ms; rmdb /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/pref -v 3 . Time for processing: 0h 0m 5s 207ms; swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3 . Computing offsets.; [=================================================================terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted; Error: swapresults died; Error: Search step died; Error: Search died. ## Context; I have downloaded the NT database using the command:; `mmseqs databases NT /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp/tmp_MMSeq2/`. Originally I have run the search command without the --slice-search argument which was added following the error below:; ; prefilter /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/query_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/target_seqs_split /tmp/tmp_MMSeq2/5678650084331905004/search_tmp/926851463830850803/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-un",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394:13000,Abort,Aborted,13000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394,1,['Abort'],['Aborted']
Safety,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1626,Abort,Aborted,1626,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['Abort'],['Aborted']
Safety,"scription [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:7221,abort,aborted,7221,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['abort'],['aborted']
Safety,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:2191,Abort,Aborted,2191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['Abort'],['Aborted']
Safety,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:3413,Abort,Aborted,3413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,1,['Abort'],['Aborted']
Safety,"smatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	3; Threads 	16; Compressed 	0; Verbosity 	3. [New Thread 0x155554aca700 (LWP 28907)]; [New Thread 0x1555548c9700 (LWP 28908)]; [New Thread 0x1555546c8700 (LWP 28909)]; [New Thread 0x1554ea593700 (LWP 28921)]; [New Thread 0x1554ea392700 (LWP 28922)]; [New Thread 0x1554ea191700 (LWP 28923)]; [New Thread 0x1554e9f90700 (LWP 28924)]; [New Thread 0x15549ceb2700 (LWP 28925)]; [New Thread 0x15549ccb1700 (LWP 28926)]; [New Thread 0x15549cab0700 (LWP 28927)]; [New Thread 0x15549c8af700 (LWP 28928)]; [New Thread 0x15549c6ae700 (LWP 28929)]; [New Thread 0x1554996f9700 (LWP 28930)]; [New Thread 0x1554994f8700 (LWP 28931)]; [New Thread 0x1554992f7700 (LWP 28932)]; terminate called after throwing an instance of 'std::bad_alloc' ] 3.00% 15.44K eta 2h 43m 11s ; what(): std::bad_alloc. Thread 14 ""mmseqs"" received signal SIGABRT, Aborted.; [Switching to Thread 0x1554996f9700 (LWP 28930)]; 0x000000000086fbd7 in raise (); (gdb) bt; #0 0x000000000086fbd7 in raise (); #1 0x000000000086fdf1 in abort (); #2 0x00000000007d3e15 in __gnu_cxx::__verbose_terminate_handler() (); #3 0x000000000073c0b6 in __cxxabiv1::__terminate(void (*)()) (); #4 0x000000000073c101 in std::terminate() (); #5 0x000000000073a2f4 in __cxa_throw (); #6 0x000000000073c28c in operator new(unsigned long) (); #7 0x000000000078720a in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (); #8 0x00000000007887eb in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (); #9 0x0000000000550fc6 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__str=..., this=0x1554996f8520) at /usr/include/c++/7/bits/basic_string.h:1212; #10 convert",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628:3630,Abort,Aborted,3630,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878350628,1,['Abort'],['Aborted']
Safety,"step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:3940,redund,redundancy,3940,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['redund'],['redundancy']
Safety,"system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1654,timeout,timeout,1654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,1,['timeout'],['timeout']
Safety,"thanks @genomewalker,; So, once we have identified the names of the clusters to extract, what would be a safe way to get the numeric ids of those clusters so we can used them in createsubdb?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/27#issuecomment-297678822:105,safe,safe,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/27#issuecomment-297678822,1,['safe'],['safe']
Safety,the default setting for threads is not safe,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/539:39,safe,safe,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/539,1,['safe'],['safe']
Safety,"to also post the complete output of MMseqs. You can use gist.github.com for large output. Reading symbols from mmseqs...; (gdb) r; Starting program: /home/kthurime/mmseqs/bin/mmseqs nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; nr_mmseqs/nr_db_mapping exists and will be overwritten; nrtotaxmapping tmp/12298358726300512471/pdb.accession2taxid tmp/12298358726300512471/prot.accession2taxid nr_mmseqs/nr_db nr_mmseqs/nr_db_mapping --threads 16 -v 3 . MMseqs Version:	f5b588be54de35876eff90f3694b67e1d00856ef; Threads 	16; Verbosity	3. terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc. Program received signal SIGABRT, Aborted.; 0x00000000008cab0b in raise (); (gdb) bt; #0 0x00000000008cab0b in raise (); #1 0x000000000040d7bc in abort (); #2 0x000000000040ad81 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] (); #3 0x000000000079460c in __cxxabiv1::__terminate(void (*)()) (); #4 0x0000000000794677 in std::terminate() (); #5 0x00000000007947d9 in __cxa_throw (); #6 0x000000000040ad02 in operator new(unsigned long) [clone .cold] (); #7 0x000000000060ed45 in __gnu_cxx::new_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >::allocate (this=<optimized out>, __n=<optimized out>); at /usr/include/c++/9/ext/new_allocator.h:102; #8 std::allocator_traits<std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > >::allocate (__a=..., __n=<optimized out>); at /usr/include/c++/9/bits/alloc_traits.h:443; #9 std::_Vector_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/666:1571,abort,abort,1571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/666,1,['abort'],['abort']
Safety,trying to remove any hidden characters from the msa may not be solving the problem as it still cannot be used with `reformat.pl` or `addss.pl` (no secondary structure prediction after addss.pl),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/846#issuecomment-2130089532:167,predict,prediction,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/846#issuecomment-2130089532,1,['predict'],['prediction']
Safety,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1606,safe,safe,1606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['safe'],['safe']
Safety,"urnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:5253,Detect,Detect,5253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['Detect'],['Detect']
Safety,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:2033,safe,safe,2033,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['safe'],['safe']
Safety,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:513,Detect,Detect,513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['Detect'],['Detect']
Safety,"xists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that crashes with error:. ```; -------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; -------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[33336,1],0]; Exit code: 255; --------------------------------------------------------------------------. ```; And this is the core assignment:; ```; MCW rank 2 bound to socket 2[core 16[hwt 0-1]], socket 2[core 17[hwt 0-1]], socket 2[core 18[hwt 0-1]], socket 2[core 19[hwt 0-1]], socket 2[core 20[hwt 0-1]], socket 2[core 21[hwt 0-1]], socket 2[core 22[hwt 0-1]], socket 2[core 23[hwt 0-1]]: [../../../../../../../..][../../../../../../../..][BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..]; MCW rank 3 bound to socket 3[core 24[hwt 0-1]], socket 3[core 25[hwt 0-1]], socket 3[core 26[hwt 0-1]], socket 3[core 27[hwt 0-1]], socket 3[core 28[hwt 0-1]], socket 3[core 29[hwt 0-1]], socket 3[core 30[hwt 0-1]], socket 3[core 31[hwt 0-1]]: [../../../../../../../..][../../../../../../../..][../../../../../../../..][BB/BB/BB/BB/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:5668,detect,detected,5668,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,1,['detect'],['detected']
Safety,"xonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:1081,safe,safe,1081,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,1,['safe'],['safe']
Safety,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:834,Detect,Detecting,834,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,2,['Detect'],['Detecting']
Security,"	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.99; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:1898,hash,hash,1898,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash']
Security,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4589,hash,hash-shift,4589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash-shift']
Security," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9227,hash,hash,9227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash']
Security," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:2700,hash,hash,2700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash']
Security," 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; panproteome.db /tmp/clu//9559457551393989073/clu_redundancy /tmp/clu//9559457551393989073/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:21952,hash,hash-shift,21952,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash-shift']
Security," --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3997,hash,hash-shift,3997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['hash'],['hash-shift']
Security," --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 2.02B 11m 22s 53ms; Sort kmer 0h 17m 18s 696ms; Sort by rep. sequence 0h 8m 48s 22ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 2.02B 14m 32s 166ms; Sort kmer 0h 6m 35s 100ms; Sort by rep. sequence 0h 2m 51s 246ms; Merge splits ... Time for fill: 2h 18m 33s 262ms; Time for merging to pref: 0h 25m 57s 283ms; Time for processing: 4h 41m 10s 259ms; rescorediagonal /export/scratch/SRC-50/8871099322051866948/input /export/scra",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:4074,hash,hash-shift,4074,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash-shift']
Security," --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5146,hash,hash-shift,5146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security," --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref tmp97/17949317426677965256/linclust/6279588666755106708/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 20 --compressed 0 -v 3. [=================================================================] 100.00% 51.99K 0s 101ms; Time for merging",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:5091,hash,hash-shift,5091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security," 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3243,hash,hash-shift,3243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['hash'],['hash-shift']
Security," 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:94790,hash,hash,94790,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['hash'],['hash']
Security," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:3285,hash,hash,3285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash']
Security," 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms; rescorediagonal tmpDB tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref tmp/12397138995521121878/linclust/639052995728955397/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:4463,hash,hash-shift,4463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3810,sanitiz,sanitization,3810,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['sanitiz'],['sanitization']
Security," Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	300G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2487,hash,hash-shift,2487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash-shift']
Security," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6806,hash,hash,6806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security," and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher JGI tmp/14756877054557405347/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 300G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1311052782 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 1.31B 2h 26m 20s 97ms; Process file into 2 parts; Generate k-mers list for 1 split; [=================================================================] 1.31B 2h 34m 42s 85ms; Sort kmer 0h 0m 52s 653ms; Sort by rep. sequence 0h 0m 31s 645ms; Generate k-mers list for 2 split; [=================================================================] 1.31B 2h 36m 22s 543ms; Sort kmer 0h 0m 44s 690ms; Sort by rep. sequence 0h 0m 26s 121ms; Merge splits ... Time for fill: 1h 31m 44s 960ms; Time for merging to pref: 0h 0m 0s 6ms; Time for processing: 10h 13m 54s 576ms; rescorediagonal JGI JGI tmp/14756877054557405347/pref tmp/1475687705455740534",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/870:2973,hash,hash-shift,2973,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/870,1,['hash'],['hash-shift']
Security," depth 	1000; Similarity type 	2; Threads 	56; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage mode 	1; Max sequence length 	10000; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Alphabet size 	nucl:5,aa:21; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Mask residues 	1; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /home/stu_1/Pantong/5_downstream/4_assembly_prodigal/All_cohort.faa All_cohort_tmp//9948387321092861199/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:2727,hash,hash,2727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash']
Security," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:5003,hash,hash-shift,5003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash-shift']
Security," path; Threads 	16; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb /Users/s/Documents/protein/true_plus300_proteins-13-strains_shortname-group.fa /Volumes/s/tmp/3581369344000996149/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [1718] 0s 24ms; Time for merging to input_h: 0h 0m 0s 10ms; Time for merging to input: 0h 0m 0s 10ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 81ms; Create directory /Volumes/s/tmp/3581369344000996149/clu_tmp; cluster /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu /Volumes/s/tmp/3581369344000996149/clu_tmp --max-seqs 20 -c 0.8 --cov-mode 1 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --min-seq-id 0.5 --remove-tmp-files 1. Set cluster sensitivity to -s 3.000000; Set cluster mode GREEDY MEM; Set c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:2366,hash,hash,2366,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash']
Security,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:930,access,accessible,930,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['access'],['accessible']
Security,"## Description; bugfix for a segmentation fault in `mmseqs prefilter`, which occured in the following circumstances:. - `seqLen` of sequences larger than `32768` are overridden to `1` to lower their priority in diagonal score calculation; - `min(seqs[i].seqLen - minDistToDiagonal, minSeqLen);` returns an underflowed value for low `seqLen`, which holds for the above case (`UngappedAlignment L:279`). => this invalid `seqLength` value causes `unrolledDiagonalScoring(...)` to access memory out of bounds, causing a seg fault. ## Changes; - added a safety check to prevent `seqLength` having invalid(underflowed) values; - `seqLen` larger than `32768` are overridden to `0` instead of `1`, in order to completely skip the processing inside `unrolledDiagonalScoring(...)`. ## Other Details; - error encountered when running mmseqs easy-cluster on uniparc DB; - stack trace:; ```; #0 UngappedAlignment::unrolledDiagonalScoring<21u> (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:58; #1 UngappedAlignment::scoreDiagonalAndUpdateHits (...) ; at MMseqs2/src/prefiltering/UngappedAlignment.cpp:281; #2 UngappedAlignment::computeScores (...) ; at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:349; #3 UngappedAlignment::align (...); at /MMseqs2/src/prefiltering/UngappedAlignment.cpp:26; #4 QueryMatcher::match (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:295; #5 QueryMatcher::matchQuery (...); at /MMseqs2/src/prefiltering/QueryMatcher.cpp:103; #6 Prefiltering::runSplit (...); at /MMseqs2/src/prefiltering/Prefiltering.cpp:843; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/872:477,access,access,477,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/872,1,['access'],['access']
Security,"## Expected Behavior. Calling `apt-get update` should update the dependencies in the `soedinglab/mmseqs2:latest` docker container. ## Current Behavior. `apt-get update` fails with `E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.` due to renaiming of the file [See](https://github.com/debuerreotype/docker-debian-artifacts/issues/135). ## Steps to Reproduce (for bugs); `docker run --rm -it soedinglab/mmseqs2:latest apt-get update`. ## MMseqs Output (for bugs); ```; Ign:1 http://security.debian.org/debian-security stable/updates InRelease; Get:2 http://deb.debian.org/debian stable InRelease [116 kB]; Err:3 http://security.debian.org/debian-security stable/updates Release; 404 Not Found [IP: 151.101.130.132 80]; Get:4 http://deb.debian.org/debian stable-updates InRelease [39.4 kB]; Get:5 http://deb.debian.org/debian stable/main amd64 Packages [8183 kB]; Get:6 http://deb.debian.org/debian stable-updates/main amd64 Packages [2596 B]; Reading package lists... Done ; E: The repository 'http://security.debian.org/debian-security stable/updates Release' does not have a Release file.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.; ```. ## Proposed Solution; I verified that rebuilding the docker image based on the current master branch solves the issue (as debian-slim is updated).; `docker build . -t soedinglab/mmseqs2:latest && docker push soedinglab/mmseqs2:latest ` will fix the issue.; @milot-mirdita . Thanks for working on this and providing the image!; Tobias",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541:207,secur,security,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541,10,['secur'],"['secure', 'securely', 'security']"
Security,"## Expected Behavior. I'm trying to concatenate 2 mmseqs sequence databases together via `mmseqs concatdbs`, but I get the error:. ```; maxSetId in db1.lookup is 1 and in db1.source is 2; ```. ## Context. I created both sequence databases via `mmseqs createdb`. None of the sequences overlap between the 2 databases. Note that for DB1, I did copy (all/most) of the associated files from one location to another; maybe I didn't copy them all over, but how would I know??). . Running `mmseqs concatdbs` on the `*_h` files for these databases works without an issue. I just get the problem when trying to run `mmseqs concatdbs` on the main database files. . ## Your Environment. OS: Ubuntu 18.04. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl526_1 bioconda; perl-exporter 5.72 pl526_1 bioconda; perl-file-util 4.161950 pl526_3 bioconda; perl-lib 0.63 pl526_1 bioconda; pigz 2.3.4 hed695b0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/334:860,certificate,certificates,860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334,1,['certificate'],['certificates']
Security,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:646,expose,exposed,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['expose'],['exposed']
Security,"## Expected Behavior. `asan` and `msan` should not detect issues. ## Current Behavior. We ran address sanitizer and memory sanitizer on mmseqs2 and they flagged a few issues. #### asan. 1. ODR violation over `binary_name`.; 2. Possible signed overflow in random number generation using unsigned integer types.; 3. '[initialisation order fiasco](https://github.com/google/sanitizers/wiki/AddressSanitizerInitializationOrderFiasco)'. #### msan; 4. String not terminated. ## Fixes. We fixed these issues, respectively, by:. 1. Changing [this line](https://github.com/soedinglab/MMseqs2/blob/master/src/mmseqs.cpp#L5) to:; ```; __attribute__ ((weak)) const char* binary_name = ""mmseqs"";; ```. 2. Applying this patch to [lib/alp/njn_random.cpp](https://github.com/soedinglab/MMseqs2/blob/master/lib/alp/njn_random.cpp):. ```; --- a/lib/alp/njn_random.cpp; +++ b/lib/alp/njn_random.cpp; @@ -50,19 +50,19 @@ namespace {; ; 	const size_t r_off = 12;; ; -	long	state [33] = {; -	static_cast <long> (0xd53f1852), static_cast <long> (0xdfc78b83), static_cast <long> (0x4f256096), static_cast <long> (0xe643df7),; -	static_cast <long> (0x82c359bf), static_cast <long> (0xc7794dfa), static_cast <long> (0xd5e9ffaa), static_cast <long> (0x2c8cb64a),; -	static_cast <long> (0x2f07b334), static_cast <long> (0xad5a7eb5), static_cast <long> (0x96dc0cde), static_cast <long> (0x6fc24589),; -	static_cast <long> (0xa5853646), static_cast <long> (0xe71576e2), static_cast <long> (0xdae30df), static_cast <long> (0xb09ce711),; -	static_cast <long> (0x5e56ef87), static_cast <long> (0x4b4b0082), static_cast <long> (0x6f4f340e), static_cast <long> (0xc5bb17e8),; -	static_cast <long> (0xd788d765), static_cast <long> (0x67498087), static_cast <long> (0x9d7aba26), static_cast <long> (0x261351d4),; -	static_cast <long> (0x411ee7ea), static_cast <long> (0x393a263), static_cast <long> (0x2c5a5835), static_cast <long> (0xc115fcd8),; -	static_cast <long> (0x25e9132c), static_cast <long> (0xd0c6e906), static_cast <long> (0xc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:102,sanitiz,sanitizer,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,3,['sanitiz'],"['sanitizer', 'sanitizers']"
Security,"## Expected Behavior. `mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident` writes out table of `mmseq search` hits in blast M8 format, but `pident` seems to be written as a fraction instead of a percent. This affects downstream processing of the table, especially when trying to conduct the same processing to this table and one generated by blast or diamond (`pident` is then written as a percent). . ## Steps to Reproduce (for bugs). ```; mmseqs search; mmseqs convertalis --format-mode 0 --format-output query,target,evalue,pident; ```. ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; biolib 0.1.6 py_0 bioconda; boost-cpp 1.70.0 h7b93d67_3 conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py37hc8dfbb8_0 conda-forge; comparem 0.1.1 py_0 bioconda; curl 7.69.1 h33f0ec9_0 conda-forge; cycler 0.10.0 py_2 conda-forge; diamond 0.9.36 h56fc30b_0 bioconda; fqtools 2.0 hc0aa232_5 bioconda; freetype 2.10.2 he06d7ca_0 conda-forge; future 0.18.2 py37hc8dfbb8_1 conda-forge; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; hhsuite 3.2.0 py37pl526h3340039_1 bioconda; htslib 1.9 h4da6232_3 bioconda; icu 67.1 he1b5a44_0 conda-forge; kiwisolver 1.2.0 py37h99015e2_0 conda-forge; krb5 1.17.1 h2fd8d38_0 conda-forge; ld_impl_linux-64 2.34 h53a641e_5 conda-forge; libblas 3.8.0 14_openblas conda-forge; libcblas 3.8.0 14_openblas conda-forge; libcurl 7.69.1 hf7181ac_0 conda-forge; libdeflate 1.6 h516909a_0 conda-forge; libedit 3.1.20191231 h46ee950_0 conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 14_openblas conda-forge; libopenblas 0.3.7 h5ec1e0e_6 conda-forge; libpng 1.6.37 hed695b0_1 conda-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/337:827,certificate,certificates,827,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/337,1,['certificate'],['certificates']
Security,## Expected Behavior; Accession-number-sequence associations should be the same between metaclust and colabfold_envdb. ## Current Behavior. The metaclust id seems to be correct. colabfold_envdb seems to have scrambled the name-sequence associations. Particularly for the JGI sequence IDs (the Uniprot IDs that I checked seemed to be ok). ## Steps to Reproduce (for bugs); input:; ``` bash; wget https://metaclust.mmseqs.com/2018_06/metaclust_nr.fasta.gz; gunzip metaclust_nr.fasta.gz; grep -A1 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. output:; ```; >GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 # 1 # 249 # 1 # ID=3271246_1;partial=11;start_type=Edge;rbs_motif=None;rbs_spacer=None;gc_cont=0.582; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA; ```. input:; ``` ; wget http://wwwuser.gwdg.de/~compbiol/colabfold/colabfold_envdb_202108.tar.gz; tar xvf colabfold_envdb_202108.tar.gz; grep GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1 colabfold_envdb_202108_h.tsv; ```. output:; ```; 117269648 GraSoiStandDraft_25_1057303.scaffolds.fasta_scaffold3271246_1; ```. input:; ```; grep 117269648 colabfold_envdb_202108_seq.tsv; ```. output:; ```; 117269648 MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEKFKS; ```. I then go to; ```; https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=GraSoiStandDraft_25; ```; and download the scaffolds for that sample. I then make a blast database and blast the two sequences; ```; >metaclust; HIGGTHYQNHHDFDPYLARVQQGELPVYRALTPSADERLIREFILQLKLGQVSRAYFQKKFGIELCERFRAPFQTLADWGLLA. >colabfold_envdb_202108; MAYTLPELSYDYAALEPHVDAETMRIHHDLHHAGYMNKLNAALEKYPEFFEKGIEDLMRNLDKIPEDVRGGVKNNGGGYFNHNLFWESMSPDGGAPEGELKDAIEKSFGSFDEMKEKFSNAAATQFGSGWAWLYKESDGSLGITNTSNQDIPFAEGRTLLMNLDVWEHSYYLKYQNKRPDYIENWWNVLNWKGVAEK,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:22,Access,Accession-number-sequence,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['Access'],['Accession-number-sequence']
Security,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/132:220,access,accession,220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132,4,['access'],['accession']
Security,"## Expected Behavior; Completion to provide output file. ## Current Behavior; It dies with the following message:; `Target database size: 460882 type: Nucleotide; tmp/288148333766582684/search_tmp/3592684985880184946/blastp.sh: line 99: 141854 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: Search died`. ## Steps to Reproduce (for bugs); The command I used was:. `mmseqs easy-search --search-type 3 two_test.fa ../../../reference.fna two_test_out tmp`. where `two_test.fa` is a file with two DNA sequences, and reference.fna is a ~4G file with many DNA sequences. . ## MMseqs Output (for bugs); Here's [the gist](https://gist.github.com/sodiumnitrate/5bf79ff79a6ccea91bf32831d9db0ca0) for the full output. ## Context; Trying to search for two DNA sequences in `two_test.fa` within a large reference file `reference.fna`. ## Your Environment; I pulled the latest version (`3e436173321a2d0365a08bfb3b281108ed9ad414`) from the github repo and compiled it myself. Using `CMake v3.24.3` and `GCC v12.2.0`. Running on a node with 32 CPUs, and 5G memory per CPU (160G total). Interestingly, this command worked twice before it stopped working. Tried again by removing the `tmp` folder, but that did not make a difference. I can verify read access to both fasta files, as well as write access to the directory I'm running the command in. What could be the issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/718:1346,access,access,1346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/718,2,['access'],['access']
Security,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/32:298,Access,Access,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32,2,"['Access', 'access']","['Access', 'access']"
Security,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:172,password,passwordless,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['password'],['passwordless']
Security,"## Expected Behavior; I'm running `mmseqs createdb` on a large fasta file. I have checked that every entry is ""valid"" (only valid AA characters, can be read by biopython, there are no spaces between `>` and the accession ids). I expect successful db creation or graceful error handling. . Is there a way to ignore invalid fasta entries in db creation? . ## Current Behavior; Fails with error: ""Fasta entry <entry> is invalid"". ## Steps to Reproduce (for bugs); `mmseqs createdb` . ## MMseqs Output (for bugs); ```; Fasta entry <entry> is invalid; ```. ## Your Environment; MMseqs2 Version: 13.45111; installed with conda",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763:211,access,accession,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763,1,['access'],['accession']
Security,"## Expected Behavior; Set RAM to 1.4T as specified by `--split-memory-limit 1400G`; ## Current Behavior; MMseqs set the limit to only 1T RAM; ## Steps to Reproduce (for bugs); I set `--split-memory-limit` to 1400G using the following command; ```; mmseqs easy-linclust {uniprot_sprot,uniprot_trembl,metaclust_nr,MERC,SRC}.fasta \; linclust_results/universedb-100 \; tmp/universedb-100 \; -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 1 \; --split-memory-limit 1400G; ```. ## MMseqs Output (for bugs); In the parameter header printed by MMseqs at the begging, the `Split memory limit` shown as 1T.; ```; MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 1; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 1T # <================ Shown here; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/328:1574,hash,hash,1574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/328,1,['hash'],['hash']
Security,"## Expected Behavior; The Resfinder database is downloaded and an mmseqs2 index is created. ## Current Behavior; Fails at the download extraction step. ## Steps to Reproduce (for bugs); mmseqs databases Resfinder db/rf tmp. ## MMseqs Output (for bugs); databases Resfinder db/rf tmp . MMseqs Version: 	13.45111; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. --2021-10-08 14:50:24-- https://api.bitbucket.org/2.0/repositories/genomicepidemiology/resfinder_db/commit/master?fields=hash,date; Resolving api.bitbucket.org (api.bitbucket.org)... 18.205.93.8, 18.205.93.6, 18.205.93.7, ...; Connecting to api.bitbucket.org (api.bitbucket.org)|18.205.93.8|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 89 [application/json]; Saving to: 'tmp/9391455786971071082/version'. tmp/9391455786971071082/version 100%[=================================================================================================>] 89 --.-KB/s in 0s . 2021-10-08 14:50:24 (13.7 MB/s) - 'tmp/9391455786971071082/version' saved [89/89]. --2021-10-08 14:50:24-- https://bitbucket.org/genomicepidemiology/resfinder_db/get/master.tar.gz; Resolving bitbucket.org (bitbucket.org)... 104.192.141.1, 2406:da00:ff00::22c3:9b0a, 2406:da00:ff00::34cc:ea4a, ...; Connecting to bitbucket.org (bitbucket.org)|104.192.141.1|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 457328 (447K) [application/x-tar-gz]; Saving to: 'tmp/9391455786971071082/master.tar.gz'. tmp/9391455786971071082/master.tar.gz 100%[=================================================================================================>] 446.61K --.-KB/s in 0.07s . 2021-10-08 14:50:25 (5.88 MB/s) - 'tmp/9391455786971071082/master.tar.gz' saved [457328/457328]. tar: *.fsa: not found in archive; createdb tmp/9391455786971071082/*.fsa db/rf --compressed 0 -v 3 . Input tmp/9391455786971071082/*.fsa does not exist; Error: createdb died. ## Context. ## Your E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494:543,hash,hash,543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494,1,['hash'],['hash']
Security,"## Expected Behavior; clusthash uses all threads and result2flat produces a complete fasta file (not ending in %) ; ## Current Behavior; clusthash seems to use only 1 of all given threads, and eventually result2flat breaks ""segmentation fault"" ; ## Steps to Reproduce (for bugs); Ran from the terminal in the same directory as a contigs fasta file (DNA) (named ""cated_sk100.fna""):; THREADS=10; mkdir resultsDB scafDB ; mmseqs createdb cated_sk100.fna scafDB/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261:835,hash,hashes,835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261,1,['hash'],['hashes']
Security,"## Expected Behavior; easy-cluster should finish execution without errors. ## Current Behavior; mmseqs easy-cluster errors and crashes with:. Error: Prefilter step died; Error: Search died. ## Steps to Reproduce (for bugs). a) Get the input sequences which here I have split into 3 files to fit into Github's upload limits:. [my_seqs.1of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:719,expose,expose,719,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['expose'],['expose']
Security,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:1302,access,accessible,1302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['access'],['accessible']
Security,")>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x000000000044adae mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffc718, accessType=8) at DBReader.cpp:185:9; frame #21: 0x000000000059f427 mmseqs`doswap(par=0x000000080121f1c0, isGeneralMode=true) at swapresults.cpp:49:22; frame #22: 0x00000000005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x0000000800bea528 libc.so.7`__sys__umtx_op + 8; frame #1: 0x0000000000803044 mmseqs`__atomic_fetch_sub_16 [inlined] lock(l=0x000000000080c2e0) at atomic.c:72:5; frame #2: 0x000000000080301e mmseqs`__atomic_fetch_sub_16(ptr=0x00000008013723b0, val=1180591620717411303424, model=<unavailable>) a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:7989,access,accessType,7989,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,1,['access'],['accessType']
Security,* Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (revoked considering concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/555:44,hash,hash-named,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/555,1,['hash'],['hash-named']
Security,* Modified workflow source codes to assign `latest` symbolic link to variable `$LATEST`; * Modified workflow shell scripts to remove hash-named temporary directory ~and symbolic link~ (concurrent modification issue),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/551:133,hash,hash-named,133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/551,1,['hash'],['hash-named']
Security,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1469,hash,hash,1469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['hash'],['hash']
Security,"----------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:4050,hash,hash-shift,4050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash-shift']
Security,"--alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V ->",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3212,hash,hash,3212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:5847,hash,hash,5847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"--pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merg",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4776,hash,hash-shift,4776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"-ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3725,hash,hash-shift,3725,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['hash'],['hash-shift']
Security,"-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3837,hash,hash-shift,3837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150149931881526/input tmp/8115150149931881526/clu tmp/8115150149931881526/clu_tmp -e 0.001 --min-seq-id 0.4 -c 0.8 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1 . Set cluster mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3200,hash,hash-shift,3200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash-shift']
Security,"-split 16` for `mmseqs createindex` to generate 16 `*.idx` files. Instead, I'm getting 18:. ```; mmseqs_tax_target/mmseqs_tax.db.idx.0; mmseqs_tax_target/mmseqs_tax.db.idx.1; mmseqs_tax_target/mmseqs_tax.db.idx.10; mmseqs_tax_target/mmseqs_tax.db.idx.11; mmseqs_tax_target/mmseqs_tax.db.idx.12; mmseqs_tax_target/mmseqs_tax.db.idx.13; mmseqs_tax_target/mmseqs_tax.db.idx.14; mmseqs_tax_target/mmseqs_tax.db.idx.15; mmseqs_tax_target/mmseqs_tax.db.idx.16; mmseqs_tax_target/mmseqs_tax.db.idx.17; mmseqs_tax_target/mmseqs_tax.db.idx.2; mmseqs_tax_target/mmseqs_tax.db.idx.3; mmseqs_tax_target/mmseqs_tax.db.idx.4; mmseqs_tax_target/mmseqs_tax.db.idx.5; mmseqs_tax_target/mmseqs_tax.db.idx.6; mmseqs_tax_target/mmseqs_tax.db.idx.7; mmseqs_tax_target/mmseqs_tax.db.idx.8; mmseqs_tax_target/mmseqs_tax.db.idx.9; ```. Pipeline software (eg., snakemake) generally requires keeping track of all (important) output files produced; otherwise, untracked output files can accidentally be deleted, which is is causing some downstream problems (eg., seg-fault errors for `mmseqs taxonomy`). . ## Steps to Reproduce (for bugs). ```; mmseqs createindex --threads 8 --split 16 mmseqs_tax.db mmseqs_tax_target/tmp/; ```. ## Your Environment. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 1_gnu conda-forge; bzip2 1.0.8 h7f98852_4 conda-forge; ca-certificates 2021.1.19 h06a4308_1; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 h0b5b191_1005 conda-forge; libffi 3.3 h58526e2_2 conda-forge; libgcc-ng 9.3.0 h2828fa1_18 conda-forge; libgomp 9.3.0 h2828fa1_18 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; libstdcxx-ng 9.3.0 h6de172a_18 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; mmseqs2 13.45111 h95f258a_1 bioconda; openssl 1.1.1k h7f98852_0 conda-forge; pigz 2.6 h27826a3_0 conda-forge; seqkit 0.15.0 0 bioconda; seqtk 1.3 h5bf99c6_3 bioconda; wget 1.20.1 h22169c7_0 conda-forge; zlib 1.2.11 h516909a_1010 conda-forge; ```. OS: `Ubuntu 18.04.5`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432:1411,certificate,certificates,1411,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432,1,['certificate'],['certificates']
Security,"-threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Max. sequence length 65535; Split Seq. by len false; Do not shuffle input database false; Offset of numeric ids 0; Verbosity 3. ...................................................................................................Time for merging files: 0h 0m 1s 611ms; Time for merging files: 0h 0m 1s 458ms; Time for processing: 0h 1m 30s ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:1330,hash,hash,1330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['hash'],['hash']
Security,"-v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:3920,hash,hash,3920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,".001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db tmp/425628692068579862/clu_redundancy tmp/425628692068579862/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/1362866627410240754",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:94098,hash,hash-shift,94098,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['hash'],['hash-shift']
Security,".5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 9s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23583,hash,hash,23583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"//mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2726,secur,secure-protocol,2726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"/7574787915800795625/clu_tmp/4370341951257379003/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 8 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:4923,hash,hash-shift,4923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"/github.com/soedinglab/MMseqs2/files/14608041/my_seqs.1of3.fasta.gz); [my_seqs.2of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608046/my_seqs.2of3.fasta.gz); [my_seqs.3of3.fasta.gz](https://github.com/soedinglab/MMseqs2/files/14608047/my_seqs.3of3.fasta.gz). b) Consolidate the 3 chunks:. zcat my_seqs.*.fasta.gz > /tmp/my_seqs.fasta. c) Execute and expose the bug:. /opt/mmseqs/bin/mmseqs easy-cluster \; /tmp/my_seqs.fasta /tmp/my_seqs/result /tmp/my_seqs/tmp \; --dbtype 2 --threads 8 --local-tmp /tmp \; --cluster-reassign -s 7.5 --cov-mode 0 -c 0.98 --cluster-mode 2 --min-seq-id 0.99 -v 1. and the bug is shown below. ## MMseqs Output (for bugs). /tmp/my_seqs/tmp/5280277461515018798/clu_tmp/18196956704942050314/nucleotide_clustering.sh: line 48: 4723 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$QUERY"" ""$INPUT"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}; Error: Prefilter step died; Error: Search died. ## Context. In my hands, this bug is exposed only when the number of nucleotide sequences is in the order of millions. For small sets (thousands) the execution completes uneventfully. I have tried the precompiled AVX2 version, the SSE4.1 version, I have tried my own compilation of the latest release (15-6f452, Oct 31 2023) and also the latest github version (f6c9880) and other variations. All attempts led to the exact same bug. I have tried also with other three input datasets. All four crash in the same way. All four are in the order of 3 to 4million nucleotide sequences. When I subset the sequences to about 200K sequences, easy-cluster runs to completion. ## Your Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:1329,expose,exposed,1329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,1,['expose'],['exposed']
Security,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:1302,hash,hash-shift,1302,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['hash'],['hash-shift']
Security,"0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:22718,hash,hash,22718,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"0 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4015,hash,hash-shift,4015,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"00,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. Database size: 51992 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 51.99K 0s 346ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 62ms; Sort by rep. sequence 0h 0m 0s 19ms; Time for fill: 0h 0m 0s 27ms; Time for merging to pref: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 567ms; rescorediagonal shrimpDB shrimpDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4574,hash,hash-shift,4574,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security,"000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1807 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 1.81K 0s 10ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 2ms; Time for fill: 0h 0m 0s 1ms; Time for merging to pref: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 63ms; rescorediagonal /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:5701,hash,hash-shift,5701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security,"00; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern ; Local temporary path ; Threads 40; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.4; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterlinclust ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/clu_redundancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:9135,hash,hash,9135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash']
Security,"00; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95236,hash,hash-shift,95236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['hash'],['hash-shift']
Security,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7114,validat,validate,7114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,2,['validat'],['validate']
Security,"0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	nucl:0.200,aa:0.000; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:3244,hash,hash,3244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash']
Security,"0; Spaced k-mer pattern ; Local temporary path ; Threads 64; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 1; linclust uniref90-DB-wwmj tmp//16518381706844811497/clu_redundancy tmp//16518381706844811497/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:3040,hash,hash,3040,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash']
Security,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2561,hash,hash-shift,2561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['hash'],['hash-shift']
Security,"1878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3448,hash,hash-shift,3448,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security,"410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3 ; [=================================================================] 292.14M 2m 8s 8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:2196,hash,hash-shift,2196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['hash'],['hash-shift']
Security,"426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9. kmermatcher shrimpDB tmp97/17949317426677965256/linclust/6279588666755106708/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.97 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 10000 --hash-shift 67 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:4034,hash,hash-shift,4034,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash-shift']
Security,"47483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 80 --compressed 0 -v 3. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq_h!; Error: extract target orfs step died; Error: Search died; ```. ## Steps to Reproduce (for bugs). The ""old"" sequence database was created with `mmseqs createdb`. The ""new"" sequence databases contains the old and new sequences, and was also created by `mmseqs createdb`. The ""old"" clusters were generated via `mmseqs linclust`. . I'm using `xmmseqs clusterupdate --min-seq-id 0.9 -c 0.8` for updating the cluster db. . ## Your Environment. My os: Ubuntu 18.04.4. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:3437,certificate,certificates,3437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['certificate'],['certificates']
Security,"47d0)(DBReader<unsigned int>::Index*, DBReader<unsigned int>::Index*) at parallel.hpp:189:9; frame #17: 0x000000000043dfd2 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84), num_threads=4)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&), int) at ips4o.hpp:128:9; frame #18: 0x000000000040d66a mmseqs`void ips4o::parallel::sort<DBReader<unsigned int>::Index*, bool (*)(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)>(begin=0x00000008012ffc40, end=0x00000008013647d0, comp=(mmseqs`DBReader<unsigned int>::Index::compareByOffset(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&) at DBReader.h:84))(DBReader<unsigned int>::Index const&, DBReader<unsigned int>::Index const&)) at ips4o.hpp:137:5; frame #19: 0x00000000003ef124 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffc718, isSortedById=true) at DBReader.cpp:403:9; frame #20: 0x000000000044adae mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffc718, accessType=8) at DBReader.cpp:185:9; frame #21: 0x000000000059f427 mmseqs`doswap(par=0x000000080121f1c0, isGeneralMode=true) at swapresults.cpp:49:22; frame #22: 0x00000000005a1f2e mmseqs`swapdb(argc=8, argv=0x00007fffffffd2c8, command=0x0000000801269b00) at swapresults.cpp:353:12; frame #23: 0x000000000038a19f mmseqs`runCommand(p=0x0000000801269b00, argc=8, argv=0x00007fffffffd2c8) at Application.cpp:38:18; frame #24: 0x000000000038b416 mmseqs`main(argc=10, argv=0x00007fffffffd2b8) at Application.cpp:196:9; frame #25: 0x0000000000389280 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758:15819,access,accessType,15819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870068758,1,['access'],['accessType']
Security,"59278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:3460,hash,hash-shift,3460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"6542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4180,hash,hash-shift,4180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2944,hash,hash-shift,2944,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['hash'],['hash-shift']
Security,"6959338117486175/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 5 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5410,hash,hash-shift,5410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:2044,hash,hash,2044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4041,hash,hash,4041,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash']
Security,"7fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:18; frame #25: 0x0000000000388596 mmseqs`main(argc=22, argv=0x00007fffffffd898) at Application.cpp:196:9; frame #26: 0x0000000000386400 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1.c:76:7; (lldb) ; * thread #1, name = 'mmseqs'; * frame #0: 0x000000080086f68c libthr.so.3`___lldb_unnamed_symbol190$$libthr.so.3 + 92; frame #1: 0x000000080086ccab libthr.so.3`___lldb_unnamed_symbol159$$libthr.so.3 + 491; frame #2: 0x000000080092ea3e libomp.so`___lldb_unnamed_symbol30$$libomp.so + 302; frame #3: 0x000000080096faaa libomp.so`___lldb_unnamed_symbol400$$libomp.so + 698; frame #4: 0x000000080096dd5c libomp.so`___lldb_unnamed_symbol392$$l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:5775,access,accessType,5775,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,1,['access'],['accessType']
Security,"81369344000996149/clu_tmp/10544097544295592317/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher /Volumes/s/tmp/3581369344000996149/input /Volumes/s/tmp/3581369344000996149/clu_tmp/10544097544295592317/linclust/18419612973359567408/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710:4537,hash,hash-shift,4537,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710,1,['hash'],['hash-shift']
Security,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4198,hash,hash-shift,4198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"83647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 17",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19801,hash,hash-shift,19801,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1298,hash,hash-shift,1298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['hash'],['hash-shift']
Security,"94185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 124298 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: linclust died; Error: Search died; ```; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 6b9388469a41935813f5d207d6d149767feb4c42-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:4989,hash,hash-shift,4989,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['hash'],['hash-shift']
Security,"97/linclust --cluster-mode 3 --max-iterations 1000 --similarity; -type 2 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignme; nt-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 2 --max-seq-len 65535 --comp; -bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,co; ntext:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight; 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.; 000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 -; -ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:4223,hash,hash-shift,4223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb exp.fa tmp2/6664721939282577716/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 24ms; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 1ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 33ms; Create directory tmp2/6664721939282577716/clu_tmp; cluster tmp2/6664721939282577716/input tmp2/6664721939282577716/clu tmp2/6664721939282577716/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/66647219392825777",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:2975,hash,hash,2975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['hash'],['hash']
Security,"; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:4079,hash,hash,4079,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /opt/mmseqs/examples/DB.fasta /tmp/mydir/7574787915800795625/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [19999] 0s 15ms; Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 16ms; Create directory /tmp/mydir/7574787915800795625/clu_tmp; cluster /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu /tmp/mydir/7574787915800795625/clu_tmp --max-seqs 20 -c 0.8 --spaced-kmer-mode 1 --alignment-mode 3 -e 0.001 --remove-tmp-files 1 . Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:2876,hash,hash,2876,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash']
Security,"> Bitteschön :) Was the RAM inserted only at the bank belong to a single socket? (So all memory access of socket 2 went through socket 1 or vise versa?). When we put all 8 RAMs next to CPU0 or CPU1, the speed has been improved very well.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-826566571:96,access,access,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-826566571,1,['access'],['access']
Security,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:698,access,accession,698,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010,4,['access'],['accession']
Security,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:84,access,access,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117,1,['access'],['access']
Security,"@crisdarbellay no, sorry. I don't have access to a ""bare metal"" server to test this with, but my guess is that Milot guess that it has to do with virtualization is correct. Are you running it with KVM or not?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247:39,access,access,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247,1,['access'],['access']
Security,@ksahlin I try to cluster also a huge set of sequences > 100 mio. proteins but it does not have any problems. Do you use nucleotide sequences? Is it possible to get access to them? . Update: I have now also clustered 115 mio. nucleotide sequences and it did not crash. . Could you also try to delete the `linclust_tmpdir` and rerun it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571:165,access,access,165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571,1,['access'],['access']
Security,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:398,hash,hashBinElement,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060,4,['hash'],['hashBinElement']
Security,"@milot-mirdita Hi Milot, how is it going with this topic of global alignment? . My workflow for protein clustering like below:; 1. blastp for local alignment, find similar sequence pairs;; 2. needle for global alignment access similarity for blastp pairs;; 3. mcl to cluster the needle result. According to my experience, only a local alignment could be not enough to have clusters.; I'm not clear about the clustering function in mmseqs2, is it enough to substitute my whole workflow?. Hope to see your comment. Cheers,. **WANG**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186:220,access,access,220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186,1,['access'],['access']
Security,"@ppflrs I have rebuilt the metaclust database by adding new identifier and reclustering everything. Every protein source should be now labeled with uniq identifier which can be used to traced the protein to the JGI, OM-RGC, Uniprot or NCBI. ; The new release is available here https://metaclust.mmseqs.com/2018_06/ ; ; The identifier looks like this now. >RifCSPlowO2_12_1023861.scaffolds.fasta_scaffold367679_1 # 24 # 428 # -1 # ID=367679_1;partial=00;start_type=ATG;rbs_motif=None;rbs_spacer=None;gc_cont=0.435. `RifCSPlowO2_12` identifies the JGI project. The project can be accessed the following way (you need an JGI account): . https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=RifCSPlowO2_12. Within the project the contig is contained in the file `1023861.scaffolds.fasta` at fasta record `scaffold367679_1`. . The rest of the header contains the prodigal prediction information. . I have also added a file metaclust_50_cluster.fasta.gz which contains all cluster member in a fasta like fromat https://github.com/soedinglab/MMseqs2/wiki#cluster-fasta-like-format.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855:578,access,accessed,578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855,1,['access'],['accessed']
Security,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:1162,access,access,1162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,1,['access'],['access']
Security,According to NCBI they clustered NR at 90% id and 90% cov. I was wondering what would be the correct cluster mode & cover mode to reproduce the clustering?. >Reduced redundancy. Faster searches. More diverse proteins and organisms in your BLAST results. Check out our new ClusteredNR database – derived from the default BLAST protein nr database by clustering sequences at 90% identity / 90% length ([details below](https://ncbiinsights.ncbi.nlm.nih.gov/2022/05/02/clusterednr_1/#more-about-clusters)). Get quicker results and access to information about the distribution of your hits across a wider range of organisms and evolutionary distances.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/651:527,access,access,527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/651,1,['access'],['access']
Security,Address sanitizer & memory sanitizer issues,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:8,sanitiz,sanitizer,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,2,['sanitiz'],['sanitizer']
Security,"BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers list for 1 split; Generate k-mers list for 2 split; Generate k-mers list for 3 split; Generate k-mers list for 4 split; Generate k-mers list for 5 split; Generate k-mers list for 6 split; Generate k-mers list for 7 split; [=================================================================] 2.20B 32m 39s 205ms; Sort kmer 0h 0m 26s 313ms; Sort by rep. sequence 0h 0m 4s 966ms; Generate k-mers list for 8 split; [=================================================================] 2.20B 33m 28s 924ms; Sort kmer 0h 0m 26s 546ms; Sort by rep. sequence 0h 0m 5s 354ms; Generate k",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3979,hash,hash-shift,3979,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash-shift']
Security,Bitteschön :) Was the RAM inserted only at the bank belong to a single socket? (So all memory access of socket 2 went through socket 1 or vise versa?),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824888140:94,access,access,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824888140,1,['access'],['access']
Security,"Can you check how much swap spaces is being used (`free -h`). I guess the automatic memory limit detection is going wrong somehow. Do you set memory limits in the cluster environments? Can you restart without/higher memory limits? I am not sure if SemiBin exposes MMseqs2 options to users, but you could set `--split-memory-Limit` so it processes the GTDB in smaller chunks. You would set this parameter to about 70-80% of total allowed RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795:256,expose,exposes,256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894187795,1,['expose'],['exposes']
Security,"Cns is not the sequence but the profile consensus sequence. The easiest way to match them together should be to use the non db output mode (`profile2pssm --db-output 0`) and match them to the original sequence based on the database key (first column in the db `.lookup` file, second is the accession).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2132325500:290,access,accession,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2132325500,1,['access'],['accession']
Security,"Could this have anything to do with NUMA topology? Are your servers NUMA-less? Considering that all our high-mem nodes have multiple NUMA nodes, with at most ~370G per NUMA node, I'm thinking sub-optimal memory access might be the cause.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1402329661:211,access,access,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1402329661,1,['access'],['access']
Security,"Currently, everything is tailored to the NCBI taxonomy format (taxdump). For GTDB we transform their taxonomy to a names/nodes.dmp format). If your taxonomy is NCBI based, then you can just use their taxdump. Additionally, you need a mapping file pointing from a database accession to a taxid. For this create a TSV files that contains the same names as you can find in the `.lookup` (usually the first word of the FASTA header) and a second column with the taxid. You can give both of these to `createtaxdb` with the `--tax-mapping-file` and `--ncbi-tax-dump` and it will create the MMseqs2 taxonomy files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1815727170:272,access,accession,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1815727170,1,['access'],['accession']
Security,"Dear colleagues,. I'm Paul DE BOISSIER, PhD student at the IBDM, in Marseille, France.; I'm developing a pipeline in which the first step is an orthologous search. For that, I already implemented a RBH search and an access to OrthoDB.; My problem is that OrthoDB is not quite complete and the RBH took a lot of time to run.; I discussed with my supervisor, Bianca Habermann, and we think that using MMseqs2 can help us a lot to reduce our running time. So, I have deeply read the documentation but maybe I missed something. My pipeline is running with refseq as the main database, especially for the RBH, with all the files in .pal, .pos,...; My problem is that I want to use my already existing blast database with MMseqs2 but I don't find any options to create the MMseqs2 database from such database.; Obviously, I read about the function ""databases"" which downloads the database, and I can use NR or UniProtKB but I don't want to redownload a whole database as I have not a lot of space in our servers, especially as we share it among the team. Do you know how I can manage it please ?. Best. DE BOISSIER Paul; PhD Student - Computational Biology Group; IBDM – Institut de Biologie du Développement de Marseille; paul.de-boissier@univ-amu.fr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/395:216,access,access,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/395,1,['access'],['access']
Security,Do you try to cluster the database or just to reduce sequences that have exactly the same lenght? Hashclust can just reduce sequences of the same lenght while the clustering can reduce sequence of different lenght.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263867708:98,Hash,Hashclust,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263867708,1,['Hash'],['Hashclust']
Security,Essentially you need:; * three FASTA files with headers with unique accessions and the amino acid sequences.; * one TSV files that goes from accession to numeric taxonomy id; * combined *.dmp files. With all of that you can call:. ```; mmseqs createdb gtdb.fasta virus.fasta euks.fasta seqdb; mmseqs createtaxdb seqdb tmp --tax-mapping-file accession_to_taxid.tsv --ncbi-tax-dump path-to-dmp-files-dir/; ```. `seqdb` will then be a normal taxonomy database. for the tsv files you have to check that the second column (containing the accessions) in the `seqdb.lookup` file that is created after calling `createdb` matches the accessions in the first column in your tsv file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009:68,access,accessions,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/849#issuecomment-2167640009,4,['access'],"['accession', 'accessions']"
Security,"Git SHA1 hash values are used in multiple ways that make for unpleasantness for anyone who has to package this code:; * In tags such as 12-113e3 which determines the version download URL; * In directory names such as MMseqs2-113e3212c137d026e297c7540e1fcd039f6812b1; * In the output of ""mmseqs version"", which defaults to the long-form SHA1 for building from git or ""GIT-NOTFOUND"" if compiled from downloads unless the builder defines VERSION_OVERRIDE at cmake. There are big disadvantages to this scheme:; * SHA1 hashes aren't monotonic, so someone has to look at the complete commit history to figure out whether the installed version; * There are 3 pieces of info, the major version, the long hash, and the number of digits in the shortened hash, that have to be transmitted when updating a package; * GIT-NOTFOUND is a really ugly string to get. Please use semantic versioning, which is ordered and standard.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396:9,hash,hash,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396,4,['hash'],"['hash', 'hashes']"
Security,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238:786,hash,hash-shift,786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238,1,['hash'],['hash-shift']
Security,"Having problems with this currently. Normal output from mmseqs cluster is. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/109119296912",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:360,hash,hash,360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['hash'],['hash']
Security,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:899,access,accessing,899,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561,1,['access'],['accessing']
Security,"Hello,. ## Expected Behavior; Output clustering results.; ## Current Behavior; Segmentation in linclust.sh; ## Steps to Reproduce (for bugs); ```; mmseqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=====================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:690,hash,hash-shift,690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['hash'],['hash-shift']
Security,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:922,validat,validate,922,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129,1,['validat'],['validate']
Security,"Hi Ann,. Thank you for suggesting that. I know that using --cov-mode 3 paired with -c 0.99 is quite strict. When we relaxed it, we were finding 'false positive' clusters, where the cluster head/representatives (the largest sequence in the cluster) had novel enough genetic information in it, that we would have preferred it to be it's own cluster (with a solitary member). That being said, in my grid search, I have only explored varying -c values with a constant --cov-mode 3. The sequence pairs that I am finding that should be clustered together (and aren't) have nearly identical lengths (+-1) with a few mismatches (<10). It is my understanding that those should have been clustered regardless of the value of --cov-mode, even with the stringent -c 0.99. To give you another example, even when I use a very lenient clustering criterion (please note the values of min-seq-id, -c) - ; --kmer-per-seq-scale 0 --min-seq-id 0.80 --cov-mode 3 -c 0.80 --cluster-mode 1 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. I still find representative sequence pairs that have a levenshtein distance of 1 between them. Although now, I find very few such pairs (8 / 1378 all-v-all alignment of representative sequences with a levenshtein distance of < 10). I understand these could be edge cases, but I find them interesting, and I want to learn what linclust is doing by focussing on these 8 alone. (Making a long post even longer!) I'm validating linclust clusters by generating an all-v-all levenshtein distance matrix of representative clusters. And an all-v-all levenshtein distance matrix of all members within a cluster. Because my understanding of linclust is not great, I'm treating it as a black box that I intend to understand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989:1463,validat,validating,1463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989,1,['validat'],['validating']
Security,"Hi Joseph,. The parameter has to be a float in the range [0,1]. Sorry that the validation regex didn't give out a warning. We'll fix that asap.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305590286:79,validat,validation,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305590286,1,['validat'],['validation']
Security,"Hi Martin,; That's a great point, thanks. I've got a few pieces of information:. * We run asan with [non-default flags](https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags) `--check_initialization_order=true` and `--strict_init_order=true`. * We realised that point 3 from my list ('initialisation order fiasco') is specific to how we build stuff, so that shouldn't be an issue for you or other users. . * We're not quite sure why we got the ODR violation flagged, while you didn't. Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408612949:146,sanitiz,sanitizers,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408612949,1,['sanitiz'],['sanitizers']
Security,"Hi all,. Thanks again for making MMseq2 accessible for all of us to use! I am interested in using `MMseq2 clusterupdate` on a publicly available database to add my protein sequences to the original clusters. I have a few questions to ask about that- ; The clusters of the database exists as protein sequence file of cluster representatives [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) or a cluster membership text file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url). As it is not in the format that MMseq2 takes as input, I am running the following code to generate that-. `mmseqs cluster DB_trimmed DB_trimmed_clu tmp`; 1. My question is that the database is VERY big, and its taking a long time to generate the `DB_trimmed_clu` clusters. Is it possible to use the available tsv file [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_cluster_seqs.tsv.gz](url) on the website to speed up the process?. 2. I downloaded the cluster representative protein sequences [http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/current_release/mgy_clusters.fa.gz](url) to generate the `DB_trimmed_clu` file. Would I need the complete database to generate the `DB_trimmed_clu` file or the cluster representative protein sequences are okay?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/735:40,access,accessible,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/735,1,['access'],['accessible']
Security,"Hi everyone, I ran a `mmseqs search` and a `convertalis `run in order to get a .m8 output format. I would like to add more informations into this` .m8 `file by adding taxonomy, function, familly etc names of each hit in my file. The accessions number are from NCBI; and the `mmseqs2_db.lookup `file looks like:. ```; 0	YP_008004056.1	0; 1	YP_009304977.1	0; 2	YP_004063493.1	0; 3	YP_003457306.1	0; 4	NP_076520.1	0; 5	YP_009361849.1	0; ```; etc . Do you know if the `mmseqs taxonomy` will work for such a thing? . Thank you for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166:233,access,accessions,233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166,1,['access'],['accessions']
Security,"Hi there, thanks for reading this. I am trying to download mmseq2 but it always gives me the error message: cannot verify mmseqs.com's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’: Issued certificate has expired. Could you please help me with this issue?. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/751:135,certificate,certificate,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/751,3,"['Encrypt', 'certificate']","['Encrypt', 'certificate']"
Security,"I am not 100% sure what you want, from here there are multiple ways you can go for downstream processing:. * You can use `unpackdb` to split a database into separate files; * You can use `createsubdb` to get only a smaller subset based on a list of database keys ; * You can use `view` to extract a single entry. For `createsubdb` and `view` you need to give the internal database identifiers (keys). You can get those from the `seqdumpDB.lookup` file. You can grep for your FASTA accession in the second column and take the number from the first column for `view`'s `--id-list` parameter or `createsubdbs` first input file. `unpackdb` will name the files based on this internal identifier, if no `.lookup` file is present. You can copy/symlink the `.lookup` file from the `seqdumpDB` to the `DB_clu_seq` to get better names, as these share the same database keys:; ```; ln -s seqdumpDB.lookup DB_clu_seq.lookup; mmseqs unpackdb DB_clu_seq unpackdir; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501:481,access,accession,481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501,1,['access'],['accession']
Security,I am unable to access the uniclust page (page not found). Would you mind sharing another link?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553508828:15,access,access,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1553508828,1,['access'],['access']
Security,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:1518,access,access,1518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917,1,['access'],['access']
Security,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:570,access,accessible,570,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536,1,['access'],['accessible']
Security,I hope it will help you.; ```; (gdb) bt; Python Exception <class 'gdb.MemoryError'> Cannot access memory at address 0x7fff53ed22c8: ; #0 0x00000000004dfe25 in DBReader<unsigned int>::sortIndex(bool) (); Backtrace stopped: Cannot access memory at address 0x7fff53ed22c8; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909:91,access,access,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-800279909,2,['access'],['access']
Security,"I improved `createsubdb` and `view` in 14a3dce2ae6319caf671e81d91a41c1292401285 to also directly parse FASTA accessions if a `.lookup` file is present, if the `--id-mode 1` parameter is given.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811982749:109,access,accessions,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811982749,1,['access'],['accessions']
Security,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:832,validat,validator,832,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,1,['validat'],['validator']
Security,"I see. So when the documentation says ; > The result database of searching sequences against a seqTaxDB is referred to as `taxonomyResult`. ""searching"" does not refer to `mmseqs search` but rather the process that `mmseqs taxonomy` uses?. Here is the work-around I used previously to see the taxonomy of my search results. Does this look pretty normal to you, or is there a better way to do this? There seems to be no good way to go from an alignment database (search result) to a sequence database which can then can be used in the `taxonomy` workflow. . 1. get all the accession IDs of all my hits in `resultDB` with `convertalis`; 2. use `blastdbcmd` to get a fasta file containing sequences of all my hits; 3. then use `easy-taxonomy` to renerate a Kraken style report",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771860702:571,access,accession,571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771860702,1,['access'],['accession']
Security,I submitted a fix to the ResFinder team here:; https://bitbucket.org/genomicepidemiology/resfinder_db/pull-requests/9. MMseqs2 assumes FASTA accessions start directly after the `>` without any whitespace.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/622#issuecomment-1281772629:141,access,accessions,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/622#issuecomment-1281772629,1,['access'],['accessions']
Security,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:41,hash,hash,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['hash'],['hash']
Security,I think this error can happen if there is a space (or possible other whitespace) after the `>` and before the accession.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280:110,access,accession,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280,1,['access'],['accession']
Security,"I think you need to specify `/tmp/global2/hashkenazy/sample.fa.mmseqdb.gz` twice, as it's both the query and target database for `createtsv`. Sorry this is a bit confusing when used together with the clustering workflows :/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860641251:42,hash,hashkenazy,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860641251,1,['hash'],['hashkenazy']
Security,"I want to do multiple things.; First I want to reduce the redundancy of the DB by filtering out exact duplicates. ""Hashclust"" seems to detect exact duplicates after reducing the alphabet, which might be even better for my use case.; Later, I want to compare different clustering methods, including the ones provided by MMseqs. If I understand the module correctly, ""hashclust"" creates an alignmentDB that includes all exact matches between sequences that have had their alphabet reduced. This alignmentDB can then be used by ""clust"" to cluster the sequences. If I use sequence identity in ""clust"", which can only be 1 or 0 (not listed) when I use ""hashclust"" the resulting clusters should contain only said reduced-alphabet-exact-matches. Is that correct?. **Edit:** It seems that after using ""mmseqs createseqfiledb DB clu clu_seq"" every header in clu_seq containing a cluster representing sequence ID starts with a null byte. I used that to create a fasta file that only contains non-redundant (with regard to ""clusthash"") sequences.; I hope that what I got is what I think I got.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227:115,Hash,Hashclust,115,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227,3,"['Hash', 'hash']","['Hashclust', 'hashclust']"
Security,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:528,access,access,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['access'],['access']
Security,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:640,access,access,640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['access'],['access']
Security,I've seen Issue 666 and have access to a supercomputing facility. Should I submit a job-script allocating GPUs to this instead of performing it in PuTTy on my computer alone?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218:29,access,access,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1434645218,1,['access'],['access']
Security,"I've tried this:; ```; gdb --args ~/git/MMseqs2/build/bin/mmseqs kmermatcher tmp/14020823439690622662/input tmp/14020823439690622662/clu_tmp/13817195423418140833/linclust/5869534598694216613/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3; ```; and this is what I'm getting:; ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; 3123	malloc.c: No such file or directory.; (gdb) bt; #0 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; #1 0x000055555569ea2c in DBReader<unsigned int>::close (this=0x7fffffffdd90) at /home/jose/git/MMseqs2/src/commons/DBReader.cpp:353; #2 0x000055555572f571 in kmermatcher (argc=32, argv=0x7fffffffe1b8, command=...) at /home/jose/git/MMseqs2/src/linclust/kmermatcher.cpp:479; #3 0x0000555555692a63 in runCommand (p=..., argc=32, argv=0x7fffffffe1b8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:62; #4 0x000055555569328d in main (argc=34, argv=0x7fffffffe1a8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:135; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213:323,hash,hash-shift,323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213,1,['hash'],['hash-shift']
Security,Is it possible to provide an md5 check sum for for bfd database? I want to check the integrity of my tarball download for bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt.tar.gz .; Thank you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-525803520:85,integrity,integrity,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-525803520,1,['integrity'],['integrity']
Security,"It is a format issue. The output of alignall technically is not a valid alignment database. Therefore it can not be converted by `convertalis`. The first two columns contain the identifier for the alignment of A against B. convertalis can just handle a single identifier. We will validate this in the near future. . Here is a script how to generate the desired result: . mmseqs createdb test_proteins.faa db ; mmseqs cluster db clu /tmp/tmpd9nk3khu --max-seqs 1000 --threads 40 --min-seq-id 0.3 -e 0.000010 -c 0.7 ; mmseqs alignall db clu alignDb --alignment-mode 3 ; mmseqs createtsv db db alignDb alignDb.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' targetDB.lookup alignallDB.tsv > alignallDB_newid.tsv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/194#issuecomment-486888091:280,validat,validate,280,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/194#issuecomment-486888091,1,['validat'],['validate']
Security,"It told me to request permissions to access the file, which I did.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538983056:37,access,access,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538983056,1,['access'],['access']
Security,"It's not well (ehm at all) explained, sorry about that. . If the input database is a precomputed index (created by `createindex`), this parameter allows to access the different sequences stored there. If we index a nucleotide sequences for use in a translated search we need to store both the nucleotide sequence and the translated amino acid sequence. This parameter allows to access these.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468:156,access,access,156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263#issuecomment-573955468,2,['access'],['access']
Security,"It's related with the cluster evaluation and representative selection we are using. We need to find a compromise between speed and I/O bottlenecks. Now we were using `createsudb` to query the DB and get DBs for each cluster and distribute it in the HPC cluster to perform our validation, but it takes a long time, the original DB is ~250M proteins. It is faster when we have the files in the scratch partition of each node and the files partitioned in folders. This is the fastest way we found so far, from `createseqfiledb`:; ```; mawk '{if ($0 ~ /^\x0/ || NR == 1){gsub(""\x0"","""",$0); print ""#""$0; print $0}else{print $0}}' DB_clu_fa | csplit -z --suppress-matched -s -f cluster_ -b ""%01d.fa"" - '^#/' {*}; ```; After we split the ~32M files in folders with 100K files in each. All of this done in a fast SSD partition. Do you have any suggestions?. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343725229:276,validat,validation,276,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343725229,1,['validat'],['validation']
Security,Less alignments in alignment tsv file than accessions in cluster tsv file,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268:43,access,accessions,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268,1,['access'],['accessions']
Security,"MMseqs2 does something more sensible with `,` in `--taxon-list`. No idea what to do about the validation step though. We could add a regex to check for only sensible operators and numbers?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/320#issuecomment-665664188:94,validat,validation,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/320#issuecomment-665664188,1,['validat'],['validation']
Security,Maybe we should add a do not hash flags to the parameters to avoid this.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461806077:29,hash,hash,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461806077,1,['hash'],['hash']
Security,Merged the validation regexes (we will still have to improve their errors in the future).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-307105278:11,validat,validation,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-307105278,1,['validat'],['validation']
Security,"No, currently query/target always parses the accession:; ```; { ""uc"", 2, 0}, // Uniclust; { ""cl|"", 3, 1},; { ""sp|"", 3, 1}, // Swiss prot; { ""tr|"", 3, 1}, // trembl; { ""gb|"", 3, 1}, // GenBank; { ""ref|"", 4, 1}, // NCBI Reference Sequence; { ""pdb|"", 4, 1}, // Brookhaven Protein Data Bank; { ""bbs|"", 4, 1}, // GenInfo Backbone Id; { ""lcl|"", 4, 1}, // Local Sequence identifier; { ""pir||"", 5, 1}, // NBRF PIR; { ""prf||"", 5, 1}, // Protein Research Foundation; { ""gnl|"", 4, 2}, // General database identifier; { ""pat|"", 4, 2}, // Patents; { ""gi|"", 3, 3} // NCBI GI; ```. These are the header formats that get parsed, you can try to avoid these prefices. It wouldn't be to hard to add an option to avoid parsing, but we have out hands quite full currently.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398:45,access,accession,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871240398,1,['access'],['accession']
Security,Nucleotide cluster results can currently not be converted into MSAs since we miss a seeding point to start the alignment (see https://github.com/soedinglab/MMseqs2/issues/268). Using `result2dnamsa` only works for searches. We will change the input validator.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/364#issuecomment-711474276:249,validat,validator,249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/364#issuecomment-711474276,1,['validat'],['validator']
Security,"Nucleotide matrices are currently hardcoded. Most of the infrastructure is in place to make it changeable, a little bit of work is still left however to expose that. We will look into making it adjustable.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-498778108:153,expose,expose,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-498778108,1,['expose'],['expose']
Security,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1256,hash,hash-shift,1256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707,1,['hash'],['hash-shift']
Security,"Okay we found the issue. The problem occurs because of : in the --lca-ranks parameter. The seperator should be ;. The description is wrong in our mmseqs help text. So it should be `--lca-ranks ""species;genus;family;order;class;phylum;superkingdom""`. . Thank you so much for your help to find it. But we have just noticed that ';' make some issues as parameter. If you would write `--lca-ranks species;genus;family;order;class;phylum;superkingdom` than bash will only interpret until `--lca-ranks species`. Luckily this change was not yet part of any release. So we will change it to `,` and add a proper validation of the input parameter. . Also I did not receive a mail for the stickers. My mail add is themartinsteinegger gmail com 🙂",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393:604,validat,validation,604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571346393,1,['validat'],['validation']
Security,"Regarding the first question:; - `_consensus` is the consensus sequence generated by taking the highest scoring amino acid in each profile position; - `_seed` contains the representative (= first) sequence of each alignment. The files are not really necessary anymore, since both of these sequences are now also stored inside the (binary) profile format. We didn't add separate modules to extract these sequences from profiles yet, so we didn't remove the databases. Second question: Num corresponds to the database key (.index) of each entry. We could add an option to parse the accession from the corresponding sequence header. Would that be useful?; The module was requested from a user to have a human readable output of our binary profile format. We currently use `profile2pssm` mostly as a debugging tool. What are you using it for?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458945116:580,access,accession,580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458945116,1,['access'],['accession']
Security,"Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMSEQS kmermatcher ""$INPUT"" ""$3/pref"" ${KMERMATCHER_PAR}; > Rescore diagonals. Has anyone seen this before? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1399,hash,hash,1399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['hash'],['hash']
Security,"So I figured out the puzzle. All parameters have to match, even ones that MMseqs2 resolves automatically such as thread count. The first run was with 48, the other with 56 threads. If you resubmit the job, such that it runs on the 48 thread machine again it should continue from the point it stopped correctly. @martin-steinegger: should we make a list of parameters to always exclude from hashing (threads, verbosity, ...)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461789947:390,hash,hashing,390,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461789947,1,['hash'],['hashing']
Security,So far so good. The program is running smoothly and the kmermatcher step is ended without errors. . ```; kmermatcher data/02_geneclust/plass_assembly_noclust /mnt/lustre/scratch/aauladell/9518450204626139512/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.95 --kmer-per-seq 21 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-m; ode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 48 --compressed 0 -v 3. Database size: 823952135 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 263893 MB; Generate k-mers list for 1 split; [=================================================================] 823.95M 37m 20s 931ms; Sort kmer 0h 11m 29s 726ms; Sort by rep. sequence 0h 2m 46s 392ms; Time for fill: 0h 3m 48s 1ms; Time for merging files: 0h 4m 55s 350ms; Time for processing: 1h 13m 27s 843ms; ```. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090:385,hash,hash-shift,385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090,1,['hash'],['hash-shift']
Security,"So the workflow scripts don't need to be accessible at runtime? I wasn't sure what you meant by ""compiled in"". Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868487428:41,access,accessible,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868487428,1,['access'],['accessible']
Security,"So using ""hashclust"" is already a bit advanced. You need to do two things in order to cluster with hashclust. First call hashclust and define your target sequence identity with --min-seq-id. As a second step you have to input the result database in the ""clust"" module. The result is your clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-264629192:10,hash,hashclust,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-264629192,3,['hash'],['hashclust']
Security,"Something is wrong with the input FASTA headers. This is not necessarily a problem for the clustering itself, however the result files might be not very useful if you cant distinguish cluster members. It might be an issue with a space between the leading `>` in the FASTA header and the actual accession. MMseqs2 expects there to not be any whitespace.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/804#issuecomment-1899530817:294,access,accession,294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/804#issuecomment-1899530817,1,['access'],['accession']
Security,"Sorry for the delay to answer. Thank you for giving some help to avoir the problem. I give you the output with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`; ```; #0 DBReader<unsigned int>::sortIndex (this=this@entry=0x7ffe5bd0a970, isSortedById=isSortedById@entry=false) at /path/to/MMseqs2/src/commons/DBReader.cpp:249; #1 0x00000000004fbc6b in DBReader<unsigned int>::open (this=this@entry=0x7ffe5bd0a970, accessType=accessType@entry=0) at /path/to/MMseqs2/src/commons/MemoryTracker.h:13; #2 0x00000000005c1c81 in indexdb (argc=<optimized out>, argv=<optimized out>, command=...) at /path/to//MMseqs2/src/util/indexdb.cpp:64; #3 0x0000000000471e20 in runCommand (p=0x2394310, argc=argc@entry=36, argv=argv@entry=0x7ffe5bd0af48) at /path/to/MMseqs2/src/commons/Application.cpp:40; #4 0x0000000000460455 in main (argc=38, argv=0x7ffe5bd0af38) at /path/to/MMseqs2/src/commons/Application.cpp:203; ```; As you said it is a issue with the max size, the size is greater than 4294967295 (unsigned int), so it becomes an infinite loop. Do you have see a solution in a long term goal about this problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784:399,access,accessType,399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-968758784,2,['access'],['accessType']
Security,Sorry for the late answer. Milot and I have some deadlines approaching soon. . I could not reproduce the error. The error indicates that MMseqs2 tries to access an out of range offset in the data file `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1`. Could you please check the size of this file? Is there any entry in the second column of `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1.index` that is greater than the data file size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101:154,access,access,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101,1,['access'],['access']
Security,"Sorry if this isn't the right forum, but is there a reference database for determining the sensitivity to the first false positive as plotted here to compare the various `-s` and with other packages? . https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter . Or said another way, are the databases/code used for the plot available somewhere? I'm trying to validate another method and am hoping place it accurately/make a fair comparison with other the rest.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/296:373,validat,validate,373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296,1,['validat'],['validate']
Security,"Thank for your report. I copied a wrong file to the Metaclust 2018_01 release. It should be fixed now.; Information on the current release can be found in the latest version of the preprint: https://www.biorxiv.org/content/early/2018/01/05/104034.full.pdf+html. The input set size of the Metaclust did not increase since the first release. The data should be seen as proof of concept for Linclust. We can not commit to such a data intensive procedure at this point. It took weeks to download the full datasets used in this study. We believe that a sequence database based on metagenomic sequences should be offered rather by institutions that have direct access to huge amounts of metagenomic data (e.g. EMBL, NCBI, JGI, Argonne National Lab, ...).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695:655,access,access,655,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695,1,['access'],['access']
Security,Thank you for the file. I can not reproduce the bug. ; Could you compile mmseqs2 with debug flags and send me the back trace? . cmake -DCMAKE_BUILD_TYPE=Debug ..; make -j 6; gdb --args mmseqs kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. After GDB started type `r` an after it crashed `bt`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023:449,hash,hash-shift,449,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023,1,['hash'],['hash-shift']
Security,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:529,validat,validation,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834,1,['validat'],['validation']
Security,"Thank you this bug report. The problem is that our `DBReader` searches first for the extension `.[0-9]` if it exists then it knows that it is a multi-part database. In your case your single part database is not seen by the `DBReader` since you have leftover files from your pervious search that uses the same output file name. I currently do not have a solution for this issue. I will discuss this later with @milot-mirdita. For your suggestion to provide a guide for output per module, I totally agree we need this. We might be able to generate something from your command declaration in `MMseqsBase.cpp` since we already define input and output types to validate the user input.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094:656,validat,validate,656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094,1,['validat'],['validate']
Security,"Thanks a lot @AndrazMarinc and @milot-mirdita . It worked. Also I found another solution, the file ""prot.accession2taxid"" download from NCBI needs modification. Only two columns (accession.version and taxid) are needed to run createtaxdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096:179,access,accession,179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096,1,['access'],['accession']
Security,"Thanks for the bug report. ```; case '\n':; if (inHeader) {; inHeader = false;; } else {; if (seqLength > maxSeqLength) {; maxSeqLength = seqLength;; }; seqLength = 0;; }; break;; default:; if (!inHeader) {; seqLength++;; }; break;; ```. These lines in util/msa2profile.cpp are wrong, i'll see if I can fix the issue tomorrow. . (Side remark, databases from ffindex_build calls are somewhat dangerous for mmseqs modules that do random accesses (msa2profile only does linear access). Please sort the index file numerically first (LC_ALL=C sort -n DB.index > DB.index_sorted && mv -f DB.index_sorted DB.index)).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344434177:435,access,accesses,435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344434177,2,['access'],"['access', 'accesses']"
Security,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:196,hash,hashkenazy,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959,11,['hash'],['hashkenazy']
Security,That is the full log. The command that I ran was:. ```; mmseqs linclust --threads 24 --min-seq-id 0.90 -c 0.9 --kmer-per-seq 50 /tmp/global/nyoungblut/genes_db /tmp/global/nyoungblut/clusters_db /tmp/global/nyoungblut/linclust_tmp/ 2>> linclust.log 1>&2; ```. Note: I shorted the paths to make the command easier to read. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 main; bzip2 1.0.8 h516909a_1 conda-forge; ca-certificates 2019.9.11 hecc5488_0 conda-forge; curl 7.65.3 hf8cf82a_0 conda-forge; gawk 5.0.1 h516909a_0 conda-forge; htslib 1.9 h4da6232_3 bioconda; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.65.3 hda55be3_0 conda-forge; libdeflate 1.2 h516909a_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 9.1.0 hdf63c60_0; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 9.1.0 hdf63c60_0; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 10.6d92c h2d02072_0 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1c h516909a_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h10a08f8_12 bioconda; seqtk 1.3 hed695b0_2 bioconda; tk 8.6.9 hed695b0_1003 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h516909a_1006 conda-forge; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537579859:435,certificate,certificates,435,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537579859,1,['certificate'],['certificates']
Security,"Thats one possibility, however the issue is quite a bit more complicated to solve generally. First, `getTotalSystemMemory` is not used everywhere, only a few modules have a splitting logic. There is also the issue that we read input databases completely into memory if they will have random accesses. That is also currently not tracked through `getTotalSystemMemory`. You can disable that for a few tools with `--no-preload`, but then you pay a large IO cost. Then there is the issue that letting MMseqs2 share the memory bus among unrelated processes is probably also not the best idea. The prefilter benefits a lot from high-bandwidth, low latency access to its index structure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463:291,access,accesses,291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463,2,['access'],"['access', 'accesses']"
Security,"The `taxonomy` workflow is usable for your use case, but still under construction to make it user friendly. Building taxonomy databases is still not straightforward, however, this will change in the next few weeks. . We have only tested taxonomic annotations based on the UniProt KB (for which it should be pretty easy to build a database following the instructions on the [wiki](https://github.com/soedinglab/MMseqs2/wiki#prerequisites)). If you generate a mapping between a NCBI accession and its NCBI taxonomy identifier, you should be able to build an MMseqs2 taxonomy database, but we haven't done that yet ourselves. Also the `taxonomy` workflow requires to run [two additional searches](https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy). The second search is quite an expensive operation, since it requires high sensitivity searches against a large database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299:481,access,accession,481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299,1,['access'],['accession']
Security,"The mmseqs2 wiki mentions `mmseqs createfasta`, but for `MMseqs2 Version: 7.4e23d`, I don't see any `createfasta` subcommand. Is the documentation out of date or is `createfasta` accessed via some other method besides an mmseqs subcommand?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/145:179,access,accessed,179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/145,1,['access'],['accessed']
Security,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:730,hash,hash-shift,730,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['hash'],['hash-shift']
Security,"There are a few accession formats (uniprot, gi, ...) that use pipes and we parse out the meaningful part of the accession.; You can override the default output format to `--format-output qheader,theader,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits` (normally `query,target,...`). To add the whole header, this might cause other issue with whitespace though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927:16,access,accession,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/793#issuecomment-1871227927,2,['access'],['accession']
Security,"This is possible but a bit tricky:. Please make one FASTA file containing all sequence entries. Then call `createdb`; ```; mmseqs createdb YOUR_FASTA_FILE.fasta db; ```. Then take a look at the `db.lookup` file it generated.; You will find entries in the format:. ```; numeric_key accession set_id; ...; ```. The first two columns are important, you can ignore the last. You will need to make a new TSV file, of the keys of the two matching accessions. In your example, you should see something like the following in the `db.lookup`.; ```; 0 S10CNODE_1.fasta; 1 S10CNODE_2.fasta; 2 S10CNODE_3.fasta; 3 S10CNODE_4.fasta; 4 S10CNODE_5.fasta; 5 S1CNODE_25.fasta; 6 S2CNODE_8.fasta ; 7 S5CNODE_11.fasta ; 8 S3CNODE_7.fasta; 9 S6CNODE_10.fasta; ```. The new tsv file you need to create should look like this:; ```; 0 5; 1 6; 2 7; 3 8; 4 9; ...; ```. Next sort this file according to the first column:; ```; sort -k1,1n NEW_TSV_FILE.tsv > NEW_TSV_FILE_sort.tsv ; ```. Now you can pass this file to `tsv2db` and compute the alignments and generate a normal MMseqs2 m8 output:; ```; # 6 is a clustering database, which only requires a target key and nothing else; mmseqs tsv2db NEW_TSV_FILE_sort.tsv clu_db --output-dbtype 6; mmseqs align db db clu_db aln_db -a; mmseqs convertalis db db aln_db aln.m8; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542:281,access,accession,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/813#issuecomment-1944401542,2,['access'],"['accession', 'accessions']"
Security,"This is quite confusing. For whatever reason your system's `tar` doesn't use the default `--wildcards` option. It seems to be having `--no-wildcards` set as the default mode. I don't have access to RHEL, but in the centos 7.9 docker image this doesn't seem to happen. You can probably get around this issue by doing:. ```; TAR_OPTIONS=""--wildcards"" mmseqs databases Resfinder db/rf tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939160321:188,access,access,188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939160321,1,['access'],['access']
Security,"This looks about right. The `.lookup` contains mmseqs database key, accession, set id. The set id is referenced in the `.source` file. There you will find a list of set id and filename (the filename that was given to `createdb`). How does the corresponding `_mapping` entry look?; I would expect it to look like this (mmseqs database key tab taxonomy id):; ```; >grep 1046081 targetDB_mapping; 1046081\t2560625; ```. (Sorry for the slow answers, was a quite busy start into the new year.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-762299994:68,access,accession,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-762299994,1,['access'],['accession']
Security,"WP 36792]; [New LWP 36793]; [New LWP 36794]; [New LWP 36795]; [New LWP 36796]; [New LWP 36797]; [New LWP 36798]; [New LWP 36799]; [New LWP 36800]; [New LWP 36801]; [New LWP 36802]; [New LWP 36803]; [New LWP 36804]; [New LWP 36805]; [New LWP 36806]; [New LWP 36807]; [New LWP 36808]; [New LWP 36809]; [New LWP 36810]; [New LWP 36811]; [New LWP 36812]; [New LWP 36813]; [New LWP 36814]; [New LWP 36815]; [New LWP 36816]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; --Type <RET> for more, q to quit, c to continue without paging--RET; 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); (gdb) bt; #0 0x00005623f9de6504 in CacheFriendlyOperations<512u>::hashIndexEntry(unsigned short, IndexEntryLocal*, unsigned long, CounterResult*) (); #1 0x00005623f9de68e5 in CacheFriendlyOperations<512u>::findDuplicates(IndexEntryLocal**, CounterResult*, unsigned long, unsigned short, unsigned short, bool) (); #2 0x00005623f9c42be0 in QueryMatcher::match(Sequence*, float*) (); #3 0x00005623f9c4393d in QueryMatcher::matchQuery(Sequence*, unsigned int) (); #4 0x00005623f9c2e113 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) [clone ._omp_fn.1] (); #5 0x00007fdb5f003cff in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #6 0x00005623f9c337f4 in Prefiltering::runSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool) (); #7 0x00005623f9c352ae in Prefiltering::runSplits(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868:1043,hash,hashIndexEntry,1043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616635868,2,['hash'],['hashIndexEntry']
Security,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:552,expose,exposed,552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,1,['expose'],['exposed']
Security,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:172,audit,audit,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808,1,['audit'],['audit']
Security,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:77,access,accession,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060,2,['access'],['accession']
Security,"We have decided against semantic versioning a while ago. Getting consensus on a versioning scheme was kind of difficult, I don't want to reopen that can of worms. Generally we decide every few months that we have a new release and increment the version number by one. Additionally we add a short git hash to the string. You should use the CMake `-DVERSION_OVERRIDE` parameter to override the version string when you package MMseqs2 (see ; https://github.com/soedinglab/MMseqs2/wiki#customizing-compilation-through-cmake for cmake flags, if you are packaging MMseqs2 for a Linux distribution you might want to pay close attention to how Debian dealt with multi-arch and different SIMD levels of x64). I've linked bioconda, homebrew and debian below if you want to see packaging is dealt with in other places:; https://github.com/bioconda/bioconda-recipes/blob/master/recipes/mmseqs2/build.sh; https://github.com/Homebrew/homebrew-core/tree/master/Formula/mmseqs2.rb; https://salsa.debian.org/med-team/mmseqs2/-/blob/master/debian/rules#L34",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090:300,hash,hash,300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-764877090,1,['hash'],['hash']
Security,We just created the first release after vNatBiotech. The version numbering system is: running number followed by the five first characters of the release commit hash. (e.g. 1-c7a89).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-340253375:161,hash,hash,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-340253375,1,['hash'],['hash']
Security,"We validate that (most) float parameters have a leading zero (or other number in-front of the `.`) if they are given in non-scientific notation, or alternatively in scientific-notation. A similar issue was reported here:; https://github.com/soedinglab/MMseqs2/issues/640. I guess we could relax the validation step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571:3,validat,validate,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473648571,2,['validat'],"['validate', 'validation']"
Security,"We were a bit busy with a paper submission, sorry for the delay. This behavior is kind of okay and expected.; The procedure to map an NR entry to a taxonomic label is a bit involved since NCBI's NR, accession2taxid and taxdump don't match very well and it's difficult to bring them into a consistent state. This message happens when we can parse a taxonomic identifier looking the accession up in one of the accession2taxid files, but the taxonomic identifier is not contained in the taxdump anymore. In this case we either try to take the taxonomic identifier of the next sequence that was clustered into this entry or leave this entry unannotated (thus it cannot contribute to LCA computation despite being findable through searching). For nearly all sequences the mapping procedure works correctly (331375261 vs 331433500). The remaining 50K entries are however kind of tricky and we don't have a good solution yet to get a taxonomic identifier automatically for those.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949:381,access,accession,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/381#issuecomment-744417949,1,['access'],['accession']
Security,"When I run `mmseqs taxonomy`, it converts the *_h file for the input sequence db from a standard file to a symlink that points at itself. So the symlink is then broken, and `mmseqs taxonomy` fails. I'm using a different temporary directory for `mmseqs taxonomy` than where the *_h file is, so that shouldn't be the problem. mmseqs version: 8.fac81. <details><summary>conda env</summary>; <p>. ```; # Name Version Build Channel; bzip2 1.0.6 h14c3975_1002 conda-forge; ca-certificates 2019.3.9 hecc5488_0 conda-forge; curl 7.64.1 hf8cf82a_0 conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anacon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188:470,certificate,certificates,470,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188,1,['certificate'],['certificates']
Security,Wrong accession numbers in colabfold_envdb_202108,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/560:6,access,accession,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/560,1,['access'],['accession']
Security,"Yes perhaps I am using `taxonomyreport` in an unusual way. . I wanted to cluster sequences of all the proteins with a domain from the NCBI domain database so I got a list of accession numbers of all the proteins containing that domain, made a fasta file with them (using `blastdbcmd`), then created a taxidmapping for those sequences. Using the fasta file and the taxidmapping, I made a seqTaxDB (`createtaxdb` with `--tax-mapping-file` option). . I then ran `cluster` on the database, and then `taxonomyreport` on the cluster database which worked great. I wanted to compare the taxonomic distribution of the clustered sequences to the original set of sequences so I tried `taxonomyreport seqTaxDB seqTaxDB report`. Perhaps there is a better way to do what I am trying to do?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/408#issuecomment-774697002:174,access,accession,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/408#issuecomment-774697002,1,['access'],['accession']
Security,"_83927407775/mmseqs_search_TMP09. MMseqs Version: 	11.e1a1c; E-value threshold 	0.001; Max accept 	1; Threads 	8; Sensitivity 	6; Max results per query 	100; Split database 	0; Split memory limit 	160G; Search iterations 	2. Failed to mmap memory dataSize=321859477504 File=/ebio/abt3_scratch/nyoungblut/Struo2_83927407775/mmseqs_search_db/db.idx. Error 12.; ```. Even if I reduce `--split-memory-limit` to 50% or just 20% of the total memory provided for the qsub job, the job still dies with the same error. Maybe I'm not understanding or using `--split-memory-limit` correctly??. I'm using UniRef90 as the db. If I use 336G for the job mem limit, then the `mmseq search` job runs without an error. . ## Steps to Reproduce (for bugs). `mmseqs search` on UniRef90 to provide a large RAM requirement for the job. . ## Your Environment. Ubuntu 18.04.4. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_2 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338:1975,certificate,certificates,1975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338,1,['certificate'],['certificates']
Security,"`createtaxdb` does a somewhat inefficient procedure of downloading the rather large idmapping file from uniprot and using that for mapping to taxids. I would recommend to use the `databases` workflow, which doesn't need the idmapping. And then creating a subset of the database with a combination of the `createsubdb` module and the `db.lookup` file. The `.lookup` file has a mapping of internal database identifiers to accessions. So you can make a list of database identifiers you want to keep and then call `createsubdb`:. ```; mmseqs createsubdb subset.tsv swissprot swissprot_subset; ```. Alternatively if you want specific taxa in your database you can use the `filtertaxseqdb` module:. ```; mmseqs filtertaxseqdb swissprot swissprot_human --taxon-list 9606; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044:420,access,accessions,420,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044,1,['access'],['accessions']
Security,"`dbtype` is a recent development that is going to help a lot with usability with some planned enhancements, such as automatic validation of input database types (which is a huge usability pitfall currently). `tsv2db` needs a flag to specify what the output dbtype is supposed to be. I'll add that soon. The requirement for the indexed database format (the file itself and the corresponding `.index` files) exist since the beginning of mmseqs' development. There is no other feasible solution to fast linear and random access in millions or billions of entries that we are currently handling. . How can we improve the user experience with regards to workflow management systems in your view?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987:126,validat,validation,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987,2,"['access', 'validat']","['access', 'validation']"
Security,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155:671,certificate,certificates,671,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155,1,['certificate'],['certificates']
Security,a typo on the rolling hash function,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/252:22,hash,hash,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252,1,['hash'],['hash']
Security,"abase cannot be combined with --createdb-mode 0; We recompute with --shuffle 0. Time for merging to input_h: 0h 0m 0s 0ms; Time for merging to input: 0h 0m 0s 0ms; Database type: Aminoacid; Time for processing: 0h 4m 46s 360ms; Create directory All_cohort_tmp//9948387321092861199/clu_tmp; linclust All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu All_cohort_tmp//9948387321092861199/clu_tmp --cluster-mode 2 --threads 56 -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --max-seq-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for p",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4272,hash,hash-shift,4272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash-shift']
Security,"able 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3770,hash,hash-shift,3770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['hash'],['hash-shift']
Security,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:4012,hash,hash,4012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['hash'],['hash']
Security,"alse; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 4s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 2 s; Time for processing: 0 h 0 m 23s; Rescore diagonals.; Program call:; panproteome.db panproteome.db tmp/425628692068579862/linclust/13628666274102",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95528,hash,hash,95528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['hash'],['hash']
Security,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1514,access,access,1514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,"['access', 'hash']","['access', 'hashing']"
Security,"angjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [====================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9698,hash,hash-shift,9698,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['hash'],['hash-shift']
Security,"anshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1351,hash,hash-shift,1351,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['hash'],['hash-shift']
Security,"as-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3292,hash,hash-shift,3292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['hash'],['hash-shift']
Security,"ax-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:1576,hash,hash,1576,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1473,secur,security,1473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['secur'],['security']
Security,"b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 64; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:3460,hash,hash,3460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['hash'],['hash']
Security,"bstitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:5996,hash,hash-shift,5996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal D",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3197,hash,hash-shift,3197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['hash'],['hash-shift']
Security,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16:1330,secur,security,1330,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16,1,['secur'],['security']
Security,"ca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher tmpDB tmp/12397138995521121878/linclust/639052995728955397/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.3 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 15000000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 15.00M 15s 758ms ; Sort kmer 0h 0m 0s 932ms; Sort by rep. sequence 0h 0m 0s 784ms; Time for fill: 0h 0m 4s 19ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 26s 640ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:3982,hash,hash-shift,3982,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash-shift']
Security,"context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10876,hash,hash-shift,10876,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3516,hash,hash-shift,3516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['hash'],['hash-shift']
Security,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65:1509,hash,hash,1509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65,1,['hash'],['hash']
Security,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:1773,hash,hash,1773,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash']
Security,d. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > t,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14485,hash,hashes,14485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['hash'],['hashes']
Security,"d.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:2042,secur,secure-protocol,2042,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"dancy ./mmseqs_output/tmp/5351426679731834765/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.4 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:10319,hash,hash-shift,10319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"de 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.4; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	1; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0; Offset of numeric ids 	0. createdb all_seq.fasta tmp/8115150149931881526/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [Multiline fasta can not be combined with --createdb-mode 0; We recompute with --createdb-mode 1; Time for merging to input_h: 0h 0m 0s 3ms; Time for merging to input: 0h 0m 0s 3ms; [=======; Time for merging to input_h: 0h 0m 0s 2ms; Time for merging to input: 0h 0m 0s 2ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 102ms; Create directory tmp/8115150149931881526/clu_tmp; linclust tmp/8115150",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:1581,hash,hash,1581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash']
Security,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2657,hash,hash-shift,2657,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['hash'],['hash-shift']
Security,"e aa:21,nucl:5; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 144; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Weight file name; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster mode SET COVER; Set cluster iterations to 3; /final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype exists already!; ```. Yes, `/final/db_profile_vs_consensus/low_1/Genus02938/Genus02938_DB.dbtype` already exists; it was created by `mmseqs search`. I'm not sure why `mmseqs clust` cares? Do you have any ideas - I can't figure this out. Many thanks!!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844:2610,hash,hash,2610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844,1,['hash'],['hash']
Security,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2882,hash,hash-shift,2882,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash-shift']
Security,"e-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I wan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7093,hash,hash-shift,7093,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['hash'],['hash-shift']
Security,"e-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 121964581 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 121.96M 2m 14s 699ms . Adjusted k-mer length 17; Sort kmer 0h 2m 30s 173ms; Sort by rep. sequence 0h 1m 48s 715ms; Time for fill: 0h 2m 33s 635ms; Time for merging to pref: 0h 1m 8s 632ms; Time for processing: 0h 12m 5s 26ms; rescorediagonal ../so245_combined_assembly_mmseqDB ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.99 -a 0 --cov-mode 1 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:4323,hash,hash-shift,4323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"e-tmp-files 0 --force-reuse 0 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:1; 3,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --; mask-lower-case 0 --cov-mode 2 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 -; -threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 76215872 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 76.22M 6m 32s 415ms; Sort kmer 0h 0m 14s 675ms; Sort by rep. sequence 0h 0m 0s 974ms; Time for fill: 0h 0m 13s 496ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 7m 46s 594ms; rescorediagonal uniref90-DB-wwmj uniref90-DB-wwmj tmp//16518381706844811497/linclust/1189823685496030198/pref tmp//16518381706844811497/linclust/11898236; 85496030198/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov; -mode 2 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [=======",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:5306,hash,hash-shift,5306,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['hash'],['hash-shift']
Security,"e/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge; libunistring 0.9.10 h14c3975_0 conda-forge; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 11.e1a1c h2d02072_0 bioconda; ncurses 6.2 he1b5a44_1 conda-forge; numpy 1.19.0 py38h8854b6b_0 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1g h516909a_0 conda-forge; perl 5.26.2 h516909a_1006 conda-forge; perl-constant 1.33 pl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:2640,certificate,certificates,2640,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,1,['certificate'],['certificates']
Security,"eads 24; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.8; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Weight file name ; Cluster Weight threshold 0.9; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files true; Force restart with latest tmp false; MPI runner ; k-mers per sequence 21; Scale k-mers per sequence aa:0.000,nucl:0.200; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb /hps/nobackup/iqbal/dander/amira_panRG_pipeline/Escherichia_coli_panRG_c_0.8_l_0_train_AMR_alleles_removed_mmseqs2/all_sequences.fasta tmp/3198441352783276465/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [95951] 0s 927ms; Time for merging to input_h: 0h 0m 0s 47ms; Time for merging to input: 0h 0m 0s 25ms; Database type: Nucleotide; Time for processing: 0h 0m 1s 143ms; Create directory tmp/3198441352783276465/clu_tmp; cluster tmp/3198441352783276465/input tmp/3198441352783276465/clu tmp/3198441352783276465/clu_tmp --max-seqs 20 -c 0 --cov-mode 5 --spaced-kmer-mode 1 --threads 24 --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --cluster-mode 1 --cluster-reassign 1 --remove-tmp-files 1 . Set cluster sensitivity",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:3105,hash,hash,3105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash']
Security,"emporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; -----------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101:2544,hash,hash-shift,2544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101,1,['hash'],['hash-shift']
Security,"ent 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4360,hash,hash-shift,4360,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash-shift']
Security,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1406,hash,hash,1406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['hash'],['hash']
Security,"er mode GREEDY MEM.; kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 77298 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 77.30K 0s 41ms; Sort kmer 0h 0m 0s 46ms; Sort by rep. sequence 0h 0m 0s 22ms; Time for fill: 0h 0m 0s 11ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 225ms; rescorediagonal tmp/8115150149931881526/input tmp/8115150149931881526/input tmp/8115150149931881526/clu_tmp/13790714163985984779/pref tmp/8115150149931881526/clu_tmp/13790714163985984779/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed 0 -v 3 . [====",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/866:3735,hash,hash-shift,3735,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/866,1,['hash'],['hash-shift']
Security,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:6438,hash,hash-shift,6438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash-shift']
Security,f-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; g++ (GCC) 5.4.0; cmake version 3.28.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; uname -a | grep x86_64; Linux node7 3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; * Operating system and version:; CentOS Linux release 8 (Core). * packages in current environment; `conda list; packages in environment at /home/liuhongbin/anaconda3/envs/colabfoldMSA:. Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; absl-py 1.4.0 pypi_0 pypi; alphafold-colabfold 2.3.6 pypi_0 pypi; appdirs 1.4.4 pypi_0 pypi; astunparse 1.6.3 pypi_0 pypi; binutils 2.40 hdd6e379_0 conda-forge; binutils_impl_linux-64 2.40 hf600244_0 conda-forge; binutils_linux-64 2.40 hbdbef99_2 conda-forge; biopython 1.82 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; c-compiler 1.7.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cachetools 5.3.2 pypi_0 pypi; certifi 2023.11.17 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; chex 0.1.85 pypi_0 pypi; colabfold 1.5.5 pypi_0 pypi; contextlib2 21.6.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cxx-compiler 1.7.0 h00ab1b0_0 conda-forge; cycler 0.12.1 pypi_0 pypi; dm-haiku 0.0.10 pypi_0 pypi; dm-tree 0.1.8 pypi_0 pypi; flatbuffers 23.5.26 pypi_0 pypi; fonttools 4.47.0 pypi_0 pypi; gast 0.5.4 pypi_0 pypi; gcc 12.3.0 h8d2909c_2 conda-forge; gcc_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gcc_linux-64 12.3.0 h76fc315_2 conda-forge; google-auth 2.26.1 pypi_0 pypi; google-auth-oauthlib 1.2.0 pypi_0 pypi; google-pasta 0.2.0 pypi_0 pypi; grpcio 1.60.0 pypi_0 pypi; gxx 12.3.0 h8d2909c_2 conda-forge; gxx_impl_linux-64 12.3.0 he2b93b0_3 conda-forge; gxx_linux-64 12.3.0 h8a814eb_2 conda-forge; h5py 3.10.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; immutabledict 4.1.0 pypi_0 pypi; importlib-metadata 4.13.0 pypi_0 pypi; jax 0.4.23 py,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/795:2580,certificate,certificates,2580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/795,1,['certificate'],['certificates']
Security,"files 0 --force-reuse 0 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.85 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 1831648 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 1.83M 2m 36s 559ms. Adjusted k-mer length 17; Sort kmer 0h 0m 33s 753ms; Sort by rep. sequence 0h 0m 2s 503ms; Time for fill: 0h 0m 4s 992ms; Time for merging to pref: 0h 0m 0s 10ms; Time for processing: 0h 4m 21s 927ms; rescorediagonal 1831648_seqs.mmseqs2db 1831648_seqs.mmseqs2db tmp/16479300059278292880/linclust/10067396915876818640/pref tmp/16479300059278292880/linclust/10067396915876818640/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.85 -a 0 --cov-mode 0 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 112 --compressed 0 -v 3 . [=================================================================] 1.83M 10s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:4548,hash,hash-shift,4548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash-shift']
Security,"filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [=================================================================] 100.00% 541.12M 11m 11s 8ms ; Sort kmer 0h 0m 27s 593ms; Sort by rep. sequence 0h 0m 10s 91ms; Generate k-mers list for 2 split; [=================================================================] 100.00% 541.12M 11m 10s 926ms ; Sort kmer 0h 0m 25s 859ms; Sort by rep. sequence 0h 0m 10s 403ms; Generate k-mers list for 3 split; [=================================================================] 100.00% 541.12M 11m 3s 10ms ; Sort kmer 0h 0m 24s 363ms; Sort by rep. sequence 0h 0m ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:5225,hash,hash-shift,5225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"g k-mers 	false. Set cluster sensitivity to -s 6.000000; Set cluster mode GREEDY MEM; Set cluster iterations to 3; linclust DB tmp/576731152808920235/clu_redundancy tmp/576731152808920235/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4242,hash,hash-shift,4242,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"g k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:3641,hash,hash-shift,3641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"ging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu /export/scratch/SRC-50/8871099322051866948/clu_tmp --cluster-mode 2 -e 0.001 --min-seq-id 0.5 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --split-memory-limit 500G --remove-tmp-files 1. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. kmermatcher /export/scratch/SRC-50/8871099322051866948/input /export/scratch/SRC-50/8871099322051866948/clu_tmp/15588367470074044035/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3. Database size: 2022891389 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Not enough memory to process at once need to split; [=================================================================] 100.00% 2.02B 18m 29s 316ms; Process file into 2 parts; Generate k-mers list for 1 split; [==========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:3548,hash,hash-shift,3548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash-shift']
Security,"hold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Tim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23243,hash,hash-shift,23243,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash-shift']
Security,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6483,hash,hash-shift,6483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['hash'],['hash-shift']
Security,"k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:19244,hash,hash-shift,19244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"ld 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3737,hash,hash-shift,3737,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash-shift']
Security,"ld 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:3229,hash,hash-shift,3229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash-shift']
Security,"ld be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3591,hash,hash-shift,3591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash-shift']
Security,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:2462,hash,hash-shift,2462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash-shift']
Security,"lit memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	2; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	1; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --ad",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:2392,hash,hash,2392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash']
Security,"llion of antibody sequences; cmd: easy-linclust ./DB.fasta clusterRes tmp --min-seq-id 0.95 -c 0.95. ## MMseqs Output (for bugs). MMseqs Version: 13.45111; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 32; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.95; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.95; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. linclust tmp/14608094218366142978/input tmp/14608094218366142978/clu tmp/14608094218366142978/clu_tmp -e 0.001 --min-seq-id 0.95 -c 0.95 --spaced-kmer-mode 0 --remove-tmp-files 1. Set cluster mode SET COVER.; Killed; Error: Rescore with hamming distance step died; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 13.45111; OS: Ubuntu 22.04; CPU: Intel(R) Core(TM) i9-13900K; Memory: 64GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/730:1277,hash,hash,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/730,1,['hash'],['hash']
Security,"lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:1700,hash,hash,1700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['hash'],['hash']
Security,"lse; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	0; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/clu_redundancy cluster_tmp/1127447206531551203/linclust --cluster-mode 2 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.99 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.99 --cov-mode 1 --max-seq-len 10000000 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.99 --max-seq-len 10000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ../so245_combined_assembly_mmseqDB cluster_tmp/1127447206531551203/linclust/8761493678692146066/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.99 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:3297,hash,hash-shift,3297,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . kmermatcher ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.4 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 . Database size: 100000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00K 0s 853ms; Sort kmer 0h 0m 0s 789ms; Sort by rep. sequence 0h 0m 0s 951ms; Time for fill: 0h 0m 0s 155ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 3s 166ms; rescorediagonal ./mms_smallDB ./mms_smallDB ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref ./mmseqs_output/tmp/5351426679731834765/linclust/262265298633898384/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/766:11379,hash,hash-shift,11379,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/766,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 52ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 170ms; rescorediagonal in/DB_in in/DB_in clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref clu/sim1_tmp/7842071913732967198/linclust/14523879757540758787/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:4701,hash,hash-shift,4701,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"lter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 164 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 164 0s 40ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 172ms; rescorediagonal in/DB_in in/DB_in clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref clu/sim2_tmp/12164117771218227067/linclust/3267328275516617562/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [===============================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:20304,hash,hash-shift,20304,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash-shift']
Security,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2760,hash,hash-shift,2760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['hash'],['hash-shift']
Security,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1527,secur,secure-protocol,1527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Security,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:1103,hash,hash-shift,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['hash'],['hash-shift']
Security,"mory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [=================================================================] 100",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3920,hash,hash-shift,3920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['hash'],['hash-shift']
Security,"multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 16 --compressed 0 -v 3. [============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3683,hash,hash-shift,3683,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['hash'],['hash-shift']
Security,"n 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3459,hash,hash-shift,3459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['hash'],['hash-shift']
Security,"n hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:4651,hash,hash,4651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,"n:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . kmermatcher DB tmp/10260956542131223380/linclust/4311072182387952617/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 70G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 . Database size: 541124045 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 100.00% 541.12M 9m 42s 360ms ; Process file into 4 parts; Generate k-mers list for 1 split; [======================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:4714,hash,hash-shift,4714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash-shift']
Security,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:1798,hash,hash,1798,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['hash'],['hash']
Security,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:1996,hash,hash,1996,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['hash'],['hash']
Security,"nclude identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-on",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2015,hash,hash,2015,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['hash'],['hash']
Security,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7646,hash,hash-shift,7646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['hash'],['hash-shift']
Security,"ntext:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:5521,hash,hash-shift,5521,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 1; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim1_tmp/7842071913732967198/clu_redundancy clu/sim1_tmp/7842071913732967198/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 1 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --spl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:2645,hash,hash,2645,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash']
Security,"ntical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern 110111; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster iterations to 1; linclust in/DB_in clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --spaced-kmer-pattern 110111 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:18246,hash,hash,18246,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['hash'],['hash']
Security,"ory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Database type 0; Shuffle input database true; Createdb mode 1; Write lookup file 0; Offset of numeric ids 0. createdb SRC.fasta /export/scratch/SRC-50/8871099322051866948/input --dbtype 0 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3. Shuffle database cannot be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; [2022891328] 19m 44s 787ms; Time for merging to input_h: 0h 15m 26s 958ms; Time for merging to input: 0h 15m 5s 407ms; Database type: Aminoacid; Time for processing: 0h 51m 25s 878ms; Tmp /export/scratch/SRC-50/8871099322051866948/clu_tmp folder does not exist or is not a directory.; Create dir /export/scratch/SRC-50/8871099322051866948/clu_tmp; linclust /export/scratch/SRC-50/8871",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:1879,hash,hash,1879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,1,['hash'],['hash']
Security,"p/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:21,nucl:5 --min-seq-id 0.8 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 5 -k 0 -c 0 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 96025 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 100.00% 96.03K 0s 882ms . Adjusted k-mer length 17; Sort kmer 0h 0m 0s 257ms; Sort by rep. sequence 0h 0m 0s 133ms; Time for fill: 0h 0m 0s 107ms; Time for merging to pref: 0h 0m 0s 28ms; Time for processing: 0h 0m 1s 808ms; rescorediagonal tmp/3198441352783276465/input tmp/3198441352783276465/input tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref tmp/3198441352783276465/clu_tmp/13016959338117486175/linclust/12836794075397166753/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.5 -a 0 --cov-mode 5 --min-seq-id 0.8 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compres",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/860:6559,hash,hash-shift,6559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/860,1,['hash'],['hash-shift']
Security,"path 	; Threads 	112; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.95; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust 1831648_seqs.mmseqs2db tmp/16479300059278292880/clu_redundancy tmp/16479300059278292880/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 112 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.95 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.85 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/830:2279,hash,hash,2279,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/830,1,['hash'],['hash']
Security,"pdate/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/84504",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8430,hash,hash-shift,8430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['hash'],['hash-shift']
Security,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:14431,Hash,Hashing,14431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,1,['Hash'],['Hashing']
Security,"q-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:21 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:4752,hash,hash-shift,4752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"q-len 10000 --spaced-kmer-mode 0 --remove-tmp-files 1 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . kmermatcher All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 56 --compressed 0 -v 3 . Database size: 440656032 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 440.66M 1m 58s 106ms; Sort kmer 0h 1m 9s 431ms; Sort by rep. sequence 0h 0m 39s 418ms; Time for fill: 0h 2m 31s 613ms; Time for merging to pref: 0h 0m 0s 1ms; Time for processing: 0h 9m 8s 726ms; rescorediagonal All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/input All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref All_cohort_tmp//9948387321092861199/clu_tmp/9745907189971917257/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/899:4781,hash,hash-shift,4781,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/899,1,['hash'],['hash-shift']
Security,"q. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/183758",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1993,hash,hash-shift,1993,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['hash'],['hash-shift']
Security,"qs 300`. ```; Program call:; panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; panproteome.db /tmp/clu//9559457551393989073/clu_redundancy /tmp/clu//9559457551393989073/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-l",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:21086,hash,hash,21086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash']
Security,"quence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	92G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . kmermatcher /lustre/fswork/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fswork/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0.75 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 92G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 40 --compressed 0 -v 3 --cluster-weight-threshold 0.9 . Database size: 2204542403 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Not enough memory to process at once need to split; [=================================================================] 2.20B 2h 9m 12s 463ms; Process file into 17 parts; Generate k-mers ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:3405,hash,hash-shift,3405,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['hash'],['hash-shift']
Security,"rary path; Threads 	20; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.97; Min alignment length 	200; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster iterations to 3; linclust shrimpDB tmp97/17949317426677965256/clu_redundancy tmp97/17949317426677965256/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 20 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.97 --min-aln-len 200 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:21,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765:2931,hash,hash,2931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765,1,['hash'],['hash']
Security,"rue; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; ```; ```; Program call:; pan.db fam.db /tmp/ --min-seq-id 0.8 -c 0.8 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:2550,hash,hash,2550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['hash'],['hash']
Security,"ry path 	; Threads 	40; Compressed 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.9; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Weight file name 	; Cluster Weight threshold 	0.9; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB tmp/10260956542131223380/clu_redundancy tmp/10260956542131223380/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 1 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/702:3022,hash,hash,3022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/702,1,['hash'],['hash']
Security,"seqs createdb seq.fa db/dbclust; mmseqs linclust db/dbclust clust_result tmp --max-seq-len 30000000; ``` ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. kmermatcher db/dbclust tmp/16437734971973434362/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 30000000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 36 --compressed 0 -v 3. Database size: 140204 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 140.20K 1m 19s 398ms. Adjusted k-mer length 17; Sort kmer 0h 0m 0s 95ms; Sort by rep. sequence 0h 0m 0s 17ms; Time for fill: 0h 0m 0s 29ms; Time for merging to pref: 0h 0m 0s 21ms; Time for processing: 0h 1m 20s 543ms; rescorediagonal db/dbclust db/dbclust tmp/16437734971973434362/pref tmp/16437734971973434362/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 36 --compressed 0 -v 3. [=================================================================] 140.20K 2m 37s 793ms; Time for merging to pref_rescore1: 0h 0m 0s 35ms; Time for processing: 0h 2m 48s 60ms; clust db/d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297:1103,hash,hash-shift,1103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297,1,['hash'],['hash-shift']
Security,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:4965,hash,hash-shift,4965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['hash'],['hash-shift']
Security,"shangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref /hwfssz1/ST_DIVERSITY/P18",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10320,hash,hash-shift,10320,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['hash'],['hash-shift']
Security,"sk lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:1674,hash,hash,1674,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['hash'],['hash']
Security,"sorry, reopening in case you want to close with a commit to update the validation regex.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596238:71,validat,validation,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596238,1,['validat'],['validation']
Security,"split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . kmermatcher DB tmp/576731152808920235/linclust/1790908825406232727/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:21 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 1 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 10000 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 128 --compressed 0 -v 3 . Database size: 9502826 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 9.50M 43s 925ms. Adjusted k-mer length 17; Sort kmer 0h 0m 8s 42ms; Sort by rep. sequence 0h 0m 6s 419ms; Time for fill: 0h 1m 9s 626ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 2m 43s 136ms; rescorediagonal DB DB tmp/576731152808920235/linclust/1790908825406232727/pref tmp/576731152808920235/linclust/1790908825406232727/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3 . [=================================================================] 9.50M 1m 30s 166ms; Time for merging to pref_rescore1: 0h 0m 3s 976ms; Time for pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455:5209,hash,hash-shift,5209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455,1,['hash'],['hash-shift']
Security,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:4014,hash,hash,4014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['hash'],['hash']
Security,"t a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; mmseqs2=13.45111=h95f258a_1. * Which MMseqs version w",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:1104,certificate,certificates,1104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,1,['certificate'],['certificates']
Security,"t be combined with --createdb-mode 0; We recompute with --shuffle 0; Converting sequences; =================================================================================================== 292 Mio. sequences processed; =============; Time for merging to input_h: 0h 0m 40s 64ms; Time for merging to input: 0h 0m 40s 130ms; Database type: Aminoacid; Time for processing: 0h 12m 9s 179ms; Tmp /export/tmp/MERC/4233864688410091672/clu_tmp folder does not exist or is not a directory.; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; kmermatcher /export/tmp/MERC/4233864688410091672/input /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.5 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 96 --compressed 0 -v 3 ; Database size: 292137902 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Generate k-mers list for 1 split; [=================================================================] 292.14M 36s 571ms; Sort kmer 0h 0m 3s 87ms; Sort by rep. sequence 0h 0m 2s 827ms; Time for fill: 0h 0m 16s 310ms; Time for merging to pref: 0h 0m 58s 394ms; Time for processing: 0h 3m 54s 379ms; rescorediagonal /export/tmp/MERC/4233864688",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323:1681,hash,hash-shift,1681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323,1,['hash'],['hash-shift']
Security,"t is added to the alignment score [0.000]; --gap-open TWIN Gap open cost [aa:11,nucl:5]; --gap-extend TWIN Gap extension cost [aa:1,nucl:2]; --zdrop INT Maximal allowed difference between score values before alignment is truncated (nucleotide alignment only) [40]; clust:; --cluster-mode INT 0: Set-Cover (greedy); 1: Connected component (BLASTclust); 2,3: Greedy clustering by sequence length (CDHIT) [0]; --max-iterations INT Maximum depth of breadth first search in connected component clustering [1000]; --similarity-type INT Type of score used for clustering. 1: alignment score 2: sequence identity [2]; kmermatcher:; --kmer-per-seq INT k-mers per sequence [21]; --kmer-per-seq-scale TWIN Scale k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [aa:0.000,nucl:0.200]; --adjust-kmer-len BOOL Adjust k-mer length based on specificity (only for nucleotides) [0]; --hash-shift INT Shift k-mer hash initialization [67]; --include-only-extendable BOOL Include only extendable [0]; --ignore-multi-kmer BOOL Skip k-mers occurring multiple times (>=2) [0]; profile:; --pca Pseudo count admixture strength []; --pcb Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) []; misc:; --rescore-mode INT Rescore diagonals with:; 0: Hamming distance; 1: local alignment (score only); 2: local alignment; 3: global alignment; 4: longest alignment fulfilling window quality criterion [0]; --dbtype INT Database type 0: auto, 1: amino acid 2: nucleotides [0]; --shuffle BOOL Shuffle input database [1]; --createdb-mode INT Createdb mode 0: copy data, 1: soft link data and write new index (works only with single line fasta/q) [1]; --id-offset INT Numeric ids in index file are offset by this value [0]; common:; --threads INT Number of CPU-cores used (all by default) [10]; --compressed INT Write compressed output [0]; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; --sub-mat TWIN Substitution matrix file [aa:blosum62.out,nucl:nucleotide.ou",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682:4833,hash,hash-shift,4833,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682,2,['hash'],"['hash', 'hash-shift']"
Security,"t it seems to get stuck on the initial `kmermatcher` step. . ## Current Behavior; Linclust is stuck on the kmermatcher step for several days. I'm running it on a 64 core machine with 409 GB of memory. I see 4 cores running while it loads the index into memory, but then it drops to 1 core and stays there for several days. Any advice on what may be going on?. ## Steps to Reproduce (for bugs); I ran these commands:. `mmseqs createdb INPUT/unique_proteins.faa OUTPUT/stringent/tmp/seqdb --dbtype 1 --shuffle 1 --createdb-mode 1 --write-lookup 0 --id-offset 0 --compressed 0 -v 3`. `mmseqs linclust OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu OUTPUT/stringent/tmp/clu_tmp --threads ${THREADS} -e 0.001 --min-seq-id 0.9 -c 0.9 --cov-mode 1 --spaced-kmer-mode 0 --remove-tmp-files 1`. And it got stuck on the first `kmermatcher` step. ## MMseqs Output (for bugs); Just this:; ```; kmermatcher OUTPUT/stringent/tmp/seqdb OUTPUT/stringent/tmp/clu_tmp/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-i│; d 0.9 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c│; 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 64 --compressed 0 -v 3 │; │; MMseqs Version: 13.45111 │; Substitution matrix nucl:nucleotide.out,aa:blosum62.out │; Alphabet size nucl:5,aa:13 │; Seq. id. threshold 0.9 │; k-mers per sequence 21 │; Spaced k-mers 0 │; Spaced k-mer pattern │; Scale k-mers per sequence nucl:0.200,aa:0.000 │; Adjust k-mer length false │; Mask residues 0 │; Mask lower case residues 0 │; Coverage mode 1 │; k-mer length 0 │; Coverage threshold 0.9 │; Max sequence length 65535 │; Shift hash 67 │; Split memory limit 0 │; Include only extendable false │; Skip repeating k-mers false │; Threads 64 │; Compressed 0 │; Verbosity 3; ```. ## Your Environment; I installed mmseqs using `mamba` (conda).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/477:1377,hash,hash-shift,1377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/477,2,['hash'],"['hash', 'hash-shift']"
Security,"t>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool>&&, int) at thread_pool.hpp:94:1; frame #18: 0x000000000042cb21 mmseqs`ips4o::ParallelSorter<ips4o::ExtendedConfig<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset, ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, ips4o::OpenMPThreadPool> >::operator(this=0x00007fffffffbb88, begin=0x0000000802a7fe80, end=0x0000000802ba0f70)(std::__1::pair<unsigned int, unsigned long>*, std::__1::pair<unsigned int, unsigned long>*) at parallel.hpp:189:9; frame #19: 0x000000000042c776 mmseqs`void ips4o::parallel::sort<ips4o::Config<true, 16l, 16l, 2048l, long, 4096ul, 5l, 8, 4l, 20, 7>, std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbbf0, num_threads=32) at ips4o.hpp:128:9; frame #20: 0x00000000003ee74f mmseqs`void ips4o::parallel::sort<std::__1::pair<unsigned int, unsigned long>*, DBReader<unsigned int>::comparePairByOffset>(begin=0x0000000802a7fe80, end=0x0000000802ba0f70, comp=comparePairByOffset @ 0x00007fffffffbc40) at ips4o.hpp:137:5; frame #21: 0x00000000003eaab7 mmseqs`DBReader<unsigned int>::sortIndex(this=0x00007fffffffd2b0, isSortedById=true) at DBReader.cpp:367:9; frame #22: 0x00000000003efebe mmseqs`DBReader<unsigned int>::open(this=0x00007fffffffd2b0, accessType=2) at DBReader.cpp:185:9; frame #23: 0x0000000000639482 mmseqs`offsetalignment(argc=20, argv=0x00007fffffffd8a8, command=0x0000000800f5a220) at offsetalignment.cpp:261:12; frame #24: 0x000000000038731f mmseqs`runCommand(p=0x0000000800f5a220, argc=20, argv=0x00007fffffffd8a8) at Application.cpp:38:18; frame #25: 0x0000000000388596 mmseqs`main(argc=22, argv=0x00007fffffffd898) at Application.cpp:196:9; frame #26: 0x0000000000386400 mmseqs`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1.c:76:7. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769:11417,access,accessType,11417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870067769,1,['access'],['accessType']
Security,"ta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1224,hash,hash,1224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['hash'],['hash']
Security,"tch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7803,hash,hash-shift,7803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['hash'],['hash-shift']
Security,"teome.db file. mkdir tmp; mmseqs cluster panproteome.db families.db tmp --min-seq-id 0.8 -c 0.8 --threads 10. ```; Program call:; panproteome.db families.db tmp --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db tmp/425628692068579862/clu_redundancy tmp/425628692068579862/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:93414,hash,hash,93414,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['hash'],['hash']
Security,"text:5.800; Spaced k-mer pattern 	; Local temporary path 	; Threads 	128; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.3; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Single step clustering 	false; Cascaded clustering steps 	3; Cluster reassign 	false; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	; k-mers per sequence 	21; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Shift hash 	67; Include only extendable 	false; Skip repeating k-mers 	false. Set cluster sensitivity to -s 5.000000; Set cluster mode SET COVER; Set cluster iterations to 3; linclust tmpDB tmp/12397138995521121878/clu_redundancy tmp/12397138995521121878/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.3 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/602:2317,hash,hash,2317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/602,1,['hash'],['hash']
Security,"ting k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [=================================================================] 100.00% 2.83B 1h 11m 50s 841ms. [================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2429,hash,hash-shift,2429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['hash'],['hash-shift']
Security,"tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 20000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Generate k-mers list for 1 split; [=================================================================] 100.00% 20.00K 0s 51ms ; Sort kmer 0h 0m 0s 9ms; Sort by rep. sequence 0h 0m 0s 3ms; Time for fill: 0h 0m 0s 3ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; rescorediagonal /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/input /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref /tmp/mydir/7574787915800795625/clu_tmp/4370341951257379003/linclust/6573363201721293217/pref_rescore1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/707:6064,hash,hash-shift,6064,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/707,1,['hash'],['hash-shift']
Security,"true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:2444,hash,hash-shift,2444,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['hash'],['hash-shift']
Security,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2707,hash,hash-shift,2707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['hash'],['hash-shift']
Security,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284:1669,hash,hash,1669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284,1,['hash'],['hash']
Security,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2981,hash,hash-shift,2981,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['hash'],['hash-shift']
Security,"|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1700,secur,secure-protocol,1700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['secur'],['secure-protocol']
Testability,"	; Remove Temporary Files 	false; ```. And this the stderr:. ```; MCW rank 0 bound to socket 0[core 0[hwt 0-1]], socket 0[core 1[hwt 0-1]], socket 0[core 2[hwt 0-1]], socket 0[core 3[hwt 0-1]], socket 0[core 4[hwt 0-1]], socket 0[core 5[hwt 0-1]], socket 0[core 6[hwt 0-1]], socket 0[core 7[hwt 0-1]]: [BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..][../../../../../../../..][../../../../../../../..]; + '[' -z /ngs/software/mmseqs/mmseqs-MPI ']'; + '[' 4 -ne 4 ']'; + '[' '!' -f mmseq-testDB ']'; + '[' '!' -f /junk/databases/mmseqs/test-nr-50m ']'; + '[' -f test-nr50-th32-MPI ']'; + '[' '!' -d tmp ']'; + export OMP_PROC_BIND=TRUE; + OMP_PROC_BIND=TRUE; ++ abspath mmseq-testDB; ++ '[' -d mmseq-testDB ']'; ++ '[' -f mmseq-testDB ']'; ++ [[ mmseq-testDB == */* ]]; +++ pwd; ++ echo /home/dabia/bench/mmseqs/mmseq-testDB; + INPUT=/home/dabia/bench/mmseqs/mmseq-testDB; ++ abspath /junk/databases/mmseqs/test-nr-50m; ++ '[' -d /junk/databases/mmseqs/test-nr-50m ']'; ++ '[' -f /junk/databases/mmseqs/test-nr-50m ']'; ++ [[ /junk/databases/mmseqs/test-nr-50m == */* ]]; +++ cd /junk/databases/mmseqs; +++ pwd; ++ echo /junk/databases/mmseqs/test-nr-50m; + TARGET=/junk/databases/mmseqs/test-nr-50m; ++ abspath tmp; ++ '[' -d tmp ']'; ++ cd tmp; ++ pwd; + TMP_PATH=/home/dabia/bench/mmseqs/tmp; + SENS=5; + '[' 5 -le 5 ']'; + notExists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:3806,test,testDB,3806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,17,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 10 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ..Time for merging files: 0 h 0 m 0 s. All sequences processed. 669036 alignments calculated.; 643006 sequence pairs passed the thresholds (0.961093 of overall calculated).; 23.1447 hits per query sequence.; Time for alignments calculation: 0 h 1 m 58s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/aln_step0 /tmp/test/9465698490903227639/clu_step0 --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ..; Sort entries. Find missing connections. Found 0 new connections. Reconstruct initial order.; ..; Add missing connections.; ..; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 27782; Size of the alignment database: 27782; Number of clusters: 22311; Program call:; panproteome.db /tmp/test/9465698490903227639/clu /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/clu_step0 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:17709,test,test,17709,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,3,['test'],['test']
Testability," 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.75; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:21,nucl:5; k-mers per sequence 	21; Spaced k-mers 	0; Spaced k-mer pattern 	; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	62G; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	true; MPI runner 	. Set cluster mode SET COVER.; Error: Pre-clustering step died; ```; I also have an error log : . ```; + mmseqs linclust /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/BFD_DB_clu /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp --min-seq-id 0.75 --threads 20 -v 3 --force-reuse 1 --split-memory-limit 62G; /lustre/fsn1/projects/rech/rjz/ulp67hu/DB/tmp/3458563371910395805/linclust.sh: line 37: 1000278 Killed ""$MMSEQS"" clust ""$INPUT"" ""${TMP_PATH}/pref_rescore1"" ""${TMP_PATH}/pre_clust"" ${CLUSTER_PAR}. real	8m30.284s; user	12m57.207s; sys	2m3.531s; slurmstepd: error: Detected 1 oom_kill event in StepId=1504095.batch. Some of the step tasks have been OOM Killed.; ```. I see that it's a memory issue but I don't know what to do to solve this.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/883:9572,log,log,9572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/883,1,['log'],['log']
Testability," #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM ; i5-3320M CPU with sse3, sse4_1, sse4_2 and avx supported; commands to compile:. * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:2411,test,tested,2411,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['test'],['tested']
Testability," (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expecte",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2271,TEST,TEST,2271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability," --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; .............Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 3s; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...................................................................................................	1 Mio. sequences processed; .............; Sort entries. Find missing connections. Found 1770113 new connections. Reconstruct initial order.; ...................................................................................................	1 Mio. sequences processed; .............; Add missing connections.; ...................................................................................................	1 Mio. sequences processed; .............; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for cluste",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:6044,test,test,6044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,2,['test'],['test']
Testability, 0 m 0s. Size of the sequence database: 1132486; Size of the alignment database: 1132486; Number of clusters: 32435; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Filter column 	1; Column to take 	-1; Filter regex 	^.*$; Positive filter 	true; Filter file 	/tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy; Beats first 	false; Mapping file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	; Swap fields of search results 	; Replace transitively 	. Filtering with a filter files.; ...Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/t,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:8048,test,test,8048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability," 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000008.1_105 48.900 154 78 0 7 159 5 158 5.484E-35 141 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_CAIJCS010000014.1_2 48.600 155 79 0 5 158 6 160 7.514E-35 141 164 171 0.939 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 CABJAE010000022.1_14 48.700 154 78 0 7 159 5 158 1.030E-34 141 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 CYUK01000003.1_1117 48.100 156 80 0 5 159 3 158 1.411E-34 140 164 174 0.945 0.897; ```. From the `mmseqs search` output one can see that the top hit (NZ_JH601103.1), has the best target, query coverage and evalue.; The top hit belongs to the organism `Dolosigranulum pigrum` https://www.ncbi.nlm.nih.gov/nuccore/NZ_JH601103 which has the following taxonomy:. `d__Bacteria; p__Bacillota; c__Bacilli; o__Lactobacillales; f__Carnobacteriaceae; g__Dolosigranulum; s__Dolosigranulum pigrum`. I wonder how this discrepancy between the taxonomy of the `mmseqs search` top hit and the taxonomy provided by `mmseqs taxonomy` can happen?. ## Steps to Reproduce (for bugs). The gtdb database I used, can be downloaded [here](https://openstack.cebitec.uni-bielefeld.de:8080/databases/gtdb_r214_1_mmseqs.tar.gz). The test sequence can be found [here](https://openstack.cebitec.uni-bielefeld.de:8080/bugseq/test.faa.gz). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 0b27c9d7d7757f9530f2efab14d246d268849925; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake: 3.16.3; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 236 GB RAM; * Operating system and version: Ubuntu 20.04.6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:3204,test,test,3204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,2,['test'],['test']
Testability, 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14352,test,test,14352,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability," 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; Threads 	64; Verbosity 	3. Init data structures...; Compute score only.; Using 64 threads.; Could not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:3938,test,testDB,3938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability," 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1437,TEST,TEST,1437,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:975,Test,Test,975,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,22,['Test'],['Test']
Testability," GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1676,TEST,TEST,1676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability," Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1629,test,test,1629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability, Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit fal,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4481,test,test,4481,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability, Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. qStarting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucl,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4323,test,test,4323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability," Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to t",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1622,log,log,1622,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability, Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1596,test,test,1596,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability," ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0000_A,1.000; 0001_A,0002_A,1.000; 0002_A,0002_A,1.000; 0002_A,0000_A,1.000; ```; I would expect 9 rows, 3 sequences with 3 similarities each. It seems like similarities are treated as undirected edges in this case. But when I replace ""MNO"" with ""AAA"" in the first sequence, I get the expected 9 similarities:. #### Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12:1545,TEST,TESTSEAAENCE,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12,3,['TEST'],"['TESTSEAAENCE', 'TESTSEQUENCE']"
Testability," `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `cluster_db.<#>` files?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1521,test,tests,1521,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,8,['test'],['tests']
Testability," `mmseqs result2msa /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/in.mmdb /Volumes/DataDisk/databases/Pfam-A /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_search /Volumes/DataDisk/netsurfp2-outfiles/mmseqs_files/out.mm_msa `. ## Current Behavior; At this point, mmseqs fails to produce a complete out.mm_msa database. ; You'll see some msa db files generated in my attached zip, but it appears that the database is incomplete.; I believe that creation of the database `out.mm_msa` terminates prematurely because of the error in the below. ; netsurfp2 cannot read the database when it attempts to generate an hmm profile. You will observe in the MMseqs output that the forward/backward smith-waterman score is differing. ## Steps to Reproduce (for bugs); I am including a zip file of all that is required to reproduce the problem, with the exception of the target database Pfam-A. ## MMseqs Output (for bugs). MMseqs Version: 	11-e1a1c; Start computing multiple sequence alignments.; Query database size: 50000 type: Aminoacid; Target database size: 17772 type: Profile; Score of forward/backward SW differ. This should not happen. ] 1.01% 504 eta 0s . ## Context; The issue does not happen for alignments fewer than 10 sequences. This sequence database is about 175,000.; A logfile which is belongs to netsurfp2 is included in the zip file. It provides context around the prior commands executed. . ## Your Environment; MMseqs was compiled with homebrew using cmake version 3.15.3; Operating System: OSX; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; [issue.zip](https://github.com/soedinglab/MMseqs2/files/4970047/issue.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/335:1441,log,logfile,1441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/335,1,['log'],['logfile']
Testability," a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1299,test,test,1299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability," different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:1043,log,log,1043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['log'],['log']
Testability, global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleoti,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1819,test,test,1819,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability," issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1491,TEST,TEST,1491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['TEST'],['TEST']
Testability," query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:1368,Test,Testdata,1368,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,2,['Test'],['Testdata']
Testability, score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1910,test,test,1910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability," sizeof *state - 1];; ; }; void Random::seed (long x); @@ -73,7 +73,7 @@ void Random::seed (long x); ; // linear congruential initializer; 	for (i = 1; i < sizeof state / sizeof *state; ++i) {; -		state [i] = 1103515245 * state [i - 1] + 12345;; +		state [i] = 1103515245ul * state [i - 1] + 12345ul;; 	}; ; 	rJ = &state [r_off];; @@ -85,7 +85,7 @@ void Random::seed (long x); long Random::number () // uniform random x : 0 <= x <= exp2 (31) - 1; ; {; -	long r;; +	unsigned long r;; ; 	r = *rK;; 	r += *rJ--;; @@ -97,6 +97,6 @@ long Random::number () // uniform random; 			rJ = &state [sizeof state / sizeof *state - 1];; }; 	; - return (r >> 1) &0x7fffffff; // discard the least-random bit; + return (r >> 1) &0x7ffffffful; // discard the least-random bit; }; ```. 3. Instead of [running plain xxd](https://github.com/soedinglab/MMseqs2/blob/master/cmake/MMseqsResourceCompiler.cmake#L35), we generate header files for resource files with the following pattern:; ```; """"""; #ifndef MMSEQS2_XXD_{1}_H_; #define MMSEQS2_XXD_{1}_H_; #include ""mmseqs2/{0}_data.h"". // Use casters to make values act as properties. This is to prevent static variables causing; // ""initialization order fiasco"".; struct {0}_CharCaster {{; operator const unsigned char*() const {{; return reinterpret_cast<const unsigned char*>({0}_data_create()->data);; }}; operator const char*() const {{; return reinterpret_cast<const char*>({0}_data_create()->data);; }}; operator const void*() const {{; return reinterpret_cast<const void*>({0}_data_create()->data);; }}; }};. struct {0}_LenCaster {{; operator unsigned int() const {{; return static_cast<unsigned int>({0}_data_create()->size);; }}; }};. inline constexpr {0}_CharCaster {0};; inline constexpr {0}_LenCaster {0}_len;; ```. where `{0}` is the filename of the respective file. 4. Changing `\n` to `\0` in [this line](https://github.com/soedinglab/MMseqs2/blob/a5d49655330d144788c6e1bf8551d7cc1d356b0c/src/test/TestTranslate.cpp#L15). We hope this is helpful.; Best wishes",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661:4707,test,test,4707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661,2,"['Test', 'test']","['TestTranslate', 'test']"
Testability, threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mod,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1878,test,test,1878,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,"# Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12:1994,TEST,TESTSEQUENCE,1994,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12,1,['TEST'],['TESTSEQUENCE']
Testability,"## Context; I am working with metagenomic data; Assemblies and gene annotation have been made by samples and then we performed a clustering at 95% identity to clustered genes by sample into one genes catalog. The tradictionnal command used is based on CD-HIt : `cd-hit-est -c 0.95`.; I want to test mmseq for saving computing time (original, isn't it?!). ## Expected Behavior; results similar to cd-hit in a much less time. ## Current Behavior; input =13 387 709 nucleic sequences. cd-hit output : 2,102,272 clusters; linclust output : 1,986,968 clusters (ok good start); cluster output : 8062 cluster (!!! what ?). I did not check anything further, except that both mmseq clustering ran well. I obviously miss something !; ; How is that possible that `cluster` produced only 8k clusters ?. ## Your Environment; mmseqs2-v14-7e284. the command lines used : ; * for linclust; `mmseqs easy-cluster AllSamples-cd-hit-est.0.95 mmseq_easyCluster tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`; for cluster; `mmseqs easy-linclust AllSamples-cd-hit-est.0.95 mmseq_easyLinclust tmp --min-seq-id 0.95 -c 0 --threads 20 --split-memory-limit 19G`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/699:294,test,test,294,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/699,1,['test'],['test']
Testability,"## Context; I need to create MSAs for a very large set of protein sequences: about 25 million. I was planning to use the ColabFold workflow. I figured that this would be achievable given the nonlinear scaling to large query sets. That being said, extremely remote alignments are not necessary for my use case in the same way they they are helpful for structure prediction. I am looking for relative small MSAs (no more than 256 sequences) of diverse sets that do not have small fragments eg. high coverage. . I had intended to run some scaling tests over query size as well as parameters (first thoughts being sensitivity, max_seqs, align eval, max_except), as well as not using the metagenomic database. I figured I would first **chat with experts and save some compute carbon** before doing this. Is there any params I am missing? Any that would be good to change from default and forget? Am I totally off in thinking my job is accessible with a 104 thread compute note and a week of runtime?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897:544,test,tests,544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897,1,['test'],['tests']
Testability,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53:13,test,test,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53,6,['test'],['test']
Testability,"## Current Behavior; Hello, thanks for developing this very useful tool! I have used mmseqs via conda installation without error on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:262,test,test,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,2,['test'],['test']
Testability,"## Expected Behavior. ## Current Behavior. This is the error i am getting . Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15993152; Target db start 1 to 15993152; tmp/17791169248477116152/blastp.sh: line 75: 20702 Illegal instruction (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs search queryDB targetDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. no output . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to find pairwise alignment between 15M short aa sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):. Invalid Command: Version. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; qsub -cwd -V -N align -l h_data=32G,time=10:00:00 run.sh; * Operating system and version:. Linux version 2.6.32-696.18.7.el6.x86_64 (mockbuild@c1bl.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Thu Jan 4 17:31:22 UTC 2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90:1563,mock,mockbuild,1563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90,1,['mock'],['mockbuild']
Testability,"## Expected Behavior. I want to remove a sequence that is a substring of a longer sequence. Looking at https://github.com/soedinglab/MMseqs2/issues/104. I can use `--min-seq-id 1.0 -c 0.9 --cov-mode 1`. So give a `test` file like:; ```; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. Where `>b` is a substring of `>a`, and it should be removed. ## Current Behavior. If I run:; ```bash; mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. And check the clusters, I still have two clusters:; ```bash; $ cat t_OUT_cluster.tsv; a a; b b. $ cat t_OUT_rep_seq.fasta; >a; ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA; >b; ATTGCATCGAGCAGCGACGAGCTAT; ```. ## Steps to Reproduce (for bugs). You can execute:; ```bash; echo "">a"" > test; echo ""ATTGCATCGAGCAGCGACGAGCTATCGACGATCGATCGATCGATCGATGCATCGATGCATCGATCGATCGATCGTACGATGCATTTTTACGAGCATCGGA"" >> test; echo "">b"" >> test; echo ""ATTGCATCGAGCAGCGACGAGCTAT"" >> test. mmseqs easy-cluster test t_OUT t_tmp --min-seq-id 1 --cov-mode 1 -c 0.9; ```. ## Your Environment. I am using a conda installation on a conda env (on a linux server), with version:; ```; MMseqs Version: 15.6f452; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/794:214,test,test,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/794,7,['test'],['test']
Testability,"## Expected Behavior. I'm trying to cluster my large protein sequence file (>45billion entries). I want to know how to set the parameters to cluster as soon as possible, and what kind of computer configuration is needed to run the data. And I also want to know, will the running time still be linear in the case of 30 times the test data set of paper ""Clustering huge protein sequence sets in linear time"". ## Current Behavior; mmseqs linclust $input tmp --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1000G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/623:328,test,test,328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/623,1,['test'],['test']
Testability,"## Expected Behavior. I'm trying to run `clusterupdate`, but I'm running into the error:. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/user_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:146,test,tests,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,1,['test'],['tests']
Testability,"## Expected Behavior. In previous version of MMSeqs2, the ```createdb``` command was running in a time that was proportional to the number of input sequences. ## Current Behavior. With latest version 5 - 9375b the command scans and writes all the input sequences into the MMSeqs2 DB format, but then hangs out for several hours writing the ```database.0``` and ```database.index.0``` files, which seem like a copy of the ```database``` file already written. No additional information are written in the log file during this process. ## Steps to Reproduce (for bugs); Run ```createdb``` on Uniprot/TrEMBL Fasta file. ## MMseqs Output (for bugs). ```; Program call:; createdb uniprot_trembl.fasta.gz uniprot_trembl_Sept18. MMseqs Version: 	5.9375b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ...................................................................................................	8 Mio. sequences processed; ...................................................................................................	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124:503,log,log,503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124,1,['log'],['log']
Testability,"## Expected Behavior. Perform contig-taxonomy without raising any error for all the sequences introduced. . ## Current Behavior. The taxonomy is obtained, creating the `report` and `lca_tsv` files, but in the error log there is the following line: . ```; data/04_taxgenes/contigs_tax/1889553110621073458/easy-taxonomy.sh: line 55: 8991 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```; Additionally to the mmseqs output, there is stated sometimes a line saying 'Error filterdb died' without anything else. Additionally, for a subset of the contigs, there is no taxonomy line. Whereas in some cases `mmseqs` correctly states a 'unclassified' line, for others it does not appear. ## MMseqs Output (for bugs). [mmseqs_tax_352069_1.txt](https://github.com/soedinglab/MMseqs2/files/6405462/mmseqs_tax_352069_1.txt). ## Context. I am performing multiple taxonomies for multiple contigs coming from a set of samples. There are some specific cases in which `mmseqs` is able to finish without raising an error. The taxonomy is performed against the GTDB downloaded through the command line you provided (`mmseqs databases`). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * 57de8c8d7b835519990185cbac7a2d841c734f05; * Downloaded locally.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * AVX2 with 250 Gb. ; * Operating system and version: Cluster with UNIX.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447:215,log,log,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447,1,['log'],['log']
Testability,"## Expected Behavior. The E-values should be robust to changes in the number of splits. ## Current Behavior. Splitting the database during search (`--split-mode 0`) will result in varying E-values, depending on the number of splits. ## Steps to Reproduce (for bugs). Run `mmseqs search` with `--split-mode 0` and varying values for `--split`. ## MMseqs Output (for bugs). Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Suggestion. One possible way to fix this would be to set a constant database size internally when using `--split-mode 0`. It could be useful to have this parameter exposed to the user, similar to `-Z` in HMMER:. ```; -Z <x> Assert that the total number of targets in your searches is; <x>, for the purposes of per-sequence E-value calculations,; rather than the actual number of targets seen.; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/653:706,Assert,Assert,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/653,1,['Assert'],['Assert']
Testability,"## Expected Behavior. When aligning assembled proteins to representative sequences of clusters (clustered at 90% amino acid identity) there should be 0 or 1 hit with > 90% identity and >90% coverage. ## Current Behavior. A single protein can align to over 200 representative sequences while fitting the identity and coverage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:760,test,tested,760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['test'],['tested']
Testability,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/178:169,test,test,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178,2,['test'],['test']
Testability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:192,test,test,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['test'],['test']
Testability,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/19:75,benchmark,benchmark,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19,1,['benchmark'],['benchmark']
Testability,"## Expected Behavior; Cluster a fasta input using `easy-cluster` because `linclust` sometimes removes important sequences. ## Current Behavior; \> 50% tested fastas die with a result2flat error. ```; <BASEDIR>/tmp//13463384132153814128/easycluster.sh: line 48: 36628 Segmentation fault (core dumped) ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_seqs"" ""${TMP_PATH}/all_seqs.fasta"" ${VERBOSITY_PAR}; Error: result2flat died; ```. ## Steps to Reproduce (for bugs); Cluster a [fasta (link)](https://gist.github.com/xonq/88b4d1f90c438b9b99f2d0e27bd3c604) with `easy-cluster` via a python subprocess. Full paths changed to <BASE_DIR> in log.; In this specific case:; `easy-cluster <BASE_DIR>/cormil2.1_9109.fa <BASE_DIR>/working/cormil2.1_9109_c0.4_v0.65 <BASE_DIR>/working/tmp/ --min-seq-id 0.65 --threads 1 --compressed 1 --cov-mode 0 -c 0.4 -e 0.1 -s 7.5 `. ## MMseqs Output (for bugs); [Error log](https://gist.github.com/xonq/51e40f3edf79ebd1531a725b26c52654). ## Context; I'm running a pipeline that calls on `easy-cluster` to truncate large fastas for phylogenetic reconstruction. >50% of these runs fail with easy-cluster. I don't want to use `linclust` because I've observed that it throws out important sequences from clusters here and there. ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 13.45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled from miniconda via Bioconda channel; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it""; * Operating system and version: Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/617:151,test,tested,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/617,3,"['log', 'test']","['log', 'tested']"
Testability,## Expected Behavior; Count degenerate nucleotide base (X or N) as match to any other nucleotide. ## Current Behavior; X bases are counted as a mismatch even with a custom substitution matrix that counts X as a match with score 2 to all bases. ## Steps to Reproduce (for bugs); 1. Copy matrix from nucleotide.out to nucleotide.edit.mat. Edit to replace -3 scores for X with 2 and run `MMseqs2/util/format_substitution_matrix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.ou,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:820,test,test,820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,3,['test'],['test']
Testability,"## Expected Behavior; DB should be formed. ; ## Current Behavior; Fails to parse fasta file. ; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; `mmseqs2/bin/mmseqs createdb test.fa DB`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 84e4ba6e8ef49b5764e604b9f4d0d90e3d3c0721; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Fasta entry: 0 is invalid. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Test file in question:. ```; > CHIPD00001 | ACU57510.1 | Cpin_0001 | C7P9R7_CHIPD | Chromosomal replication initiator protein dnaA; MNKTCEQVWERCLNIIRDIVEWQPFKTWFEPIKPIQLENNVLTIQVPSQFFYEYLEEHYVGLLGKTIKRELGKDARLEYR; IVVENGTPHQHPKTVNMPGQFTKSKKDSEVDFPLTIQNPVKNPFVIPGIKRVQIDSQLNPHYTFESYIEGDCNRVARRAG; KTVSEKPGGTSFNPLVIYGAVGLGKTHLAQAIGNEVKRIHPNKAVLYVSAEKFINQFIDHSKNSIINDFIHFYQLIDVLI; VDDIQFFARAEKTQDAFFAIFNHLHQSGKQLILTSDKPPKDLDGLQERLLSRFRWGLSADMQMPDFETRMEILEMKMRND; GLEMPKEVVKYVAYNIQSNVRELEGALISLLAQSSLNRKEIDLELAKRVLKSFVKTSSKEITIESIQKMVCEYFDVPYDK; LLQKTRKREIVQARQITMYLAKSFTKNSLKTIGEHFGGRDHTTVIHSCQTVKDLMDTDNAFRDNVIELQQKVQLAAM. > CHIPD00002 | ACU57511.1 | Cpin_0002 | C7P9R8_CHIPD | RNA polymerase, sigma-24 subunit, ECF subfamily; MPQEGQHTLWSAIRKGDETAFRQLFEECWEPLFTYASRITIDHSLAQDSVQSLFIHIWEKRDSLPDVTAILPYLRSALKN; RLLNALRDEHVYQKHVDLFTQVVDTNSPSSAEPLHLKETEQQLLQSINRLPGKMKDVFYLHRIEDLSVAEIACKLGTSPQ; TIRNQISTAIQRLKTTFV; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/170:254,test,test,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/170,2,"['Test', 'test']","['Test', 'test']"
Testability,"## Expected Behavior; Downloading the latest MMseqs2 tarball with `wget` should work consistently:; `wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz`. ## Current Behavior; Downloading the latest MMseqs2 tarball with `wget` is not working consistently, nor for `curl` (see below for examples and output). ## Steps to Reproduce (for bugs); 1. First test case—running `wget` doesn't work the first time, but works the second time:; ```; root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:17:43-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:355,test,test,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,3,['test'],['test']
Testability,"## Expected Behavior; Extract aligned regions from alignmentDB output of `filterdb` command and write sequenceDB . ## Current Behavior; Segmentation fault with the error: `Can not write to data file`. ## Steps to Reproduce (for bugs). `mmseqs linsearch test/S29DEC19 db/nt test/aln tmpdir --min-seq-id 0.6 -c 0.8 --cov-mode 2 --search-type 3`; `mmseqs filterdb test/aln test/tophitaln --extract-lines 1`; `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`. ## MMseqs Output (for bugs). ```; mmseqs filterdb test/aln test/tophitaln --extract-lines 1; MMseqs Version: 12.113e3; Filter expression; Filter column 1; Column to take -1; Filter regex ^.*$; Positive filter true; Filter file; Beats first false; Mapping file; Trim to one column false; Extract N lines 1; Numerical comparison operator; Numerical comparison value 0; Sort entries 0; Include identical seq. id. false; join to DB; Threads 40; Compressed 0; Verbosity 3. Filtering by extracting the first 1 lines; [=================================================================] 100.00% 26.17M 3s 458ms; Time for merging to tophitaln: 0h 0m 9s 953ms; Time for processing: 0h 0m 15s 822ms; ```. ```; mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq. MMseqs Version: 12.113e3; Compressed 0; Extract mode 2; Preload mode 0; Threads 40; Verbosity 3; ; Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. ```. ## Context. I understand that `linsearch` is still under active development. But I am unable to extract aligned regions after filtering `linsearch` alignment output for top hits with `filterdb.` However, `convertalis` is able to produce blast formatted output from the `filterdb` output. Please let me know if you need any other information to understand what is the problem. Thanks,; Manu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368:253,test,test,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368,13,['test'],['test']
Testability,"## Expected Behavior; Hi, I expected that this library would come with a/the conda environment. It's not a problem to install the library myself. I just wanted to point out that this happened. . ## Current Behavior; When I run a test:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs easy-cluster fasta/test.fasta clusterRes tmp --min-seq-id 0.5 -c 0.8 --cov-mode 1`. I immediately get this error:. `homedir/miniconda2/pkgs/mmseqs2-13.45111-h95f258a_1/bin/mmseqs: error while loading shared libraries: libatomic.so.1: cannot open shared object file: No such file or directory`. ## Steps to Reproduce (for bugs); I tried it twice on two different compute nodes. ## MMseqs Output (for bugs); No other output ; ; ## Context; I installed with conda into a new environment, following the README. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; Here is my conda environment:; ```; channels:; - bioconda; - conda-forge; - defaults; dependencies:; - _libgcc_mutex=0.1=conda_forge; - _openmp_mutex=4.5=1_gnu; - bzip2=1.0.8=h7f98852_4; - ca-certificates=2021.5.30=ha878542_0; - certifi=2021.5.30=py39hf3d152e_0; - gawk=5.1.0=h7f98852_0; - gettext=0.19.8.1=h0b5b191_1005; - hhsuite=3.3.0=py39pl5262h8f06ca0_2; - ld_impl_linux-64=2.36.1=hea4e1c9_2; - libffi=3.3=h58526e2_2; - libgcc-ng=11.1.0=hc902ee8_8; - libgomp=11.1.0=hc902ee8_8; - libidn2=2.3.2=h7f98852_0; - libstdcxx-ng=11.1.0=h56837e0_8; - libunistring=0.9.10=h7f98852_0; - mmseqs2=13.45111=h95f258a_1; - ncurses=6.2=h58526e2_4; - openssl=1.1.1k=h7f98852_0; - perl=5.26.2=h36c2ea0_1008; - pip=21.2.3=pyhd8ed1ab_0; - python=3.9.6=h49503c6_1_cpython; - python_abi=3.9=2_cp39; - readline=8.1=h46c0cb4_0; - setuptools=49.6.0=py39hf3d152e_3; - sqlite=3.36.0=h9cd32fc_0; - tk=8.6.10=h21135ba_1; - tzdata=2021a=he74cb21_1; - wget=1.20.3=ha56f1ee_0; - wheel=0.36.2=pyhd3deb0d_0; - xz=5.2.5=h516909a_1; - zlib=1.2.11=h516909a_1010; ```. * Git commit used (The string after ""MMseqs Version:"" ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480:229,test,test,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480,2,['test'],['test']
Testability,"## Expected Behavior; I am trying to partition 25000 sequences by homology so identical sequences (for instance >30%ID and >70%coverage - ideally even lower coverage if possible) are grouped into the same partition. Hence, I expect easy-cluster to group sequences that share this much similarity in same cluster. ## Current Behavior; After clustering I try to partition (by putting all sequences assigned to the same cluster in the same partition), but when I blast two partitions against each other I see that there are quite a lot of sequences assigned to different clusters that share more similarity than the criteria. ## Steps to Reproduce (for bugs); Currently I run the following (I've played around with many different settings and this seems to give the best clustering - but still far from optimal); mmseqs easy-cluster sequences.faa test.mm tmp -s 7.5 --threads 12 -c 0.7 --cov-mode 1 --alignment-mode 3 --max-seqs 25000 --min-ungapped-score 0 --mask 0 --add-self-matches -e 20000 --cluster-mode 1 --max-iterations 10000 --cluster-steps 7 . Am I missing some crucial setting? Any input is greatly appreciated - Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/354:844,test,test,844,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/354,1,['test'],['test']
Testability,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271:404,test,testdb,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271,1,['test'],['testdb']
Testability,"## Expected Behavior; I want to cluster a nucleic acid database. ## Current Behavior; I have some question with mmseqs; 1. What is the difference between result2repseq and createseqfiledb; 2. --Are min seq-id and - c the same? If I want to cluster them based on 50% similarity, what should they be set to?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I use this to cluster; ```bash; mmseqs createdb test.fasta tmps/DB; mmseqs linclust tmps/DB tmps/DB_clu tmps --min-seq-id 0.90 --threads 96; mmseqs result2repseq tmps/DB tmps/DB_clu tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:485,test,test,485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['test'],['test']
Testability,"## Expected Behavior; I was testing the example of `mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnRes.m8 tmp`. But I didn't see `alnRes.m8` in aimed `tmp` folder.; ## Current Behavior; ```; [lihuilin@login01 MMseqs2]$ ls; azure-pipelines.yml build cmake CMakeLists.txt data Dockerfile examples lib LICENSE.md README.md src util; [lihuilin@login01 MMseqs2]$ mmseqs easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp; Create directory tmp; easy-search examples/QUERY.fasta examples/DB.fasta alnResult.m8 tmp. MMseqs Version: 87e7103d289029dc3345f85ea9a4c4c6d6416e46; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 40; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 5.7; k-mer length 0; Target search mode 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Glo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/890:28,test,testing,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/890,1,['test'],['testing']
Testability,"## Expected Behavior; I'm trying to cluster my large protein sequence file (1400412352 entries, wc -l all.mmseqDB.index) with:. ## Current Behavior; `mmseqs cluster all.mmseqDB all.95.clu tmp -s 7.5 --cov-mode 0 -c 0.95 --cluster-mode 0 --min-seq-id 0.95 --remove-tmp-files --split-memory-limit 100G`. ## Steps to Reproduce (for bugs); I also tried the linclust function and other split-memory-limit (70G, 40G), but got the same error. ## MMseqs Output (for bugs); Find missing connections; Can not allocate memory in findMissingLinks; Error: Pre-clustering step died; Error: linclust died. ## Context; MMseqs Version: 13.45111. ## Your Environment; the log file; [log.txt](https://github.com/soedinglab/MMseqs2/files/9658017/log.txt). * Operating system and version: Linux 64 with Xeon(R) Gold 6238CPU, ; ![image](https://user-images.githubusercontent.com/35453307/192583090-8ade5a75-5d70-4457-9b7b-f557f2c526b3.png)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/613:654,log,log,654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/613,3,['log'],['log']
Testability,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/225:367,Test,Test-query,367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225,6,"['Test', 'test']","['Test-query', 'Test-target', 'test']"
Testability,"## Expected Behavior; MMSEQS2 should return some hits when setting `-c` in iterative searches. ## Current Behavior; MMSEQS2 returns 0 hits; ## Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta QUERY; mmseqs createdb DB.fasta DB; mmseqs search QUERY DB results tmp --num-iterations 2 -e 1e-5 -c 0.4. ## MMseqs Output (for bugs); LOG file: [mmseqs_20180926.log](https://gist.github.com/genomewalker/4a53d096569f0a04bbf5986519c5f037). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 199d9b81f8cd6af9e66f97ef4dc0bd53c8fce12b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake version 3.5.1** and **gcc version 5.4.0**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): **Running in a [VM](https://gist.github.com/genomewalker/bd70eff7fefd8256d52bc1f267983d5a) with 8 cores and 32GB**; * Operating system and version: **Linux machine1b8b2ea2-4f57-414b-9577-c2897459a784 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121:337,LOG,LOG,337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121,2,"['LOG', 'log']","['LOG', 'log']"
Testability,"## Expected Behavior; MMSeqs search followed by MMSeqs convertalis --format-output ""query,target,pident,nident"" should export the number of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:772,log,log,772,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,2,['log'],['log']
Testability,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:403,test,testing,403,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['testing']
Testability,"## Expected Behavior; Not sure. ## Current Behavior; After running; `mmseqs easy-search --search-type 3 --num-iterations 2 --threads 1 sequences/5LJ5_5.fasta databases/MSA_debug.fasta results/result tmp`. the program crashes with; `Can not allocate entries memory in IndexTable`. _Update:_; * Appending the query sequence to the database (which should assure at least one match is found) results in a different crash message: `Query sequence 0 has a result with no diagonal information. Please check your database.`; * Also, the log show query database size to be 2 which is weird because there is only one sequence in the file. But I can't find anything wrong with query .fasta file. _Update (2022-09-08)_:; Was trying out to the iterative step manually and ended up with the following error when trying to compute the profile:; ```; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Unknown; searchMode: 3; ```; I suppose that mean profile search against a nucleotide database is not possible? I've also realized that there are many iterative profile search tools for proteins (psi-blast, jackhmmer) but I don't know a single one for nucleotide sequences. Is there some reason while searching with profiles is not possible in case of nucleotide sequences?. ## Context; Hi, I would like to compute MSA alignments from blast nt database (https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/) for multiple RNA sequences. Ideally, the procedure should be similar to Colabfold's MSA computation and there should be more than one search iteration for each sequence.; Note that I am limited to ~1TB RAM and the nt database index (created by createindex) does not fit into memory.; What would be the best way to go about it? . ## Steps to Reproduce (for bugs); ### 5LJ5_5.fasta:; >5LJ5_5; GUUCGCGAAGUAACCCUUCGUGGACAUUUGGUCAAUUUGAAACAAUACAGAGAUGAUCAGCAGUUCCCCUGCAUAAGGAU; GAACCGUUUUACAAAGAGAUUUAUUUCGUUUU. ### msa_debug; >URS0000000021 rRNA from 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/599:529,log,log,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/599,1,['log'],['log']
Testability,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180:231,test,test,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180,5,['test'],['test']
Testability,"## Expected Behavior; Run mmseq search with an array of jobs. ## Current Behavior; As a test, I began with an array of 5 jobs only. 2 of them failed with a different error message. When I run them alone, they work. This behaviour is similar to the issue #239 . ## Steps to Reproduce (for bugs); `sarray -J mmseq --mail-type=ARRAY_TASKS,FAIL commandMMseqs --%=5`; where commandMMseqs contains:; `sbatch command_mmseq2_model.sbatch GCA_018105865.1 GCA_901001135.2` ; `sbatch command_mmseq2_model.sbatch GCA_009193005.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_905160935.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_019095985.1 GCA_901001135.2`; `sbatch command_mmseq2_model.sbatch GCA_001703475.1 GCA_901001135.2`. command_mmseq2_model.sbatch contains:; ```; #!/bin/bash; #; #SBATCH -N 1 # nombre de nœuds; #SBATCH -c 20 # nombre de cœurs sur ce meme noeud; #SBATCH --mem 50G # mémoire vive pour l'ensemble des cœurs; #SBATCH -J mmseq. module load system/Miniconda3-4.7.10 ; module load bioinfo/mmseqs2-v13.45111. mmseqs search copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out tmp -s 5.7 --search-type 3 --threads 20 --max-seqs 50 ; mmseqs filterdb mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit --extract-lines 1 ; mmseqs convertalis copies/${1}.TEs.fasta.dbm copies/${2}.TEs.fasta.dbm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.*[0-9]* &; awk '{if ($3>=0.75 && $4>=300 && $12>=200) print $0}' mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab > mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab.filtered; rm mapCopies/mmseq2_${1}_vs_${2}_evalue-sDefault-maxSeq50.out.bestHit.tab; ```. ## MMseqs Output (for bugs); One job fails ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607:88,test,test,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607,1,['test'],['test']
Testability,"## Expected Behavior; Runs a search with multiple iterations. ## Current Behavior; Running the search with default `--num-iterations` (1) sometimes misses the 100% ID match to the profile query, so I have to rerun. I thought I would just specify `--num-iterations 3`. To clarify, `--num-iterations 1` works, anything greater than 1 fails. `--num-iterations 2` (same for more); I now get ""Error in computePSSMFromMSA. First sequence of MSA is not allowed to contain gaps.; Error: Create profile died"". ## Steps to Reproduce (for bugs); Increasing iterations. ## MMseqs Output (for bugs); [Log](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ca1bf365503e8c3e4e05b2ee8bf8572eec7aabc8/failure_output). [Fasta](https://gist.githubusercontent.com/xonq/cefcba0107d550f5aa3291c54c3ccdb8/raw/ad892db5ff0937de43402cefed0178fc2629f5ed/cormil3.1.faa) used in `createdb --createdb-mode 1 --shuffle 0` for db prefix cormil3.1.faa. [Alignment for profile model](https://gist.githubusercontent.com/xonq/0da2789fabaf681114dfa6fb674f1666/raw/8ed35a57aa4240ca0015a2442b272a4a8f87a165/ACT1.stk) used `convertmsa`, then `msa2profile --match-mode 1`. ## Context; It fails to retrieve 100% ID hits in some proteomes when searching many seqdbs with a profiledb with one iteration, so I need to increase the iterations, which breaks the search command. . ## Your Environment. MMseqs2 Version: 14.7e284. Compiled from miniconda via Bioconda channel. CPU: 12 cores requested, Intel® Xeon® 'Cascade Lake'/'Skylake' RAM: 192GB/node, 57.6GB reserved for job. Supports AVX512, but ""you must set the correct compiler flags to take advantage of it"". Red Hat Enterprise Linux Server 7.9, Kernel 3.10.0-1160.71.1.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641:588,Log,Log,588,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641,1,['Log'],['Log']
Testability,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:427,test,test,427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,2,['test'],['test']
Testability,"## Expected Behavior; Taxonomy assignment of viral OTU sequences (nucleotide) using the 2bLCA method against a custom formatted amino acid database from IMG/VR. ## Current Behavior; The LCA step dies due to a segmentation fault when using a small test dataset that I have previously had success with when using Antônio Camargo's ICTV MMseqs2 protein database (https://github.com/apcamargo/ictv-mmseqs2-protein-database). For reference, I have also allocated 40 cores and 700gb RAM to this job, which fails after consuming only 178gb of mem.; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. I have formatted the IMG/VR v4 7.1 AA database as recommended (https://github.com/soedinglab/MMseqs2/wiki#create-a-seqtaxdb-by-manual-annotation-of-a-sequence-database) and I've created a custom taxdump using taxonkit. The custom taxdb was created without issue:. ```; mmseqs createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db; createdb --dbtype 1 IMGVR_all_proteins-high_confidence.faa.gz IMG_tax_db/IMG_tax_db . MMseqs Version: 	14.7e284; Database type 	1; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [112567430] 8m 8s 166mss; Time for merging to IMG_tax_db_h: 0h 0m 39s 840ms; Time for merging to IMG_tax_db: 0h 1m 54s 537ms; Database type: Aminoacid; Time for processing: 0h 14m 27s 634ms. #integrate all into a complete mmseqs2 taxdb; mmseqs createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned. createtaxdb IMG_tax_db/IMG_tax_db /home/bbrow6/tmp --ncbi-tax-dump IMG_taxdump --tax-mapping-file UVIG_taxid_mapping_cleaned . MMseqs Version: 	14.7e284; NCBI tax dump directory	IMG_taxdump; Taxonomy mapping file 	UVIG_taxid_mapping_cleaned; Taxonomy mapping mode 	0; Taxonomy db mode 	1; Threads 	28; Verbosity 	3. Loadin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703:247,test,test,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703,1,['test'],['test']
Testability,"## Expected Behavior; Using easy-search for multiple alignment (non-duplicate PDB seqs against Uniref100). . I've run this on a cloud instance (64G RAM), and a local server with 256G RAM. It completed the search on the server in 9 hours, producing an output file of 41G. . I expected it to finish running on the cloud at a slower speed because the target DB was split into more chunks (87 splits on the cloud VS 7 splits on the server). ## Current Behavior; On the cloud, however, after the prefiltering step, both ""align"" and ""convertalis"" logged a message ""Can not touch X into main memory"". The job will stay hanging but not produce any more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single outpu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:541,log,logged,541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,2,['log'],"['logged', 'logging']"
Testability,"## Expected Behavior; You run the same command with 1, 2 or more cores, and the outputfile is the same.; ## Current Behavior; The output file slightly differs. For a small benchmark, I ran blast, diamond and mmseqs with 1, 2 and 3 cores. While blast and diamond produce files with identical MD5 values, mmseqs does not. I checked further if maybe the order of the output is different, but the actual output is slightly different.; In 2 cases I get 162855 lines, in one case 162854 lines. In all combinations 162850 lines are identical, the remaining 4-5 lines are not.; All these hits are in the lower identity range. ## Steps to Reproduce (for bugs); Run a search with 1 or 2 cores.; EDIT: I can't provide the used database, since it's a non-public in-house database.; EDIT2: Does not always seem to happen though :/. ## Your Environment; MMseqs2 Version: 10.6d92c; Intel(R) Xeon(R) CPU E5-2609 v3 @ 1.90GHz; Ubuntu 18.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277:172,benchmark,benchmark,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277,1,['benchmark'],['benchmark']
Testability,"## Expected Behavior; assign taxonomy to Metagenome contigs, and the database is created from krakenuniq bacterial database.; ## Current Behavior; tmp/3407079133035171875/tmp_hsp1/941510883324284880/blastp.sh: line 99: 13762 Killed $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died; Error: First search died; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:860,test,test,860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,2,['test'],['test']
Testability,"## Expected Behavior; cluster all the sequences. ## Current Behavior; some sequences are lost, rather than clustered accordingly . ## Steps to Reproduce (for bugs); easy-linclust fasta_file output_path tmp_folder --min-seq-id 0.5. ## MMseqs Output; easy-linclust roman/seqs/lectins_seq.fasta roman/test/lectins_seq roman/test/tmp --min-seq-id 0.5. MMseqs Version: 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 128; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:298,test,test,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,## Expected Behavior; mmseqs map to find the most similar sequences between 2 DB; ## Current Behavior; Same sequences repeated as .fasta out; ```; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; >1; AKDVISAPKPPYYGMDV; ```; ....; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs map queryDB resultDB tmp -e 10 --min-seq-id 0.1 . mmseqs filterdb resultDB bestResultDB --extract-lines 20 . mmseqs createsubdb bestResultDB queryDB queryDB_sub; rm -f -- queryDB_sub_h*; mmseqs createsubdb bestResultDB queryDB queryDB_sub_h. awk '{ print $1 }' bestResultDB.[0-9]* | sort -u > subset.list; mmseqs createsubdb subset.list queryDB queryDB_sub. mmseqs convert2fasta mmseqs convert2fasta queryDB_sub test.fasta. ```. ## Context; I tried the solution proposed [here](https://github.com/soedinglab/MMseqs2/issues/392) but I certanly doing something wrong. ; ## Your Environment; MMseqs2 Version: 13.45111,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/743:873,test,test,873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/743,1,['test'],['test']
Testability,"## Expected Behavior; nident should be greater than 0 and vary between hits. ## Current Behavior; nident is always equal to 0 even for exact matches. ## Steps to Reproduce (for bugs); I used this proteome for testing: https://www.ncbi.nlm.nih.gov/protein?LinkName=nuccore_protein&from_uid=983357513. mmseqs createdb codi.fasta codiDB; mmseqs createindex --threads 6 codiDB .; mmseqs search --threads 6 codiDB codiDB resultDB . -s 1; mmseqs convertalis codiDB codiDB resultDB codi.out --format-output ""query,target,nident,pident,qlen,tlen,qcov,tcov,evalue"". ## Context; I observe the same behavior on our HPC with version 11-e1a1c (self-compiled, I guess) and on my Mac with version 10.6d92c (miniconda)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/288:209,test,testing,209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/288,1,['test'],['testing']
Testability,"## Expected Behavior; not sure; ## Current Behavior; cluster is stuck at prefilter stage for > 3 days. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Here is the log printed on the screen:. /home/btschits/apps/MMseqs2/build/bin/mmseqs cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; Tmp cluster_tmp folder does not exist or is not a directory.; Create dir cluster_tmp; cluster ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40 . MMseqs Version: 	61ca48883b50714be51fc35fc9b77325ffde53fb; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	10000000; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.99; Coverage mode 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	40; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.99; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Zdrop 	40; Rescore mode 	0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301:273,log,log,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301,1,['log'],['log']
Testability,"### Expected Behaviour; MMSEQS2 should return only hits with an e-value lower or equal to the maximum threshold set using the -e option in iterative searches. ### Current Behaviour; MMSEQS2 returns also hits with higher e-values. This behaviour is not observed during a non-iterative search, where the e-value maximum threshold is properly applied. ### Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta queryDB; mmseqs createdb DB.fasta targetDB; mmseqs search queryDB targetDB resultDB tmp --num-iterations 2 --threads 8 -e 1e-20 . ### MMseqs Output (for bugs); LOG file: mmseqs_261118.log; here https://gist.github.com/ChiaraVanni/53a4477436c8c05aa708c2eda90ef6cc. ### Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **7427bfa0d8b7d2b7540cb8b86f37a763be998709**; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.10.12 and gcc version 5.4.0; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Running in a machine with 80 cores and 2Tb; Operating system and version: Linux 4.9.0-8-amd64 x86_64, Debian GNU/Linux 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/137:572,LOG,LOG,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/137,2,"['LOG', 'log']","['LOG', 'log']"
Testability,']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30; Include identical Seq. Id. false; Spaced Kmer 1; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: queryDB(size=246); Target database: targetDB.sk7(size=10000); Needed memory (14434761936 byte) of total memory (2704,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:2322,test,test,2322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,"(-c 0.9 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.9 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd8 (-c 0.99 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.99 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd9 (-c 1 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 1 --min-seq-id 0.9 --max-iterations 1000 -a`. ## MMseqs2 _cluster.tsv output; _Cmd1 cluster.tsv output: (-c 0.95 --min-seq-id 0.7)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd2 cluster.tsv output: (-c 0.95 --min-seq-id 0.8)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd3 cluster.tsv output: (-c 0.95 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd4 cluster.tsv output: (-c 0.95 --min-seq-id 0.99) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd 5 cluster.tsv output: (-c 0.95 --min-seq-id 1)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd 6 cluster.tsv output: (-c 0.5 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd7 cluster.tsv output: (-c 0.9 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd8 cluster.tsv output: (-c 0.99 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd9 cluster.tsv output: (-c 1 --min-seq-id 0.9)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. ## Context; In the above commands only commands 1,2,5,9 yield the expected result. If I am understanding the parameters correctly shouldn't all the above commands yield the same result when 100% identical sequences are input? We have attempted playing with all of the different modes and parameters (they did yield different albeit incorrect results) but unless -c == 1 or --min-seq-id == 1 or < 0.9 then the identical sequences are not clustering. ## Your Environment; mmseqs easy-linclust was used for the tests above; MMseqs2 Version: 8.fac81",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:5234,test,tests,5234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['tests']
Testability,"(using`mmseqs2 8.fac81 hf3e9acd_1 bioconda`), and it appears that some tests failed. The end of the test output:. ```; Tmp resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp folder does not exist or is not a directory.; Created dir resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp; Program call:; extractorfs resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp/4434917762398107271/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 80 --compressed 0 -v 3. No datafile could be found for resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl_h!; Error: extractorfs died; Command exited with non-zero status 1; 40.25user 1.33system 0:02.64elapsed 1570%CPU (0avgtext+0avgdata 178744maxresident)k; 154744inputs+244552outputs (605major+33470minor)pagefaults 0swaps. LINSEARCH_NUCLNUCL_TARNS_SEARCH; TEST FAILED (NO REPORT). DBPROFILE_INDEX; TEST FAILED (NO REPORT). NUCLPROTTAX_SEARCH; TEST FAILED (NO REPORT). PROTNUCL_SEARCH; TEST FAILED (NO REPORT). EASY_LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. EASY_CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. NUCLNUCL_TRANS_SEARCH; TEST FAILED (NO REPORT). NUCLNUCL_SEARCH; TEST FAILED (NO REPORT). NUCLPROT_SEARCH; TEST FAILED (NO REPORT). DBPROFILE; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.182019. SLICEPROFILE; TEST SUCCESS; GOOD; Expected: 0.140; Actual: 0.147729. EASY_PROFILE; TEST SUCCESS; GOOD; Expected: 0.334; Actual: 0.338768. PROFILE; TEST FAILED; BAD; Expected: 0.367; Actual: 0.324652. EASY_SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355. SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098:1119,TEST,TEST,1119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098,17,['TEST'],['TEST']
Testability,"); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 0 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 1.39K 0s 28ms; Sort kmer 0h 0m 0s 16ms; Sort by rep. sequence 0h 0m 0s 16ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 0h 0m 0s 589ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; al",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3731,test,test,3731,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,"); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2207,TEST,TEST,2207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denie,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6126,log,logger,6126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logger']
Testability,)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6197,log,login,6197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['login']
Testability,)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mesg: Permission denied; bu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6339,log,logread,6339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logread']
Testability,"++.so.6 (0x00007f439e4ad000); > 	libm.so.6 => /lib64/libm.so.6 (0x00007f439e1ab000); > 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f439df84000); > 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:1438,test,testDB,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /galaxy/home/ksahlin/prefix/source/MMseqs2/build; [ksahlin@desmond build]$ make; Scanning dependencies of target cacode; make[2]: Warning: File 'lib/cacode/CMakeFiles/cacode.dir/depend.make' has modification time 0.00048 s in the future; [ 0%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 1%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; make[2]: warning: Clock skew detected. Your build may be incomplete.; [ 1%] Built target cacode; Scanning dependencies of target alp; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 1%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 2%] Building CX",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:1985,Test,Test,1985,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,6,['Test'],['Test']
Testability,"- [x] needs a git submodule of https://github.com/nemequ/simde/ or cmake magic to pull that down; - [x] isnan on clang 10 https://github.com/nemequ/simde/issues/282; - [x] ISO C++ does not allow C99 designated initializers https://github.com/nemequ/simde/issues/287; - [x] ISO C++ forbids compound-literals https://github.com/nemequ/simde/issues/288; - [x] macOS clang, AppleClang 11.0.0.11000033, [has a weird compile error](https://dev.azure.com/themartinsteinegger/edc8daa1-9e01-4171-b135-27e374460be3/_apis/build/builds/592/logs/23) Fixed by upgrading to macOS 11.05 AppleClang 11.0.3.11030032; - [x] GCC+ASan crashes with an [internal error somewhere completely random](https://dev.azure.com/themartinsteinegger/mmseqs2/_build/results?buildId=609&view=logs&j=ab24d926-1cfd-5268-5232-547307163af3&t=f30e022a-6aef-58fb-62a5-07e89b64b206&l=749) https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=961011; - [x] arm64 performance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309:528,log,logs,528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309,2,['log'],['logs']
Testability,"- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in_name1.db> <in_name2.db> <raw_out_1-2> <blast_out_1-2> -v 0 --format-mode 0 --search-type 1 --format-output query,target,qstart,qend,tstart,tend,bits` . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * MMseqs Version: e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249 (but also happens with version 10); * X86 AVX2 Linux binaries; * Operating system and version: tested on different Linux distributions",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318:2413,test,tested,2413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318,1,['test'],['tested']
Testability,"----------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[25261,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; align roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:11156,test,test,11156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"--------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[3768,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 854 0s 27ms; Time for merging to pref_rescore2_tmp_0: 0h 0m 0s 198ms ] 75.85% 648 eta 0s; Time for merging to pref_rescore2: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 350ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:9390,test,test,9390,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:422,test,testMMS,422,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,3,['test'],['testMMS']
Testability,"-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:3813,test,test,3813,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['test']
Testability,"-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184785; Top 10 Kmers; 	YTGTPK		230; 	PGFVVC		201; 	TNMHCE		201; 	GSPYYE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; Min Kmer Size: 0; Empty list: 63346238. Time for index table init: 0h 0m 0s. 	k-mers per position = 1.5412, k-mer match probability: 7.54641e-14; k-mer similarity threshold: 130; k-mer match probability: 7.54641e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 27782; Target db start 1 to 27782; ..; 1 k-mers per position.;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:14931,test,test,14931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"-min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Target file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2; ...Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 /tmp/test/9465698490903227639/linclust/831108043510341376/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	2147483647; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Init data structures...;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:10328,test,test,10328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,"-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 30",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2587,Test,Testdata,2587,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,". # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2063,log,log,2063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['log'],['log']
Testability,". ## Current Behavior; In order to see whether MMseqs2 can really make use of node-level parallelism, I first clustered a dataset of 50 million sequences on a single node with a single MPI task and multiple threads. The command I use for that purpose is:. ```; RUNNER=""srun -n 1 --ntasks-per-node 1"" ./mmseqs-par easy-linclust <fasta-file> <cluster-prefix> <tmp-dir> --min-seq-id 0.7 -c 0.8 --cov-mode 0 --threads 64; ```. This completes in ~34 minutes and has a peak memory usage of 27.9 GB. Now when I change the number of nodes to 4, by using RUNNER=""srun -n 4 ..., it completes in ~49 minutes and still has a peak memory usage of ~27.9 GB. The issue is similar for 16 nodes, i.e., the runtime does not go down as one expects. Is this expected? Am I using the MPI version correctly? It seems like there is no use for utilizing the MPI-mode as it is not efficient in terms of runtime and memory. ## Expected Behavior; I know some components of the clustering pipeline are sequential, and some of them are parallel. But one would logically expect a gain in terms of runtime and/or memory when using multiple nodes. ## MMseqs Output (for bugs); The output for single-node run: https://pastebin.com/waDMWGA3; The output for 4-node run: https://pastebin.com/B7bMaei3. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; 61ca48883b50714be51fc35fc9b77325ffde53fb-MPI. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; compiler version: OpenMPI 4.0.2, gcc 8.3.0; cmake version: 3.14.4. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Intel Haswell CPU (support for SSE and AVX2), 128 GB system memory. * Operating system and version:; Lightweight linux kernel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331:1230,log,logically,1230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331,1,['log'],['logically']
Testability,". ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1809,log,log,1809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,.................................................................................................	1 Mio. sequences processed; .............; Add missing connections.; ...................................................................................................	1 Mio. sequences processed; .............; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1132486; Size of the alignment database: 1132486; Number of clusters: 32435; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Filter column 	1; Column to take 	-1; Filter regex 	^.*$; Positive filter 	true; Filter file 	/tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy; Beats first 	false; Mapping file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical compar,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:7611,test,test,7611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,".3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1153,log,logging,1153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,1,['log'],['logging']
Testability,.; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 32435; Size of the alignment database: 32435; Number of clusters: 27782; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/clu /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust /tmp/test/9465698490903227639/linclust/831108043510341376/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/test/9465698490903227639/clu_redundancy panproteome.db /tmp/test/9465698490903227639/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:13479,test,test,13479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,".com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target split mode. Searching through 4 splits; Estimated memory consumption: 149G; Target database size: 152631149 type: Aminoacid; Process prefiltering step 1 o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1208,log,log,1208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['log'],['log']
Testability,".edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1438,test,test,1438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,".gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[=======================================================================================>] 42.71M 11.0MB/s in 4.1s . 2023-05-22 07:54:17 (10.5 MB/s) - 'mmseqs-linux-avx2.tar.gz.3' saved [44786049/44786049]. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:55:19-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Lin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:3394,test,test,3394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,2,['test'],['test']
Testability,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:3072,test,testDB,3072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Filter column 	1; Column to take 	-1; Filter regex 	^.*$; Positive filter 	true; Filter file 	/tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy; Beats first 	false; Mapping file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	; Swap fields of search results 	; Replace transitively 	. Filtering with a filter files.; ...Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Target file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:9049,test,test,9049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,"/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Context; I'm trying to match sequences to each other and not count regions with degenerate bases as mismatches. Basically, I'd like the 2 example sequences to match each other with 0 mismatches. The current command produces an output with 13 mismatches (see output section). I'm mostly concerned about ""N"" bases, but have edited my sequence for ""X"" because that's what the mmseqs sub matrix uses by default. If there's a better way to not count N or X mismatches than supplying a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:12110,test,test,12110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:3631,test,testDB,3631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability,/lib/libmpi.so.12 (0x00002b805113f000); 	libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00002b8051423000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b805172c000); 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00002b8051a2e000); 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002b8051c54000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b8051e6a000); 	libc.so.6 => /lib64/libc.so.6 (0x00002b8052086000); 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00002b8052447000); 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00002b80526c4000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b8052968000); 	librt.so.1 => /lib64/librt.so.1 (0x00002b8052b6c000); 	libutil.so.1 => /lib64/libutil.so.1 (0x00002b8052d74000); 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00002b8052f77000); 	/lib64/ld-linux-x86-64.so.2 (0x00002b8050d02000); 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00002b80531b1000); 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00002b80533bd000); Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 8 . MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	8; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Selec,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:2135,test,testDB,2135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; .............Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 3s; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...................................................................................................	1 Mio. sequences processed; .............; Sort entries. Find missing c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:5632,test,test,5632,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,2,['test'],['test']
Testability,"0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 15-6f452; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Loaded as a module on a cluster.; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: Unsure. I ran `lscpu` on a login node and got what is shown below, but the memory and CPUs that I had for the job were specified in the slurm job script shown above. ```; lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz; CPU family: 6; Model: 79; Thread(s) per core: 2; Core(s) per socket: 8; Socket(s): 2; Stepping: 1; CPU(s) scaling MHz: 100%; CPU max MHz: 3200.0000; CPU min MHz: 1200.0000; BogoMIPS: 6384.78; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx; pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 d; s_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16; c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:2358,log,login,2358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['log'],['login']
Testability,0. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4851,test,test,4851,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; E,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1766,TEST,TEST,1766,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"098257495296432/search/pref_0 tmp/15531098257495296432/aln --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 3 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 2 --compressed 0 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 1s 475ms; Writing results to: mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB; [] 5h 36m 42s 260ms. Time for merging files: 0h 0m 5s 864ms; Time for processing: 5h 37m 8s 744ms; convertalis mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3-s1.m8 --db-load-mode 3 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd6",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:7003,test,test-megan-out-,7003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['test'],['test-megan-out-']
Testability,"0h 31m 29s 407ms; createsubdb /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95 /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep . MMseqs Version:	12.113e3; Subdb mode	0; Verbosity 	3. Time for merging to all_protein_final_95_rep: 0h 0m 0s 11ms; Time for processing: 0h 10m 41s 827ms; convert2fasta /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9156,log,log,9156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['log'],['log']
Testability,0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14947,test,test,14947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34:1589,test,testDB,1589,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"1) I am looking through the code and seeing some bugs in how coverage works within the alignment for taxonomy.; Ignoring if this makes sense or not, its definitely broken code-wise. . It also would not be super well defined which coverage to compute, since we do multiple alignments with the 2bLCA procedure. What is currently implemented (however broken) is that it would try to compute the coverage between the extracted subfragment of the database against the other database hits. https://github.com/soedinglab/MMseqs2/wiki#the-concept-of-lca In the figure here this would be the coverage of the pink hit 1 fragment versus Hit 2, 3 and 4. I am not sure which coverage would make the most sense to compute and in any case would require us to run new benchmarks. 2) You need to pass `--tax-output-mode 2` to also compute and store the alignments. They will be placed at `taxresults.database_aln` in your case. 3) easy-taxonomy and taxonomy behave the same, the only difference is that the former takes FASTA input while the later only takes MMseqs2 databases. The main algorithmic difference depends on the input type though. With nucleotide input it will use the contig taxonomy procedure described in the MMseqs2 taxonomy paper, this includes the fast ORF-prefiltering and the taxonomy majority voting. The ORF-prefiltering can be overaggressive for short-reads, our previous recommendation was to disable the ORF-prefiltering with `--orf-filter 0` if you give it short read input. We are currently developing a better fix in #832 currently that should not require messing with this parameter. For protein input, the ORF-filtering and majority voting does not happen.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866:752,benchmark,benchmarks,752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/750#issuecomment-2063529866,1,['benchmark'],['benchmarks']
Testability,1.) I have not yet tested it properly but I think it should be possible to change the substitution matrix and add characters. However the seeding stage (k-mer double diagonal matching) only works with an alphabet of 20. ; 2.) We do not provide a pattern search engine,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-493079585:19,test,tested,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-493079585,1,['test'],['tested']
Testability,1/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14594,test,test,14594,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"1/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * S",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16635,test,test,16635,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"1978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/query_h -v 3 . Time for processing: 0h 0m 0s 0ms. ```; ## Contex",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11657,test,test,11657,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the part",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1652,LOG,LOG,1652,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['LOG'],['LOG']
Testability,1; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1965,test,test,1965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"2108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1097,log,logger,1097,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,2,['log'],"['logger', 'logging']"
Testability,21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 214,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1802,test,test,1802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different length L: 604154 query_length: 126; query_length: 626`. I can send you the entire directory but it is too large to upload on github.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:1839,log,log,1839,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,2,['log'],['log']
Testability,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175:4128,test,tested,4128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175,1,['test'],['tested']
Testability,"2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSWMVWPVLLL--LACGGI; TLPALQGIISVRVGQVAQGQLQGVLTSLTHLTAVIGPLVFAFLYSATRETWNGWVWIIGC; GLYVVALIILRFFH-PGRVIHPINKSDVQQRI---------; >db-CARD.1.1.3_geneId-AAD25063.1_desc-tetZ_annot-ARO3000183_taxaName-Corynebacterium.glutamicum_taxaId-1718; ```. Let me know if you need any more context or details, thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1783,test,test,1783,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,2,['test'],['test']
Testability,316799743718053916/newSeqs --use-seq-id 0 --threads 80 --compressed 0 -v 3. Time for processing: 0h 0m 0s 170ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 94ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. [=================================================================] 68.86K 0s 267ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 402ms; Time for processing: 0h 0m 0s 980ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; extractorfs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/search/3739931895554508144/t_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frame,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333:1545,test,tests,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333,2,['test'],['tests']
Testability,"358-369:. https://github.com/gbouras13/pharokka/blob/3b8f7ae207b367366765f482c9dce1dd2cccee80/bin/processes.py#L358 . # create target db; ""mmseqs"", ""createdb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/phar",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:1897,log,log,1897,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,1,['log'],['log']
Testability,"3789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [==============> ] 22.22% 5 eta; [==================> ] 27.78% 6 eta; [=====================> ] 33.33% 7 eta; [=========================> ] 38.89% 8 eta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1997,test,testtargetDB,1997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['test'],['testtargetDB']
Testability,"38353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1277,TEST,TEST,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"386; mmseqs-web-worker_1 | GCGCAG	385; mmseqs-web-worker_1 | AACAGG	323; mmseqs-web-worker_1 | Write ENTRIES (9); mmseqs-web-worker_1 | Write ENTRIESOFFSETS (10); mmseqs-web-worker_1 | Write SEQINDEXDATASIZE (15); mmseqs-web-worker_1 | Write SEQINDEXSEQOFFSET (16); mmseqs-web-worker_1 | Write SEQINDEXDATA (14); mmseqs-web-worker_1 | Write ENTRIESNUM (12); mmseqs-web-worker_1 | Write SEQCOUNT (13); mmseqs-web-worker_1 | Time for merging to pdb_rna_sequence.idx: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 3s 688ms; mmseqs-web-worker_1 | touchdb /opt/mmseqs-web/databases/pdb_rna_sequence ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | MMseqs Version:	e1a1c1226ef22ac3d0da8e8f71adb8fd2388a249; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 47ms; mmseqs-web-worker_1 | 2022/09/22 16:09:14 Process finished gracefully without error; ```. For comparison, logs looked like this when the RNA indexing was working:; ```; mmseqs-web-worker_1 | indexdb /tmp/16248551593497607411/nucl_split_seq /opt/mmseqs-web/databases/pdb_rna_sequence --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 1 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 2 ; mmseqs-web-worker_1 | ; mmseqs-web-worker_1 | Estimated memory consumption: 8G; mmseqs-web-worker_1 | Write VERSION (0); mmseqs-web-worker_1 | Write META (1); mmseqs-web-worker_1 | Write SCOREMATRIX3MER (4); mmseqs-web-worker_1 | Write SCOREMATRIX2MER (3); mmseqs-web-worker_1 | Write SCOREMATRIXNAME (2); mmseqs-web-worker_1 | Write SPACEDPATTERN (23); mmseqs-web-worker_1 | Write DBR1INDEX (5); mmseqs-web-worker_1 | Write DBR1DATA (6); mmseqs-web-worker_1 | Write DBR2INDEX (7); mmseqs-web-worker_1 | Write DBR2DATA (8); mmseqs-web-worker_1 | Write HDR1INDEX (18); mmseqs-web-worker_1 | Write HDR1DATA (19); mmseqs-web-worker_1 | Writ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:13698,log,logs,13698,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['log'],['logs']
Testability,"428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16050,test,test,16050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1660,test,test,1660,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,48710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14467,test,test,14467,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"50715556969/search_tmp/1133007989511978496/target_seqs_split tmp/9586069750715556969/search_tmp/1133007989511978496/aln tmp/9586069750715556969/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 16 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 0ms; Writing results to: tmp/9586069750715556969/result; [=================================================================] 2 0s 0ms. Time for merging to result: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/q_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/search_tmp/1133007989511978496/t_orfs_aa -v 3 . Time for processing: 0h 0m 0s 0ms; test.fa.easy-search.tsv exists and will be overwritten; convertalis tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result test.fa.easy-search.tsv --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --format-mode 0 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --db-output 0 --db-load-mode 0 --search-type 3 --threads 16 --compressed 0 -v 3 . [=================================================================] 2 0s 0ms; Time for merging to test.fa.easy-search.tsv: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; rmdb tmp/9586069750715556969/result -v 3 . Time for processing: 0h 0m 0s 1ms; rmdb tmp/9586069750715556969/target -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/target_h -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9586069750715556969/query -v 3 . Time for processing:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:11497,test,test,11497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"53; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1199,TEST,TEST,1199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,5776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucle,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4398,test,test,4398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1063,test,test,1063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184785; Top 10 Kmers; 	YTGTPK		230; 	PGFVVC		201; 	TNMHCE		201; 	GSPYYE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; Min Kmer Size: 0; Empty list: 63346238. Time for index table init: 0h 0m 0s. 	k-mers per position = 1.5412, k-mer match probability: 7.54641e-14; k-mer similarity threshold: 130; k-mer match probability: 7.54641e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 27782; Target db start 1 to 27782; ..; 1 k-mers per position.; 1604 DB matches per sequence.; 0 Overflows.; 27 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:15105,test,test,15105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15811,test,test,15811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"7510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:1667,test,tests,1667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['test'],['tests']
Testability,774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4526,test,test,4526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:6345,test,test,6345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:6267,log,logname,6267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['log'],['logname']
Testability,"89ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[11834,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; rescorediagonal roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 1.39K 0s 32ms; Time for merging to pref_rescore1_tmp_0: 0h 0m 0s 202ms========> ] 96.68% 1.34K eta 0s; Time for merging to pref_rescore1: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 961ms; clust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:5573,test,test,5573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1707,Test,Test,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,4,['Test'],['Test']
Testability,": 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2510,TEST,TEST,2510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,11,['TEST'],['TEST']
Testability,":; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1235,test,test,1235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x000000000058a276 in Concat::concatFiles (files=0x1187530, n=32, outFile=0x0); at /home/romain/logiciel/MMseqs2/src/commons/Concat.h:113; #2 0x0000000000588e40 in DBWriter::mergeResults (outFileName=0x117feb0 ""dpann_cpr_mmseq_db/"", ; outFileNameIndex=0x11818e0 ""dpann_cpr_mmseq_db/.index"", dataFileNames=0x1186100, indexFileNames=0x1186320, fileCount=32, ; lexicographicOrder=false) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:543; #3 0x0000000000586e74 in DBWriter::close (this=0x7fffffff57e0) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:239; #4 0x0000000000619954 in createdb(int, char const**, Command const&) (); #5 0x0000000000555b7f in runCommand (p=..., argc=2, argv=0x7fffffffdc78) at /home/romain/logiciel/MMseqs2/src/commons/Application.cpp:62; #6 0x000000000055634a in main (argc=4, argv=0x7fffffffdc68) at /home/romain/logiciel/MMseqs2/src/commons/Application.cpp:135",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:2084,log,logiciel,2084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,5,['log'],['logiciel']
Testability,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120:25386,Test,Tested,25386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120,1,['Test'],['Tested']
Testability,"; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUC",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1429,TEST,TEST,1429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,; Needed memory (14434761936 byte) of total memory (270462795776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. qStarting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4265,test,test,4265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:2596,test,testDB,2596,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,1,['test'],['testDB']
Testability,; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/P,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1755,test,test,1755,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"= -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'seq:96,prof:80'""]. filter_param = [""--filter-msa"", str(filter), ""--filter-min-enable"", ""1000"", ""--diff"", str(diff), ""--qid"", ""0.0,0.2,0.4,0.6,0.8,1.0"", ""--qsc"", ""0"", ""--max-seq-id"", ""0.95"",]; expand_param = [""--expansion-mode"", ""0"", ""-e"", str(expand_eval), ""--expand-filter-clusters"", str(filter), ""--max-seq-id"", ""0.95"",]. run_mmseqs(mmseqs, [""search"", base.joinpath(""qdb""), dbbase.joinpath(uniref_db), base.joinpath(""res""), base.joinpath(""tmp""), ""--threads"", str(threads)] + search_param",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:2376,log,logger,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['log'],['logger']
Testability,"==============================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16381,test,test,16381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,=======================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fa,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14712,test,test,14712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,===============================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14831,test,test,14831,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,==========================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/94204286487107,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14123,test,test,14123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"> Could you post the full log of the two runs? That would make it easier to say what might be going wrong. Thank you!; **runs of EPYC 7742**; (base) ct@test:~$ ~/mmseqs/bin/mmseqs taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp ; taxonomy /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/test/test1213 /data/ct/tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:26,log,log,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,8,"['log', 'test']","['log', 'test', 'testdb']"
Testability,"> Could you tell something about your input (and target database/search settings)?; > ; > We generally have had good experience with our own two socket Epic 7742 systems. One thing where the Epyc system is at a disadvantage is currently on IO. We write one output file per thread and these have to be merged in some steps. With 256 merges this can take quite a bit of time, in this case the Intel system would be slower in computing but as it has less threads it might be faster in merging and might thus win overall. Thank you very much for your reply.; Because I just want to test the new computer, I just entered these. The input file is very small. ""mmseqs taxonomy /data/testdb /data/datenbank/silvadb /data/testdb_result /data/tmp"". For my old computer (2Intel Xeon Silver 4210, Mem: 64G, Swap: 2G) it only takes 4 minutes, but this new computer takes 10 minutes. I have tried adding the following commands ""--threads 10; --threads 20; --threads 40; --threads 128; --threads 256"". But it takes at least 10 minutes. When --threads is greater than 100, the computer can no longer perform any other operations. (Memory usage never exceeds 20G.); After reading some information, we have a few unsure questions. Does the memory frequency (2933 or 3200) affect the operation of the program? We are now using 8 pieces of memory. If you add 8 pieces, can the current problem be improved?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160:578,test,test,578,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823518160,2,['test'],"['test', 'testdb']"
Testability,"> Do you notice that the system is swapping a lot? 1GB RAM per thread is also very little. Our systems usually have 8 to 16 GB RAM per thread. Thank you very much for your reply. Due to our current work, only 40G memory was used at the highest time. I believe your suggestions may be important to our next project.; I didn’t find any changes in swapping. When I noticed it was always 0. During the test，memory usage never exceeds 20G. But the calculation speed is very slow. And when the thread is greater than 100, other operations cannot be performed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549:398,test,test,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823522549,1,['test'],['test']
Testability,"> Instead I took a look at what instructions are missing for SSE2 support . I think more those are required for not-X86 ?. I've force pushed to this branch [with a newer SIMDe version](https://github.com/nemequ/simde/compare/0a0cdd20c9ac4f0cd787f60cca30c0aa1e71b6c1...aa6c5739159ca2a862b50258ad8f61afed4ca94f) including the following fixes:. https://github.com/nemequ/simde/commit/9d29f2b56ff3a93e4f13ab2075fe043ca10b7e7e common: prefer __builtin_isnan over std::isnan ; https://github.com/nemequ/simde/commit/c0af7afcc8290fba98803febb503015c2cf5a4d7 avx2: fix -Wconversion warning when assigning int to int16_t; https://github.com/nemequ/simde/commit/6791c8f891a4153a8736b7b7cdbc6f4bda7e31f8 Switch some C-style casts to use HEDLEY_STATIC_CAST.; https://github.com/nemequ/simde/commit/dbf8394561e699cb11a75a2e26d1efa121f11c79 mmx, sse, sse2: get rid of compound literals; https://github.com/nemequ/simde/commit/7185559a4df6cfb00d4730b9edb7bdb7ac3967b8 common: add -Wc++98-compat-pedantic to list of disabled warnings ; https://github.com/nemequ/simde/commit/f11544f282376cd06f53e694e9d5fd51b640e67d avx: fix aliasing issue in simde_mm_maskload_pd; https://github.com/nemequ/simde/commit/e314ce18967350aec8e899eb2acae59b95e07660 math: fix detection of __builtin_* functions; https://github.com/nemequ/simde/commit/bdf27512d41d583278ae5efee02a636d139fd806 test: disable -Wreserved-id-macro in µnit header. ; https://github.com/nemequ/simde/commit/aa6c5739159ca2a862b50258ad8f61afed4ca94f sse2, sse4.1, avx2: add some additional casts to vector types . So hopefully the result is less daunting!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459:1355,test,test,1355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629985459,1,['test'],['test']
Testability,"> You can use https://gist.github.com to post the log.; > ; > Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.; ============================================================; Thank you very much for your reply.; I just solved the bug very fortunatelly; The method is to install mpich ; ============================; Download hydra-3.3.1(https://www.mpich.org/downloads/); ./configure --prefix=$DIR/mpich; make; make install; add the mpirun in the end of your .bashrc; =============================; Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448:50,log,log,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448,1,['log'],['log']
Testability,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:507,test,test,507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070,3,['test'],['test']
Testability,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:31,test,test,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568,4,['test'],['test']
Testability,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:23,test,tested,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942,1,['test'],['tested']
Testability,"?Dear Milot,. I attached the log file here with this email, please check if you can access it. Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 28 September 2020 14:48; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63ERYGGXCIXN2ZXRHM3LSIBZXBANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117:29,log,log,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699966117,3,['log'],"['log', 'log-file']"
Testability,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:439,log,log,439,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,2,['log'],['log']
Testability,@ChiaraVanni I have tested the slice-search/iterative-search using the most recent version of mmseqs but I can not reproduce the error. Maybe it was solved in the mean time. Would you mind testing it again please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-581268504:20,test,tested,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-581268504,2,['test'],"['tested', 'testing']"
Testability,@ChongLC interesting case. Thank you for the detailed analysis. The issue seems to occur because our default parameters are not sensitive enough to match S6 to S4. Following is a command that clusters the sequences correctly. We should consider using `--exact-kmer-matching 1` as default for high similarities in MMseqs2. ; `mmseqs easy-cluster /tmp/test.fas test_clu tmp -c 1.0 --cov-mode 1 --min-seq-id 1.0 --exact-kmer-matching 1`; Alternative increasing `-s` also works.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601#issuecomment-1236084956:350,test,test,350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601#issuecomment-1236084956,1,['test'],['test']
Testability,@ShangjinTan using your parameter (90% covered at 95% sequence identity) I would assume that linclust performs just slightly worse than CD-HIT. It is very odd at that `--kmer-per-seq to 80` does produce exactly the same. ; What version of MMseqs2 do you use? What parameter do you use for CD-HIT? Could you please post the log of default linclust and the `--kmer-per-seq to 80` run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542:323,log,log,323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-712785542,1,['log'],['log']
Testability,@UriNeri the log is only written to stdout. We do not store a copy of the log in the temp directory. So you probably need to rerun the whole job. If you use the same tmp folder and command then it will just perform the last step.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442:13,log,log,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570949442,2,['log'],['log']
Testability,@altaetran this is indeed not right. Could you please provide the whole log and command call?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625661317:72,log,log,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625661317,1,['log'],['log']
Testability,"@colinbrislawn I have tested `linclust` with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. . How do you want to use MMseqs2?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522:22,test,tested,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522,1,['test'],['tested']
Testability,"@crisdarbellay no, sorry. I don't have access to a ""bare metal"" server to test this with, but my guess is that Milot guess that it has to do with virtualization is correct. Are you running it with KVM or not?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247:74,test,test,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-2090417247,1,['test'],['test']
Testability,"@davidbuterez I check your search log and the alignment steps used the gap open and extend parameters. So the alignment should be computerd with gap open 3 and gap extend 0 (see `searchout.txt`). I am not sure if -e inf actually works, I never used this. align ... \ --gap-open 3 --gap-extend 0 ... However the computation of the raw score in convertalis uses the gap open 11 and gap extend 1 to recompute the raw score from the bit score. . mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0 . Just a warning. You use two quite experimental features of mmseqs2, (1) Windows and (2) nucleotide searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491342159:34,log,log,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491342159,1,['log'],['log']
Testability,@dhwanidesai so you perform millions of read searches against the refseq database at once right? Could you please provide an output log of your run? It would help me to understand whats the bottleneck in your analysis.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506363220:132,log,log,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506363220,1,['log'],['log']
Testability,"@ggautreau I have changed the linclust algorithm. Now the similar sequences should be clustered. I have tested it on your panproteome dataset, the old linclust created ~16k cluster the new version only ~14k. Could you please try the newest version and check if you still encounter any problem?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-408640530:104,test,tested,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-408640530,1,['test'],['tested']
Testability,@kad-ecoli Thank you for testing it. The static build should be always up to date. MMseqs2 always reports the commit id. Could you check if its the most recent commit. If yes than could you please provide an example so that I can reproduce your issuse?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-410094909:25,test,testing,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-410094909,1,['test'],['testing']
Testability,@ksahlin oh you were super fast in testing it. I have fixed this issue. ; Sorry for the inconvenience.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418146288:35,test,testing,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418146288,1,['test'],['testing']
Testability,"@liuxianghui thank you for asking this question! . ```; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log; ```. CD-HIT computes in default global sequence identity, while MMseqs2 computes local. Therefore it is not possible to mimic exactly the same behaviour. But since you turn of the the global sequence identity computation, you can get fairly close to CD-HIT's criteria. Here is my suggested parameter mapping. ```; -c 0.95 -> --min-seq-id 0.95 ; -T $MC_CPU -> --threads $MC_CPU; -G 0 -> MMseqs2 uses local alignments is the default, there is no way to make alignments global; -aS 0.9 -> --cov-mode 1 -c 0.9; -g 1 -> it is not possible with MMseqs2 using greedy incremental clustering (needed for --cov-mode 1). However, setcover assigns sequence to the best matching representative in default. ; -r 1 -> MMseqs2 in default considers forward and reverse strand; ```. Final command: . ```; mmseqs easy-cluster in.fa clu tmp --min-seq-id 0.95 --cov-mode 1 -c 0.9 --threads $MC_CPU; ```. I have also added a guide how parameters of CD-HIT and MMseqs2 are related in the documentation https://github.com/soedinglab/MMseqs2/wiki#how-do-parameters-of-cd-hit-relate-to-mmseqs2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473:164,log,log,164,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473,1,['log'],['log']
Testability,"@martin-steinegger ; I didn't delete the ./tmp/ folder, is the full log in there? or do you mean the stdout ? ; About the input, please email me : uri dot neri at gmail dot com; Thanks !",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570898956:68,log,log,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570898956,1,['log'],['log']
Testability,"@martin-steinegger ; Thanks!; I couldn't find out the header info from the manual, so it is very helpful.; I'd like to reflect structural differences especially in their motifs, on visualization.; It seems like 'fident' or '-log(evalue)' will be indicators for such criteria.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1088497268:225,log,log,225,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/377#issuecomment-1088497268,1,['log'],['log']
Testability,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:26,test,tested,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537,2,['test'],"['tested', 'tests']"
Testability,"@martin-steinegger I tried to run a test. ; I had some weirdo results.; ```; mmseqs createdb nr.fa nr.DB; mmseqs createdb t.fa t.DB; mmseqs search t.DB nr.DB OUT tmp --split-memory-limit 126000000 --threads 20 2>&1 > log.search; mmseqs convertalis t.DB nr.DB OUT OUT.tsv; ```; Where the `nr.fa` is a NCBI's nr protein db (~188M sequences) and `t.fa` contains only one sequence which is also present on nr. . The result is short, so follow below:; ```; query target pident alnlen mismatch gapopen qstart qend tstart tend evalue bits; XP_642131.1 XP_642131.1 0.925 169 13 0 1 169 1 169 3.582E-100 329; XP_642131.1 XP_636625.1 0.400 151 86 0 7 157 8 152 5.899E-23 107; XP_642131.1 XP_003286525.1 0.369 148 85 0 7 154 8 142 1.340E-18 94; XP_642131.1 XP_003295036.1 0.328 159 99 0 7 165 8 155 1.304E-15 85; XP_642131.1 XP_003288531.1 0.318 165 104 0 5 169 9 162 3.328E-15 84; XP_642131.1 XP_003294617.1 0.322 149 93 0 7 155 11 148 4.892E-13 78; XP_642131.1 XP_647316.1 0.311 151 95 0 10 160 17 155 4.325E-12 75; XP_642131.1 XP_003290192.1 0.285 169 115 0 1 169 1 162 2.048E-11 73; XP_642131.1 XP_004357246.1 0.293 148 95 0 10 157 6 141 2.152E-09 67; XP_642131.1 KYQ91294.1 0.295 145 94 0 11 155 12 145 2.934E-09 67; XP_642131.1 XP_004362076.1 0.276 147 98 0 12 158 576 712 3.024E-07 61; XP_642131.1 XP_020436152.1 0.275 147 98 0 7 153 7 142 4.115E-07 61; XP_642131.1 XP_642849.1 0.374 78 45 0 94 166 5 82 2.591E-04 52; ```. Somehow the query didn't align correctly with it self. ; Do you have any idea what is happens? . [Attached the log file of the search](https://github.com/soedinglab/MMseqs2/files/2850868/log.search.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462300592:36,test,test,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462300592,4,"['log', 'test']","['log', 'test']"
Testability,"@martin-steinegger OK. Here I am pasting that text:; easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensiti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:121,test,test,121,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['test'],['test']
Testability,"@martin-steinegger Thanks for providing the help.; What I am looking for is: I have 2M sequences containing from ~100 species. For each of 2M sequence, I want to find out ALL the hits/similar sequences within the given threshold, such as evalue 0.01, NOT the best hit. ; I tested the following approach: ; First I build the targetDB using 2M sequence. Then I created the index. Then for each query species (~20K sequence), I created the queryDB, then I use MMseqs search with the parameters --max-seqs num_DB_Seq, -s 7.5 -e 0.01. The program call is:; ~/db_mmseqs/10141 ~/db_mmseqs/AllDB ~/db_mmseqs/tmp/8799019798690856849/pref_7.5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2264996 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 ; --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 64 -v 3 -s 7.5 . How long do you think it takes for 64 cores to get the results for 2M vs. 2M sequences with all the possible hits?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407667120:273,test,tested,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407667120,1,['test'],['tested']
Testability,"@martin-steinegger Thanks for the answer!; Intuitively, I've already tried running your latest suggested command:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0`. However, no output file is generated (in this case, `alnRes.txt`) when the gap options are passed to convertalis. As for the warning, I am quickly testing things on my PC, but the usually I will run this for bigger datasets on a Linux machine. I will test on Linux as well to see if there is any difference. EDIT - On Linux:; `5316 Aborted (core dumped) mmseqs convertalis seqsDB revDB alignDB alnRes.txt --search-type 3 --format-output ""query,target,raw"" --gap-open 3 --gap-extend 1`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481:415,test,testing,415,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481,2,['test'],"['test', 'testing']"
Testability,@martin-steinegger You are welcome; they were found by the automated Debian package quality tests,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/359#issuecomment-706567191:92,test,tests,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/359#issuecomment-706567191,1,['test'],['tests']
Testability,@martin-steinegger great! We will test it and let you know if we encounter any problems. Many thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-382682984:34,test,test,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-382682984,1,['test'],['test']
Testability,"@martin-steinegger sorry for the delay. I ran the regression (using`mmseqs2 8.fac81 hf3e9acd_1 bioconda`), and it appears that some tests failed. The end of the test output:. ```; Tmp resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp folder does not exist or is not a directory.; Created dir resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp; Program call:; extractorfs resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp/4434917762398107271/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 80 --compressed 0 -v 3. No datafile could be found for resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl_h!; Error: extractorfs died; Command exited with non-zero status 1; 40.25user 1.33system 0:02.64elapsed 1570%CPU (0avgtext+0avgdata 178744maxresident)k; 154744inputs+244552outputs (605major+33470minor)pagefaults 0swaps. LINSEARCH_NUCLNUCL_TARNS_SEARCH; TEST FAILED (NO REPORT). DBPROFILE_INDEX; TEST FAILED (NO REPORT). NUCLPROTTAX_SEARCH; TEST FAILED (NO REPORT). PROTNUCL_SEARCH; TEST FAILED (NO REPORT). EASY_LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. EASY_CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. NUCLNUCL_TRANS_SEARCH; TEST FAILED (NO REPORT). NUCLNUCL_SEARCH; TEST FAILED (NO REPORT). NUCLPROT_SEARCH; TEST FAILED (NO REPORT). DBPROFILE; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.182019. SLICEPROFILE; TEST SUCCESS; GOOD; Expected: 0.140; Actual: 0.147729. EASY_PROFILE; TEST SUCCESS; GOOD; Expected: 0.334; Actual: 0.338768. PROFILE; TEST FAILED; BAD; Expected: 0.367; Actual: 0.324652. EASY_SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355. SEARCH",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098:132,test,tests,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098,2,['test'],"['test', 'tests']"
Testability,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:28,log,log,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214,3,['log'],['log']
Testability,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:232,log,log,232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,1,['log'],['log']
Testability,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:74,test,tested,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383,2,['test'],"['test', 'tested']"
Testability,"@milot-mirdita Your fix works for the artificial set, but unfortunately, not for my own set. I guess the artificial set has very little similarity between sequences, which should explain the differences in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:249,log,log,249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['log'],['log']
Testability,@milot-mirdita things are not getting much more logical:. `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 -k 5 --spaced-kmer-pattern 110111 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. output:; `User-specified k-mer pattern is not consistent with stated k-mer size`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753:48,log,logical,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753,1,['log'],['logical']
Testability,@mooreryan could you please add the log?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282223903:36,log,log,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282223903,1,['log'],['log']
Testability,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:580,log,logic,580,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179,1,['log'],['logic']
Testability,@nick-youngblut I can not see the log. Maybe it did not upload?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537596457:34,log,log,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537596457,1,['log'],['log']
Testability,"@nick-youngblut I have added a taxonomy regression test to our test suite. I could not reproduce your error. But we found a critical error, caused by multi threading ,in one modules involved in the 2bLCA search. This issues should be fixed in the main branch. Could you try to run the regression? . git clone https://bitbucket.org/martin_steinegger/mmseqs-benchmark; cd mmseqs-benchmark; ./run_regression.sh mmseqs resultFolder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484996995:51,test,test,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484996995,4,"['benchmark', 'test']","['benchmark', 'test']"
Testability,@nick-youngblut interesting. I never tested --alignment-mode 4 with sam. Thank you for pointing it out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-482873381:37,test,tested,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-482873381,1,['test'],['tested']
Testability,@s-devos could you please provide the log of the clustering?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771502389:38,log,log,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771502389,1,['log'],['log']
Testability,"@salvoc81 thank you for sharing this results. Very interesting! ; If you index a database with MMseqs2 then all k-mers are stored if no sensitivity `-s` is provided to `createindex`. However, if you search without an index then only k-mers above a certain `blosom62` threshold, defined by `-s`, are indexed. But it might be possible that these rejected k-mers might can be useful since compositional bias correction (`--comp-bias-corr`) can produce results with lower score than the reject k-mers. In our benchmarks this had no measurable effect. You could test if this is the causes of the disparity by providing the same `-s` as used for the search to `createindex`. Do you have a small example that I could use the reproduce this issue?. Some remark: MMseqs2 ignores indexes on the query site.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973:505,benchmark,benchmarks,505,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644486973,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,@yiming-gcm were you able to test any of my recommendations to improve the speed of mmseqs?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-418137022:29,test,test,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-418137022,1,['test'],['test']
Testability,@zkstewart could you test it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-427927682:21,test,test,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-427927682,1,['test'],['test']
Testability,@zsram I can not see the uploaded log. Can you past it in a gist https://gist.github.com/?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535228222:34,log,log,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535228222,1,['log'],['log']
Testability,ARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expec,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1757,TEST,TEST,1757,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"Actually you might have a different issue. Please modify the shebang in data/blastp.sh so it says:; ```; #!/bin/bash -ex; ```; instead of `-e`.; Afterwards run cmake, make and post the whole log please. Also make sure to run the search command with an empty tmp folder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309501710:191,log,log,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309501710,1,['log'],['log']
Testability,"Adding taxonomy support for the NT is on my todo list, but it is a bit more involved and I haven't had time for it yet. If you are using the assembly files with their original file names you could use something like this (didn't test it, only collected what I think might work from previous fragments i've written):; ```; ls -1 assemblies \; | awk 'match($1, /^(([A-Z]{3})_([0-9]{3})([0-9]{3})([0-9]{3})\.[0-9]+_.+?)_genomic/, a) { print ""https://ftp.ncbi.nlm.nih.gov/genomes/all/""a[2]""/""a[3]""/""a[4]""/""a[5]""/""a[1]""/""a[1]""_assembly_stats.txt""; }' > assembly_urls.tsv; mkdir tmp; cd tmp; aria2c --input-file=../assembly_urls.tsv; for i in *; do awk '/^# Taxid:/ { gsub(/_assembly_stats.txt/, """", FILENAME); print FILENAME""\t""$3; exit; }' $i; done > ../assembly_taxid_mapping.tsv; cd ..; mmseqs createdb assemblies/* refseqdb; mmseqs createtaxdb refseqdb tmp --tax-mapping-file assembly_taxid_mapping.tsv --tax-mapping-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-779229734:229,test,test,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-779229734,1,['test'],['test']
Testability,After testing few strategies I zipped all the commands along with logs for you to have a look after which commands and in which moments the errors occurred. I also attach those with comments to show how the clustering went and with what time efficiency. I understand that I should patch the source and run the software again in the suspected steps to printout the problems?. [logs.zip](https://github.com/soedinglab/MMseqs2/files/1815637/logs.zip),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179:6,test,testing,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179,4,"['log', 'test']","['logs', 'testing']"
Testability,Ah good that there is no seg. fault anymore. Could you attach the log output?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315440:66,log,log,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315440,1,['log'],['log']
Testability,"Ah sorry I had forgotten about your previous message, too many different projects are going on!. Could you check the log-file upload again, I don't see a log.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190:117,log,log-file,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699957190,2,['log'],"['log', 'log-file']"
Testability,"Ah that makes sense, sorry.; You need to copy the call to the prefilter module from the output log and only run that in GDB. E.g. from what you posted above from createindex, you would look for a line starting with prefilter and copy that full line:; ```; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 ; =>; gdb --args mmseqs indexdb ....; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961:95,log,log,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961,1,['log'],['log']
Testability,"Ah the nucl-nucl test are very likely to fail as they include statically compiled binaries for samtools (for linux, windows and macos). I would need to add a statically compiled binary for freebsd too. `SLICEPROFILE` is odd however. The `posix_madvice` error is annoying but can be ignored. I don't see anything special in the freebsd man page that would indicate that this might fail/behave differently. . I am downloading a VM and I'll take a look at these issues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400:17,test,test,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400,1,['test'],['test']
Testability,"Ah yes, the bioconda version has some known issues. We added quite a lot of testing this recent days and fixed many issues. Could you please try the most recent version? We will make a new release soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531:76,test,testing,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531,1,['test'],['testing']
Testability,"All tests pass on my PowerEdge 32-ht system with MMSEQS_NUM_THREADS=16. . Also, I had forgotten that this machine has vmem limits, so I was actually running with about 1G/thread before. Exceprt from build:. [ 3% 10/228] /usr/bin/c++ -I/usr/local/include -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/tinyexpr -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/microtar -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simde -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/simd -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/gzstream -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/alp -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ksw2 -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/xxhash -I/usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/ips4o -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -MD -MT lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -MF lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o.d -o lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o -c /usr/ports/wip/mmseqs2/work/MMseqs2-13-45111/lib/cacode/lambda_calculator.cpp. ... [100% 228/228] : && /usr/bin/c++ -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -O2 -pipe -msse2 -fstack-protector-strong -fno-strict-aliasing -lpthread -fstack-protector-strong -fsigned-char -D_WITH_GETLINE -std=c++1y -stdlib=libc++ -pedantic -Wall -Wextra -Wdisabled-optimization -fno-exceptions -fopenmp=libomp src/CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o src/mmseqs src/libmmseqs-framework.a src/version/libversion.a lib/tinyexpr/libtinyexpr.a -lm /usr/local/lib/libzstd.a lib/microtar/libmicrotar.a -lz -lbz2 -lomp && :",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866:4,test,tests,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869007866,1,['test'],['tests']
Testability,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:161,log,log,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538,3,['log'],['log']
Testability,"Anybody who has to deal with clusters will need to make use of the size distribution at some point. It's not hard to cough up a script to take the cluster file and make it into a cluster size distribution histogram, but it would be better done once in mmseqs itself. Other useful columns for the cluster size distribution would be the percent of genes, the percent of clusters in that bin, and cumulatives on those starting from size 1 (singletons). It would also be useful to calculate the following summary statistics and log them as well as writing them to a JSON file:. - Number of sequences in; - Total number of characters in the sequences; - Average sequence length; - Number of singletons; - Fraction of genes in singletons; - Size of largest cluster; - Fraction of genes in largest cluster; - Modal cluster size (peak of size distribution); - Fraction of genes in modal cluster; - Which space was used (NA or AA); - Run parameters; - processors used; - run times. Thanks for listening.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/404:524,log,log,524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/404,1,['log'],['log']
Testability,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:635,test,testing,635,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,7,"['TEST', 'test']","['TEST', 'testing', 'tests']"
Testability,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161:507,log,log,507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161,1,['log'],['log']
Testability,"As of mmseqs 12.113e3, the amino acid databases available via `mmseqs databases` are:. ```; Name 	Type 	Taxonomy	Url; - UniRef100 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef90 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniRef50 	Aminoacid 	 yes	https://www.uniprot.org/help/uniref; - UniProtKB 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/TrEMBL 	Aminoacid 	 yes	https://www.uniprot.org/help/uniprotkb; - UniProtKB/Swiss-Prot	Aminoacid 	 yes	https://uniprot.org; - NR 	Aminoacid 	 yes	https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA; ```. ...and I believe that all are quite large and take a long time to download and construct. It would be helpful for testing purposes to have a small database (or databases), especially a small subset database of each `UniRef[0-9]+` database.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/407:705,test,testing,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407,1,['test'],['testing']
Testability,Awesome! @ChiaraVanni will test it and will we back to you in case we find any problem. Many thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-665665007:27,test,test,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-665665007,1,['test'],['test']
Testability,"Awesome! I pulled down the new commit, removed the old build directory and followed the installation instructions in the readme but run into an error ( cmake 3.7.1 and g++ v4.9). Should I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:321,log,log,321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,1,['log'],['log']
Testability,"CCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNU",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1507,TEST,TEST,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,Can you please check again that the log file is uploaded?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/609#issuecomment-1275786723:36,log,log,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609#issuecomment-1275786723,1,['log'],['log']
Testability,Can you post the full log and call to MMseqs2 please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593591780:22,log,log,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593591780,1,['log'],['log']
Testability,"Can you try the newest MMseqs2 release? 7 is really ancient. MMseqs2 is however really not well tested for clustering whole genomes/long contigs. You might have more luck in running only linclust and not the whole clustering workflow. > PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... 🥲",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287:96,test,tested,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287,1,['test'],['tested']
Testability,"Can you try to run it on a single node (without MPI, etc). Issues in MPI support might have gone unnoticed since we switched to 128 core machines. Yes, i mean `mmseqs (easy-)cluster` with normal clustering. That one should also successfully finish eventually on a single of these compute nodes. Can you please post the full log output? Maybe something else went wrong.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252077861:324,log,log,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252077861,1,['log'],['log']
Testability,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:173,test,tested,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562,1,['test'],['tested']
Testability,"Changes in mmseqs-benchmark regression to test taxonomyreport:; ```sh; # Create taxreport; ""${MMSEQS}"" taxonomyreport -v 3 ""$TARGETDB"" ""$RESULTS/results_aln"" ""$RESULTS/results_aln_taxreport"". # Check numbers in taxreport; R_BACTERIA=$(grep 'superkingdom.*Bacteria' ""$RESULTS/results_aln_taxreport"" | cut -f 2); R_VIRUS=$(grep 'superkingdom.*Virus' ""$RESULTS/results_aln_taxreport"" | cut -f 2); R_EUKARYOTA=$(grep 'superkingdom.*Eukaryota' ""$RESULTS/results_aln_taxreport"" | cut -f 2). TARGET=""from filtertaxdb: 2524 259 2713; from taxonomyreport: 2524 259 2713""; ACTUAL=""from filtertaxdb: $BACTERIA $VIRUS $EUKARYOTA; from taxonomyreport: $R_BACTERIA $R_VIRUS $R_EUKARYOTA""; awk -v actual=""$ACTUAL"" -v target=""$TARGET"" 'BEGIN { print (actual == target) ? ""GOOD"" : ""BAD""; \; print ""Expected: "", target; \; print ""Actual: "", actual; }' > ""${RESULTS}/report""; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487191923:18,benchmark,benchmark,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487191923,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Clust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1260,test,tests,1260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['test'],['tests']
Testability,"Co-authored by: Fabian Kloetzl @kloetzl. - improves speed of FASTA file parsing to 2GBs, see https://github.com/lh3/seqtk/pull/123; - all regression tests passed",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/756:149,test,tests,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756,1,['test'],['tests']
Testability,"Commands to reproduce follow. First commands on the whole database (these will run OK):; mmseqs createindex db tmp. Now, split the same database, make sub-databases out of the splits and try createindex on any of the splits. This will sometimes work but most of the time will get stucked, as described. The commands:. mmseqs splitdb db db_p --split 2; mmseqs createsubdb db_p_0_2.index db_h db_p_0_2_h. These commands run smoothly and without reporting any problems. The last one is repeated for each split, as per the manual.; The problematic is then:. mmseqs createindex db_p_0_2 tmp. db can be any amino acid database, the number of splits does not matter.; The log is for db==uniref90 and 4 splits. In interactive mode I can see that there is a summary of time taken to fill the index printed after the last ""="", not sure why it is not wisible in the log. But no more lines and no progress beyond this step.; HTH; j131",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113:665,log,log,665,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633213113,2,['log'],['log']
Testability,Commit 14014cd0ec50049f796f153ea8a72164ff4b8b45 should be stable and safe to use. Could you please test if the instability was resolved on your dataset?. You will find precompiled binaries [here](http://mmseqs.com/archive/14014cd0ec50049f796f153ea8a72164ff4b8b45) (once the CI builds them).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722:99,test,test,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-593713722,1,['test'],['test']
Testability,Could you also provide the log please? The `--max-seqs num_DB_Seq` slows down the search.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408819810:27,log,log,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408819810,1,['log'],['log']
Testability,Could you please add the log of this search?. One thing that might happen is that your database has no taxonomical information for this sequences. Could you check if the identifier of this viruses has a mapping in the `_mapping` file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/241#issuecomment-556843463:25,log,log,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/241#issuecomment-556843463,1,['log'],['log']
Testability,Could you please post the full long until it hands?. generally mmseqs is not very good at small number of queries. We have built various optimizations to deal with that (e.g. for ColabFold) but they come with very different trade-offs. let’s see what the log says first before further recommendations.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332:255,log,log,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899556332,1,['log'],['log']
Testability,Could you please provide a log of your clustering run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-508142185:27,log,log,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-508142185,1,['log'],['log']
Testability,Could you please provide the full log? Is it possible to provide your input?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570895614:34,log,log,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570895614,1,['log'],['log']
Testability,Could you please provide the log? Thanks a lot.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535153285:29,log,log,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535153285,1,['log'],['log']
Testability,Could you post the full log of the MPI run when you get the chance? Did using `-c` work for the other issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843139013:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843139013,1,['log'],['log']
Testability,Could you post the full log of the two runs? That would make it easier to say what might be going wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823623149:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823623149,1,['log'],['log']
Testability,Could you post the full log output of MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744418706:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-744418706,1,['log'],['log']
Testability,Could you post the full log please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468335271:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468335271,1,['log'],['log']
Testability,Could you post the full log please? This error invalid read error usually means some step before went wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537566846:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537566846,1,['log'],['log']
Testability,"Could you post the full log? MMseqs2 should be okay with far less memory than you gave it, sounds like you ran into another bug somehow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452239805:24,log,log,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452239805,1,['log'],['log']
Testability,"Could you post the log and the machine specs? It should work up to UINT_MAX without issue, however RAM overhead just for holding the entries also increases linearly and might become an issue at this point.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-624785799:19,log,log,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-624785799,1,['log'],['log']
Testability,Could you post the log of MMseqs please and how you called it? Did you recompute the index?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275630519:19,log,log,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275630519,1,['log'],['log']
Testability,Could you post the whole log?. It looks like the prefilter step failed for some reason and the next step is now complaining about that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274582541:25,log,log,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274582541,1,['log'],['log']
Testability,"Could you post the whole output log please?. What happens if you run it with only the --cascaded parameter (no e, max-seqs, similarity-type).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/28#issuecomment-298669687:32,log,log,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28#issuecomment-298669687,1,['log'],['log']
Testability,"Could you provide the call and log and if possible also a backtrace (see https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023) of the `convertalis` crash? For the pairwise alignments the `--format-output` parameter needs to include `qaln,taln`. Search databases should work directly (please provide the log so we can see what went wrong). For cluster databases you have to align the result clustering with the `align -a` module and parameter to generate the alignment information and backtrace and then call `convertalis`. Can you post how `pbp.found_with_profile.ALIGNEDREGIONS` was generated. I am not sure what might be going wrong with that call. Also I am not very sure what exactly want. I thought you want MSAs? `convertalis` will only give you pairwise alignments between the query and all hits. It won't give you an MSA at all.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458957293:31,log,log,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458957293,2,['log'],['log']
Testability,"Could you provide the calls how you generated the matrix, and how you called MMseqs2? . Alternative substitution matrices are not well tested, so we might have to work more on that code branch.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604468047:135,test,tested,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604468047,1,['test'],['tested']
Testability,Could you rebase ontop of 67d61013628911d8fce01a5aed6380f2a3de7f23? I think that should solve some of the weird log length issues with travis.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627221446:112,log,log,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627221446,1,['log'],['log']
Testability,"Could you run something like this to check if the sequence database is in someway unusual:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' ${output}/plass_assembly_noclust.index; ```. We might have an issue with our split logic for databases larger than the available system memory. . Edit: Do the same for the offset column too please:; ```; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' ${output}/plass_assembly_noclust.index; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497691622:313,log,logic,313,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497691622,1,['log'],['logic']
Testability,"Could you send me the intermediate/result files? These do not contain neither sequences nor identifiers.; ```; THREADS=1; mmseqs easy-search /home/bastian/data/benchmark/Dyadobacter_sp__SG02_1855291.fasta /home/bastian/data/benchmark/DF_PP_full100.fa.fixed.mmseqsdb /home/bastian/data/benchmark/mmseqs_test_again/Dyadobacter_sp__SG02_1855291_vs_DF_PP_full100.fa.fixed.1core.mmseqsresult ""/home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/"" --remove-tmp-files false --threads ""${THREADS}""; tar czvf ""mmseqs-intermediate-threads${THREADS}.tar.gz"" /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/result* /home/bastian/data/benchmark/mmseqs_test_again/tmp${THREADS}/latest/search_tmp ; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885:160,benchmark,benchmark,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590323885,6,['benchmark'],['benchmark']
Testability,Could you upload a few contigs? I am confused where it's actually crashing in the log it's crashing in `summarizealis` and in the snippet in `addtaxonomy`. It would be great to have something to reproduce the issue locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830090610:82,log,log,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830090610,1,['log'],['log']
Testability,D (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_D,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1969,TEST,TEST,1969,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"D or RAM (/dev/shm) does not change the speed.; This happens with the docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support fo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2541,log,log,2541,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['log'],['log']
Testability,"D; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1206,TEST,TEST,1206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"DB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [=============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229:1859,test,testtargetDB,1859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229,1,['test'],['testtargetDB']
Testability,"DDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:2703,Test,Tested,2703,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,2,['Test'],"['Test', 'Tested']"
Testability,"Dear MMSeqs2 devlopers, . I was a user of CDHIT to remove the duplications in a dataset. However, it is not ready for big data. So, I come across MMSeqs2 which can be used as an alternative to CDHIT from this paper [(https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/)](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6026198/). . My command for CDHIT: ; cd-hit -i `<input fasta file>` -o `<output fasta file>` -c `1.00`. I have tested with a few parameters of MMSeqs clustering. Unfortunately, it does not work as expected. ; ## example fasta file ; (consisting of 8 sequences - S2 and S3 are partial identical sequences of S1 while S5, S6, S7, and S8 are partial identical sequences of S4; expected final cluster representative: S1 and S4); ```; >S1; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEEENKHHMGIDVIIKVTKQDQTPTNDKICQSVTEVTETEDDEVSEEVVKGDPTTYYTIVGAGLNMNFGFTKCPKILSISESSDGNTVNTRLSSVSPGQGKDSPAITREEALAMIKDCEMSIDIRCSEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S2; MKQYIVLACMCLVAAAMPTSLXXXXSSCTEE. >S3; SEEEKDSDIKTHPVLGSNISHKKVSYKDIIGSTIVDTKCVKNLEFSVRIGDMCEESSELEVKDGFKYVDGSASEGATDDTSLIDSTKLKACV. >S4; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHYKYYP. >S5; MDEMDEIVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPID",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:429,test,tested,429,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,1,['test'],['tested']
Testability,"Dear MMseqs2 developers,; Thank you for making this excellent tool available. I'm using MMseq2s on an HPC cluster using the Slurm scheduler, and I'm trying to determine the best way to utilize as many cores per node as possible; ## Expected Behavior; MMSeqs2 launches 1 MPI task per node, and uses OpenMP to spawn as many threads as there are cores available on each node (48); ## Current Behavior; 1 MPI task per node is launched, but the number of threads running on any node is capped at 12, regardless of what value argument to `--threads` is provided; ## Steps to Reproduce (for bugs). Job script:. ```; #!/usr/bin/env bash. #SBATCH --job-name=mmseqs; #SBATCH --output=mmseqs_gcc12_test2.log; #SBATCH -N 8; #SBATCH --ntasks-per-node=1; #SBATCH --cpus-per-task=48; #SBATCH --time=08:00:00; #SBATCH -p medium. module load slurm; module load openmpi/gcc12.1.0/4.1.4. export PATH=/lustre/projects/carlson-group/mmseqs2-project/gcc12/ompi/13-45/bin:$PATH. DBDIR=/lustre/projects/carlson-group/mmseqs2-project/DBs. RUNNER=""mpirun -pernode -np 8"" mmseqs search human_prot.db $DBDIR/UniRef50 human_prot_results_test2 ./tmp; ```. ## MMseqs Output (for bugs); ```. MMseqs Version: 	67949d702dbfc6e5d54fdd0f14a9ab6740f11c32-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	2; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/595:693,log,log,693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/595,1,['log'],['log']
Testability,"Dear Martin,. thanks! Have checked out the latest code and it works fine :). Best,; Thomas. > Am 23.02.2017 um 05:29 schrieb Martin Steinegger <notifications@github.com>:; > ; > Dear Thomas,; > ; > I fixed the issues with diag-score 0 and rolled back to the original clustering workflow. Could you please test if the issues is solved? Thanks a lot.; > ; > Best regards,; > Martin; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-282488689:305,test,test,305,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-282488689,1,['test'],['test']
Testability,"Dear Milot,. thanks for the quick reply. It helps me a lot, and I will for the moment prevent the less tested options. Will stick to BL62 for the moment, and will play with the options you've mentioned. Best wishes,; Thomas. > Am 14.02.2017 um 19:11 schrieb Milot Mirdita <notifications@github.com>:; > ; > Hi Thomas,; > ; > Just a heads-up: Martin, who should be able to help you, is on vacation until next week.; > ; > About the sub-mat parameter: Everything except blosum62 is pretty untested. Also supplying a custom score matrix won't work yet, since we rely on some pretrained hard-coded values (BlastScoreUtils.cpp).; > ; > You should probably only tweak the -s, -c and --min-seq-id (and maybe --min-ungapped-score) parameters.; > ; > Best regards,; > Milot; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-279972920:103,test,tested,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-279972920,1,['test'],['tested']
Testability,"Dear Sir:; I want to try mmseqs2 cluster as cd-hit-est. ; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log ; Please kindly suggest me the corresponding parameter to set for mmseqs cluster and lincluster.; Thanks a lot.; Xianghui. ![image](https://user-images.githubusercontent.com/4928483/84471749-8e533880-acb8-11ea-81fa-d84ffe264628.png). ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/317:166,log,log,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317,1,['log'],['log']
Testability,"Dear Thomas, . I fixed the issues with diag-score 0 and rolled back to the original clustering workflow. Could you please test if the issues is solved? Thanks a lot. I opened a seperate issues for the sub. mat. problem. https://github.com/soedinglab/mmseqs2/issues/20 . Best regards,; Martin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-281891658:122,test,test,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-281891658,1,['test'],['test']
Testability,"Dear developers,. I am trying to perform clustering on the set of closely-related sequences of retrotransposons (n = 736,771). The module ""easy-linclust"" works fine for this dataset. But whenever I used the ""cluster"" module (and also the ""easy-cluster"" module), I got a long list of error messages such as the following. Error: there must be an error: 98829 deleted from 373971 that now is empty, but not assigned to a cluster. I am unsure why these error messages occur and whether they could affect my clustering results or not. Could you please help me to solve this issue? Thank you in advance. MMseqs version: 96d452cb432fc4674991a48952deaf24d1787e77 (self-compiled); Full log: ; [full.log](https://github.com/soedinglab/MMseqs2/files/5384506/full.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363:678,log,log,678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363,3,['log'],['log']
Testability,Do you still have the full log?. Could you show the first few lines of these files:. ```; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln*; ```. That's a very weird error. It seems to be crashing in calculating E-values. That would only be possible if it's fed some corrupted input.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066:27,log,log,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066,1,['log'],['log']
Testability,Does the issue also happen in the newest release?; Could you capture the full log of the different runs and upload those?. Sending us the data via email or similar is also not possible?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182:78,log,log,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182,1,['log'],['log']
Testability,"Does this mean that for a sequence of 2kbp, it would take 400 k-mers, and for a sequence of 20kbp, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:338,test,tested,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917,1,['test'],['tested']
Testability,Dummy PR (to trigger tests),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/880:21,test,tests,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880,1,['test'],['tests']
Testability,Dummy PR to trigger regression test workflows (copy of #873 ),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/880:31,test,test,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880,1,['test'],['test']
Testability,"Everything should be here: ; https://bitbucket.org/martin_steinegger/mmseqs-benchmark; http://gwdu111.gwdg.de/~compbiol/mmseqs2/mmseqs2-benchmark.tar.gz. However, most scripts are also kind of outdated, parameters changed etc. So getting them to run with the latest MMseqs2 version might be a bit of work. We run a far smaller set of tests on every commit:; https://github.com/soedinglab/mmseqs2-regression; These scripts here originated from the above mentioned repository and might be useful to get commands to run again with the latest MMseqs2.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034:76,benchmark,benchmark,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607941034,3,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARC",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1590,TEST,TEST,1590,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,Fixed the issue and changed the regression test from 2 iterations to 3 (https://bitbucket.org/martin_steinegger/mmseqs-benchmark/commits/7d99a2e8a4f6f7ba7d61a17a176535b01b0df490),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/185#issuecomment-481996311:43,test,test,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/185#issuecomment-481996311,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Following [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam) to use PFAM database with mmseqs. So, I follow the steps below:; ```; curl http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz > Pfam-A.full.gz ; mmseqs convertmsa Pfam-A.full.gz pfam_msa_db ; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1 --threads 10 ; mmseqs createindex pfam_profile tmp -k 6 -s 7.5 ; # test case; mmseqs createdb ../sig_trans/work/SBP_4/pbps.neighbors.fa pbps.neighbors.DB; mmseqs search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 2>&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum seque",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189:458,test,test,458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189,3,"['log', 'test']","['log', 'test']"
Testability,For some reasons mmseqs cluster fails during clustering of the attached protein fasta. Commands:; ```; mmseqs createdb test2.faa test2.db; mmseqs cluster test2.db test2.clu tmp --min-seq-id 0.9; ```; fasta file and log are attached in gist; https://gist.github.com/matveykolesnik/7b4376daba0a1f5846747a7b4bb33d81,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/181:215,log,log,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/181,1,['log'],['log']
Testability,"GAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db`; `user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5`; `user@user:~$ ./mmseqs/bin/mmseqs createseqfiledb experiments/small.mm.db experiments/small50.mm.db experiments/small50_seq`; `user@user:~$ ./mmseqs/bin/mmseqs result2flat experiments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experimen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:1965,log,log,1965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['log'],['log']
Testability,Getrlimit RLIMIT_MEMLOCK does not behave how I expected. ; I changed the code back. ; Can you test it again?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/9#issuecomment-273217375:94,test,test,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9#issuecomment-273217375,1,['test'],['test']
Testability,"GitHub Markdown turns them into a quote. . Everything regarding this file is alright though. That's a new feature to reduce IO that confused me. ; Not sure what else might be going wrong here though. Could you try the latest git version? Also if you rerun, could you save the full log? I am a bit at a loss on how to recreate the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053:281,log,log,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574721053,1,['log'],['log']
Testability,"Good morning Milot. Thanks a lot for your response. I got pssms by performing the following command:; - ls -l; rw-r--r-- 1 1693345 Jul 28 09:24 out.mm_msa; rw-r--r-- 1 4 Jul 28 09:24 out.mm_msa.dbtype; rw-r--r-- 1 29 Jul 28 09:24 out.mm_msa.index. - mmseqs msa2profile out.mm_msa prof; - mmseqs profile2pssm prof pssm. It's extremely fast. The pssm format is as follows:; Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	S	5	-1	-2	-3	0	-1	-2	-2	-2	-3	-1	-1	-1	-3	-1	6	0	0	-2	-1; 1	L	0	-1	-2	-3	0	-2	-1	-2	-2	4	8	-1	-1	-3	-2	-2	-1	0	-2	-1; 2	E	1	-1	0	4	0	1	-2	-2	2	-3	-1	2	-1	-2	-2	0	-4	-1	-2	-1. Are the numbers log-values? I have to have them normalized between 0 and 1. Any hint is welcome. Kind regards,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818:614,log,log-values,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580#issuecomment-1197737818,1,['log'],['log-values']
Testability,Got this error today on r4.4xlarge and [fusion](https://seqera.io/fusion/) via Nextflow on AWS Batch. Maybe it's a filesystem thing. [command.log](https://github.com/soedinglab/MMseqs2/files/13994933/command.log); [command.sh.txt](https://github.com/soedinglab/MMseqs2/files/13994938/command.sh.txt),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1901172701:142,log,log,142,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1901172701,2,['log'],['log']
Testability,"Great. Now I actually understand what the difference is between i: and o: ; 👍 . Just a quick question: I mostly use default settings like -k 0 which sets kmer to optimum (although I must admit I have no idea what the mathematical basis of this feature is). And it works fine, the algorithm seems to use kmer=6. Why does it use 6, and not 7? What would happen if I use 7? Would it be more sensitive and slower? I'm a veterinarian, the nature biotech paper is mostly elvish to me. Will try to toy around and benchmark some more. Thanks for the help. Nicolaas",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/169#issuecomment-470895176:506,benchmark,benchmark,506,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/169#issuecomment-470895176,1,['benchmark'],['benchmark']
Testability,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2679,TEST,TEST,2679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,9,['TEST'],['TEST']
Testability,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:28,test,tests,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638,3,"['log', 'test']","['log', 'login', 'tests']"
Testability,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/128:511,log,logs,511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128,3,['log'],"['log', 'logs']"
Testability,"Hello @martin-steinegger and @milot-mirdita . Sorry if I could not test before...; I have tried today to convert the HMM (Pfam 32) to profiles but I think some files are missing.; The symlink to pfam_hmm.ffdata is missing, and pfam_hmm_db.index is missing. I am not sure how to create the pfam_hmm_db.index file",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-496763908:67,test,test,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-496763908,1,['test'],['test']
Testability,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:87,test,testing,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756,2,['test'],"['testing', 'tests']"
Testability,"Hello @milot-mirdita and sorry for my late reply.; It seems MMseqs gets slower when using preindexed databases on AMD, although it was unexpected.; I will try to post the logs in a few week, ad the Intel machine is being completely used by other colleagues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-894054280:171,log,logs,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-894054280,1,['log'],['logs']
Testability,"Hello Milot, thanks a lot for the very fast reply.; That would maybe explain why it worked when splitting the sequences.; Just to confirm, should I test using latest commit?; 'Allocate correct amount of memory for DBReader::serialize'",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410698450:148,test,test,148,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410698450,1,['test'],['test']
Testability,"Hello! I am trying to set up a target database, with all the reference sequences that I want to test my query database about (as per the instructions I found [here](https://mmseqs.com/latest/userguide.pdf)). I am trying to use all of GTDB as my target -- I already have it all downloaded on a remote server, so I didn't want to use the mmseq database utility to re-download it. I tried running the following:; `; mmseqs createdb $(ls bacteria/) $(ls archaea/) tmp`. Where the archaea and bacteria subdirectories contain FASTA files with all protein sequences for each representative genome. Understandably (as there are thousands of genomes), this caused mmseqs to complain that there were too many arguments. The next thing I try is going to be to concatenate everything into a single FASTA file, and then run the same command. However, this file is going to be huge, and I suspect I might run into problems with this as well. Does anyone know of a good way to do this? . Thanks in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/798:96,test,test,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/798,1,['test'],['test']
Testability,"Hello, . I am trying to cluster some nucleotide sequences that are circularly permuted. To this end, I am calling `--wrapped-scoring 1` but am encountering a problem (that does not happen when `--wrapped-scoring 1` is omitted) that seems to be due to the `--rescore-mode`. Here's an example command:; `mmseqs cluster perm_DB wrapped_perm_DB_clu tmp --rescore-mode 0 --min-seq-id 0.8 --wrapped-scoring 1`. it fails at a `rescorediagonal` step, citing: `ERROR: wrapped scoring is only allowed with RESCORE_MODE_HAMMING`. Further, specifying `--rescore-mode 0` (which should be the hamming mode) does not fix the issue, indeed, none of the `--rescore-modes` appear to help. Here's an example full output of the above command being run: https://gist.github.com/Zheludev/f567fdad8ea7d2761ec4fab681b211a5. This error does not occur when `mmseqs linclust --wrapped-scoring 1` is used, but in a test case, the `linclust` seems to lack the sensitivity I require - successfully clustering some permuted sequences together but not all, even if all permutations retain 100% sequence identity (upping the `--kmer-per-seq` 100x doesn't help either).. I am running this on linux with ample resources and on version 13.45111. I would greatly appreciate any help with this issue,. Thanks. IZ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509:887,test,test,887,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509,1,['test'],['test']
Testability,"Hello, ; I want to use MMseqs2 to cluster nucleotide sequences from different patients. I use WSL on windows with MMseqs2 version 13-45111+ds-2 by compiling from source. Firslty, I have created separate fasta files using python from an original dataframe containing nucleotide sequences and their IDs. Then, I placed the resulting fasta files in WSL under user/MMseqs2/build/tests and ran the following command: ""mmseqs createdb tests/output1.fasta test/DB1"" while in the ""MMseqs2"" root. However, I get the following error message: ""Cannot open test/DB1.source for writing"". Can you please help me? I apologise in advance if the problem is basic and I've made a mistake in the installation or execution procedure.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/725:375,test,tests,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/725,4,['test'],"['test', 'tests']"
Testability,"Hello,. First of all thank you for making such an amazing program, secondly I was wondering if you could provide some advice on how to handle a very large query database. I have several terabytes that I would like to check against the nr. Currently I am using the easy-taxonomy workflow, I have loaded about 1/15th of my data as a proof of concept. However as you will see in the log below this will take quite some time. My main questions are: is this expected behaviour and how am I able to speed this up?. ## Current Behavior; LSBATCH: User input; mmseqs easy-taxonomy ./sample.fastq.gz ./nr ./result ./tmp -s 0.5. MMseqs Version: 	13.45111; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	26; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:380,log,log,380,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['log'],['log']
Testability,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48:641,test,test,641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48,1,['test'],['test']
Testability,"Hello,. Just to report that this issue keeps happening with short sequences in version `14-7e284`. Here is the log file section:; ```; Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1 0s 5ms; Index table: Masked residues: 52; No k-mer could be extracted for the database OG29842_tmp/9235789383789574915/clu_tmp/8036944701986152555/input_step_redundancy.; ```. I do not know if it has been addressed previously, but I have the feeling it's due to short sequences, mine are 55-60 AAs long.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918:111,log,log,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918,1,['log'],['log']
Testability,"Hello,; I cannot reproduce the issue sadly. However I also don't have the NR available right now. Could you please compile MMseqs again in debug mode:; ``; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..; ``; (Also paste the cmake log please). And run only the crashing prefilter with a debugger:; ``; gdb --args PATH/TO/DEBUG/bin/mmseqs prefilter mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 ; ``. Then type run to start mmseqs and when it crashes type bt for a backtrace. Please paste the backtrace here. Edit: I am downloading the NR and will try to reproduce the issue using that too.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301061921:255,log,log,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301061921,2,"['log', 'test']","['log', 'testDB']"
Testability,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:1527,log,log,1527,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673,1,['log'],['log']
Testability,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253:78,test,test,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253,1,['test'],['test']
Testability,"Here are the exact statistics of the sequences that I am trying to cluster to help understand what's going on. - Number of Nucleotide Sequences: **60,621,169**; - Sum of the Lengths of all Sequences: **326,476,863,573 bp**; - Length of the Shortest Sequence: **6 bp** ; - Length of the Longest Sequence: **99,791,824 bp**; - Average Length of Sequences: **5,385 bp**; - Median Length of Sequences: **1,154 bp**; - 25% of Sequences are below: **579 bp**; - 75% of Sequences are below: **2,304 bp**; - N50 of Sequences: **2,879,031 bp**. And here is the log file of `mmseqs easy-linclust` after 3000 CPU hours. [log.txt](https://github.com/soedinglab/MMseqs2/files/5362803/log.txt). What parameters of `mmseqs easy-linclust` would be best to cluster such a distribution of sequences at 99% identity?. Thanks for your time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430:552,log,log,552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-706843430,3,['log'],['log']
Testability,Here is the [full file](https://drive.google.com/file/d/1SI5ODslZeELYWcRsuL58XT5v_UOArwdr/view?usp=sharing). . I tested by subselecting sequences out of that file. . For instance the crash happens with this file:; ```; head -90000 test.fasta > test-90000.fasta; ```; whilst it doesn't happen with this other file:; ```; head -89000 test.fasta > test-89000.fasta; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441409687:113,test,tested,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441409687,5,['test'],"['test', 'test-', 'tested']"
Testability,"Here's a log from one of the 10 batch jobs: [mmseqs_taxonomy.log](https://github.com/soedinglab/MMseqs2/files/2916694/mmseqs_taxonomy.log). I was using the following paramters: ` -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --split 4 --threads 12`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468417493:9,log,log,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468417493,3,['log'],['log']
Testability,"Hi . thanks for reporting this issues. Could you please provide the output of MMseqs2 and the how you called it?. I tried to reproduce Unexpected Behavior 1 by using this workflow. ```; mmseqs createdb test.fasta test; mmseqs search test test res /tmp/res/ -a; mmseqs convertalis test test res res.tsv; ```. The output is . ```. 0000_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; ```. Unexpected Behavior 3:; There is a sequence length limitation in MMseqs2. With 6-mer spaced it needs at least 13 residues to detect a hit, w/o spacing just 12.; I can run this example 3 without any error message.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229:202,test,test,202,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229,6,['test'],['test']
Testability,"Hi @martin-steinegger , sorry for late response. Well, I agree with you about gap costs and diversity of the profiles, but it is just to attend more flexibility of options, for example, commonly blast has fixed gap costs if the user really wants to use same gap costs it's possible. . Well, I did not do anything so hard to benchmark, I'm send you the script I did, I also may send you the database, query and results, but I think the parameters I used is enough. [scripts.zip](https://github.com/soedinglab/MMseqs2/files/2249981/scripts.zip). If you want all analysis just tell me and I send ASAP.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-409606023:324,benchmark,benchmark,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-409606023,1,['benchmark'],['benchmark']
Testability,"Hi @martin-steinegger , thanks! Let me know if you need additional test sets, just in case. Cheers",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394613434:67,test,test,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394613434,1,['test'],['test']
Testability,"Hi @martin-steinegger ,; many thanks for this update. From our first tests we see a clear improvement in this scenario and we are now able to find more exact matches with MMSeqs2 than before and even compared to Diamond.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566:69,test,tests,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566,1,['test'],['tests']
Testability,"Hi @milot-mirdita ,; thanks for the reply, we are still testing the different options, for the moment we have seen a small improvement adding these parameters (e.g. we are able to find exact matches for 10-15 more sequences). . I have put online the almost 500 sequences for which we completely miss the exact match against themselves. You can download the Fasta file from here: https://www.dropbox.com/s/jf88389zuj2nddn/missed_exact_matches_mmseqs2.fasta.gz?dl=0. These are part of the UniRef90 2018_04 release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168:56,test,testing,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168,1,['test'],['testing']
Testability,"Hi @milot-mirdita . I was needing more than one hit per query. Actually, I was trying to find domains/regions with a high score but since I have a lot of multidomain proteins I need all high score local alignments. So I remove redundancy at 30% of identity, searched all against all, I have removed self-matches and choose hits with very low e-value. I preferred to do this externally to MMSeqs. Now I'm clustering these regions. . Anyway, I did test those commands anyway. ```; mmseqs filterdb pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.top1 --extract-lines 1; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN.top1 pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU -c 0 -e 1e-10 --threads 40 --max-seqs 300 --kmer-per-seq 80 -s 7.5 -a; mmseqs createtsv pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU pbps.neighbors.rep30.ALN.SEQ.CLU.tsv; ```. Also, I did use coordinates of matches in target and extract with any other sequence manipulation tool. ```; mmseqs createdb pbps.neighbors.regions.fa pbps.neighbors.regions.DB; mmseqs cluster pbps.neighbors.regions.DB pbps.neighbors.regions.CLU /tmp/ --threads 40 -c 0.8 --min-seq-id 0.8; mmseqs createtsv pbps.neighbors.regions.DB pbps.neighbors.regions.CLU pbps.neighbors.regions.CLU.tsv --threads 40; mmseqs result2repseq pbps.neighbors.regions.DB pbps.neighbors.regions.CLU pbps.neighbors.regions.CLU.REP ; ln -s pbps.neighbors.regions.DB_h pbps.neighbors.regions.CLU.REP_h ; ln -s pbps.neighbors.regions.DB_h.index pbps.neighbors.regions.CLU.REP_h.index ; mmseqs cluster pbps.neighbors.regions.CLU.REP pbps.neighbors.regions.CLU.REP.CLU tmp -c 0 -e 1e-10 --threads 40 --max-seqs 300 --kmer-per-seq 80 -s 7.5 -a ; mmseqs createtsv pbps.neighbors.regions.CLU.REP pbps.neighbors.regions.CLU.REP.CLU pbps.neighbors.regions.CLU.REP.CLU.tsv --threads 40 ; mmseqs createseqf",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499589040:446,test,test,446,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499589040,1,['test'],['test']
Testability,Hi @milot-mirdita and @martin-steinegger thanks for the answers! Just for the records we had already previously tested this step also on instances having 2 local NVMe disks mounted in RAID 0 and the performance was similar. We will keep this requirement in mind and try to run the ```createdb``` step on a larger disk array whenever possible.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426712115:112,test,tested,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124#issuecomment-426712115,1,['test'],['tested']
Testability,"Hi @salvoc81, could you post a full log of both runs (on both AMD and Intel)? I am not sure how to tackle this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879736667:36,log,log,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-879736667,1,['log'],['log']
Testability,"Hi Ivan,; I see the mistake, please use the `--filter-msa` parameter as a workaround. I will take a closer look at the issue either tomorrow or next week. You could also change line 349 in result2profile.cpp to:. ```; if (par.filterMsa == false || res.keep[i + 1]) {; ```. that should also fix it. Didn't test it however.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/36#issuecomment-311753617:305,test,test,305,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36#issuecomment-311753617,1,['test'],['test']
Testability,"Hi Jaime,. I added this feature to my dev branch. I will merge it into the main branch as soon as my branch is tested and stable. Best,. Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/21#issuecomment-282720604:111,test,tested,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/21#issuecomment-282720604,1,['test'],['tested']
Testability,"Hi Martin, I've uploaded a log file; Thanks and best regards,; ---sram. On Wed, Sep 25, 2019 at 3:31 PM Martin Steinegger <notifications@github.com>; wrote:. > Could you please provide the log? Thanks a lot.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/231?email_source=notifications&email_token=AK464H2SUC6W7QLCGBNFZYTQLOVBDA5CNFSM4I2QI5W2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7S4VBI#issuecomment-535153285>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AK464H3GZ5NC2367YT3Y5Z3QLOVBDANCNFSM4I2QI5WQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997:27,log,log,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535220997,2,['log'],['log']
Testability,"Hi Martin,. Here is a logfile for one of the samples that I ran. I had to remove all the ""="" signs printed in it (as indicator of progress) because otherwise it increased the file size to ~13GB. Please let me know if I am using mmseqs correctly or if there is some other trick to speed it up... regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Sunday, June 30, 2019 6:46:32 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). It would help if you could provide a log file. So I can see which module is slow. The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode). —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOQNQW6KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; T",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:22,log,logfile,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['log'],"['log', 'logfile']"
Testability,"Hi Martin,. I just redo the experiment and the result is the same.; I am using static mmseqs with SSE4 with version 9827e74c1e12875f9201302fc8693565c4a973de. Attached is the running log. <pre><code>; Program call:; read.query nr.mmseqs resultDB result.m8 . MMseqs Version: 	9827e74c1e12875f9201302fc8693565c4a973de; Alignment Format	0; No preload 	false; Early exit 	false; Database Output 	false; Threads 	24; Verbosity 	3. Query Header file: read.query_h; Target Header file: nr.mmseqs_h; Alignment database: resultDB; Start writing file to result.m8; Invalid database read for database data file=Invalid database read for database data file=read.query_h, database index=read.query_h, database index=read.query_h.index; getData: local id (4294967295) >= db size (1293676); read.query_h.index; getData: local id (4294967295) >= db size (1293676); </code></pre>. For the infile and queryfile, I am sorry that I may not be able to provide them. But I have performed the experiment with the same settings and commands successfully on another machine with 64GB. But it failed on a machine with 192GB. Not sure whether that matters. Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-367360921:182,log,log,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-367360921,1,['log'],['log']
Testability,"Hi Martin,. Yes. I have a set of query files, each with around 10-15 million reads and a database which has ~130 million sequences. The index file generated by the createindex step is about ~ 400GB in size. The computer I am running this on has around 1.5 TB of RAM so reading this index into memory should not be an issue. However, when I run the search with and without the --db-load-mode 3 option (i have also tried --db-load-mode 2), it does not make any difference to the run time. In both cases it takes around 8-9 hours to run through all samples. My question is, am I doing the loading into memory correctly? Are there any other options I should be using to speed this up?. I ran the steps thru a script for automating it, so I do not have the logfiles for the run (I wrote it to /dev/null). I can re-run it to generate the logfiles, but it would take some time. regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, June 27, 2019 11:12:08 AM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @dhwanidesai<https://github.com/dhwanidesai> so you perform millions of read searches against the refseq database at once right? Could you please provide an output log of your run? It would help me to understand whats the bottleneck in your analysis. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDNCCSMRV4UUFPSIJATP4TDDRA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYXH2VA#issuecomment-506363220>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMDQO3HG6TKBCVH5STP4TDDRANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506719911:752,log,logfiles,752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-506719911,3,['log'],"['log', 'logfiles']"
Testability,"Hi Martin,; I use MMseqs2 Version: 8f44a3195116bd6932f559805a86b93b0e41da71-MPI; I ran a test on subdb of 5 clusters and it worked perfectly (without MPI). I then tried to run on a large dataset with MPI on IBM Platform LSF, it seems like it is finished but did not merge back the files, is there a way to do it manually?. Also, what whould be the best way to check that it is really done? (I counted nulls and got the amount of clusters I used and looked at the last cluster printed out and it looks fine...)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-419714475:89,test,test,89,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/113#issuecomment-419714475,1,['test'],['test']
Testability,"Hi Martin,; I'm still having the same issue. ### Expected Behavior; MMSEQS2 should return some hits when setting -c in iterative searches (profile vs sequence db). ### Current Behavior; MMSEQS2 returns 0 hits when setting `--cov-mode 0` and a coverage threshold higher than `-c 0.2`. Using different coverage modalities (`--cov-mode 1` or `--cov-mode 2`) works fine. ### Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta queryDB; mmseqs createdb DB.fasta targetDB; mmseqs search queryDB queryDB query_aln tmp --num-iterations 3 --threads 8 -e 1e-05 ; mmseqs result2profile queryDB queryDB query_aln query_profile; mmseqs search query_profile targetDB resultsDB tmp --num-iterations 2 -e 1e-5 -c 0.4. ### MMseqs Output (for bugs); LOG file: mmseqs_171018.log; here https://gist.github.com/ChiaraVanni/817d1fef14aaefce1de6c090e1652f3c. ### Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **6f1beb2116a7bddad13d1eea994dbdfce303fd79**; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.10.12 and gcc version 5.4.0; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Running in a machine with 80 cores and 2Tb; Operating system and version: Linux 4.9.0-8-amd64 x86_64, Debian GNU/Linux 9",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-430679224:739,LOG,LOG,739,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-430679224,2,"['LOG', 'log']","['LOG', 'log']"
Testability,"Hi Martin,; Sorry for the delay, I have finally tested it and it works like a charm! Thank you very much. Simone",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-495530220:48,test,tested,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-495530220,1,['test'],['tested']
Testability,Hi Martin; maybe this is related to this issue but we have seen similar behavior when we are running more than one mmseqs2 instance per cluster node in an array job for example. We also tried to run them in `/dev/shm` instead of the local scratch but we observed the same slow searches. I will ask @ChiaraVanni to send some logs. Thanks; Antonio,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-509361453:324,log,logs,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-509361453,1,['log'],['logs']
Testability,"Hi Martin; now seems to work, the `result_db` contains the hits, but in the log MMSEQS2 still report:; ```; All sequences processed. 0 alignments calculated.; 0 sequence pairs passed the thresholds (-nan of overall calculated).; 0 hits per query sequence.; Time for processing: 0h 0m 1s 872ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-428531488:76,log,log,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-428531488,1,['log'],['log']
Testability,Hi Martin; thank you very much for the quick fix! We will test it now. Cheers; Antonio,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556931:58,test,test,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556931,1,['test'],['test']
Testability,"Hi Milot, thanks for your fast response. The option --pernode is deprecated in openmpi-1.10.3, the recommended option is: ppr:n:node. > -npernode, --npernode <#pernode>; > On each node, launch this many processes. (deprecated in favor of --map-by ppr:n:node) ; ; I'm using machines with 4 sockets and 8 cores+HT per CPU. To keep it simple I'm trying to make it run in just one of them. Following Hristo Iliev comments in https://stackoverflow.com/questions/28216897/syntax-of-the-map-by-option-in-openmpi-mpirun-v1-8 , this is my mpicmd:. ```; #!/bin/bash; mpirun --np 1 --report-bindings --map-by ppr:1:socket:pe=8 --bind-to core ""$@""; ```; And this is my launch script:. ```; #!/bin/bash; rm -rf tmp; mkdir tmp; ldd /ngs/software/mmseqs/mmseqs-MPI; ./mpicmd /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 8; ```. This should run 1 instance of mmseqs with 8 threads assigned to 1 socket.; This is the std output:; ```; 	linux-vdso.so.1 => (0x00007ffe4cf8f000); 	libmpi_cxx.so.1 => /usr/lib64/openmpi/lib/libmpi_cxx.so.1 (0x00002b8050f24000); 	libmpi.so.12 => /usr/lib64/openmpi/lib/libmpi.so.12 (0x00002b805113f000); 	libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00002b8051423000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b805172c000); 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00002b8051a2e000); 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002b8051c54000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b8051e6a000); 	libc.so.6 => /lib64/libc.so.6 (0x00002b8052086000); 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00002b8052447000); 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00002b80526c4000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b8052968000); 	librt.so.1 => /lib64/librt.so.1 (0x00002b8052b6c000); 	libutil.so.1 => /lib64/libutil.so.1 (0x00002b8052d74000); 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00002b8052f77000); 	/lib64/ld-linux-x86-64.so.2 (0x00002b8050d02000); 	libn",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:805,test,testDB,805,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,3,['test'],"['test-', 'test-nr-', 'testDB']"
Testability,"Hi Milot,. I just tested it, and it works nicely. . Thanks a lot!!. Stijn",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/360#issuecomment-706502242:18,test,tested,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/360#issuecomment-706502242,1,['test'],['tested']
Testability,"Hi Milot,; This is the log:. ```; MPI Init...; Rank: 0 Size: 1; Program call:; all_genomes.genes.db all_genomes.genes.db all_genomes.genes.clu4.db all_genomes.genes.clu4.profile.db . MMseqs Version: 	9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf; Sub Matrix 	blosum62.out; Profile e-value threshold 	0.001; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	false; Early exit 	false; Threads 	56; Verbosity 	3. Compute split from 0 to 6159847; Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; ..............................................................................................................................................................	2 Mio. sequences processed; ...	1 Mio. sequences processed; ............................	4 Mio. sequences processed; ............................................................	3 Mio. sequences processed; .....................................................................	5 Mio. sequences processed; .............................	6 Mio. sequences processed; ......................................................................................................................................................................................................................................................................Time for merging files: 0 h 0 m 21 s Time for merging files: 0 h 13 m 43 s. Done.; Time for merging files: 0 h 0 m 1 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 2 h 53 m 18s; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-372102321:23,log,log,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-372102321,1,['log'],['log']
Testability,"Hi Ryan, . Could you please delete and recreate the tmp folder for linclust, run it again and post the log?; It seems like there was already some broken output from a run before there and that is now masking the issue. We will try to improve the tmp folder handling in the future, sorry about that. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282401035:103,log,log,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282401035,1,['log'],['log']
Testability,"Hi Ryan,. I updated the readme, it looks like you are using clang, which won't support OpenMP:. > Please install and use gcc from Homebrew, if you want to compile MMseqs2 on MacOS. The default MacOS clang compiler does not support OpenMP and MMseqs2 will not be able to run multithreaded. Use the following cmake call:; > ; > CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. Not sure about the verbosity issue. Can you post the whole log?. Edit: Also please do not use the same folder (**.**) for the tmp folder, make a separate empty one.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760:479,log,log,479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760,1,['log'],['log']
Testability,"Hi Silas,; Thanks for your interest in this feature. We are working on this module. Everything is technically implemented, but the tests show that the sensitivity is not yet good enough. We will keep you updated in the next weeks about the progress on this. Cheers,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009:131,test,tests,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009,1,['test'],['tests']
Testability,"Hi all!. Thank you again for the mmseq2 software and the detailed explanation in the documentation. I would like to get some advice on running CDHIT2 within MMseq2. #recommendation-To suppress fragments from becoming representative sequences, it is recommended to use --cluster-mode 2 in conjunction with --cov-mode 1; `~/miniconda3/bin/mmseqs cluster ${OUT_DIR}/testplasmidDB ${OUT_DIR}/testplasmidDB_cdhit_clu ${TMP1}/ --cluster-mode 2 --cov-mode 1 -c 0.8`. Based on the recommendation in the documents folder, I should use --cov mode 1 with --cluster-mode 2 (CDHIT2-based clustering). Is this understanding correct?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/734:363,test,testplasmidDB,363,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/734,1,['test'],['testplasmidDB']
Testability,"Hi all,. I was trying for the first time to run MMseqs to assign taxonomy. Just to test it I used a set of short reads as input and tried to annotate it against the uniref100 db. Everything works fine but I'm having problems in the last step of the process. ## Expected Behavior. ` mmseqs taxonomy readsDNA10 uniref_db result /tmp -s 6 `. should generate a result file with the assigned taxonomy. ## Current Behavior. MMseqs Version: 60b77df37df55c3984870760591facbb361c3939; ORF filter 1; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Taxonomy output mode 0; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace false; Alignment mode 1; Alignment mode 0; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Compositional bias 1; Max reject 5; Max accept 30; Include identical seq. id. false; Preload mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 6; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask residues probability 0.9; Mask lower case residues 0; Minimum diagonal score 15; Selected taxa; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/669:83,test,test,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/669,1,['test'],['test']
Testability,"Hi all,. if I run the following `mmseqs taxonomy` command I get for my protein sequence the `Clostridium AM magnum` hit. ```; mmseqs taxonomy queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies -c 0.8 --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28 --blacklist """". mmseqs createtsv queryDB 14_First_11_21_S2_binned.gtdb.taxresults.database test.taxonomy.tsv --threads 28; ```. test.taxonomy.tsv output:; ```; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 30313 species Clostridium AM magnum Bacteria;Bacillota A;Clostridia;Clostridiales;Clostridiaceae;Clostridium AM;Clostridium AM magnum;uc_Clostridium AM magnum; ```. If I repeat the same with `mmseqs search` I get following hits:. ```; mmseqs search queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28; mmseqs convertalis queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz mmseqs.out.tsv; ```. mmseqs.out.tsv output:; ```; uery target pident alnlen mismatch gapopen qstart qend tstart tend evalue bits qlen tlen qcov tcov; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_JH601103.1_106 88.200 163 19 0 1 163 1 163 1.803E-90 301 164 164 0.994 0.994; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FMWM01000002.1_685 49.700 154 76 0 7 159 5 158 6.046E-36 144 164 170 0.933 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FLQT01000003.1_544 49.200 154 77 0 7 159 5 158 2.131E-35 143 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_LT707417.1_163 49.100 154 77 0 7 159 5 158 2.921E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 JAEXBU010000001.1_1 49.000 154 78 0 7 159 5 158 4.002E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:204,test,test,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,4,['test'],['test']
Testability,"Hi everyone,. ## Expected Behavior. I would to construct clustering or align sequences with `cluster` or `search`. I'm following the example of [uniclust](https://github.com/soedinglab/uniclust-pipeline/blob/master/uniclust_workflow.sh) to create different family. . ## Current Behavior. When I try to align my sequences from a subdatabase, the `prefiler` stay at the `index table : fill` step. At the begin I though to a memory problem, because my code work on a little dataset (100 000 proteins) but not on biggest (3 billions). So I add `--split-memory-limit`. On one test it was working but not on the other (maybe by chance). . ## Steps to Reproduce (for bugs). `mmseqs prefilter $DB_name $DB_name ""$TMP/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32. mmseqs align $DB_name $DB_name ""$TMP/pref"" ""$TMP/align"" -c 0.8 --alignment-mode 2 --min-seq-id 0.8 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647. mmseqs clust $DB_name $DB_name ""$TMP/align"" ""$TMP/clust"" --cluster-mode 0 --threads 32. awk '{ print $1 }' ""$TMP/clust.index"" > ""$TMP/clust_order"". mmseqs createsubdb ""$TMP/clust_order"" $DB_name ""$subDB"". mmseqs prefilter ""$subDB"" ""$subDB"" ""$TMP2/pref"" --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 5 --split-memory-limit 250G --threads 32. mmseqs align ""$subDB"" ""$subDB"" ""$TMP2/pref"" ""$TMP2/align"" -c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 --threads 32 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647`. ## MMseqs Output (for bugs). MMseqs Version: 8ea08f0c75b9f08049fd8f01eb65f90d6fbdd93d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 300; Split database 0; Split mode 2; Split memory limit 250G; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exac",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382:571,test,test,571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382,1,['test'],['test']
Testability,"Hi mmseq team,. I need some help in updating a previous mmseq based (near complete) clustered db (A) with additional sequences (B). My mmseq run for A, using easy-cluster, timed out at the stage of moving result files and deleting temporary files, a log and resulting files list is attached.; [mmseq.earthbiome.fna.2tb.log.gz](https://github.com/soedinglab/MMseqs2/files/5187248/mmseq.earthbiome.fna.2tb.log.gz); [resultfiles.txt](https://github.com/soedinglab/MMseqs2/files/5187249/resultfiles.txt). Now I have additional sequences as set B that I want to use to update set A to perform clustering and updating the final database. mmseq GitHub documentation says about updating a database as:. mmseqs createdb DB_trimmed.fasta DB_trimmed; mmseqs cluster DB_trimmed DB_trimmed_clu tmp. To update the clustering DB_trimmed_clu with the new version of your database DB_new:. mmseqs createdb DB.fasta DB_new; mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_new_updated DB_update_clu tmp. My worry is if If I cluster bigger dataset A again, it will take quite a few days, as in the last case the job was terminated on a 3 Tb memory machine after 7 days, without completing the last step of moving results and deleting temp files. In summary I need help in 1. saving or moving important result files and safely remove temporary files. and 2. a correct way of updating and clustering my dataset B with database A. Many Thanks,. IA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348:250,log,log,250,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348,3,['log'],['log']
Testability,"Hi there, . I encountered a weird behavior when trying to run createdb on an HPC cluster (see below). It looks like machines with less than <= 64GB RAM are unable to run createdb properly while higher RAM machines are (the input file is attached). Does it make sense or maybe I'm missing something? What are the minimum RAM requirements for running mmseqs2 (couldn't find it in the program docs)? Btw, these 2 machines use the same storage so it shouldn't be the issue. I appreciate your assistance. Thanks!. This is the exact command I'm trying to run:; [64GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 561ms; Illegal instruction. [128GB RAM machine]$ mmseqs createdb ~/test/outputs/01_ORFs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt ~/test/outputs/02_dbs/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic -v 3. MMseqs Version: 	3513001d33301f7eaaf58e60a1376488ff017354; Database type 	0; Shuffle input database	true; Createdb mode 	0; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [6162] 0s 651ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic_h: 0h 0m 0s 356ms; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic: 0h 0m 0s 489ms; Database type: Nucleotide; Time for merging to GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.lookup: 0h 0m 0s 14ms; Time for processing: 0h 0m 1s 861ms. [GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt](https://github.com/soedinglab/MMseqs2/files/4609960/GCF_000481805.1_Pseu_aeru_JJ692_V1_genomic.01_ORFs.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310:593,test,test,593,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310,4,['test'],['test']
Testability,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97:274,log,log,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97,3,['log'],['log']
Testability,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25:32,test,tests,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25,5,['test'],"['test', 'tests']"
Testability,Hi! I didn't test search anymore. Now I'm using only clustering with MMSeqs 2. But I've done several searches before with this result and didn't do anything with mmseqs installation. My version is 1-c7a89.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988:13,test,test,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988,1,['test'],['test']
Testability,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250:1083,log,logo,1083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250,1,['log'],['logo']
Testability,"Hi, . I'd wish to use clusthash for a quick clustering of protein sequences. . On the principle it works fast and fine, but after processing the clusthashdb files with createseqfiledb I get an inconsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:644,test,test,644,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:400,log,log,400,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167,4,['log'],['log']
Testability,"Hi, Did you find a solution for this? I am after a similar output as I am keen for more taxnomy information and looking to filter the results based a on a taxID. However I am getting the same error as well. Any suggestions would be appreciated. ```; mmseqs convertalis T25_hifi_norm $NR_DB T25_hifi_norm_results test; convertalis T25_hifi_norm ncbi_nr T25_hifi_norm_results test. MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	4; Compressed 	0; Verbosity 	3. Input database ""T25_hifi_norm_results"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307:312,test,test,312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307,2,['test'],['test']
Testability,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:392,log,log,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555,1,['log'],['log']
Testability,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210:366,log,log,366,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210,1,['log'],['log']
Testability,"Hi, We are using mmseqs2 for the protein sequence clustering and it has been great! ; However, recently, we found for one of the fasta files we tried to cluster, the total input sequence number does not match the cluster output (the members). ; When looking at the log, we found there are some sequences got truncated, which may have cause the problem? ; Do you have any suggestion on why this occur and which parameters we could try to fix the issue? Also, the input fasta file is already de-replicated. ; Attached is the run log for mmseq2. ; [log_clu.txt](https://github.com/soedinglab/MMseqs2/files/4382578/log_clu.txt); Thank you very much!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291:265,log,log,265,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291,2,['log'],['log']
Testability,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:156,test,testing,156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513,1,['test'],['testing']
Testability,"Hi, while benchmarking your tool I came across an issue clustering with `--cov-mode 1`. Clusterable pairs remain in the representative set that should be found by the search workflow. Steps to reproduce this using release 14 and the astral95 set (http://scop.berkeley.edu/downloads/scopeseq-2.08/astral-scopedom-seqres-gd-sel-gs-bib-95-2.08.fa):. ```; mmseqs cluster astral95 out . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; # self-search the representatives; mmseqs search reps reps reps.self . --cov-mode 1 -c 0.8 --max-seqs 1000 --threads 64 -s 6.0; mmseqs convertalis reps reps reps.self reps.self.tsv; awk '{ if($1!=$2) print }' reps.self.tsv | wc -l; 1231; ```. Running the same command lines using release 11 and `--cluster-mode 2` results in 9 hits instead of 1231. Looks like a bug or am I not understanding something?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/664:10,benchmark,benchmarking,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/664,1,['benchmark'],['benchmarking']
Testability,"Hi,. After update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:392,log,log,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,1,['log'],['log']
Testability,"Hi,. I really like Linclust, which makes it possible to cluster genes within linear time. For my dataset with 1.1G genes, it seems impossible to get it done by using CD-HIT. Linclust opens a door to cluster genes at this scale. After couple of trials, I have a little concern with the sensitivity. First, I used Linclust to cluster my genes. Around 1.2% genes were reduced. This ratio seems a little low compared to the results by CD-HIT, which reduced ~10% genes.; Then I splited the results of Linclust and used CD-HIT to double check the results. To my suprise, a further ~9.5% genes were reduced. So it seems the sensisitivity of Linclust may be an issue. I wondered if there is a way to improve sensitivity. The commands I have tested are as follows. I tried to adjust --kmer-per-seq to 80. The results were exactly the same with the default value. BTW, average protein length is 110aa. Appreciate. mmseqs linclust all_protein_merge_95.db all_protein_final_95 tmp --threads 100 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 1T&& \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_rep.fasta. mmseqs linclust all_protein_merge_95.db all_protein_final_95_m80 tmp --threads 50 --cov-mode 1 -c 0.9 --min-seq-id 0.95 --cluster-mode 2 --split-memory-limit 600G --kmer-per-seq 80 && \. mmseqs createsubdb all_protein_final_95 all_protein_merge_95.db all_protein_final_95_m80_rep && \. mmseqs convert2fasta all_protein_final_95_rep all_protein_final_95_m80_rep.fasta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365:733,test,tested,733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365,1,['test'],['tested']
Testability,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:784,benchmark,benchmarking,784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333,2,['benchmark'],"['benchmark', 'benchmarking']"
Testability,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:933,test,test,933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,2,['test'],['test']
Testability,"Hi,. So last night I deleted the folder which contained the package and compiled; it again without using any comes environment, and I didn't have any issues,; however the issue still persists. I was doing small tests using an; interactive sessions using 4 cores, and the jobs always were killed with; signal 9. For what I found in the internet that happens when I run out of; memory, will that be the case?. Francisco. On Tue, May 18, 2021, 6:46 AM Milot Mirdita ***@***.***>; wrote:. > Do you have more details what went wrong with the MPI build? We didn't; > have any recent issues with it.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843100327>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AMXRGM7YLDLFT2TOJ5NVU73TOJHRFANCNFSM45B6ZNIQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843135326:211,test,tests,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843135326,1,['test'],['tests']
Testability,"Hi,. There is nothing logically wrong with your script, however there are a couple of parameters whose default value is different from the value set by the easy-rbh workflow. One of them is the sensitivity/speed tradeoff `-s`, which is set by the easy-rbh to 5.7 (highly sensitive) but defaults to 4 when calling the rbh module directly. When I re-ran your rbh command as follows:; ```mmseqs rbh UP000000425_122586_protein UP000000429_85962_protein alnOffseted.db tmp -s 5.7```; I could get it to produce 590 results, as in the easy-rbh workflow. So what should you do now?; Try to examine the results using different sensitivity values (maybe even lower than 4). If lower sensitivities cover your need (e.g., in cases of close homologs), then you can use this parameter to speed up your code even more. Another thing:; I see that the easy-rbh also differs from two consecutive calls to createdb, followed by a call to rbh because of the `shuffle` parameter. In this specific case, changing this parameter (w/out changing `max-seq`) does not have an effect (i.e., I could get the number of results to change only through `-s`), but maybe @milot-mirdita has some good advice on how to set this parameter in the case of DYI-rbh. Milot, in the easy-rbh, it seems like the parameter setting is having a hard time as it gives the following warnings:. > Shuffle database cannot be combined with --createdb-mode 0; > We recompute with --shuffle 0; > Converting sequences; > Multiline fasta can not be combined with --createdb-mode 0; > We recompute with --createdb-mode 1. Maybe it is worth checking.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1819653848:22,log,logically,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1819653848,1,['log'],['logically']
Testability,"Hi,; I want to run ""mmseqs easy-rbh"" on all pairs of a large dataset of genomes (let's say 100 genomes, so 10,000 pairs). I tested on 1 pairs and it took 27 seconds to run. I thought to use the modules instead of the easy workflow to make it faster - what I did is:; mmseqs createdb <protein_fasta1>; mmseqs createdb <protein_fasta2>; mmseqs rbh <protein_fasta1_db> <protein_fasta2_db> alnOffsettedDB tmpDir; mmseqs convertalis <protein_fasta1_db> <protein_fasta2_db> alnOffsettedDB output_m8. The advantage of this is that I do only once the ""createdb"" operations for all genomes. And indeed, the rbh+convertalis commands took 17 seconds to run, which is faster than 27 seconds, and very significant when multiplied by 10,000 genome pairs. But the problem is that the outputs are different - the output of ""easy-rbh"" had 100 more pairs than the output of my implementation. Can you please help me fix my implementation? or explain how to use the easy-rbh but with pre-computed databases?. thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777:124,test,tested,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777,1,['test'],['tested']
Testability,"Hi,; Thanks for your quick response.; I've attached cmake.log and make.log . This is the output while running under gdb:; ```; Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0. Program received signal SIGFPE, Arithmetic exception.; 0x000000000052c00c in Prefiltering::estimateMemoryConsumption (split=0, dbSize=121935717, resSize=44976760168, maxHitsPerQuery=300, alphabetSize=21, kmerSize=7, threads=64); at /root/MMseqs2/src/prefiltering/Prefiltering.cpp:910; 910	 size_t dbSizeSplit = (dbSize) / split;; ```. And this is the backtrace:; ```; #0 0x000000000052c00c in Prefiltering::estimateMemoryConsumption (split=0, dbSize=121935717, resSize=44976760168, maxHitsPerQuery=300, alphabetSize=21, kmerSize=7, threads=64); at /root/MMseqs2/src/prefiltering/Prefiltering.cpp:910; #1 0x000000000052785c in Prefiltering::Prefiltering (this=0x857d90, queryDB=""mmseq-testDB"", queryDBIndex=""mmseq-testDB.index"", targetDB=""/junk/databases/mmseqs/nr"", ; targetDBIndex=""/junk/databases/mmseqs/nr.index"", outDB=""/root/tmp/blast/tmp/pref_4"", outDBIndex=""/root/tmp/blast/tmp/pref_4.index"", par=...) at /root/MMseqs2/src/prefiltering/Prefiltering.cpp:154; #2 0x000000000052679e in prefilter (argc=39, argv=0x7fffffffdff8, command=...) at /root/MMseqs2/src/prefiltering/Main.cpp:38; #3 0x00000000004bf4e0 in runCommand (p=..., argc=39, argv=0x7fffffffdff8) at /root/MMseqs2/src/mmseqs.cpp:330; #4 0x00000000004bf82c in main (argc=41, argv=0x7fffffffdfe8) at /root/MMseqs2/src/mmseqs.cpp:381. ```. [make.log.txt](https://github.com/soedinglab/MMseqs2/files/996247/make.log.txt); [cmake.log.txt](https://github.com/soedinglab/MMseqs2/files/996248/cmake.log.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301075155:58,log,log,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301075155,9,"['log', 'test']","['log', 'testDB']"
Testability,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/57:17,log,log,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57,4,['log'],['log']
Testability,"Hi. ## Expected Behavior; When using `taxonomy` to annotate a contig, mmseqs2 should gracefully exit if there are not hits when doing the search; ## Current Behavior. At the moment it exits with an error when `Query database size: 0` ; Full log [here](https://gist.github.com/genomewalker/e5b05deb965660e275a39a8153dab9e9); ```; Query database size: 0 type: Aminoacid; Estimated memory consumption: 151G; Target database size: 43032414 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 43.03M 4m 11s 993ms; Index table: Masked residues: 327874438; Index table: fill; [=================================================================] 43.03M 11m 31s 69ms; Index statistics; Entries: 10015666182; DB size: 67075 MB; Avg k-mer size: 7.824739; Top 10 k-mers; DFEQLPH	65289; NVPGWSP	65148; FRYAFPS	64963; RYYVLGW	64817; VDRLNTQ	63812; WRLDFLN	62949; TVDGDFS	62609; NKTDFVQ	61859; QDWVQIP	61316; LDGAYVP	59471; Time for index table init: 0h 16m 9s 488ms; Time for processing: 0h 16m 22s 538ms; lcaalign /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/orfs_filter DB/uniref50-tax/UniRef50 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/tmp_hsp1/16551820070899017371/pref_0 /dev/shm/tmp/contig-taxonomy/e77760e07c3167ef94f937365175d68b.tax.UniRef50/12595762918832005520/taxonomy_tmp/13584421311535647719/tmp_taxonomy/4936078414881223269/first --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 1 --alignment-output-mode 0 --wrapped-scoring 0 -e 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 5 --max-accept 30 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/433:241,log,log,241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/433,1,['log'],['log']
Testability,"Hi. I am having some strange behavior when using the easy-taxonomy with a query with only one contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:228,log,log,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,2,['log'],['log']
Testability,"Hi. I was trying to search single queries against NCBI NR just for test. ; Somehow, I got just a few results ~450 results by a query. The point is, the lowest e-value is too low ~1e-50. I've got no error message. Then, I think I'm doing something wrong in `createindex`.; Probably I need to change some parameters as `--max-seqs`. For example, I used this query:; ```; >WP_066948057.1 AAA family ATPase [Microtetraspora fusca]; MRKVPLPEPVSAALTDALDQLRLAVEDLHFGLDIPGAEEARKAQAAVLAQLEDYVIPRVHMSTAPALIVVAGSTGAGKST; LVNTLAAQRVSTTGVRRPTTGTPVLVCHPDDHEWFAEGDLLGGLTRLERPVEGVGTDSVVLSTTERLPPGVALLDTPDID; SVVEEHHEIAHRMLDAADMWVFVTTASRYADAPSWNLLRLAKERGARLVIVLSRVPEKSRDVIVKHFGRMLDEYGLADAE; RFVIKETTVTEGRLPDKEVSELRMWLAHLSVDDERRAAAVRTTLNGVLDSFRNRVPALARHLETQVALRADLRSDVDAAY; MGALADIDEATRNGSLLRGEVLARWQDFAGSGDLIRTLQLRRGGKGGQRGPQRARALRTAIRNALESVINSAAERAAEEV; VVRWRQRAGAGDRLAATPGLGRSSDEATQRTSRAIGAWQDHVTELIRTEGVTKRSVARLVSFDVESLALIFTVSLLGYGA; TDVSSGRGAGALPQRLLRALLGAESLRNISAKARSDLRARIGMVFDEETLRYVDELDGAGIPDEAAATRLYQATYNLEVA; R; ```. The NR was prepared with; ```; mmseqs databases NR nr tmp; mmseqs createindex nr tmp; ```. And the search was performed like this; ```; mmseqs easy-search query.fa nr result tmp; ```. The same query with blastp has returned me 5000 results using `-max_target_seqs 5000`. https://github.com/soedinglab/MMseqs2/wiki#disk-space. Do I need to change the parameters in `createindex` ?. I'd like to maximize the number of results for a e-value threshold. As returning all results down to 1e-3 of e-value or other value I choose. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/300:67,test,test,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/300,1,['test'],['test']
Testability,"Hi. Is mmseqs deterministic? When running linclust on a large FASTA file of proteins, one would expect to get very similar clusters when rerunning the same command on the same fasta file (with default linclust parameters, with —min-seq-id 0.95 -c 0.8). Input: fasta file with ~500mio *nearly* identical sequences (size slowly incrementing, order of sequences may change). Also tested with exact same sequences where order of sequences changed. . ## Current Behavior. Notice 10-20% of clusters have changed after each run. . Version: latest daily, ubuntu 20.04, 96 core amd server. Any tricks to produce stable clusters? Kmers per seq, sorting the sequences, etc?. Many thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/663:377,test,tested,377,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/663,1,['test'],['tested']
Testability,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/158:888,log,log,888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158,1,['log'],['log']
Testability,"Hi; Kindly see the following example:; I am attaching the fasta files, the sequences contains ‘*’ stop codons as some of the sequences are pseudogenes, however the similarity that mmseqs misses is with intact genes.; The sequence cand_290 (file: macaque_oct20_input.fa.F) shares 90% sequence identity over 290 aa with OR51V1B_dog (file: all_ORs_pep_12Oct15.fa.F).; MMseqs didn’t find this similarity. I have tried several parameters. Commands:; mmseqs createdb macaque_oct20_input.fa.F macaqueDB; mmseqs createindex macaqueDB tmp; mmseqs createdb all_ORs_pep_12Oct15.fa.F all_ORsDB; mmseqs createindex all_ORsDB tmp; mmseqs search macaqueDB ../macaque_oct20/libs/all_ORs_pep_12Oct15.DB resultDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:838,test,test,838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678,1,['test'],['test']
Testability,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199:396,log,logic,396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199,1,['log'],['logic']
Testability,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198:1051,log,log,1051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198,2,['log'],['log']
Testability,"How did you do the searches? How did you create the `swissprot_human` subset?. I am surprised you are getting results at all for your test 2). The default parameters of MMseqs2 are set in such a way that you should not be able to find anything shorter than 11. The default k-mer size of 6 uses 4 non-informative spaced positions and we require a double consecutive k-mer match, meaning 11 should be the shortest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2021988973:134,test,test,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2021988973,1,['test'],['test']
Testability,"I am currently doing a benchmark on clustering algorithms, where I find that Greedy Set Cover would also hugely benefit from this option. This is in line with the guidelines, describing `--cluster-reassign` as the one solution for the cascaded clustering caveat; without this option, there is no certainty that clustering criteria remain fulfilled over multiple cascade steps due to changing representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284:23,benchmark,benchmark,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284,1,['benchmark'],['benchmark']
Testability,"I am not finding the numbers now, but I had tested the effect of multiprocessing, both by giving it between 1 and 64 cpus (with fixed 2 threads per cpu), and by giving between 1 and 8 threads on a single cpu. Neither had a notable difference with this two-sequence input. With somewhat larger batches (e.g. 60) I could see it speeding up, but with diminishing returns as Nproc > Nseq/2 or so. Parallel processing of the uniref and envdb we intend to do, as you say. Also reusing the uniref30 search (your app does it once for the MSA/monomer step and then again for the pair step, if I'm not mistaken). Thank you for the info about the NUMA setup, I'll drop that line of exploration then. For RAM - I had checked with vmtouch -v [file] and it was claiming to have all pages resident in RAM. Can't double check now with htop as all the high mem nodes are heavily used at the moment, but I can't imagine it would be reporting something different. The timing is very consistent with vmtouch, and an order of magnitude slower than when reading from disk for us.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1410382572:44,test,tested,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1410382572,1,['test'],['tested']
Testability,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:821,test,tests,821,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188,1,['test'],['tests']
Testability,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:97,test,tests,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,4,['test'],['tests']
Testability,"I assume you are running the avx2 version from the static build? If so could you run your test with the SSE4_1 version please?. We are setting up automated regression tests for every commit currently and it seems to have uncovered a regression in the avx2 version. But we observed the regression only in the profile search, not in normal sequences searches.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278741015:90,test,test,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278741015,2,['test'],"['test', 'tests']"
Testability,I consider this issue closed. Please open a new issue if you expirience further problems. ; Thanks a lot for you feedback and for benchmarking MMseqs2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-253720564:130,benchmark,benchmarking,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-253720564,1,['benchmark'],['benchmarking']
Testability,"I created a playground repository for testing mmseqs functions. Repo link: [matchy233/MMseqs-playground](https://github.com/matchy233/MMseqs-playground). In `printprofile.cpp` in that repo, I wrote the following lines to extract the profile sequences and store them in a vector:. ```c++; // reader is a DBReader<unsigned int> of DbType::HMM_PROFILE; for (size_t i = 0; i < reader.getSize(); i++); {; const char *seqData = reader.getData(i, thread_idx);; size_t querySeqLen = reader.getSeqLen(i);; seq.mapSequence(i, i, seqData, querySeqLen);; std::string realSeq;; seq.extractProfileSequence(seqData, *subMat, realSeq);; if (realSeq.length() != querySeqLen) {; Debug(Debug::ERROR) << ""Error: sequence length does not match.\n"";; Debug(Debug::ERROR) << ""Expected equence length: "" << querySeqLen << ""\n"";; Debug(Debug::ERROR) << ""Actual sequence length: "" << realSeq.length() << ""\n"";; EXIT(EXIT_FAILURE);; }; results.push_back(realSeq);; }; ```. And then print then randomly:. ```c++; Debug(Debug::INFO) << ""Randomly print profile sequences: \n"";; // randomly sample 20 sequences to print; for (size_t i = 0; i < 20; i++); {; size_t idx = std::rand() % allProfileSeqs.size();; Debug(Debug::INFO) << allProfileSeqs[idx] << ""\n"";; }; ```. I expect the extarcted profile sequences to have the same length as `querySeqLen`. However, the length of `realSeq` differs from `querySeqLen` greatly. . ## Expected Behavior. Program executes normally. 20 random extracted profile sequences get printed out. ## Current Behavior. The program failed at checking `realSeq.length() != querySeqLen`. The two values differ greatly.; Changing `extractProfileSequence()` to `extractProfileConsensus()` also causes the same erroneous behavior. ## Steps to Reproduce (for bugs). Navigate to `matchy233/MMseqs-playgrond/data` and run the following command to make a profile database:. ```shell; mmseqs createdb query_new.fasta querydb ; mmseqs databases UniProtKB/Swiss-Prot swissprot; mmseqs search querydb swissprot resultd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:38,test,testing,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,1,['test'],['testing']
Testability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:736,test,test,736,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,5,['test'],"['test', 'testCXXCompiler']"
Testability,"I found the issue, our split logic is indeed faulty and corrupting unrelated memory. ; We'll discuss the issue and try to resolve it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497726790:29,log,logic,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497726790,1,['log'],['logic']
Testability,"I generated the index files for some Uniprot databases:. ```; mmseqs createdb <databases.fasta.gz> input/targetDB; mmseqs createindex input/targetDB tmp; ```. This step has generated a bunch of ""targetDB.idx.0,1,2...14 ""(each is 52GB), and a ""targetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My quest",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:432,log,log,432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,2,['log'],['log']
Testability,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:436,test,test,436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477,1,['test'],['test']
Testability,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:130,test,testing,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367,1,['test'],['testing']
Testability,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:146,log,log,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170,2,"['log', 'test']","['log', 'test']"
Testability,I guess that `2> linclust.log 1>&2` didn't actually capture all of the output. I rerun the command. There's the log: [mmseqs_linclust.log](https://github.com/soedinglab/MMseqs2/files/3682884/mmseqs_linclust.log),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537631799:26,log,log,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537631799,4,['log'],['log']
Testability,"I guess we could remove the arm subfolder, however it's already part of the git history anyway, so it doesn't change that much anymore. It would be nice to have a repo similar to `simde-no-tests`, but I don't want these to become a maintenance burden for you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658:189,test,tests,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658,1,['test'],['tests']
Testability,I have never tested MMseqs2 with such long sequences. You could try to increase `--max-seq-len`. What is your use case? Do you want to assign shorter fragments to longer contigs?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/183#issuecomment-479130015:13,test,tested,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183#issuecomment-479130015,1,['test'],['tested']
Testability,"I have noticed that in recent versions (from v10) the number of hits generated by `search` can be substantially different when not indexing the input databases (especially the target). . It should be noted that also the execution times are substantially different. I tested most of the possibles combinations using a single CPUs, and symmarized the results in the table below: . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 7199 | 7.43 |; | b-b | 16937 | 12.30 |; | a-b | 4844 | 7.89 |; | b-a | 4963 | 10.20 |; | a*-a* | 10392 | 24.73 |; | b*-b* | 24450 | 43.13 |; | a*-b* | 8621 | 27.14 |; | b*-a* | 8710 | 38.44 |; | a*-b | 4848 | 7.86 |; | b-a* | 8710 | 37.89 |; | a-b* | 8621 | 26.79 |; | b*-a | 4963 | 10.30 |; | (single) a-b* | 8155 | 26.38 |. > *: indexed DB; > single: test in which the `--alt-ali` option was not used (it seem ok). In the above test I am using `-s 7.5`, and should be noted that the difference ar much higher when decreasing the sensitivity.; It should also be noticed that I am using the `blosom62` matrix in the filtering step. I need to run an experiment with thousands of proteomes and would impossible to store all the indexes in advance. ; It would great if you could help in mitigating the effect of non-indexing the target DBs. ## Expected Behavior; Same results (or at least not too different). ## Current Behavior; The number of hits in output are sometimes the half (at the highest sensitivity), and it gets worse at lower sensitivities. ## Steps to Reproduce (for bugs); ### Template commands:; > createdb . `mmseqs createdb <in_name> <in_name.db> -v 0` ; > indexdb . `mmseqs createindex <in_name.db> <tmp_dir_in_name> --threads 2 --search-type 1 -v 0` . > search . `mmseqs search <in_name1.db> <in_name2.db> <raw_out_1-2> <tmp_1-2> -s 7.5 --threads 1 -v 0 --search-type 1 --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --min-ungapped-score 15 --alignment-mode 2 --alt-ali 10` . > convertalis . `mmseqs convertalis <in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318:267,test,tested,267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318,3,['test'],"['test', 'tested']"
Testability,"I have run into a new issue: the UniRef90 indexing and searching having been tested on a 132GB RAM server, I tested the searching on a 64GB RAM node typical of our cluster. My first attempt consisted (retrospectively naively) in using the UniRef90 indexes created (without any --split option) on the 132GB server, which caused a crash after a useful warning `MMseqs processes needs more main memory than available.Increase the size of --split` as seen below in the first output. I therefore attempted to index the database on the 64GB RAM node directly with no explicit --split option, or by specifying`--split 6` (an explicit split is useful to index the database taking into account the fact that some of the cluster nodes have less than the 64GB RAM of the machine I'm indexing on). But this indexing fails with the second output provided below? In fact the indexing fails also without the --split option (see third output below). All tests have been carried out using a compiled mmseqs cloned from a fresh git clone. The work directory has 76TB of free space. I'm really at a loss as to what the `Could not write to data file /` error message might indicate?; - Searching with the oversized index:. ```; -bash-4.2$ mmseqs search subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 ; Program call:; subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 15;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:77,test,tested,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,3,['test'],"['tested', 'tests']"
Testability,"I have the same issue with annotating a benchmarking dataset, but out of 56k contigs it annotates only ~300.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/386#issuecomment-744325996:40,benchmark,benchmarking,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/386#issuecomment-744325996,1,['benchmark'],['benchmarking']
Testability,"I hope it would be still very useful to have an option to override `getTotalSystemMemory`. I understand there might be modules that does not have a splitting logic (either it is not implemented yet, or it simply does not make sense) a many other aspects (like the preloading). But I see these as use cases where you simply MUST HAVE enough memory to be able to do the computations (on a system with little physical memory this would lead to swapping). On the other hand, the option to override `getTotalSystemMemory` would allow me to fake the total system memory to keep reasonable memory/computation length trade-off on grid computing architecture with job scheduler.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827:158,log,logic,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827,1,['log'],['logic']
Testability,I just commited a possible fix. Could you please test if the crash still happens?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/37#issuecomment-312148125:49,test,test,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37#issuecomment-312148125,1,['test'],['test']
Testability,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/9:113,test,test,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9,7,['test'],['test']
Testability,"I just finished testing it with all the datasets (66) and experiences no crash.; Thanks a lot Milot, that was a blazing fast fix.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410724211:16,test,testing,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109#issuecomment-410724211,1,['test'],['testing']
Testability,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:237,log,logic,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,2,['log'],['logic']
Testability,I missed a few places where it could still spawn threads and deadlock.; I've added a regression test for the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/207#issuecomment-496719690:96,test,test,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/207#issuecomment-496719690,1,['test'],['test']
Testability,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1633,test,test,1633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972,1,['test'],['test']
Testability,"I searched with your example query.fasta (101mA, 10mhA) against the target.fasta (A0A021WW32, A0A021WZA4). MMseqs2 can not detect any alignments. I aligned these sequences with smith waterman and the sequence identity is <= 20%. Is this intended? Maybe you want to use profiles? . Please don't use the parameter --include-id if the query database and target database do not contain the same identifier. The --include-id is just important for clustering. The option --max-seq-id 1.0 is just needed if you try to compute profiles and you don't use profiles in this example. . Could you provide the whole dataset please? So we can test this behavior? I tried to reproduce it with some fasta files on my computer but I was not able to. . Thanks a lot for your feedback.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090:628,test,test,628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090,1,['test'],['test']
Testability,"I seem to be getting the same error when running `linclust`, but the error seems to occur during the `rescorediagonal` step. The log from my run:. ```; rescorediagonal /tmp/inclust/genes_db /tmp/genes_db /tmp/linclust_tmp/12839115596035141496/pref /tmp/linclust_tmp/12839115596035141496/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Error: Rescore with hamming distance step died; ```. My linclust job is the following:. ```; mmseqs linclust --threads 24 --min-seq-id 0.90 -c 0.9 --kmer-per-seq 50 /tmp/linclust/genes_db /tmp/linclust/clusters_db /tmp/linclust_tmp/; ```. I'm using `mmseqs2 9.d36de h76f5088_0 bioconda`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971:129,log,log,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971,1,['log'],['log']
Testability,"I should also mention that I did not get the hanging issue when I reduced sensitivity to 4. Unfortunately, I need higher sensitivity for this particular search! Here is the log:. ```; easy-search -s 7 query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp . MMseqs Version: 	15.6f452; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:173,log,log,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['log'],['log']
Testability,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:98,log,log,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['log'],['log']
Testability,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:711,benchmark,benchmark,711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193,1,['benchmark'],['benchmark']
Testability,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:119,test,test,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['test'],['test']
Testability,"I tried re-making both sequence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:264,test,tests,264,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['test'],['tests']
Testability,"I tried to cluster sequences with the header you mentioned but can not reproduce the issue. ; Is it possible for you to share the file, exact command line and log? Thank you so much.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-859674497:159,log,log,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-859674497,1,['log'],['log']
Testability,"I used the following command, where `queryDB` is a sequence database created using a fasta file with 25 sequences. ; ```; mmseqs search test/query/queryDB ../nrDB resultDB tmp --num-iterations 3 --start-sens 1 --sens-steps 3 -s 7; ```; Only three files were created as the result:; ```; 1.5M Jan 30 11:52 resultDB; 4 Jan 30 11:52 resultDB.dbtype; 392 Jan 30 11:52 resultDB.index; ```; If I do `head -n 5 resultDB` I get the following:; ```; 329161555 773 1.00 2.658E-249 0 382 383 0 382 383 383M; 121000224 437 0.538 5.873E-133 0 382 383 0 389 390 217M7D166M; 187343874 431 0.520 6.546E-131 0 382 383 0 389 390 217M7D166M; 190748379 428 0.517 5.905E-130 0 382 383 0 389 390 217M7D166M; 100067444 424 0.513 1.872E-128 0 382 383 0 392 393 219M8D80M2D84M; ```; If I do `head -n resultDB.index` I get the following:; ```; 0 0 46663; 1 46663 71880; 2 118543 58035; 3 176578 50784; 4 227362 80826; ```. I also tried searching against my `nrDB` using a profileDB, and similarly got only those three files (`resultDB`, `resultDB.dbtype`, and `resultDB.index`) as the result. Here is the command I used there:; ```; mmseqs search ../profileDB /home/scratch60/new_ndDB/nrDB resultDB tmp --start-sens 1 --sens-steps 3 -s 7 -e 0.005 -a 1; ````. I see that makes sense about `taxDB`!. Edit: also I don't know if I mentioned that I am using `MMseqs2 Version: 6672bbc9de55e89b011c8a055982a2644d31a467` which was acquired and installed in mid-January. I am running it on my university's computer cluster (Red Hat Enterprise Linux Server 7.7 (Maipo)) which I ssh into.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053:136,test,test,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053,1,['test'],['test']
Testability,I wanted to make visualization of a profile. I converted the profile to a pssm file and wanted to visualize it with e.g. weblogo. Does your pssm file follow any format definition or do I have to create the logo using a custom script?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/99:206,log,logo,206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/99,1,['log'],['logo']
Testability,"I was able to try testing this again with commit https://github.com/soedinglab/MMseqs2/commit/38ab523ae7c321bc673be8b1ed8f61d44aaf054b using the command; ```; mmseqs gff2db hits.gff3 seqdb orfsdb; ```; and I get the following warnings:; ```; No feature types given. All features will be extracted; Not enough GFF files are provided. Some results might be omitted; ```; It runs, but then segfaults after a few minutes. The head of the GFF3 file I am using is; ```; ##gff-version 3.1.26; E003084_000873 MMseqs2 CDS 126862 127041 . + 0 .; E003084_000885 MMseqs2 CDS 7237 7320 . + 0 .; E003084_000873 MMseqs2 CDS 126862 127041 . + 0 .; E003084_000885 MMseqs2 CDS 7237 7320 . + 0 .; E003084_000290 MMseqs2 CDS 216412 216618 . - 0 .; E003084_000290 MMseqs2 CDS 216412 216618 . - 0 .; E003084_000762 MMseqs2 CDS 2639 2845 . + 0 .; E003084_000381 MMseqs2 CDS 224646 225113 . + 0 .; E003084_000226 MMseqs2 CDS 1259 1411 . + 0 .; ```; which I generate from the output of `convertalis` after doing a translated search. Is this not the format I should be using? I was trying to create a minimal file based off of [this spec](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-907555049:18,test,testing,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-907555049,1,['test'],['testing']
Testability,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17:581,log,log,581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17,2,['log'],['log']
Testability,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:669,test,tests,669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['test'],['tests']
Testability,"I would like to find the closest human protein sequence for any given query. Often the query sequences are short (10aa). To test if mmseq could help with that, I created a fasta file that contains: ; 1) 10 protein sequences from the filtered swissprot dataset to include just human samples (aka, swissprot_human); 2) 10 short sequences created through sampling one segment of 10aa from the first 10 human sequences . The resulting sequences are illustrated in this [csv](https://docs.google.com/spreadsheets/d/1F_0krK2EAW-siYEheJbwTXaHUxy3gKRR9VAcY_kCHBE/edit?usp=sharing) (I couldn't upload the csv, so I am sharing a link. I hope you can access it). . You will notice that the same query sequence has a different evalue between swissprot and swissprot_human, which I assume plays a role in the reduced number of matches against swissprot. How can I ensure the search results are consistent for the two datasets? . Thank you so much for the help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827:124,test,test,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827,1,['test'],['test']
Testability,I'll second the idea that being able to scan identity levels is useful. Log steps in (1-identity) is generally the right step spacing. Log-log plots of the deltas in cluster sizes make a very informative plot with peaks at any genome duplication events.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567:72,Log,Log,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-776990567,2,['Log'],"['Log', 'Log-log']"
Testability,"I'm currently testing linclust using the easy-linclust workflow with very small datasets (100 / 1000 sequences). Each sequence is a nucleotide sequence, on average, 3000 basepairs long. So using 20 kmers, and an automatically generated kmer size (of 17) must find overlaps between these two sequences. And yet I see several sequence pairs that have 1-5 mismatches between them (0.1% error rate) that are missed and classified as single member clusters. They should not be disqualified by the min-seq-id or -c values that I'm using (of 0.99), which are stringent in the general case. Is there anything I could use to increase sensitivity at this stage?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489:14,test,testing,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489,1,['test'],['testing']
Testability,I'm happy to hear that MMseqs2 performs well in your Benchmark. You can adjust the sensitivity/speed of with the -s parameter. MMseqs2 expected that the computer that creates the index to have the same amount of memory as the computer that performs the search. If you don't want to precompute an index than you can call the search command without precomputed index. A non-persistent index is than created on the fly. The command createindex should be $mmseqs createindex uniref90.mms --split 6 --threads 12; instead of $mmseqs createindex uniref90.mms uniref90.mms.sk7 tmp --split 6 --threads 12.; Why did you call it this way? Is this somewhere in the documentation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251862327:53,Benchmark,Benchmark,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251862327,1,['Benchmark'],['Benchmark']
Testability,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:253,benchmark,benchmark,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969,1,['benchmark'],['benchmark']
Testability,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:41,test,test,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['test'],['test']
Testability,I'm running the command: `mmseqs easy-taxonomy taxdb output tmp -e 1e-5 -s 6 --blacklist --tax-lineage 1 --majority 0.75` along with a custom database and taxonomy. However many of the taxonomy results have <0.75 agreement (fewer than 75% of genes with taxonomy agree with the assigned taxon). I've attached the output and log file. Update: I tried running `mmseqs easy-taxonomy` using various values for `--majority` and the outputs are identical.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/609:323,log,log,323,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/609,1,['log'],['log']
Testability,"I'm sorry for the delays in replying due to concomitant teaching duties...; I fixed my two mistakes (specifying the fasta file instead of the query DB, and recompiled without MPI which I probably don't really require) and the search runs perfectly! First tests suggest that indeed mmseqs2 sensitivity is far greater that ghostx or Rapsearch2 with equivalent or even better speed (I have to make more tests to measure speed on our cluster the nodes of which have less RAM than the server I used to build the UniRef90 DB and run the first searches).; Many thanks again for your most helpful advice, I'm mighty happy to have pursued this through :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251679077:255,test,tests,255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251679077,2,['test'],['tests']
Testability,"I'm trying to align a custom representation of a protein together with a corresponding substitution matrix. . [aminobert_embedding_no_tokens_mat.txt](https://github.com/soedinglab/MMseqs2/files/9975230/aminobert_embedding_no_tokens_mat.txt) (change file extension to "".out""); [aminobert_embedding_no_tokens_u_seq.txt](https://github.com/soedinglab/MMseqs2/files/9975231/aminobert_embedding_no_tokens_u_seq.txt) (change file extension to "".fasta""). ## Expected Behavior; Compute an Alignment through the easy-search workflow (prefilter + align); ## Current Behavior; Does not compute an Alignment through the easy-search workflow (prefilter + align). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs easy-search aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens_u.fasta aminobert_embedding_no_tokens.m8 tmp -s 7.5 --sub-mat aminobert_embedding_no_tokens.out --seed-sub-mat aminobert_embedding_no_tokens.out. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; [mmseqs_easy_search.log](https://github.com/soedinglab/MMseqs2/files/9975251/mmseqs_easy_search.log). ## Your Environment; current mmseqs version, prebuilt, SSE4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/637:1170,log,log,1170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637,2,['log'],['log']
Testability,"I'm trying to do more precise comparisons against both control the parameters of both to same results size, inclusion e-value for profile composition, etc... (closer the parameters you use in benchmark). I think, in next versions you could include controls to calculate score in smith-waterman step, this way the user can control gap-opening and extension and others parameters and also others compositional bias correction. But I made it work with high sensitivity compared to psiblast. . I can report further. . so, how can I track in which iteration some sequence were matched? I wondering like to retrieve sequences by iteration and also the model per iteration. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407158691:192,benchmark,benchmark,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407158691,1,['benchmark'],['benchmark']
Testability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:39,test,tests,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['test'],['tests']
Testability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:143,log,logic,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['log'],['logic']
Testability,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136:119,test,test,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136,1,['test'],['test']
Testability,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:381,test,tests,381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240,2,['test'],"['test', 'tests']"
Testability,If you clustered a clustered database then you increase your initial search radius by `x^2`. E.g. your --min-seq-id is then 0.95^2 = 0.9025. Maybe this might explain this effect? . Nucleotide cluster is internally tested and it seems to perform well compared to CD-HIT. We did not write a paper about it but really should.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198:214,test,tested,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/420#issuecomment-789791198,1,['test'],['tested']
Testability,"If you provide me the mmseqs command call for your search an the log of the run then I can tell you why MMseqs2 is not much faster and what parameter you can tweak to be faster. My assumption is that you waste a lot of time on alignments that do not have to be computed since the chance of being homologous is not high. . The warning ""Sequence XXX produces too many hits. Results might be truncated"" indicates that their are too many high scoring diagonal (> target database size / 2). Is your database highly redundant?. MMseqs2 produces in default only one smith-waterman alignment per sequence. You can increase the alignments with` --alt-ali`. If you want just the best hit than you could use `filterdb` to reduce just extract the first line of each query result. Also if you are just interested at the top hit than you can speed up MMseqs2 quite a lot by using an iterative search. See https://github.com/soedinglab/mmseqs2/wiki#how-to-find-the-best-hit-the-fastest-way . In my example MMseqs2 was able to detect the sequence pair you mentioned. I search sequence `10141.SETX` (query) against sequence `6334.TSP_11650` (target) and both could be detect by MMseqs2. . The command I used was . mmseqs search query target aln tmp -a -s 7.5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121:65,log,log,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121,1,['log'],['log']
Testability,"If you still have the query/target hydra sequences, could you upload them or give us a list? Then we can include that in the regression benchmark to make sure that this issue doesn't happen again. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278872328:136,benchmark,benchmark,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278872328,1,['benchmark'],['benchmark']
Testability,"In the userguide, there is some text about using a provided expanded alignment database:. >Download one of the three provided expandable profile databases from https://colabfold.mmseqs.com and convert it to the MMseqs2 databases format with tsv2exprofiledb. However, there's nothing about how to go about creating the source tsv files (e.g. from an input fasta file or pre-computed clustering). My flying-blind attempts have resulted in a database without any k-mers; ```; No k-mer could be extracted for the database ../../tests/dbs/uniref30_2302_db.; Maybe the sequences length is less than 14 residues.; ```. I would greatly appreciate if you can point me to a minimal example. thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/857:524,test,tests,524,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/857,1,['test'],['tests']
Testability,"In this case with 512GB of RAM, and NR with it's current size (~69GB of raw sequences), --split 2 and 32 threads is what gives best performance results. Reducing the number of database chunks doesn't allow to keep the index file in cache when 'mmseqs search' is running, what forces reading from the file system, increasing the sys CPU time and degrading performance. Using 62 threads (32 real cores plus 32 from HT), looks like that puts too much pressure on available memory bandwith and hurts performance too (in my tests, it goes from 4' to 4'30'')",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554:519,test,tests,519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554,1,['test'],['tests']
Testability,"Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 1s 475ms; Writing results to: mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB; [] 5h 36m 42s 260ms. Time for merging files: 0h 0m 5s 864ms; Time for processing: 5h 37m 8s 744ms; convertalis mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3-s1.m8 --db-load-mode 3 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	3; Search type 	0; Threads 	80; Compressed 	0; Verbosity 	3. [] 4h 58m 11s 48ms; Time for merging files: 0h 1m 34s 339ms; Time for processing: 5h 2m 23s 933ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:7604,test,test-megan-out-,7604,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,4,['test'],['test-megan-out-']
Testability,Investigate failing nucl-nucl regression test,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/184:41,test,test,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/184,1,['test'],['test']
Testability,It appears like some of the CI tests are not passing. Am I missing something or are parts of the CI pipeline broken? Can someone help me on that?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706:31,test,tests,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706,1,['test'],['tests']
Testability,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:50,log,log,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921,1,['log'],['log']
Testability,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:724,test,tested,724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124,1,['test'],['tested']
Testability,It is possible to benchmark out software with our regression benchmark. It can be downloaded here https://bitbucket.org/martin_steinegger/mmseqs-benchmark,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283914103:18,benchmark,benchmark,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283914103,3,['benchmark'],['benchmark']
Testability,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:51,log,log,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,3,['log'],['log']
Testability,It would help if you could provide a log file. So I can see which module is slow. . The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096:37,log,log,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-507070096,1,['log'],['log']
Testability,"K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:7670,test,test,7670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; Time for processing: 0h 1m 53s 245ms; search mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:2052,test,test-megan-out-,2052,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['test'],['test-megan-out-']
Testability,"LFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKG. >S6; ANINAVTKIGNTPLHT. >S7; IVRIVNDSMWYVPNAFMDDGDNEGHISVNNVCHMYLAFFDVDISSHLFKLVIKHCDLNKRLKCGNSPLHCYTMNTRFNPSVLKILLRHGMRNFDSKDKKGHIPLHHYLIHSLSIDNKIFDILTDPIDDFSKSSDLLLCYLRYKFNGSLNYYVLYKLLTKGSDPNCVDEDGLTSLHYYCKHISAFHESNYYKSKSHTKMRAEKRFIYAIIDHGANINAVTKIGNTPLHTYLQQYTKHSPRVVYALLSRGADTRIRNNLNCTPIMEYIKNDCATGHILIMLLNWHEQKYGKLQKEEGQHLLYLFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHKSKLVDKALNKLESTIDSQSRLSYLPPEIMRNIITKLSDYHLNSMLYGKNHY. >S8; LFIKHNQGYGSRSLNILRYLLDRFDIQKDEYYNTMTPLHTAFQNCNNNVASYLVYIGYDINLPTKDDKTVFDLVFENRNIIYKADVVNDIIHHRLKVSLPMIKSLFYKMSEFSPYDDHYVKKIIAYCLLRDESFAELHTKFCLNEDYKSVFMKNISFDKIDSIIEKCSRDISLLKEIRISDTDLYTVLRTEDIRYHTYLEAIHSDKRISFPMYDDLIEQCHLSMEHK; ```. ## MMSeqs Tested Command ; ### Test 1 (--min-seq-id 1); mmseqs cluster test_mmseqs/DB test_mmseqs/seqid1_v2 seqid1_tmp_v2 --min-seq-id 1. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1 |; | S2 | S2 |; | S3 | S3 |; | S5 | S5 |; | S6 | S6 |; | S7 | S4, S7 |; | S8 | S8 |. ### Test 2 (--min-seq-id 1, -c 1.0, and --cov-mode 1); mmseqs cluster test/DB test/seqid1_test seqid1_tmp --min-seq-id 1 --cov-mode 1 -c 1.0. Result: ; | cluster_rep | cluster_member |; |-------------|-------------------|; | S1 | S1, S3, S2 |; | S4 | S4, S5, S7, S8 | ; | S6 | S6 | . ** PS: ; 1. This result is close to expected. However, I have no idea why the mmseqs does not group the S6 within the S4 cluster since S6 is a partial sequence of S4. ; 2. There are no differences in the results if reducing the -c from 1.0 to 0. . With these results, I am not sure if I use the correct parameter settings. Kindly advise me on the corresponding parameter to set for the MMSeqs2 cluster that is equivalent to CDHIT in order to have a non-redundant sequence dataset. . Regards, ; Chong",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/601:3011,Test,Test,3011,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/601,3,"['Test', 'test']","['Test', 'test']"
Testability,"LUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 14s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2423,TEST,TEST,2423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"Let me see later if I can install the latest release (currently I have it via conda, no clue if that's updated yet).; I don't think I can send the data to you. The database includes unpublished data from various collaboration partners, so not really an option :/. I'll make another run and capture the output, the log is not a problem luckily.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725:314,log,log,314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590271725,1,['log'],['log']
Testability,"MMseqs2 could until recently not handle sequences longer than 32768 residues and split longer sequences into multiple entries (with incrementing suffices _0, _1, ...). Recently (use the latest git version), MMseqs2 learned to handle longer sequences.; By default, it will handle up to 65k residue. . By passing `--dont-split-seq-by-len` or `--max-seq-len` with a higher value to `createdb` it should also be able to handle those. Though, this is only a few weeks old and not very heavily battle tested yet. Hope that helps,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97#issuecomment-397043815:495,test,tested,495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97#issuecomment-397043815,1,['test'],['tested']
Testability,"MMseqs2 does implement its own profile scoring with its own pseudo-count logic. Therefore, it should not be compared with Psi-blast profiles.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136654678:73,log,logic,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847#issuecomment-2136654678,1,['log'],['logic']
Testability,"Maybe I'm tired but i it is very strange because when i used mmseqs2 using:. `mmseqs cluster panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10`. It produces the following output:; ```; mmseqs cluster panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10; Program call:; panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:154,test,test,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,3,['test'],['test']
Testability,"Milot mentioned already ALP. You can find the relevant logic for the E-value computation in `src/alignment/EvalueComputation.h`. E.g. our precomputed values for BLOSUM62 are here. ; The first two values are lambda and k.; ```. {""blosum62.out"", 11, 1, true, {0.27359865037097330642, 0.044620920658722244834,; 1.5938724404943873658, -19.959867650284412122,; 1.5938724404943873658, -19.959867650284412122,; 30.455610143099914211, -622.28684628915891608,; 30.455610143099914211, -622.28684628915891608,; 29.602444874818868215, -601.81087985041381216}},; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1634249517:55,log,logic,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-1634249517,1,['log'],['logic']
Testability,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:645,test,tested,645,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559,2,['test'],['tested']
Testability,"No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filterta",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1039,TEST,TEST,1039,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"No worries! Always a good exercise to figure things out myself. I'm sure you're very busy and this was a problem of my own making by not using the intended workflow. I did try to use the `databases` workflow initially but unfortunately the login nodes that have connection to the internet on the cluster I am using don't have the resources to deal with the size of the databases I wanted to use. In the future I'll look to find a better workaround. With `metabuli` I just downloaded the pre-built database. I don't know if the resources for this are available but perhaps it would be worthwhile to do a similar thing here? Either way, thanks again for providing this excellent resource and good luck with CASP16! :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095:240,log,login,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095,1,['log'],['login']
Testability,"No, I expected more than 566 million of total FASTQ entries. I just clear the log .. but anything else written to sterr just the number of sequences processed.; I am in VirtualBox Ubuntu 16.04 and have 10Go of RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459381114:78,log,log,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459381114,1,['log'],['log']
Testability,"OK, I cloned from the master branch (MMseqs2 Version: d990a0fb4bba9193b8aadc699a614303a57792f2) and re-ran the tests. During the testing, the following warning/error kept appearing: `No datafile could be found for resultFolder/NUCLPROTTAX_SEARCH/query_nucl_h!`. Here's the tail of the output:. ```; No datafile could be found for resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl_h!; Error: extractorfs died; Command exited with non-zero status 1; 37.62user 1.04system 0:02.30elapsed 1676%CPU (0avgtext+0avgdata 57204maxresident)k; 156904inputs+244464outputs (603major+36363minor)pagefaults 0swaps. LINSEARCH_NUCLNUCL_TARNS_SEARCH; TEST FAILED (NO REPORT). DBPROFILE_INDEX; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.197554. NUCLPROTTAX_SEARCH; TEST FAILED (NO REPORT). PROTNUCL_SEARCH; TEST FAILED (NO REPORT). EASY_LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. EASY_CLUSTER; TEST FAILED; BAD; Expected: 15682; Actual: 15675. CLUSTER; TEST FAILED; BAD; Expected: 15682; Actual: 15675. NUCLNUCL_TRANS_SEARCH; TEST FAILED (NO REPORT). NUCLNUCL_SEARCH; TEST FAILED (NO REPORT). NUCLPROT_SEARCH; TEST FAILED (NO REPORT). DBPROFILE; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.182019. SLICEPROFILE; TEST SUCCESS; GOOD; Expected: 0.140; Actual: 0.147729. EASY_PROFILE; TEST SUCCESS; GOOD; Expected: 0.334; Actual: 0.338757. PROFILE; TEST SUCCESS; GOOD; Expected: 0.367; Actual: 0.367423. EASY_SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355. SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488222298:111,test,tests,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488222298,19,"['TEST', 'test']","['TEST', 'testing', 'tests']"
Testability,"OOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1350,TEST,TEST,1350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"Oh, great to hear that you could find parameters! I would be interested how you benchmark and what kind of parameters you used in the end. What do you mean by controls? It would be easy to include gap open and extend costs to MMseqs2. But I think it would make more sense if the gap costs depends on the diversity of the profiles. More diverse profiles need lower gap open and extend costs compared to less divers once. So one global parameters might not fit all profiles equally. This is still an open point. We do not explicitly encode the iterations in the results. But we append hits after each iteration to the previous results. So you could recognize iteration changes by comparing the e-value to previous hits. A lower e-values compared to the previous hits indicates a new iteration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261:80,benchmark,benchmark,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-407427261,1,['benchmark'],['benchmark']
Testability,"Okay I will try to change the temporary directory. I will see to install the avx2 binary too. Thanks for your help, I will test all this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483:123,test,test,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741817483,1,['test'],['test']
Testability,Okay maybe that's not the issue since cmake claims to have found the various SIMD instruction sets to work:; ```; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050:128,Test,Test,128,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1396924050,14,['Test'],['Test']
Testability,"Okay this is indeed a size problem. In my test, individual database entries are quickly ballooning to multiple gigabytes. I guess we should truncate the `query` field to like at most 1024 bytes or something like that. . You can either manipulate the header database to have a whitespace character somewhere near the beginning (the `query` field will show everything up to the first whitespace), with something like that; ```; mmseqs apply /tmp//2989869989197200687/query_h /tmp//2989869989197200687/query_h_new --threads 1 -- cut -d'.' -f1; mv -f /tmp//2989869989197200687/query_h_new /tmp//2989869989197200687/query_h; mv -f /tmp//2989869989197200687/query_h_new.index /tmp//2989869989197200687/query_h.index; ```. Or you can drop the `query` field and add the dbkey instead:; ```; mmseqs convertalis /tmp//2989869989197200687/query /db/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 /tmp//2989869989197200687/result /tmp/rep_vs_NT_Jan2021.mmseq2.m8db --format-output target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen --db-output 1 --search-type 3 ; mmseqs prefixid /tmp/rep_vs_NT_Jan2021.mmseq2.m8db /tmp/rep_vs_NT_Jan2021.mmseq2.m8 --tsv; ```. Combined with the `query.lookup` you can still map each of the database keys to a header.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879089524:42,test,test,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879089524,1,['test'],['test']
Testability,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:349,test,test,349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569,1,['test'],['test']
Testability,Okay. I didn't realize that. I assumed from the wiki page with `createsubdb` grabbing from the index could be equivalent to the fasta file headers. Your way is about what I was doing but with some intermediate python code for extra filtering. First I filter out all hits in the forward search which didn't meet a set bitscore threshold. Could I do this easily with `filterdb`? Next if a query sequence had multiple best hits with the same bitscore in the forward search then I retained all those target sequences for the reverse search. It's an edge case but could be important with our annotation pipeline. On my tests on real data we do see query sequences with multiple best hits when bitscores are less than ~90. Your script is a great first try though. Really clears up how to use the `filterdb` and `createsubdb` commands for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865:614,test,tests,614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865,1,['test'],['tests']
Testability,Once finish...sure. I forget to put the log out in 1> ...my mistake.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315979:40,log,log,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315979,1,['log'],['log']
Testability,Opened one: #773 . Also compiled and tested downloading PDB database and it works fine. @milot-mirdita,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369:37,test,tested,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369,1,['test'],['tested']
Testability,Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per que,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4806,test,test,4806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107:71,test,tested,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107,1,['test'],['tested']
Testability,Running tests?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25:8,test,tests,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25,1,['test'],['tests']
Testability,SIMDe ARM64 performance seems to be problematic. There is still some minor difference in the PROFILE regression test (AUC: 0.36739**6** vs 0.36739**8**). However the runtime is over 2x slower (14min vs 31min). I think we might want to keep sse2neon at least in the short term until SIMDe can catch. I guess PPCLE will be similar (the work for that was still incomplete though). HEAD: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/687741954; PR: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688351766,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990:112,test,test,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630190990,1,['test'],['test']
Testability,"ST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 26",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1581,TEST,TEST,1581,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"ST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1284,TEST,TEST,1284,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames extractorfs mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/15531098257495296432/q_orfs_aa --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 2 . [] 4h 49m 49s 475ms; Time for merging files: 0h 0m 13s 279ms; Time for processing: 4h 50m 4s 882ms; prefilter tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:3852,test,test-megan-out-,3852,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['test'],['test-megan-out-']
Testability,"Since cluster module needs too much memory. (I have 2 million nucleotide seqs, about 30G, and 1T memory, and segment fault occurred). I try to use LINCLUST instead. But I also want a better performance of clustering. I try to increase the --kmer-per-seq, the number of clusters decreased until about --kmer-per-seq 2000 (My shortest sequences are 2000bp). I think this may indicate that the clustering performance has improved. I compared results in a 3G test dataset, between ""Linclust --kmer-per-seq 2000"" and ""Cluster""， the number of cluster produced by former is relatively closed to the latter. . But I still wonder if it make sense to set --kmer-per-seq 2000, since the default is only 20.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831:455,test,test,455,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831,1,['test'],['test']
Testability,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:220,test,test,220,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748,2,['test'],"['test', 'tests']"
Testability,So the `_N` suffix comes already form your FASTA files? ; If thats the case: We already have a feature request in #82 for being able to adapt the parsing logic for FASTA headers. However none had time to work on that yet. We will keep that in mind for the future.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388:154,log,logic,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462779388,1,['log'],['logic']
Testability,"Something is going wrong before the prefiltering stage already, could you recreate `$SCRATCHDIR` completely? Also please specify a scratch directory that does not contain anything (e.g. query, target, results, logs).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593660260:210,log,logs,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593660260,1,['log'],['logs']
Testability,"Something went wrong in the first `kmermatcher` step that produced an invalid database. Now every time you rerun the job it will take the previous result in the `tmp` folder and try to run it through `rescorediagonal` to compute the alignment. Can you clear out the `tmp` folder, rerun the job and post the log? Can't learn much from the `rescorediagonal` call sadly.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537695295:307,log,log,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537695295,1,['log'],['log']
Testability,Sorry for bothering again. I thought that in order to provide a reproducible example here are more details: ; I assembled a genome with shovill like this ` shovill --outdir assembly --R1 SRR4213076_1.fastq.gz --R2 SRR4213076_2.fastq.gz`; [Here are the fastq files](https://www.ebi.ac.uk/ena/browser/view/SRR4213076?show=reads); I used prokka to annotate this genome and used 2 toy examples with just 3 sequences. ; [Here are the assembly and the genome.faa genome.fna files [just 3 sequences in each file]; ](https://drive.google.com/drive/folders/1iaLnhPWb859QnTMO-ZwSgHwm_J-mPiuQ?usp=sharing). I tried this routine either using nucleotides or amino acids. . ```; mmseqs createdb SRR* sample_db; mmseqs createdb genome.faa collection_db; # mmmseqs createdb genome.ffn collection_db # alternatively using nucleotides; mseqs cluster collection_db collection_clu TemPoral; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map tempora --threads 7; mmseqs convertalis sample_db collection_db sample_map result.tsv; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. This works fine with amino acids but [as shown in the log included in the post above] it doesn't work when using directly nucleotides or the ffn file. I chose MMseqs2 due to its speed and the scale of the task in our case. I thought it would be better to build the catalog of genes with nucleotides so for the search I though searching nuc against nuc. Can you help me with this? Thanks in advance,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623:1270,log,log,1270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/507#issuecomment-978222623,1,['log'],['log']
Testability,Sorry for spamming the community with a non-issue. I just wanted to acknowledge how wonderful the mascot of MMseqs is. **Beautiful logo!**,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/345:131,log,logo,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/345,1,['log'],['logo']
Testability,"Sorry for the confusion, you have to use g++ in the CXX call. I fixed the readme. Try this call and upload the log if anything goes wrong:; CXX=""$(brew --prefix)/bin/g++-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make VERBOSE=1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265689036:111,log,log,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265689036,1,['log'],['log']
Testability,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:144,test,tests,144,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505,1,['test'],['tests']
Testability,"Sorry, I missed this `if` statement completely. I see why it passed the regression test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731335551:83,test,test,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/756#issuecomment-1731335551,1,['test'],['test']
Testability,"Sorry, as mentioned, I am having some time issues right now.; I checked the search in the reverse way, it's also identical. I don't understand what you want me to test right now. I can't find the --slice-search parameter anywhere, or maybe I'm looking wrong. If you could clarify, then I'll test this too.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644:163,test,test,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597641644,2,['test'],['test']
Testability,"Summary: Running `easy-linclust` on [SRC](http://gwdu111.gwdg.de/~compbiol/plass/2018_08/) got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. Not sure if it's related to #323 but since it's a different behavior I just open a new issue. . ## Expected Behavior; Normally exit. ## Current Behavior; Got stuck after the first call of `rescorediagonal`. No progress and no printed information for ~12h. ## Steps to Reproduce (for bugs); ```; > wget http://gwdu111.gwdg.de/~compbiol/plass/2018_08/SRC.fasta.gz; > gunzip -k SRC.fasta.gz; > mmseqs easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G; ```. ## MMseqs Output (for bugs); ```; easy-linclust SRC.fasta test/SRC-50 /export/scratch/SRC-50 -c 0.9 --cov-mode 1 --cluster-mode 2 --min-seq-id 0.5 --split-memory-limit 500G. MMseqs Version: cab0e83840f5afa0632aada56e6bacaf46211c33; Cluster mode 2; Max connected component depth 1000; Similarity type 2; Threads 96; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.5; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 1; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500G; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/324:615,test,test,615,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/324,2,['test'],['test']
Testability,"Sure, here are the log and err files from linclust. The same problem also occurs when using cluster as well. [linclust.err.txt](https://github.com/soedinglab/mmseqs2/files/800241/linclust.err.txt); [linclust.out.txt](https://github.com/soedinglab/mmseqs2/files/800242/linclust.out.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282376866:19,log,log,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282376866,1,['log'],['log']
Testability,"Sure, sorry.; MMseq2 is version '44bde75f0e9f4d0ffc60970bee13347fe89bcb96'. Is running on a Dell computer with 64 cores, in a 5TB partition of HDD and 1Tb of RAM, and with Ubuntu 18.04 LTS.; I don't find any log file so I attach you the log of the running prior to the fault ( 1>log.txt); Hope that help, thanks!! ; [log.txt](https://github.com/soedinglab/MMseqs2/files/3076480/log.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608:208,log,log,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608,5,['log'],['log']
Testability,"Sure, these are the commands used for performing protein to protein search with a modified substitution matrix (changed the score for X). `mmseqs createdb TestDB_Subject.fa testRun/targetDB; `; `mmseqs createdb TestQuery.fa testRun/queryDB; `; `mmseqs createindex --mask 0 testRun/targetDB testRun/tmp --comp-bias-corr 0 --seed-sub-mat PAM10_modified.out`. `mmseqs search testRun/queryDB testRun/targetDB testRun/resultDB testRun/tmp --comp-bias-corr 0 --mask 0 --sub-mat PAM10_modified.out -a`. `mmseqs convertalis testRun/queryDB testRun/targetDB testRun/resultDB testRun/resultDB.m8 --sub-mat PAM10_modified.out`. The result matrix <img width=""1137"" alt=""ResultTable"" src=""https://user-images.githubusercontent.com/3918230/59648222-e42df700-91b0-11e9-92f1-3aaf27cc2e58.png"">. [TestDB_Subject.txt](https://github.com/soedinglab/MMseqs2/files/3299493/TestDB_Subject.txt); [TestQuery.txt](https://github.com/soedinglab/MMseqs2/files/3299494/TestQuery.txt); [PAM10_modified.txt](https://github.com/soedinglab/MMseqs2/files/3299495/PAM10_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178:173,test,testRun,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178,15,"['Test', 'test']","['TestQuery', 'testRun']"
Testability,"T (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2346,TEST,TEST,2346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,T SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOO,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2216,TEST,TEST,2216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"TDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:1h38m40s]; FILE: tmp/3290078511923703767/gtdb.tar.gz;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2461,log,log,2461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['log'],['log']
Testability,"TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1357,TEST,TEST,1357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/N",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2545,TEST,TEST,2545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"TTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag is also being used since we noticed it was recommended in a previous issues post. Finally, we have been checking the output _cluster.tsv file to verify the clusters. Commands 1 - 5 vary the --min-seq-id parameter.; Commands 6 - 10 vary the -c parameter. _Cmd1 (-c 0.95 --min-seq-id 0.7)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd2 (-c 0.95 --min-seq-id 0.8)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.8 --max-iterations 1000 -a`. _Cmd3 (-c 0.95 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd4 (-c 0.95 --min-seq-id 0.99)_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206:1820,test,tested,1820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206,1,['test'],['tested']
Testability,"Tested the mmseqs master branch after the PR was merged, and the download works now! Thanks @apcamargo Note that issue #729 persists, so taxonomy will not work properly with the GTDB database. However, I will go ahead and close this specific issue for now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339:0,Test,Tested,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339,1,['Test'],['Tested']
Testability,"Thank you - --max-seqs really works. For now I wanted to make the alignments to include more sequences,; especially near threshold, than they did. Increasing the number of; sequences made the change. Now I can play with inclusion thresholds. niedz., 1 kwi 2018 o 15:57 użytkownik Martin Steinegger <; notifications@github.com> napisał:. > The parameter --max-seqs was always available but there was a stopped; > mmseqs from printing out the parameter. The printout problem should be; > resolved now.; >; > How do you benchmark the performance?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APQmI4PjSUD8eJYrs1QQNM6xcDq8Rm8Bks5tkNzAgaJpZM4TCzs3>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962:517,benchmark,benchmark,517,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962,1,['benchmark'],['benchmark']
Testability,"Thank you both! I was testing on a small dataset, with few singleton clusters, and applying clustalo resulted in an error for such clusters (can't align 1 seq). The problem is that this stops the entire workflow, and no output was produced. Also, can the apply command split the output by cluster?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321:22,test,testing,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321,1,['test'],['testing']
Testability,"Thank you for getting back! We will try to use the latest release. ; Meanwhile, we are testing whether increasing `--max-seqs` will help. Do you think this could be one possibility/ direction to try?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179:87,test,testing,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604150179,1,['test'],['testing']
Testability,Thank you for reporting it. Could you please provide the log and commands to reproduce the issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633199244:57,log,log,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314#issuecomment-633199244,1,['log'],['log']
Testability,Thank you for reporting this and sorry for the inconvenience. This bug got introduced by me. I have reworked the way how MMseqs2 infers the search type since more and more modes have been added and we had some bugs. Currently we have over 32 search possibilities but our test suite does not cover all possibilities. I added a test for your case protein/index profile search.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485948069:271,test,test,271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485948069,2,['test'],['test']
Testability,Thank you for reporting this issue. @milot-mirdita We need to add the iterative profile search to our regression test. The issue should be fixed now.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-380742156:113,test,test,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-380742156,1,['test'],['test']
Testability,"Thank you for reporting this. Could you please provide more information like version of MMseqs2, output log, platform, computer specification?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482773439:104,log,log,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482773439,1,['log'],['log']
Testability,"Thank you for reporting this. Could you please provide the full log? It could be possible that the PFAM profiles need too much memory (30GB might be not enough). . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567127873:64,log,log,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-567127873,1,['log'],['log']
Testability,"Thank you for the log. . If you use `--start-sens 1 --sens-steps 3 -s 6` then MMseqs2 performs three searches with the sensitivity `-s 1`, `-s 3.5` and `-s 6` while in each step previously successful aligned sequences are left out. From your log I can see that the most sensitive search `-s 6` took `46m 49s 482ms` while not resulting in a much deeper annotation. Only 16146 extra ORFs sequences got annotated while the searches with `-s 1` and `-s 3.5` annotated already 277629. Searching with `-s 6` is also more sensitive compare to DIAMOND (see https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter). The respective sensitivity should be DIAMONDS `--more-sensitive`. . My recommendation would be to search the following way:. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp -s 3.5 --max-accept 1 --max-rejected 5 . This should roughly take 6-7 minutes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835:18,log,log,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535275835,2,['log'],['log']
Testability,"Thank you for the quick response, I will test this soon and post the results when it is done",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795339376:41,test,test,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795339376,1,['test'],['test']
Testability,"Thank you for the suggestion. I tried it and here is the log file:; ```; taxonomyreport ../nrDB resultDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""resultDB"" has the wrong type (Alignment); Allowed input:; - Taxonomy; ```. Edit: also the usage for `taxonomyreport` says the following:; ```; usage: mmseqs taxonomyreport <i:targetDB> <i:taxDB> <o:taxonomyReport> [options]; ```; So according to this, I believe that nrDB should go second?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771805923:57,log,log,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771805923,1,['log'],['log']
Testability,Thank you for trying MMseqs2. . Your referenced article is the MMseqs1 paper. Please read the MMseqs2 [article](https://www.nature.com/articles/nbt.3988). The benchmark used to evaluate MMseqs2 is freely available [here](https://bitbucket.org/martin_steinegger/mmseqs-benchmark). . How did you compare the sensitivity of MMseqs2 against PSI-BLAST? We measured the sensitivity up to the first false positive. Our benchmark penalizes high scoring FPs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840:159,benchmark,benchmark,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840,3,['benchmark'],['benchmark']
Testability,"Thank you for your answer. I understand, yes, I agree would be good to see clustered searches in MMseqs2. Is there any benchmark with diamond tool? Maybe I could not see it. Best,; Ugur",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/678#issuecomment-1467712910:119,benchmark,benchmark,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/678#issuecomment-1467712910,1,['benchmark'],['benchmark']
Testability,Thank you for your detailed report. The problems seems like a missing `clust` call. You can see an example how to use `clusthash` here https://github.com/soedinglab/MMseqs2/wiki#how-to-redundancy-filter-sequences-with-identical-length-and-100-length-overlap. So to make your example work you would need to add a `clust` call after `clusthash` . mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash test.mmseqsdb test.clusthashdb --min-seq-id 0.99 ; mmseqs clust test.mmseqsdb test.clusthashdb test.clust; mmseqs createseqfiledb test.mmseqsdb test.clust test.clust_clusters,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77#issuecomment-376401650:361,test,test,361,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77#issuecomment-376401650,10,['test'],['test']
Testability,"Thank you for your reply. ; From my understanding, the cascading clustering with the `--cluster-reassign` flag means that it will reassign the clusters so that there are no violations within the cluster. ; I did a sanity check, to make sure that neither of the centroids has a percentage of identity over 70%. So I searched the centroids database against itself, with `mmseqs search` and checked for `pident` > 50% . In general, I want to train an NLP model. So, I want to ensure that there is zero overlapping between training, validation and test sets. So, I clustered my dataset with 50% of identity and each cluster was assigned to one of the 3 sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834:544,test,test,544,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1259475834,1,['test'],['test']
Testability,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:151,test,test,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407,1,['test'],['test']
Testability,Thank you! I will test it as soon as it is released.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477950097:18,test,test,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477950097,1,['test'],['test']
Testability,"Thank you! Sorry it was premature of me to make a PR without understanding the issue, and I can see I am breaking something. However, I haven't yet got your workaround to work (I get the same ""Invalid"" messages, even after running with `--identifier-field 0 ` flag), I think this is because my stockholm header is only 2 lines (no AC or ID fields)? If these are compulsory fields then the problem is not yours but with the way I generate the stockholm alignment via Biopython? If so, then let me know I can fix this in Biopython. My input file looks like this generated from a fasta MSA:. ```; $ head -n 3 TEST.sth; # STOCKHOLM 1.0; #=GF SQ 19; db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299 MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396652988:606,TEST,TEST,606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-396652988,1,['TEST'],['TEST']
Testability,"Thank you, I overlooked that part of the docs. I tested with the `-a` flag and it works, but what does the `-a` flag described as ""add backtrace string (convert to alignments with mmseqs convertalis utility)"" do?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/200#issuecomment-490908697:49,test,tested,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200#issuecomment-490908697,1,['test'],['tested']
Testability,"Thank you, is that `--msa-mode` or `--msa-type` sorry? Even with `--msa-type 2` I still got an error originally about a missing index file, my original command was: `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699:185,test,test,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699,2,['test'],['test']
Testability,Thanks Martin. I'll hopefully get around to testing it in a short while and will let you know if I have any difficulties (not that I expect to).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-417898873:44,test,testing,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-417898873,1,['test'],['testing']
Testability,"Thanks Milot, the --split 1 workaround has worked, specifiying it at index creation time and search time, although it complains about not having enough memory, it finishes:. ```; Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 1 using split mode 0; Needed memory (699399167230 byte) of total memory (541058265088 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size o f --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 23s; ```; The index file size is around 300GB, so it's asking more than double.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501:389,test,testDB,389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501,1,['test'],['testDB']
Testability,"Thanks a lot for the log!. The prefilter takes 15 minutes, while the alignment runs for 4.5 hours. I think your `--max-seqs` is way to high since in average only 4000 hits are accepted by the alignment. You could reduce `--max-seqs` to 100.000 without losing many, if any at all, hits. . Another tweak is using the property of the prefilter results, that they are already well sorted and distinguish well between homologs and non-homologs. It is possible to reduce the run time without losing many, if any, hits of the alignment by using the `--max-rejected` parameter. It stops aligning after `N` consecutive rejected alignments (alignments that do not fulfill the alignment criteria). You could try `--max-rejected 10.` . Another tweak would be to increase the `--min-ungapped-score`. I have never really optimized this parameter. It could lead to a huge gains in speed for the alignment by rejecting prefilter hits more strictly. Try `--min-ungapped-score 30`. You mentioned in an email that you also tested DIAMOND and it was less sensitive. Could you please give us your comparison results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948:21,log,log,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408840948,2,"['log', 'test']","['log', 'tested']"
Testability,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:1200,test,test,1200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,1,['test'],['test']
Testability,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:272,test,test,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482,2,['test'],['test']
Testability,"Thanks for maintaining this great software! I'm having an issue with easy-taxonomy using GTDB (but not NCBI with the same query input), described below. Using a conda install of version 15.6f452. . Thanks for any help!. ## Expected Behavior; Completing without error. ## Current Behavior; Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:452,log,log,452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,4,"['log', 'test']","['log', 'log-error', 'test']"
Testability,"Thanks for the hint. I'll try that. I'm using redundancy reduced database - pdb_05 is PDB Seqres database clustered with e-value 0.05, and the profiles are generated for pdb_05 sequences on nr70 database, which is nr clustered to 70% sequence identity. As to computer - yes, I'm using 120 cores single machine (it has four Xeons E7-4890 v2). The software; scales up amazingly. Now I'm computing 6it profiles for 31M sequences and; that will be accomplished in few days (prefiltering scores calculation took 65 h 52 m 33s). I see that when calculating S-W alignments the soft crunches the data using all given threads but after finishing million of sequences (or leaning towards finishing that million) it runs gradually on less and lass cores (perhaps some cores were given more time consuming alignments so the program might estimate times and balance threads more efficiently, but this is very minor and would be noticed for users working on big databases only), which might be a speed bottleneck for big dataset such as nr database processed on big machines. In few days I'll start tests also with MPI run, so that mmseqs2 will be ran; on 1600 CPUs on cluster (here I wish the software had used GPUs as the cluster I'm using has additionally some Firepros to use - I write it smiling as MMseqs2 is light years ahead of cd-hit, which I was using to date). I'll give you a feedback on the speed soon then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733:1085,test,tests,1085,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733,1,['test'],['tests']
Testability,"Thanks for the inputs Martin. Would you be referring to the substitution matrix here https://github.com/soedinglab/MMseqs2/blob/master/src/commons/SubstitutionMatrix.cpp, so if i were to test this, would this be changing the break statements for the degenerate characters in the above script? If not, Can you recommend a way to change the substitution matrix?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-494218357:187,test,test,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-494218357,1,['test'],['test']
Testability,"Thanks for the quick reply. I was attempting to write an mmseqs package definition for GNU Guix, where the idea is to run tests for the same reasons that the usual `make check` is run, to tests that the software works in the particular environment it is being run in.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283927730:122,test,tests,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283927730,2,['test'],['tests']
Testability,"Thanks for the quick response! Here's the whole log:. ```; Program call:; taxonomy -e 1e-5 --start-sens 1 -s 6 --sens-steps 3 --lca-ranks phylum:superphylum:subkingdom:kingdom:superkingdom --threads 24 /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/genes_tax_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Ad",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:48,log,log,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['log'],['log']
Testability,Thanks for the quick response!. Here is sample of the data together with the commands I have run and the logs. I hope I have not missed anything:. ```; mmseqs createdb --compressed 1 /tmp/global2/hashkenazy/sample.fa /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz > /tmp/global2/hashkenazy/sample.fa.mmseqdb.std 2>&1. mmseqs linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/hahskenazy/ 1> /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.std 2>&1. mmseqs createtsv /tmp/global2/hashkenazy/sample.fa.mmseqdb.gz /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv > /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust /tmp/global2/hashkenazy/sample.fa.mmseqdb.linclust.tsv.std 2>&1; ```. [MMSEQ_linclust_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/6647982/MMSEQ_linclust_example.tar.gz). Thanks for the help!; Haim,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959:105,log,logs,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/459#issuecomment-860615959,1,['log'],['logs']
Testability,"Thanks for the response!. I had already done this via docker, which compiles all 3 versions (AVX2, SSE42, SSE2) - AVX2 was definitely the fastest of the three, and all three were behaving the same as the native build. I don't think it's likely I'd see a different results if not using a container. Do you know if running mmseqs with docker on your machine makes it drastically slower? Given that it's the ""same speed"" in my tests, it's hard to imagine that the docker adds anything of relevance in the equation. I fully agree with you that the hardware can't be the source of the discrepancy here.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1511207961:424,test,tests,424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1511207961,1,['test'],['tests']
Testability,"Thanks for the suggestion. I'll do that for future runs to avoid the huge logfiles. Re: my original problem, I want to mention that I am using a Perl script (which parallel::forkmanager) to fork separate jobs for each sample in my list and then run each sample separately. I tried running mmseqs search with ""--threads 10"" using this same script, but I noticed that the intermediate steps in the command (extractorfs, align etc) all just used one process per sample. I am still trying to figure out if it is because of the parallel script or something to do with mmseqs itself. If I run the same search command on the terminal with ""--threads 10"" it goes fast. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, July 11, 2019 12:55:59 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @milot-mirdita<https://github.com/milot-mirdita> noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOM5JCFUYB7FDWEK7TP65JY7A5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZXE5VI#issuecomment-510545621>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMTYNMFATMDFBRTPR3P65JY7ANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405:74,log,logfiles,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405,1,['log'],['logfiles']
Testability,Thanks for this detailed analysis. I have fixed the issues with commit ae4c7344d0174b54ba65646fc35fa91751209a6e and created a regression test for the update workflow.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556226:137,test,test,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199#issuecomment-488556226,1,['test'],['test']
Testability,"Thanks for your answer!. One more question, I just noticed the line in the log file saying ""WARNING: combining cluster mode 0 in combination with coverage mode 2 can produce wrong results."" in the log. What's the reason for this warning?. You can find the log file here: . https://www.dropbox.com/s/skdw24yg3333fzr/clustering.log?dl=0. Thanks again!. Álvaro",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-509226325:75,log,log,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-509226325,4,['log'],['log']
Testability,"Thanks for your detailed reply!. > I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (--orf-filter 0) as it can sometimes reject too many ORFs if the sequences are short. I'll try the `--orf-filter 0` option as you suggested. Yes, of course in the case of a transcriptome the ORFs are often short if the assembler is not able to resolve all the isoforms properly. > Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). I run a nucl-nucl taxonomy assignment (against NT) and it performed well I think. I did not systematically check, but I did some cross-checks with blastn and it reported the exact same hits. Assuming blast to be the ""gold-standard"" I was quite impressed by the performance of your tool, because it was so much faster. > Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I just did that and it worked. According to your instructions in the Wiki. I'll let you know in case I have something interesting to report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494:678,benchmark,benchmark,678,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824596494,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:207,test,test,207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,2,"['log', 'test']","['log', 'test']"
Testability,Thanks for your reply. The command looks fine. Could you add the log of the run? What kind of mmseqs version do you use (static or self compiled)? Would it be possible to provide the infile and queryfile to reproduce the issue?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-366713681:65,log,log,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-366713681,1,['log'],['log']
Testability,Thanks this is very helpful -- the regression testing is awesome,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607943844:46,test,testing,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/296#issuecomment-607943844,1,['test'],['testing']
Testability,"Thanks! Just tested it and seems to work fine now. Regarding the consensus building, we already have HMM (HMMER3) profiles for those MSAs. Reading MMseqs2 help there is **convertprofiledb** that seems to be able to convert the HMM from HMMER3 to the MMeqs2 format. Do you recommend it? Or better I go through **hhconsensus** and use **msa2profile**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344550169:13,test,tested,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344550169,1,['test'],['tested']
Testability,"Thanks!. So I'm currently testing linclust on some simulated data (I'm working on clustering a specific type of sequences: Iso-Seq reads). linclust ran fine for 100,000 and 500,000 reads, but died for 1,000,000 reads with the error below. I'm submitting the job on a node with 512Gb and 32 cores (but running with --threads 8). . ```; Program call:; --threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:26,test,testing,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['test'],['testing']
Testability,"Thanks. 180 G available. I was cheating here and just testing on a shared node. I was also just running mmseqs myself from the command line (but SemiBin does the same). Do you mean larger chunks, so it runs quicker, rather than smaller chunks?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657:54,test,testing,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657,1,['test'],['testing']
Testability,That is the full log. The command that I ran was:. ```; mmseqs linclust --threads 24 --min-seq-id 0.90 -c 0.9 --kmer-per-seq 50 /tmp/global/nyoungblut/genes_db /tmp/global/nyoungblut/clusters_db /tmp/global/nyoungblut/linclust_tmp/ 2>> linclust.log 1>&2; ```. Note: I shorted the paths to make the command easier to read. My conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 main; bzip2 1.0.8 h516909a_1 conda-forge; ca-certificates 2019.9.11 hecc5488_0 conda-forge; curl 7.65.3 hf8cf82a_0 conda-forge; gawk 5.0.1 h516909a_0 conda-forge; htslib 1.9 h4da6232_3 bioconda; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.65.3 hda55be3_0 conda-forge; libdeflate 1.2 h516909a_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 9.1.0 hdf63c60_0; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 9.1.0 hdf63c60_0; llvm-openmp 8.0.1 hc9558a2_0 conda-forge; mmseqs2 10.6d92c h2d02072_0 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.1 0 conda-forge; openssl 1.1.1c h516909a_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h10a08f8_12 bioconda; seqtk 1.3 hed695b0_2 bioconda; tk 8.6.9 hed695b0_1003 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h516909a_1006 conda-forge; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537579859:17,log,log,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537579859,2,['log'],['log']
Testability,"That's with the RelWithDebInfo-compiled version, on the login node without vmtouch, where the workload took 600 s. On the compute node with vmtouch, it's 10 seconds, same goes for the release-compiled version, so indeed does not seem to make a difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321:56,log,login,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397329321,1,['log'],['login']
Testability,Thats definitely wrong. Is about 362 million the expected number of total FASTQ entries? Could you post the whole log? Was there anything written to stderr?. How much RAM does your machine have?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459368596:114,log,log,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459368596,1,['log'],['log']
Testability,"Thats one possibility, however the issue is quite a bit more complicated to solve generally. First, `getTotalSystemMemory` is not used everywhere, only a few modules have a splitting logic. There is also the issue that we read input databases completely into memory if they will have random accesses. That is also currently not tracked through `getTotalSystemMemory`. You can disable that for a few tools with `--no-preload`, but then you pay a large IO cost. Then there is the issue that letting MMseqs2 share the memory bus among unrelated processes is probably also not the best idea. The prefilter benefits a lot from high-bandwidth, low latency access to its index structure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463:183,log,logic,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359795463,1,['log'],['logic']
Testability,"The PDB and UniProtKB/Swiss-Prot are pretty small, if you want a smaller database you could use the `examples/DB.fasta` file, which is a subset of Uniprot we generated or benchmarking some time ago.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/407#issuecomment-774496377:171,benchmark,benchmarking,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407#issuecomment-774496377,1,['benchmark'],['benchmarking']
Testability,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:308,test,tests,308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,6,['test'],['tests']
Testability,The `_tmp_0` indicates that something went wrong (the merge was unsuccessful). Could you post the log?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-371482052:98,log,log,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-371482052,1,['log'],['log']
Testability,"The `profile2pssm` module creates a PSSM file in the following format:. <pre>; Query profile of sequence <strong>ID</strong>; Pos <strong>TAB</strong> Cns <strong>TAB</strong> A <strong>TAB</strong> C <strong>TAB</strong> D...; 0 <strong>TAB</strong> M <strong>TAB</strong> -2 <strong>TAB</strong> -1 <strong>TAB</strong> -5...; 1 <strong>TAB</strong> A <strong>TAB</strong> 5 <strong>TAB</strong> -1 <strong>TAB</strong> -3...; ...; Query profile of sequence <strong>Next-ID</strong>; Pos <strong>TAB</strong> Cns <strong>TAB</strong> A <strong>TAB</strong> C <strong>TAB</strong> D...; 0 <strong>TAB</strong> M <strong>TAB</strong> -2 <strong>TAB</strong> -1 <strong>TAB</strong> -5...; ...; </pre>; (spaces added for legibility, everything is tab separated). I just tried to generate a logo with seq2logo, which worked after messing with the alphabet header slightly, so you have to post process the resulting file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/99#issuecomment-399935153:789,log,logo,789,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/99#issuecomment-399935153,1,['log'],['logo']
Testability,"The `taxonomy` workflow is usable for your use case, but still under construction to make it user friendly. Building taxonomy databases is still not straightforward, however, this will change in the next few weeks. . We have only tested taxonomic annotations based on the UniProt KB (for which it should be pretty easy to build a database following the instructions on the [wiki](https://github.com/soedinglab/MMseqs2/wiki#prerequisites)). If you generate a mapping between a NCBI accession and its NCBI taxonomy identifier, you should be able to build an MMseqs2 taxonomy database, but we haven't done that yet ourselves. Also the `taxonomy` workflow requires to run [two additional searches](https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy). The second search is quite an expensive operation, since it requires high sensitivity searches against a large database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299:230,test,tested,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299,1,['test'],['tested']
Testability,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:545,test,tested,545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781,1,['test'],['tested']
Testability,The clustering might need slightly more memory with an increased `--max-seq-len`. But There should be no problem on your computer with the memory. Sequences longer than 2^16 are not yet well tested but clustering should work without any further issues .,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482896333:191,test,tested,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482896333,1,['test'],['tested']
Testability,"The command I run:; result2msa testDB testDB testDB.clu testDB.msa --msa-format-mode 1 . with output:; MMseqs Version: 	14-7e284; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Allow deletions 	false; Compositional bias 	1; Compositional bias 	1; MSA format mode 	1; Summary prefix 	cl; Skip query 	false; Filter MSA 	0; Use filter only at N seqs 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Preload mode 	0; Threads 	6; Compressed 	0; Verbosity 	3. [=================================================================] 100.00% 2.85K 0s 1ms ; [=================================================================] 100.00% 2.85K 0s 2ms ; Time for merging to testDB.msa_sequence.ffdata: 0h 0m 0s 33ms; [=================================================================] 100.00% 2.85K 0s 98ms ; [=================================================================] 100.00% 2.85K 0s 99ms ; Time for merging to testDB.msa_header.ffdata: 0h 0m 0s 3ms; Query database size: 2846 type: Aminoacid; Target database size: 2846 type: Aminoacid; Segmentation fault: 11 ] 0.00% 1 eta -",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/724:31,test,testDB,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/724,6,['test'],['testDB']
Testability,"The database is not large enough to use 300GB of RAM (See https://github.com/soedinglab/MMseqs2/wiki#memory-consumption). So it would be expected to use far less. However, if MMseqs2 was only uses 30GB of 300GB, then that would be weird. Could you post the full log?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000:262,log,log,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765403000,1,['log'],['log']
Testability,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:106,test,tests,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536,3,['test'],"['test', 'tested', 'tests']"
Testability,"The error occurs with version 9.d36de, but not 8.fac81. Here's the entire log:. ```; $ mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	9.d36de; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:74,log,log,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['log'],['log']
Testability,"The file used here is [DB.fasta](https://github.com/soedinglab/MMseqs2/blob/master/examples/DB.fasta) , I simply renamed to exp.fa as I was testing in a directory with other similarly named files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909:140,test,testing,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909,1,['test'],['testing']
Testability,"The first two issues should be handled as of commit cbb542af98095210bad8399cda02b67487d0bdde.; The third issue is a bit trickier. here's why:; The sliced search workflow (searchslicedtargetprofile.sh) is where the available disk (regular tmp folder) is taken into account to determine the number of profiles to process (the information is passed to it from search). `--local-temp` is a parameter, which is relevant only in MPI mode. Assuming all MPI nodes have the same available disk in their `--local-tmp` (does this even hold?), then the way to take it into account is to set the disk limit in the sliced search workflow as the minimum between the regular tmp folder (on the master node) and the available disk space on the master's `--local-temp` times the number of MPI nodes. However, the number of MPI nodes is determined through quite a complicated logic in the Prefilter constructor, which is called from within the sliced search workflow **after** it calculates the disk space limit. An exit with error could be added from within Prefilter (asking to re-run the program with `--disk-space-limit` equal to local-size x Nnodes) but it is not very elegant as the run already started by then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791:857,log,logic,857,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791,1,['log'],['logic']
Testability,The parameter `--max-seqs` was always available but there was a stopped mmseqs from printing out the parameter. The printout problem should be resolved now. . How do you benchmark the performance?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647:170,benchmark,benchmark,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647,1,['benchmark'],['benchmark']
Testability,"The plass `mergereads` module would merge all pairs that can be merged and leave all unmerged `pairs` alone to be classified separately. If you don't want that, then you have to build some custom post processing logic on the result tsv flies.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815864315:212,log,logic,212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/436#issuecomment-815864315,1,['log'],['logic']
Testability,"The ppc64le build now only fails one regression test, the same as arm64 https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688790571#L11062. > PROFILE (Time: 259s); TEST FAILED; BAD; Expected: 0.367398; Actual: 0.367396. Without this PR the ppc64le build fails 25 regression tests: https://travis-ci.org/github/soedinglab/MMseqs2/jobs/688479773#L10132",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351:48,test,test,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630944351,3,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,The problem should be solved by adding `-s 2`. There are two problems leading to this issues. (1) Linclust does not cluster this sequences because it finds a longer sequences containing your sequence which does not fulfill the sequence identity threshold. (2) The prefilters setting is not sensitive enough. It does not extract any k-mer from your sequence. This should not happen. I will try to find a reasonable work around for this. Thank you for reporting this issues!. `mmseqs cluster panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10 -s 2`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401979992:551,test,test,551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401979992,1,['test'],['test']
Testability,"The regression test finished without errors, however the binary could not be uploaded. Maybe its a problem with the PR. I merged the commit into the master. ; So MMseqs2 is one step closer to be a great taxonomy classification tool. Thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932:15,test,test,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932,1,['test'],['test']
Testability,The split logic also got a face lift so splitting manually should not be required anymore.; Please do update if you encounter problems.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-513161913:10,log,logic,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-513161913,1,['log'],['logic']
Testability,"The static binaries take about one hour to build (running the tests take some time).; GCC 9 would be completely sufficient to compile, we support (and check for) down to GCC 4.9 and clang 5.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647:62,test,tests,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647,1,['test'],['tests']
Testability,The tests will be compiled after calling the cmake && make. They do not behave like unit tests. ; We use them to debug certain parts of our code. How do you want to use them?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283910194:4,test,tests,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283910194,2,['test'],['tests']
Testability,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:205,log,log,205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,1,['log'],['log']
Testability,Things todo: ; 1.) find XSD to single file CPP converter (maybe https://www.codesynthesis.com/products/xsd/); 2.) find BLAST XSD (maybe https://github.com/lindenb/xsd-sandbox/blob/master/schemas/bio/ncbi/blast.xsd); 3.) add converter `convertalis`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-406567630:167,sandbox,sandbox,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-406567630,1,['sandbox'],['sandbox']
Testability,"This works great for my test case! Currently reclustering my larger dataset with the --cluster-reassign flag and hopeful that this will fix my problem. Thank you, marking this issue closed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/276#issuecomment-587122737:24,test,test,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/276#issuecomment-587122737,1,['test'],['test']
Testability,"Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs ver",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16465,test,test,16465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (T,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2104,TEST,TEST,2104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; Create directory tmp/14943602774421092333/tmp_hsp1; search testdb /home/kabru/datenbank/silvadb tmp/14943602774421092333/first tmp/14943602774421092333/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . extractframes testdb tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 72 --compressed 0 -v 3 . [> ] 1.35% 55 e[> ] 1.28% 52 e[> ] 1.10% 45 e[> ] 1.08% 44 e[> ] 1.23% 50 e[=> ] 1.55% 63 e[> ] 1.03% 42 e[> ] 1.13% 46 e[=> ] 1.80% 73 e[=> ] 1.88% 76 e[=> ] 2.80% 113 [=> ] 2.83% 114 [> ] 1.15% 47 e[> ] 1.38% 56 e[=> ] 3.05% 123 [=> ] 3.08% 124 [> ] 1.48% 60 e[=> ] 1.60% 65 e[==> ] 3.28% 132 [=> ] 1.78% 72 e[=> ] 1.58% 64 e[==> ] 3.50% 141 [==> ] 3.55% 143 [==> ] 3.65% 147 [==> ] 3.70% 149 [==> ] 3.83% 154 [==> ] 3.88% 156 [=> ] 1.68% 68 e[> ] 1.50% 61 e[==> ] 4.08% 164 [==> ] 4.10% 165 [=> ] 1.95% 79 e[> ] 1.33% 54 e[==> ] 4.33% 174 [=> ] 1.98% 80 e[==> ] 4.50% 181 [==> ] 4.55% 183 [==> ] 4.53% 182 [=> ] 1.65% 67 e[=> ] 2.33% 94 e[=> ] 2.23% 90 e[===> ] 4.78% 192 [===> ] 4.80% 193 [=> ] 2.45% 99 e[=> ] 2.50% 101 [=> ] 2.40% 97 e[=> ] 2.60% 105 [=> ] 2.58% 104 [===> ] 4.95% 199 [=> ] 2.65% 107 [===> ] 5.00% 201 [=> ] 2.70% 109 [===> ] 5.15% 207 [===> ] 5.18% 208 [===> ] 5.20% 209 [=> ] 2.68% 108 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:7487,test,testdb,7487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['test'],['testdb']
Testability,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:204,log,logfile,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903,1,['log'],['logfile']
Testability,"Unexpected behavior 3:; I actually filter out sequences below a length of 20 and was reporting that just for completeness and because there was no prior warning. This is not a real problem in my case, though. Unexpected behavior 2:; Are you sure this is related to unexpected behavior 3?. This results in 3 rows:; ```; >0000_A; SEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETEST; >0001_A; SEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETEST; >0002_A; SEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETESTSEQUENCETEST; ```. And this in 9 rows:; ```; >0000_A; TESTSEQUENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275116668:572,TEST,TESTSEQUENCE,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275116668,3,['TEST'],['TESTSEQUENCE']
Testability,"Unfortunately no. Also, sorry for don't ask before. So I did this way: ; 1- Download the MMseqs2 Version: aa14ce37feb5eda7231af20259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different leng",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:467,log,log,467,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,3,['log'],['log']
Testability,"Using the HMMER3 hmms is probably a bad idea, they already include pseudocounts, which will negatively affect the sensitivity of MMseqs2. . I am currently evaluating all those tools again, but I don't have a clear recommendation yet. . If your first sequence in the alignment is not a real query, then your two options are to use `hhconsensus` + `msa2profile` or `hhconsensus` + `hhmake -nocontxt -diff 1000` (way slower) + `convertprofiledb`. `msa2profile` is the newer tool as not as well tested as `convertprofiledb`. The testing we already did indicates that it is working well though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344565989:491,test,tested,491,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344565989,2,['test'],"['tested', 'testing']"
Testability,We did not change the format of the taxonomical database. It should be compatible. Also the error you show here happens while closing the database I think. Could you please provide the whole log? Does the error also occur with the newest version of mmseqs?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900:191,log,log,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900,1,['log'],['log']
Testability,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:531,log,logic,531,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,1,['log'],['logic']
Testability,"We have a script to convert a substitution matrix into the right format for MMseqs2:; https://github.com/soedinglab/MMseqs2/blob/master/util/format_substitution_matrix.R. This should work in theory, but its not well tested. I think one issue is that the matrix needs to be invertible.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/637#issuecomment-1314984192:216,test,tested,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/637#issuecomment-1314984192,1,['test'],['tested']
Testability,"We have done some testing on finding very short proteins in our SpacePHARER manuscript (https://github.com/soedinglab/spacepharer, https://www.biorxiv.org/content/10.1101/2020.05.15.090266v1). The parameters we have found to work well are as follows:; `-k 6 --spaced-kmer-pattern 11011101 --seed-sub-mat VTML40.out --gap-open 16 --gap-extend 2 --min-length 9`. We'll eventually add a short fragment search mode to MMseqs2 itself in the form of setting presets or something like that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556:18,test,testing,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728166556,1,['test'],['testing']
Testability,We integrated the MMseqs2 regression test into the git repository. See:; https://github.com/soedinglab/MMseqs2/wiki/MMseqs2-Developer-Guide#regression-test,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656:37,test,test,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656,2,['test'],['test']
Testability,We now use the VTML80 in all prefiltering calls and Blosum62 during the actual alignments.; This results in a small speedup and a slight sensitivity increase in our benchmarks. You can change both matrices with the `--sub-mat` and `--seed-sub-mat` parameters (pass along the path of one of the other matrices in the data subfolder).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483632213:165,benchmark,benchmarks,165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483632213,1,['benchmark'],['benchmarks']
Testability,We ran the following command:; ```; mmseqs easy-cluster orig_seqs.fasta 80ANI_cluster_nospace tmp --spaced-kmer-mode 0 --min-seq-id 0.8 --cov-mode 1 -c 0.8; ```. And it looks fine. Could you please post the whole log of the new run?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/858#issuecomment-2210375133:213,log,log,213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/858#issuecomment-2210375133,1,['log'],['log']
Testability,"What exactly are you doing there? Is this a nucl-nucl or nucl-protein search? MMseqs2 will usually take characters until the first whitespace in the FASTA header as the identifier (if it does not recognize the format, it has a separate parsing logic for e.g. Uniprot format etc). I'd suggest you write a simple `awk` script that trims the suffix.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773916:244,log,logic,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773916,1,['log'],['logic']
Testability,"What info would you need?; I just heard from a colleague that you must know the DB, it's the CAZy internal database. We want to replace the blast search for the initial step of our curation with something faster, so that's why we testing mmseqs right now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592530791:230,test,testing,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592530791,1,['test'],['testing']
Testability,"What parameters did you use (the log doesn't show the call to `mmseqs (easy-)cluster`)? What MMseqs2 version/commit is this (please compile from a git checkout if you compile from source, not by downloading the tar.gz/zip)?. It seems like you are using the single step clustering, that should be much slower than the cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075:33,log,log,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075,1,['log'],['log']
Testability,When I run your example I just end up with a single cluster. . ```; GCF_001249795.1_3002_8_6_genomic_02902 GCF_001249795.1_3002_8_6_genomic_02902; GCF_001249795.1_3002_8_6_genomic_02902 GCF_001259475.1_4370_2_2_genomic_00977; ```. Also the log you posted indicates that there is just one cluster. ```; Size of the sequence database: 1; Size of the alignment database: 1; Number of clusters: 1; ```. Could you please post your TSV output?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391775959:240,log,log,240,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391775959,1,['log'],['log']
Testability,"When built with just sse2 or sse3, I'm seeing hangs. No cpu, disk, or network activity. Deadlock?. Built with -march=native, it seems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: fr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:171,TEST,TEST,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,11,['TEST'],['TEST']
Testability,"With your patches and building with GCC + SSE3 only, all tests pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:57,test,tests,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,12,"['TEST', 'test']","['TEST', 'tests']"
Testability,"X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single output (but larger than the one produced from server):; [log_easysearch2.txt](https://github.com/user-attachments/files/16692626/log_easysearch2.txt). ## Context; Posts with similar issues but unanswered (this looks sort of a common problem): ; [https://github.com/soedinglab/MMseqs2/issues/870](url); [https://github.com/soedinglab/MMseqs2/issues/702](url). ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):ffb05619cadadd8655b8719818ed566caaa6d0a6 (static build with AVX2, https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Supports AVX2 and SSE. 64G RAM; * Operating system and version: Ubuntu 20.04.6 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:1892,Log,Log,1892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['Log'],['Log']
Testability,"Yeah, trying to pre-compute the index for colabfold proved to be unrealistic. Thanks for the suggestion. My goal was to perform a 6-frame translation search using ColabFold as the target database. But profiles use too much memory (more distinct k-mers?) and the consensus sequences probably won't be sensitive enough (I need to benchmark). Unless I'm doing something wrong. Out of curiosity, is the profile-profile search documented somewhere? From what I understand it builds a profile by expanding the alignment in the first iteration and then uses this profile as query. But because ColabFold doesn't include a profile database, I wonder what are the target profiles in the subsequent iterations.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479:328,benchmark,benchmark,328,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/627#issuecomment-1289892479,1,['benchmark'],['benchmark']
Testability,"Yes, could you please upload the whole log as file. I need to see the exact runtimes of the prefilter and alignment in order to reason about it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408828471:39,log,log,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408828471,1,['log'],['log']
Testability,"Yes, please test the most recent version on the master branch. We fixed a LCA bug. . We will release version 11 of mmseqs2 by the end of the week.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048:12,test,test,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579539048,1,['test'],['test']
Testability,"Yes, we have. It failed when prefiltering the `NEWDB.newSeqs` against `OLDDB.repSeq` step. We didn't modify anything but `--local-tmp` and a fresh `tmp` folder. We are updating a clustering result. Here is the [log](https://gist.github.com/genomewalker/5080c53898f03f388e3e8f58c132c800)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-488063001:211,log,log,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-488063001,1,['log'],['log']
Testability,"Yes, you are indeed right. I clarified with @martin-steinegger, he benchmarked the profile inclusion E-value and saw that the higher inclusion threshold was improving performance. The performance would get worse with inclusion E-values higher than 0.01 though. Your understanding in your second paragraph is right.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612:67,benchmark,benchmarked,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675#issuecomment-1459443612,1,['benchmark'],['benchmarked']
Testability,"You can also run GDB non-interactively (if thats the issue):; ```; COMMAND='mmseqs addtaxonomy ""data/databases/gtdb"" ""data/04_taxgenes/contigs_tax/latest/result_aln_swapped_sum"" ""data/04_taxgenes/contigs_tax/latest/result_aln_swapped_sum_tax"" --tax-lineage 0 --lca-ranks species,genus,family,order,class,phylum,superkingdom --pick-id-from 1 --compressed 0 --threads 48 -v 3'; gdb -batch -ex ""run"" -ex ""bt"" --args ${COMMAND} 2>&1 > output.log; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832082425:438,log,log,438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-832082425,1,['log'],['log']
Testability,You can download the precompiled static binary that contains the fix (and latest git changes) at https://mmseqs.com/latest in about an hour when all tests pass through successfully.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068:149,test,tests,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068,1,['test'],['tests']
Testability,"You can use https://gist.github.com to post the log. . Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506278783:48,log,log,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506278783,1,['log'],['log']
Testability,You could try to compare it with the single step clustering `--single-step-clustering`. But the regular Linclust + cascaded clustering workflow is much faster. ; For benchmarking you could do this two things: ; (1) Just hardcode your sensitivities levels in `src/workflows/Cluster.cpp` line 195 for now.; (2) Remove the linclust call in `data/cascaded_clustering.sh`. But we might add this feature the next days.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-775057492:166,benchmark,benchmarking,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/409#issuecomment-775057492,1,['benchmark'],['benchmarking']
Testability,You have to supply a sequence database (e.g. `test/query/queryDB`) for the first parameter of the `taxonomy`. That sentence is also not very precise. You cannot use `taxonomyreport` directly with a search result. Either you use the `taxonomy` workflow or one of the the `lca` approach I mentioned if you are sure that you want to include every single homologous hit found into the taxonomic label (usually not a good idea).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771853116:46,test,test,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771853116,1,['test'],['test']
Testability,You mean a whole profile database right? How many entries are contained in that database?. You should be able to follow the same advice as for the Pfam database:; https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam. `-k 5` will trade of a bit of sensitivity for much smaller memory requirements. You can index the profile database for faster repeated searches. This should scale well for a couple hundred thousand profiles. For searches against millions of profiles we will hopefully have a different solution soon. There is still some benchmarking to do before its ready for prime time.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458974265:577,benchmark,benchmarking,577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-458974265,1,['benchmark'],['benchmarking']
Testability,"Your initial idea is sound. The only problem is that `extractalignedregion` does not really support it since it was built for one very specific purpose and should be generalized. I started working on that though I don't quite have time to finish it up. I have an idea for a hack though:; ```; mmseqs prefixid aln aln.tsv --tsv; awk '{ $1 = NR++; print $0; }' aln.tsv > aln_new.tsv; mmseqs tsv2db aln_new.tsv aln_new --output-dbtype 5; mmseqs extractalignedregion query target aln_new target_new --threads 1; awk '{ print $2; }' aln.tsv > target_ids.tsv; mmseqs createsubdb target_ids.tsv target_h target_new_h; sort -k2,2 target_new_h.index | awk '{ $1 = NR++; print $0; }' > target_new_h.index_new; mv -f target_new_h.index_new target_new_h.index; mmseqs cluster target_new clu tmp; ```; I wrote this down without testing, but this should create a valid domain sequence database from the alignment result. If you are interested in actually fixing the `extractalignedregion` module in the MMseqs2 codebase then I could also try guiding you through that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504:815,test,testing,815,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504,1,['test'],['testing']
Testability,"[Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:4145,Test,Testdata,4145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,[mmseqs.log](https://github.com/soedinglab/MMseqs2/files/2240955/mmseqs.log),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408835507:8,log,log,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408835507,2,['log'],['log']
Testability,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231:9,log,log,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231,3,"['log', 'test']","['log', 'tests']"
Testability,"[prot.txt](https://github.com/soedinglab/MMseqs2/files/1844193/prot.txt). here is one smaller version with 10,000 sequences, i tested , same problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/76#issuecomment-375857330:127,test,tested,127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/76#issuecomment-375857330,1,['test'],['tested']
Testability,"_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bin/sh is dash, not bash. dash does not support ""let"". I recommend changing the first line of ""blastp.sh"" from ""#!/bin/sh -ex"" to ""#!/bin/bash -ex""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:5991,test,test,5991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"`--allow-deletion` is still quite experimental and not well tested. For this use case, I would recommend you to create unaligned FASTA clusters with `createseqfiledb` and then align those with an established MSA aligner (such as ClustalO). The `apply` module might help in calling the aligner on each cluster. This is basically the workflow for creating the Uniclust30 alignments that are then turned into HMM profiles for usage in HH-suite. `result2msa` should be used for its center-star alignments based on a representative sequence.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/167#issuecomment-465147059:60,test,tested,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167#issuecomment-465147059,1,['test'],['tested']
Testability,"`-s 1` is usually not that useful. We just published a benchmark of the profile search with the MMseqs2 Webserver:; https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty1057/5280135. Around `-s 6` would be the preferred sensitivity level, though that might have too steep memory requirements for 1.2M profiles. We will have a different kind of profile search soon with different trade-offs for larger databases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-459396451:55,benchmark,benchmark,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/156#issuecomment-459396451,1,['benchmark'],['benchmark']
Testability,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:321,log,log,321,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,2,['log'],['log']
Testability,"`cat test.fasta`. ```; >s1; TCEVWGPTSPKLMLSLKLENKEAKVSKREKAVWVLNPEAGMWQCLLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGL; >s2; LLSDSGQVLLESNIKVLPTWSTPVQPMALIVLGGVAGLLLFIGLGIFFCVRCRHRRRQAERMSQIKRLLSEKKTCQCPHRFQKTCSPI; ```; The last 44 residues of s1 perfectly match the first 44 residues of s2. ```; mmseqs createdb ../hit_calling_redo_v2/test.fasta test_cd4; mmseqs search test_cd4 test_cd4 resultDB tmp; mmseqs convertalis test_cd4 test_cd4 resultDB result.m8; cat result.m8; ```. ```; s2 s2 1.000 88 0 0 1 88 1 88 1.067E-63 181; s2 s1 0.930 44 3 0 1 44 45 88 7.487E-28 88; s1 s1 1.000 88 0 0 1 88 1 88 4.412E-63 179; s1 s2 0.907 44 4 0 45 88 1 44 6.035E-27 86; ```. ## Expected Behavior. The alignments are correct, but 0 mismatches should be reported. ## Current Behavior. Either 3 or 4 mismatches reported for s1 - s2 alignment. ## Steps to Reproduce (for bugs); See above. ## Your Environment; MMseqs2 Version: f5f780acd64482cd59b46eae0a107f763cd17b4d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/737:5,test,test,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/737,2,['test'],['test']
Testability,"`mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1799,test,test,1799,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:1060,log,logging,1060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,1,['log'],['logging']
Testability,"abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1173,test,tests,1173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['test'],['tests']
Testability,"again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1340,test,test,1340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"aining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1219,test,test,1219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ake versions used and their invocation: GNU gcc 10.2.1, cmake 3.18.4; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```text; -- The CXX compiler identification is GNU 10.2.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CH",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:4385,Test,Test,4385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,14,['Test'],['Test']
Testability,al: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FIL,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1978,TEST,TEST,1978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"alse; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo cou",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:2017,test,test,2017,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,2,['test'],['test']
Testability,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1239,test,test,1239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['test'],['test']
Testability,art 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per que,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4733,test,test,4733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,assert always true,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/295:0,assert,assert,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295,1,['assert'],['assert']
Testability,"at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Steps to Reproduce (for bugs). **Install**. ```bash; mamba create -y -n mmseqs2 -c conda-forge -c bioconda -c defaults mmseqs2==15.6f452; conda activate mmseqs2; ```. **DB setup**; ```bash; mmseqs databases GTDB mmseqs2-GTDB-db tmp; ```. **Making small test data**; ```bash; wget -O e-coli.fasta.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/005/845/GCA_000005845.2_ASM584v2/GCA_000005845.2_ASM584v2_genomic.fna.gz. gunzip e-coli.fasta.gz. grep -c "">"" e-coli.fasta; # there is only one contig, so safe to just pull some lines. printf "">contig_1\n"" > contigs.fasta; sed -n '100,1200p' e-coli.fasta >> contigs.fasta; printf "">contig_2\n"" >> contigs.fasta; sed -n '20000,20600p' e-coli.fasta >> contigs.fasta; printf "">contig_3\n"" >> contigs.fasta; sed -n '26000,26200p' e-coli.fasta >> contigs.fasta; # that's 3 contigs: 88,000 bps; 48,000 bps; and 16,000 bps; ```. **Running the program**; ```bash; mmseqs easy-taxonomy contigs.fasta mmseqs2-GTDB-db GTDB-tax-result tax-tmp \; --threads 20 --tax-lineage 1 --compressed 1 --remove-tmp-files 0; ```. ## MMseqs Output (for bugs). Fails at aggregatetaxweights with the following:. ```; Missing key 0 in tax result ] 0.00% 1 eta -; Error: aggregatetaxweights died; Error: Search died; ```. Full log here: [easy-tax-full-log-error.txt](https://github.com/soedinglab/MMseqs2/files/14013481/easy-tax-full-log-error.txt). ## Context; Trying to get taxonomy output via GTDB with lineage info added. Using the NCBI database completes successfully on the same input query. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. - mmseqs2 version 15.6f452 installed with conda; - working on Ubuntu 20.04.4 LTS; - 500 GB memory",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806:1823,log,log,1823,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806,3,['log'],"['log', 'log-error']"
Testability,"ccess; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:2317,assert,assert,2317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,1,['assert'],['assert']
Testability,"ce alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1119,test,test,1119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ce; nrDB nrDB.idx.0 nrDB.idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2044,log,log,2044,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['log'],['log']
Testability,"ces from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:1197,test,testing,1197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['test'],['testing']
Testability,"ces, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1472,test,test,1472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"computed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145276/log-mmseqs-msa-server.log)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:2954,log,log-mmseqs-msa-server,2954,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,4,['log'],"['log', 'log-mmseqs-msa-server']"
Testability,"contig. Here you can find the [contig](https://github.com/soedinglab/MMseqs2/files/6821433/477fb4bafa.assm.refined.fasta.gz) and the [log](https://github.com/soedinglab/MMseqs2/files/6821435/477fb4bafa.contig-taxonomy.GTDB.log). I don't think it is related to https://github.com/soedinglab/MMseqs2/issues/31 or https://github.com/soedinglab/MMseqs2/issues/447 . The DB seems fine. I processed hundreds of samples using the same MMseqs2 command, and I only had problems in files with one contig. The samples are complicated to assemble, and sometimes I only can recover one contig. ## Current Behavior. When running ; ```; mmseqs easy-taxonomy /vol/cloud/geogenetics/KapK/results/assembly-refined/477fb4bafa.assm.refined.fasta /vol/cloud/geogenetics/DBs/tax/GTDB /vol/cloud/geogenetics/KapK/results/contig-taxonomy/477fb4bafa.GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB --tax-lineage 2 --majority 0.8 --vote-mode 1 --lca-mode 3 --orf-filter 1 --lca-ranks superkingdom,phylum,class,order,family,genus --threads 32 >> /vol/cloud/geogenetics/KapK/results/logs/contig-taxonomy/477fb4bafa.contig-taxonomy.GTDB.log; ```; it produces:; ```; prefilter /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/orfs_filter /vol/cloud/geogenetics/DBs/tax/GTDB /dev/shm/tmp/contig-taxonomy/477fb4bafa.tax.GTDB/4763407151393146292/taxonomy_tmp/18161437552067976221/tmp_taxonomy/11319500873502674595/tmp_hsp1/8343158458908834442/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 2.0. Query database size: 0 type: Aminoacid; Target s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/473:1155,log,logs,1155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/473,1,['log'],['logs']
Testability,"cy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Filter column 	1; Column to take 	-1; Filter regex 	^.*$; Positive filter 	true; Filter file 	/tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy; Beats first 	false; Mapping file 	; Threads 	36; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	; Swap fields of search results 	; Replace transitively 	. Filtering with a filter files.; ...Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diago",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:8558,test,test,8558,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"d *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSW",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1292,test,test,1292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"d: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 0s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 9s)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2315,TEST,TEST,2315,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:4465,Test,Testdata,4465,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,"db tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa.gz$' ${THREADS_PAR}` (approx. line 374). Simila",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1452,log,log,1452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['log'],['log']
Testability,de identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1641,test,test,1641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"debug back trace:. >gdb -r --args mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...expanding to full symbols...done.; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x00000000005",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:953,log,logiciel,953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,1,['log'],['logiciel']
Testability,"e 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Cover",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:1811,test,test,1811,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"e `--min-seq-id` is 0.7 and 0.5. The aligned for each of the 3:; ```; mmseqs align ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD} ${DB_NAME}_clu${ID_THRESHOLD}_aln -a -e inf; ```; However, it's on the next step that it seems to stall. ; ```; mmseqs result2profile ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD}_aln ${DB_NAME}_clu${ID_THRESHOLD}_prof --threads 32; ```. I have 3 machines running in parallel to process these databases at the same time, and they're all stuck on exactly the same point. With CPU utilisation suggesting only 1-2 cores are being used. ; ```; PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 7869 miles 20 0 377.2g 97.8g 46.6g S 88.2 51.8 14d+18h mmseqs ; ```; Here is the output log of the `results2profile`:; ```; ~~ pldb70 Creating Profile: Thu 16 May 09:59:16 BST 2024; result2profile pldb pldb pldb_clu70_aln pldb_clu70_prof --threads 32 . MMseqs Version: 998c50a01da760713ca2c7580801e94555d23c4d; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; E-value threshold 0.001; Mask profile 1; Profile E-value threshold 0.001; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Preload mode 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Threads 32; Compressed 0; Verbosity 3. Query database size: 108337839 type: Aminoacid; Target database size: 108337839 type: Aminoacid; [================================================================; ```. In my testing this step was as fast as the others, so I'm confused why this is taking days and seemingly not moving. One of the 3 machines is using mmseqs version 15.6f452, the other two are using 998c50a01da760713ca2c7580801e94555d23c4d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848:2222,test,testing,2222,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848,1,['test'],['testing']
Testability,e alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/94,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:14233,test,test,14233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"e docker version (either avx, sse2 or sse41 versions), and the self-compiled version. This also happens when a random aminoacid sequence of equivalent length is used as input, so I'm excluding caching on the colabfold api server side as a cause for it to be so fast. ## Steps to Reproduce (for bugs); ```; cat <<'EOF' >mmseq_in.fasta; >UbcH7_Hs_1; MAASRRLMKELEEIRKCGMKNFRNIQVDEANLLTWQGLIVPDNPPYDKGAFRIEINFPAEYPFKPPKITFKTKIYHPNIDEKGQVCLPVISAENWKPATKTDQVIQSLIALVNDPQPEHPLRADLAEEYSKDRKKFCKNAEEFTKKYGEKRPVD; >Ub; MQIFVKTLTGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGKQLEDGRTLSDYNIQKESTLHLVLRLRGG; EOF; mkdir -p out/tmp; mmseqs createdb mmseqs_in.fasta out/qdb; vmtouch -ldw /path/to/database/uniref30_2202_db*idx*; mmseqs search out/qdb /path/to/database/uniref30_2202_db out/res out/tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. ```. ## MMseqs Output (for bugs); attached; [out_apptainer_run.log](https://github.com/soedinglab/MMseqs2/files/10446743/out_apptainer_run.log). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. mmseqs2 docker:; 7e2840992948ee89dcc336522dc98a74fe0adf00. self-compiled:; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02; ed4c55fa21c402e0a9497e5db5cd4b687a75fa02-MPI. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.21.0; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. && make && make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; tried multiple servers, wit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658:2617,log,log,2617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658,1,['log'],['log']
Testability,"e. However, bit scores seems to be in-comparable across result blocks. There can be huge jumps in E-value (and bit score) as we walk down on the list of targets for a query protein. Target proteins with outstanding Bit Score in the example for query WP_148290433.1:; WP_004066529.1 (bit score: 323, previous hit: 94); WP_004069050.1 (bit score: 207, previous hit: 53 ). ## Steps to Reproduce (for bugs). Please run this script for example (comparing Thermococcus litoralis and Pyrococcus furiosus proteins, using 3 iterations); #download protein files; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-define",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:1441,log,log,1441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,e=10000); Needed memory (14434761936 byte) of total memory (270462795776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per quer,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:4344,test,test,4344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer length 	0; k-score 	21",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1807,test,test,1807,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"ed: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:2433,TEST,TEST,2433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,edundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --threads 128 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 854 0s 6ms; Clustering step 2; [=================================================================] 100.00% 784 0s 45ms; Write merged clustering; [=================================================================] 100.00% 1.39K 0s 175ms; Time for merging to clu: 0h 0m 0s 119ms; Time for processing: 0h 0m 0s 357ms; Remove temporary files; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/94204286487,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:13425,test,test,13425,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"eems to mostly work:. SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 23s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 37s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1117,TEST,TEST,1117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,"elized protein sequence searches and clustering of huge protein sequence d; ata sets. Please cite: M. Steinegger and J. Soding. MMseqs2 enables sensitive protein sequ; ence searching for the analysis of massive data sets. Nature Biotechnology, doi:; 10.1038/nbt.3988 (2017). MMseqs2 Version: b0b8e85f3b8437c10a666e3ea35c78c0ad0d7ec2; © Martin Steinegger (martin.steinegger@snu.ac.kr). usage: mmseqs <command> [<args>]. Easy workflows for plain text input/output; easy-search Sensitive homology search; easy-linsearch Fast, less sensitive homology search; easy-cluster Slower, sensitive clustering; easy-linclust Fast linear time cluster, less sensitive clustering; easy-taxonomy Taxonomic classification; easy-rbh Find reciprocal best hit; …; ```; ## Current Behavior; *no output*; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; Zip file for respective download was extracted, and upon navigating to the mmseqs directory the '--help' help argument was input to test the installation, resulting in no output. ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; - No output is the problem; ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; On this machine I have been having an ongoing issue in which cmd is unable to open in any scenario besides using another user account.; ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): none; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled ; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: n/a; * Server specifications (especially CPU support for AVX2/SSE and amount of syste",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574:1195,test,test,1195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574,1,['test'],['test']
Testability,ent database...; done.; Clustering mode: Set Cover; ...................................................................................................	1 Mio. sequences processed; .............; Sort entries. Find missing connections. Found 1770113 new connections. Reconstruct initial order.; ...................................................................................................	1 Mio. sequences processed; .............; Add missing connections.; ...................................................................................................	1 Mio. sequences processed; .............; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1132486; Size of the alignment database: 1132486; Number of clusters: 32435; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Filter colu,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:7436,test,test,7436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"ent mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	2147483647; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 10 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0 h 0 m 0 s. All sequences processed. 46389 alignments calculated.; 39919 sequence pairs passed the thresholds (0.860527 of overall calculated).; 1.23074 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/aln /tmp/test/9465698490903227639/linclust/831108043510341376/clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...; Sort entries. Find missing connections. Found 7484 new connections. Reconstruct initial order.; ...; Add missing connections.; ...; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 32435; Size of the alignment database: 32435; Number of clusters: 27782; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/clu /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust /tmp/test/946569849",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:11873,test,test,11873,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,3,['test'],['test']
Testability,ent-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 128 --compressed 0 -v 3. Compute score and coverage; Query database size: 854 type: Aminoacid; Target database size: 854 type: Aminoacid; Calculation of alignments; Compute split from 0 to 854; [=================================================================] 100.00% 854 0s 130ms; Time for merging to aln_tmp_0: 0h 0m 0s 158ms. 986 alignments calculated.; 937 sequence pairs passed the thresholds (0.950304 of overall calculated).; 1.097190 hits per query sequence.; Time for merging to aln: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 84ms; clust roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/aln roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 854 0s 5ms; Sort entries; Find missing connections; Found 83 new connections.; Reconstruct initial order; [=================================================================] 100.00% 854 0s 4ms; Add missing connections; [=================================================================] 100.00% 854 0s 1ms. Time for read in: 0h 0m 0s 23ms; Total time: 0h 0m 0s 40ms. Size of the sequence database: 854; Size of the alignment database: 854; Number of clusters: 784. Writing results 0h 0m 0s 0ms; Time for merging to clust: 0h 0m 0s 17ms; Time for processing: 0h 0m 0s 89ms; mergeclusters roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:12416,test,test,12416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/109:11733,Test,Test,11733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109,24,['Test'],['Test']
Testability,er mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...................................................................................................	1 Mio. sequences processed; .............; Sort entries. Find missing connections. Found 1770113 new connections. Reconstruct initial order.; ...................................................................................................	1 Mio. sequences processed; .............; Add missing connections.; ...................................................................................................	1 Mio. sequences processed; .............; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1132486; Size of the alignment database: 1132486; Number of clusters: 32435; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/order_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter1 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 --filter-file ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:7346,test,test,7346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"er of identical matches between query and target sequences. ## Current Behavior; MMSeqs always reports the ""nident"" (number of identical residues) value to be 0. ## Steps to Reproduce (for bugs); #Please run bash script below to reproduce error; #!/bin/bash; #download protein sequences from Pyrococcus furiosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubunt",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:1132,log,log,1132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['log'],['log']
Testability,"er. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1371,test,test,1371,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"es_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1340,test,tests,1340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,2,['test'],['tests']
Testability,est HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFile,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:2438,Test,Test,2438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,2,['Test'],['Test']
Testability,"f Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3485,test,testMMS,3485,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"f numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp-files 1 . splitsequence tmp/9586069750715556969/target tmp/9586069750715556969/search_tmp/1133007989511978496/target_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:4816,test,test,4816,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1545,test,test,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,fasta` with some test RNA sequences:; ```; >4QEI_2; GCGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG; >6Q8V_1; GGCGAAGAACCGGGGAGCC; >5DO4_3; GGGAAXAAAGXUGAAGUXXUUAXXX; >1VQL_1; UUGGCUACUAUGCCAGCUGGUGGAUUGCUCGGCUCAGGCGCUGAUGAAGGACGUGCCAAGCUGCGAUAAGCCAUGGGGAGCCGCACGGAGGCGAAGAACCAUGGAUUUCCGAAUGAGAAUCUCUCUAACAAUUGCUUCGCGCAAUGAGGAACCCCGAGAACUGAAACAUCUCAGUAUCGGGAGGAACAGAAAACGCAAUGUGAUGUCGUUAGUAACCGCGAGUGAACGCGAUACAGCCCAAACCGAAGCCCUCACGGGCAAUGUGGUGUCAGGGCUACCUCUCAUCAGCCGACCGUCUCGACGAAGUCUCUUGGAACAGAGCGUGAUACAGGGUGACAACCCCGUACUCGAGACCAGUACGACGUGCGGUAGUGCCAGAGUAGCGGGGGUUGGAUAUCCCUCGCGAAUAACGCAGGCAUCGACUGCGAAGGCUAAACACAACCUGAGACCGAUAGUGAACAAGUAGUGUGAACGAACGCUGCAAAGUACCCUCAGAAGGGAGGCGAAAUAGAGCAUGAAAUCAGUUGGCGAUCGAGCGACAGGGCAUACAAGGUCCCUCGACGAAUGACCGACGCGCGAGCGUCCAGUAAGACUCACGGGAAGCCGAUGUUCUGUCGUACGUUUUGAAAAACGAGCCAGGGAGUGUGUCUGCAUGGCAAGUCUAACCGGAGUAUCCGGGGAGGCACAGGGAAACCGACAUGGCCGCAGGGCUUUGCCCGAGGGCCGCCGUCUUCAAGGGCGGGGAGCCAUGUGGACACGACCCGAAUCCGGACGAUCUACGCAUGGACAAGAUGAAGCGUGCCGAAAGGCACGUGGAAGUCUGUUAGAGUUGGUGUCCUACAAUACCCUCUCGUGAUCUAUGUGUAGGGGUGAAAGGCCCAUCGAGUCCGGCAACAGCUGGUUCCAAUCGAAACAUGUCGAAGCAUGACCUCCGCCGAGGUAGUCUGUGAGGUAGAGCGACCGAUUGGUGUGUCCGCCUCCGAGAGGAGUCGGCACACCUGUCAAACUCCAAACUUACAGACGCCGUUUGACGCGGGGAUUCCGGUGCGCGGGGUAAGCCUGUGUACCAGGAGGGGAACAACCCAGAGAUAGGUUAAGGUCCCCAAGUGUGGAUUAAGUGUAAUCCUCUGAAGGUGGUCUCGAGCCCUAGACAGCCGGGAGGUGAGCUUAGAAG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/611:646,test,test,646,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/611,1,['test'],['test']
Testability,filtering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. qStarting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit fal,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4408,test,test,4408,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,finished testing,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/880#issuecomment-2319821146:9,test,testing,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/880#issuecomment-2319821146,1,['test'],['testing']
Testability,"first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1534,test,test,1534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,fix rbh logic by removing resAB_sort process,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/685:8,log,logic,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/685,1,['log'],['logic']
Testability,"fold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1025,log,log,1025,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,3,"['log', 'test']","['log', 'logging', 'test']"
Testability,"fold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; wh",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1127,log,logging,1127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,1,['log'],['logging']
Testability,"g building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short project",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1036,test,tested,1036,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,1,['test'],['tested']
Testability,"github.com>; Sent: Sunday, June 30, 2019 6:46:32 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). It would help if you could provide a log file. So I can see which module is slow. The database does not stay necessarily memory. The OS can reuse the memory. The memory just got memory mapped by mmseqs2 (depending on the --db-load-mode). —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOQNQW6KRHGR3W5473P5ESTPA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4UNEA#issuecomment-507070096>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMYW6UIXY2PZFDTSZDP5ESTPANCNFSM4H333Q6Q>. createdb test_reads/S1E3-S3_assembled_kneaddata.fastq mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [	1 Mio. sequences processed; 	2 Mio. sequences processed; 	3 Mio. sequences processed; 	4 Mio. sequences processed; 	5 Mio. sequences processed. Time for merging files: 0h 0m 4s 846ms; Time for merging files: 0h 0m 35s 669ms; Time for merging files: 0h 0m 1s 887ms; Time for processing: 0h 1m 53s 245ms; search mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Add backtrace 	true; Alignment mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:1370,test,test-megan-out-,1370,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['test'],['test-megan-out-']
Testability,"hed with `core dumped` error and reports `Error: createbintaxonomy failed`. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; mmseqs createdb ""uniprot_2024_03.fasta"" seqdb; ```; then; ```; mmseqs createtaxdb seqdb tmp ; ```. We attempted to vary `--tax-db-mode`, `--tax-mapping-mode`, and `--threads` parameters but observed the same behavior. Any help would be highly appreciated. We are able to reproduce this issue with a minimal database containing 1000 sequences. ## MMseqs Output (for bugs). ```; > mmseqs createtaxdb seqdb tmp ; createtaxdb seqdb tmp . MMseqs Version: 15.6f452; NCBI tax dump directory; Taxonomy mapping file ; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 48; Verbosity 3. Loading nodes file ... Done, got 2601214 nodes; Loading merged file ... Done, added 79743 merged nodes.; Loading names file ... Done; mmseqs: malloc.c:2379: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.; Aborted (core dumped); Error: createbintaxonomy failed; ```. ## Context. We are trying to create a custom taxonomy database for MSA, such that the resulting .a3m files contain taxonomy information. Is a taxonomy database already available for download for uniprot_2024_03 for similar releases?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. Linux 64-bit, 256G memory; MMseqs Version: 15.6f452",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871:1089,Assert,Assertion,1089,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871,1,['Assert'],['Assertion']
Testability,hey ! I am struggling using mmseqs map for the same issue. I tried what you @milot-mirdita suggested but apparently I am doing something wrong.; ```; mmseqs map queryDB resultDB tmp -e 10 --min-seq-id 0.1 . mmseqs filterdb resultDB bestResultDB --extract-lines 20 . mmseqs createsubdb bestResultDB queryDB queryDB_sub; rm -f -- queryDB_sub_h*; mmseqs createsubdb bestResultDB queryDB queryDB_sub_h. awk '{ print $1 }' bestResultDB.[0-9]* | sort -u > subset.list; mmseqs createsubdb subset.list queryDB queryDB_sub. mmseqs convert2fasta mmseqs convert2fasta queryDB_sub test.fasta. ```; In the fasta file I have 20 sequences but it is the same one repeated. ; Thanks a lot !,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/392#issuecomment-1693133548:569,test,test,569,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/392#issuecomment-1693133548,1,['test'],['test']
Testability,"hi @martin-steinegger. only for tests.... I would need the same filtering options, cascading clustering, and parseable outputs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/22#issuecomment-369842506:32,test,tests,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/22#issuecomment-369842506,1,['test'],['tests']
Testability,"hreads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; ```; And then :; `mmseqs createtsv panproteome.db panproteome.db families_kmer-per-seq80_max-seqs300_2.db families_kmer-per-seq80_max-seqs300_2.tsv --first-seq-as-repr true`. ```; Program call:; panproteome.db panproteome.db families_kmer-per-seq80_max-seqs300_2.db families_kmer-per-seq80_max-seqs300_2.tsv --first-seq-as-repr true . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; first sequence as respresentative	true. Query file is panproteome.db; Data file is families_kmer-per-seq80_max-seqs300_2.db; Start writing file to families_kmer-per-seq80_max-seqs300_2.tsv; Done. ```; Then i obtain :. `grep ""GCF_002025345.1_ASM202534v1_genomic_04754"" families_kmer-per-seq80_max-seqs300_2.tsv`. ```; GCF_002025345.1_ASM202534v1_genomic_04754	GCF_002025345.1_ASM202534v1_genomic_04754; ```; But if i use MMseqs2 by remplacing /tmp/test by /tmp/clu and families_kmer-per-seq80_max-seqs300_2.db by panproteome.db_clu it produces the same result as you. `mmseqs cluster panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300`. ```; Program call:; panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Thresho",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:19774,test,test,19774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"idx.13 nrDB.idx.6 nrDB.idx.index nrDB_taxonomy. ```. I know that this is at least a valid aminoacid database since I an search against it and get hits. However, I cannot use the `taxonomyreport` command on the results since it tells me that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2071,test,test,2071,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,1,['test'],['test']
Testability,"ign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 3 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 2 --compressed 0 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Compute score, coverage and sequence identity; Query database size: 12189231 type: Aminoacid; Target database size: 134985288 type: Aminoacid; Calculation of alignments; [] 3h 56m 20s 209ms; Time for merging files: 0h 0m 13s 891ms. 138555514 alignments calculated.; 54047267 sequence pairs passed the thresholds (0.390077 of overall calculated).; 4.434018 hits per query sequence.; Time for processing: 3h 56m 39s 222ms; offsetalignment mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/aln mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB --chain-alignments 0 --merge-query 1 --search-type 0 --threads 2 --compressed 0 --db-load-mode 3 -v 3 . Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 1s 475ms; Writing results to: mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB; [] 5h 36m 42s 260ms. Time for merging files: 0h 0m 5s 864ms; Time for processing: 5h 37m 8s 744ms; convertalis mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB /home/dhwani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3-s1.m8 --db-load-mode 3 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Databa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:7215,test,test-megan-out-,7215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['test'],['test-megan-out-']
Testability,"ile in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /eb",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1086,test,tests,1086,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['test'],['tests']
Testability,iles (x86)\mmseqs\\bin/strings: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/stty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:13049,test,test,13049,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['test'],['test']
Testability,"ime for alignments calculation: 0 h 1 m 58s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/aln_step0 /tmp/test/9465698490903227639/clu_step0 --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ..; Sort entries. Find missing connections. Found 0 new connections. Reconstruct initial order.; ..; Add missing connections.; ..; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 27782; Size of the alignment database: 27782; Number of clusters: 22311; Program call:; panproteome.db /tmp/test/9465698490903227639/clu /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/clu_step0 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; ```; And then :; `mmseqs createtsv panproteome.db panproteome.db families_kmer-per-seq80_max-seqs300_2.db families_kmer-per-seq80_max-seqs300_2.tsv --first-seq-as-repr true`. ```; Program call:; panproteome.db panproteome.db families_kmer-per-seq80_max-seqs300_2.db families_kmer-per-seq80_max-seqs300_2.tsv --first-seq-as-repr true . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; first sequence as respresentative	true. Query file is panproteome.db; Data file is families_kmer-per-seq80_max-seqs300_2.db; Start writing file to families_kmer-per-seq80_max-seqs300_2.tsv; Done. ```; Then i obtain :. `grep ""GCF_002025345.1_ASM202534v1_genomic_04754"" families_kmer-per-seq80_max-seqs300_2.tsv`. ```; G",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:18591,test,test,18591,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,3,['test'],['test']
Testability,"ime: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1516,TEST,TEST,1516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"ince it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would be important to rank all hits of a query based on a globally valid significance measure that would allow the comparison of Hit-Target significances across iterations as well. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020); * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 16 GB RAM, i5-3320M CPU; * Operating system and version:; Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:4166,test,tested,4166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['test'],['tested']
Testability,"index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1284,test,test,1284,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,ing 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1707,test,test,1707,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,ing CXX compile features - done; -- The C compiler identification is GNU 10.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Project Directory: /opt/matchy/research/MMseqs-playground/lib/mmseqs; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP; -- ShellCheck not found; -- Configuring done; -- Generating done; -- Build files have been written to: /opt/matchy/research/MMseqs-playground/build; ```; * Operating system and version: Debian 11 bullseye,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/567:5080,Test,Test,5080,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/567,12,['Test'],['Test']
Testability,"ing the UniRef90 database. ## Current Behavior; After a first round of prefilter, rescorediagonal is executed, some merge steps are executed, new tmp directories are created, and the program dies partway through the second round of prefilter. ## Steps to Reproduce (for bugs); Downloaded the UniRef90 database with wget:; `wget https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz`. Decompressed with gunzip, then ran createdb:; `mmseqs createdb uniref90.fasta uniref90`; ; Augmented with taxonomic information (used -db-mode 0 because createbintaxonomy kept crashing as well):; `mmseqs createtaxdb uniref90 tmp --tax-db-mode 0`. Created database for my query sequences:; `mmseqs createdb KLEB_PO07_megahit.fasta KLEB_PO07_megahitDB`. Ran mmseqs taxonomy on cluster with slurm script:; ```; #!/usr/bin/env bash. #SBATCH --job-name=KLEB_PO07_mmseqs; #SBATCH --cpus-per-task=32; #SBATCH --mem=150G; #SBATCH --time=0-3:00; #SBATCH --output=KLEB_PO07_mmseqs.log; #SBATCH --error=KLEB_PO07_mmseqs.err. module load mmseqs2/15-6f452; taxDB=/home/sdwork/scratch/metagenomics/uniref_db/uniref90. mmseqs taxonomy KLEB_PO07_megahitDB $taxDB KLEB_PO07_megahit_result tmp; ```. ## MMseqs Output (for bugs); [Full output can be found in this gist.](https://gist.github.com/sean-workman/531e9d5fc73635dee8c000f9da137fe0). I also see this output in my error file:; `tmp/1193166584733320518/tmp_taxonomy/17149912652888480377/tmp_hsp1/10699950925961740214/blastp.sh: line 135: 8379 Bus error (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""`. ## Context; I created metagenomic assemblies using megahit and metaSPAdes. I am trying to get MMseqs2 working to do taxonomic classification. I am running on Digital Research Alliance of Canada clusters. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838:1068,log,log,1068,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838,1,['log'],['log']
Testability,ing works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2/build-mpi; ```. Output of following `make`:; ```; Scanning dependencies of target microtar; [ 1%] Building C object lib/microtar/CMakeFiles/microtar.dir/microtar.c.o; Linking C static library libmicrotar.a; [ 1%] Built target microtar; Scanning dependencies of target cacode; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/lubksb.cpp.o; [ 2%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/ludcmp.cpp.o; [ 3%] Building CXX object lib/cacode/CMakeFiles/cacode.dir/nrutil.cpp.o; [ 3%] Built target cacode; Scanning dependencies of target alp; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_dynprogprob.cpp.o; [ 3%] Building CXX object lib/alp/CMakeFiles/alp.dir/njn_random.cpp.o; [ 4%] Bui,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:3010,Test,Test,3010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,4,['Test'],['Test']
Testability,input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/aln /tmp/test/9465698490903227639/linclust/831108043510341376/clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...; Sort entries. Find missing connections. Found 7484 new connections. Reconstruct initial order.; ...; Add missing connections.; ...; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 32435; Size of the alignment database: 32435; Number of clusters: 27782; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/clu /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust /tmp/test/9465698490903227639/linclust/831108043510341376/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/test/9465698490903227639/clu_redundancy panproteome.db /tmp/test/9465698490903227639/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:12835,test,test,12835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,3,['test'],['test']
Testability,"iosus; wget -c https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/085/GCF_008245085.1_ASM824508v1/GCF_008245085.1_ASM824508v1_protein.faa.gz. #uncompress protein sequence; gunzip GCF_008245085.1_ASM824508v1_protein.faa.gz. #create MMSeqs database; mmseqs createdb GCF_008245085.1_ASM824508v1_protein.faa GCF_008245085.1 >createdb.log. #perform all_vs_all search on proteins of the genome; mmseqs search GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB /tmp >search.log. #export results to a custom text file Q H pident nident; mmseqs convertalis GCF_008245085.1 GCF_008245085.1 GCF_008245085.1.selfDB GCF_008245085.1.self.txt --format-output ""query,target,pident,nident"" >convertalis.log. #check output file; head GCF_008245085.1.self.txt. Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMSeqs log files are available upon request. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MD5sum for MMseqs2-master.zip: 1fe18027245969de6cea579b5f31a0df; (Latest version downloaded from GitHub on 8th Sept 2020). * For self-compiled and Homebrew: Compiler and Cmake sse4_2versions used and their invocation:; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); cmake version 3.5.1; **commands to compile**; mkdir build; cd build/; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/balintb ..; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Compiled and tested on a Lenovo T430 with 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/349:1426,log,log,1426,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/349,1,['log'],['log']
Testability,"iprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91:1104,log,logs,1104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91,1,['log'],['logs']
Testability,ir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so; -- Looking for BZ2_bzCompressInit in /usr/lib64/libbz2.so - found; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI_CXX: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpicxx.so;/usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1778,Test,Test,1778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,10,['Test'],['Test']
Testability,"ix.R < nucleotide.edit.mat > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1430,test,test,1430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"ize 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: panproteome.db; Target file: panproteome.db; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore1; ...................................................................................................	1 Mio. sequences processed; .............Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 3s; P",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:4931,test,test,4931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,2,['test'],['test']
Testability,"k my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 2s; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1499,TEST,TEST,1499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,3,['TEST'],['TEST']
Testability,"l time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for merging to pref_filter2: 0h 0m 0s 176ms; Time for processing: 0h 0m 0s 468ms; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; help",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:8010,test,test,8010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,lect n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - '[' -z /home/zcx/Program/MMseqs/2.0 ']'; - '[' 4 -ne 4 ']'; - '[' '!' -f queryDB ']'; - '[' '!' -f targetDB ']'; - '[' -f resultDB ']'; - '[' '!' -d tmp ']'; - export OMP_PROC_BIND=TRUE; - OMP_PROC_BIND=TRUE; ++ dirname queryDB; - cd .; ++ basename queryDB; - QUERY_FILE=queryDB; ++ pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; ++ pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - '[' 4 -le 4 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ']'; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30;,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:1968,test,test,1968,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,lib/zstd/programs/fileio.c: line 2303. assert(error>=0 || error<=1);,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/295:39,assert,assert,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/295,1,['assert'],['assert']
Testability,lse; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:1692,test,test,1692,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,ltDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81 297 57 0 15 311 18 314 2e-176 488; cand_290.fasta OR51V20_dog 74.84 306 77 0 7 312 8 313 4e-172 478; cand_290.fasta OR51V22_cow 76.92 299 69 0 13 311 14 312 1e-171 476; cand_290.fasta OR51V21_dog 76.14 306 73 0 4 309 5 310 1e-171 476; cand_290.fasta OR51V1_cow 77.23 303 69 0 9 311 10 312 2e-171 475; cand_290.fasta OR51V1_horse 77.89 303 67 0 9 311 10 312 3e-171 475; cand_290.fasta OR51V19P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V18P_dog 74.51 306 78 0 7 312 8 313 3e-169 470; cand_290.fasta OR51V1_chimp 76.85 311 72 0 2 312 10 320 2e-167 466; cand_290.fasta OR51V1_orang 75.00 312 78 0 1 312 7 318 5e-167 465; cand_290.fasta OR51V22_dog 78.79 297 63 0 15 311 16,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:1695,test,test,1695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678,1,['test'],['test']
Testability,"lumn 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; Create directory tmp/14943602774421092333/tmp_hsp1; search testdb /home/kabru/datenbank/silvadb tmp/14943602774421092333/first tmp/14943602774421092333/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . extractframes testdb tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs --forward-frames 1 --reverse-frames 1 --create-lookup 0 --threads 72 --compressed 0 -v 3 . [> ] 1.35% 55 e[> ] 1.28% 52 e[> ] 1.10% 45 e[> ] 1.08% 44 e[> ] 1.23% 50 e[=> ] 1.55% 63 e[> ] 1.03% 42 e[> ] 1.13% 46 e[=> ] 1.80% 73 e[=> ] 1.88% 76 e[=> ] 2.80% 113 [=> ] 2.83% 114 [> ] 1.15% 47 e[> ] 1.38% 56 e[=> ] 3.05% 123 [=> ] 3.08% 124 [> ] 1.48% 60 e[=> ] 1.60% 65 e[==> ] 3.28% 132 [=> ] 1.78% 72 e[=> ] 1.58% 64 e[==> ] 3.50% 141 [==> ] 3.55% 143 [==> ] 3.65% 147 [==> ] 3.70% 149 [==> ] 3.83% 154 [==> ] 3.88% 156 [=> ] 1.68% 68 e[> ] 1.50% 61 e[==> ] 4.08% 164 [==> ] 4.10% 165 [=> ] 1.95% 79 e[> ] 1.33% 54 e[==> ] 4.33% 174 [=> ] 1.98% 80 e[==> ] 4.50% 181 [==> ] 4.55% 183 [==> ] 4.53% 182 [=> ] 1.65% 67 e[=> ] 2.33% 9",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:7232,test,testdb,7232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,1,['test'],['testdb']
Testability,"luster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; fla",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1354,test,test,1354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,m seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:2053,test,test,2053,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Testability,"m/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. root@linux-server:/opt/test# wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 08:18:04-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz'. mmseqs-linux-avx2.tar.gz 100%[====================================================================================================================================================>] 42.71M 10.3MB/s in 4.5s . 2023-05-22 08:18:10 (9.44 MB/s) - 'mmseqs-linux-avx2.tar.gz' saved [44786049/44786049]; ```. 2. Second test case—using different `--secure-protocol` settings also provides inconsistent success (in trying to follow advice from [here](https://serverfault.com/a/622127)):; ```; ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_3 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:53:35-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; Unable to establish SSL connection. ubuntu@linux-server:~$ wget --secure-protocol=TLSv1_2 https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; --2023-05-22 07:54:12-- https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.3'. mmseqs-linux-avx2.tar.gz.3 100%[===============================================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:1498,test,test,1498,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['test']
Testability,me: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0620599; Actual: 0.0620599. LINSEARCH_NUCLNUCL_SEARCH (Time: 35s); TEST SUCCESS; GOOD; Expected: 0.108522; Actual: 0.108522. EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 49s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 99s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 4s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 2s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 6s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCC,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:2113,TEST,TEST,2113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,merSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. qStarting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4453,test,test,4453,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:2350,log,log,2350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['log'],['log']
Testability,"mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Report mode 	0; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; First sequence as representative 	false; Target column 	1; Add full header 	false; Sequence source 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	1; Write lookup file 	0. *skipped some parts of the log that took very little time*. Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422:3478,log,log,3478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422,1,['log'],['log']
Testability,"n alnDB_reassign -a --threads 24 --comp-bias-corr 0 -e 9007199254740992; mmseqs convertalis protfamDB protfamDB alnDB_reassign aln_to_clustreps.m8; awk '$4<50{print}' aln_to_clustreps.m8 | sort -nk4,4 | head; ```. ```; 45656_3631 1137799_3214 0.950 20 1 0 79 98 423 442 2.607E-05 51; 45656_3631 217204_6534 0.809 21 4 0 79 99 695 715 1.266E-04 49; 45656_3631 2571105_3757 0.761 21 5 0 79 99 695 715 3.266E-04 48; 45656_3631 668_9026 0.761 21 5 0 79 99 714 734 1.155E-03 46; 489_1270 489_2691 1.000 21 0 0 1 21 1 21 3.857E-05 50; 33968_38 33968_2958 0.833 24 4 0 92 115 128 151 2.956E-04 48; 1550024_4392 1608583_1648 0.720 25 7 0 6 30 7 31 2.660E-04 48; 2527978_7844 2527978_861 0.920 25 2 0 1 25 1 25 1.690E-05 52; 45656_3631 191863_3100 0.880 25 3 0 75 99 282 306 8.777E-08 58; 1128665_3036 709876_1980 0.653 26 9 0 43 68 211 236 2.419E-03 45; ```. For example, in the first row of output above, the alignment length is 20 residues for a query sequence that is 100 residues long. My clustering parameters (-c 0.5 --cov-mode 2) should prevent a target sequence w/ alignment length <50 residues from joining this cluster, right?. On a related note, I noted this line in my clustering output log:; ```; Combining cluster mode 0 in combination with coverage mode 2 can produce wrong results.; Please use --cov-mode 2; ```; And found this comment from a previous issue:; `The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.`; `Originally posted by @martin-steinegger in` https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693. It seems like my choice of parameters is at fault, and that I would probably have clusters that more closely obey the criteria if I used cov-mode 0 and cluster-mode 0 (set cover, query AND target coverage), or cov-mode 1 and cluster-mode 2 (CD-hit-like, target coverage). Am I understanding correctly?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129:1613,log,log,1613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129,1,['log'],['log']
Testability,"n length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb test.fa tmp/9586069750715556969/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 3ms; Time for merging to query: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 19ms; createdb test.fa tmp/9586069750715556969/target --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to target_h: 0h 0m 0s 6ms; Time for merging to target: 0h 0m 0s 3ms; Database type: Nucleotide; Time for processing: 0h 0m 0s 23ms; Create directory tmp/9586069750715556969/search_tmp; search tmp/9586069750715556969/query tmp/9586069750715556969/target tmp/9586069750715556969/result tmp/9586069750715556969/search_tmp --sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out --alignment-mode 3 --seed-sub-mat nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out -s 5.7 --search-type 3 --remove-tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:4503,test,test,4503,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"n noticed that process rank 0 with PID 0 on node haldane exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:1914,log,log,1914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['log'],['log']
Testability,"nce in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 1. run setup_databases.sh successfuly to download all the colab database.; the file read file are all ready. 'UNIREF30_READY', 'COLABDB_READY', 'PDB_READY', 'PDB70_READY', 'PDB_MMCIF_READY'.; the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx; **There is no uniref30_2202_db.idx.[0, 1], but only uniref30_2202_db.idx. Is this normal?**; 3. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888.; 4. test codes below, the mmseqs msa are too slow, more than 4 hours for only 1 sequence pair, the 2 ""use_pairing true/false""mode both run, each need 2 hours.; ```python; host_url = 'http://127.0.0.1:8888'; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = 'env'; submission_endpoint = 'ticket/msa'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); print(out); ```; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Your Environment; ColabFold 1.5.2; ubuntu 20.04; 256GB RAM, that's why I cannot use vmtouch which need 768GB memory according to the readme.; 32 cores cpu; [log-mmseqs-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690:1888,test,test,1888,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690,1,['test'],['test']
Testability,"ndaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124**. I have created the Uniprotdb using mmseqs createdb command so the uniportdb.index file was created with it. ## Current Behavior; But I am seeing after giving expandaln command facing an issue saying the uniprotdb.index is generic type ; Input database ""./uniprot/uniprotdb.index"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; MMSEQS=""$1""; QUERY=""$2""; BASE=""$4""; DB1=""$5""; DB2=""$6""; DB3=""$7""; USE_ENV=""$8""; USE_TEMPLATES=""$9""; FILTER=""${10}""; TAXONOMY=""${11}""; M8OUT=""${12}""; EXPAND_EVAL=inf; ALIGN_EVAL=10; DIFF=3000; QSC=-20.0; MAX_ACCEPT=1000000; if [ ""${FILTER}"" = ""1"" ]; then; 0.1 was not used in benchmarks due to POSIX shell bug in line above; EXPAND_EVAL=0.1; ALIGN_EVAL=10; QSC=0.8; MAX_ACCEPT=100000; fi; export MMSEQS_CALL_DEPTH=1; SEARCH_PARAM=""--num-iterations 3 --db-load-mode 2 -a --k-score 'seq:96,prof:80' -e 0.1 --max-seqs 10000""; FILTER_PARAM=""--filter-min-enable 1000 --diff ${DIFF} --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95""; EXPAND_PARAM=""--expansion-mode 0 -e ${EXPAND_EVAL} --expand-filter-clusters ${FILTER} --max-seq-id 0.95""; mkdir -p ""${BASE}""; mkdir -p ""${BASE}""; ""${MMSEQS}"" createdb ""${QUERY}"" ""${BASE}/qdb""; ""${MMSEQS}"" search ""${BASE}/qdb"" ""${DB1}"" ""${BASE}/res"" ""${BASE}/tmp1"" $SEARCH_PARAM; ""${MMSEQS}"" mvdb ""${BASE}/tmp1/latest/profile_1"" ""${BASE}/prof_res""; ""${MMSEQS}"" lndb ""${BASE}/qdb_h"" ""${BASE}/prof_res_h""; **mmseqs expandaln ./base/qdb ./uniprot/uniprotdb.index ./base/res ./uniprot/uniprotdb.index ./base/res_exp --db-load-mode 2 --expansion-mode 0 -e inf --expand-filter-clusters 0 --max-seq-id 0.95 --threads 124** ; # I got stucked at the above command. **next I ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/887:1048,benchmark,benchmarks,1048,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/887,1,['benchmark'],['benchmarks']
Testability,"ng to see what these `awk` commands returned when looking at databases:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' $out_DB; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' $out_DB. out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; target_DB/target_DB.index | 412.665 2 8110 | 2.15005e+07 0 43190597; target_DB/target_DB.idx.index | 6.04213e+07 1 512000009 | 5.54188e+08 0 1261572096; result_20230419_115721/qdb.index | 114 114 114 | 0 0; result_20230419_115721/qdb_h.index | 190 190 190 | 0 0; result_20230419_115721/res.index | 58682 58682 58682 | 0 0; ```. I can run these sequences via `mmseqs easy-search` (which does not call `expandaln`):; ```; easy-search query.fasta /home/user/project/target_DB/target_DB result_DB tmp_easy_search --db-output 1 --max-seqs 10000. wc -l result_DB; 606 result_DB. # awk sum/n,min,max; out_DB | col $3 | col $2; -----------------------------------+--------------------------+-----------------------; result_DB.index | 104112 104112 104112 | 0 0; ```. ## Your Environment; * MMseqs2 Version: 67949d702dbfc6e5d54fdd0f14a9ab6740f11c32; * self-compiled; * `cmake version 3.16.3`; * The CXX compiler identification is `GNU 9.4.0`; * The C compiler identification is `GNU 9.4.0`; * [cmake.000.log](https://gist.github.com/bchodkowski-vir/13fdfdb33efac1ee1fcb6e7b71846643) created Sep 1 2022; * [make.000.log](https://gist.github.com/bchodkowski-vir/8cb1557213a05f3032abed310d5a10c4) created Sep 1 2022; * [make_install.000.log](https://gist.github.com/bchodkowski-vir/fe17acc49335bf8312c14a0cec14c9b9) created Sep 1 2022; * `uname -a`; * `Linux lambda-name 5.4.0-144-generic #161-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux`. Please let me know if there is any other information I can share to help debug this. Kind regards.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/695:11181,log,log,11181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/695,3,['log'],['log']
Testability,"nlm.nih.gov/genomes/all/GCF/000/246/985/GCF_000246985.2_ASM24698v3/GCF_000246985.2_ASM24698v3_protein.faa.gz. #uncompress and concatenate data into a protein text file; zcat *protein.faa.gz >Archaea.protein.faa. #build database; mmseqs createdb Archaea.protein.faa Archaea >createdb.log. #perform iterative search; mmseqs search Archaea Archaea Tlit_vs_Pfur.res /tmp -a --alignment-mode 3 --num-iterations 3 -c 0.5 --cov-mode 0 -e 0.0001 --e-profile 0.001 >search.log. #convert results to text file; mmseqs convertalis Archaea Archaea Tlit_vs_Pfur.res Tlit_vs_Pfur.txt --format-output ""query,target,evalue,bits,alnlen,pident,nident,qlen"" >convertalis.log. #locate example WP_148290433.1 ; awk 'BEGIN{OFS=""\t"";print(""Query"",""Target"",""evalue"",""bits"",""alnlen"",""pident"",""nident"",""Qlen"")}{if($1 == ""WP_148290433.1"") { print $0 }}' Tlit_vs_Pfur.txt. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMSeqs log files available upon request. ## Context; We try to use MMSeqs to perform all_vs_all search on 1000+ eukaryote genomes. Since it is important to catch remote homologous proteins too, we apply iterative search (--num-iterations 3). For most queries in our data set, we observe three well-defined results block, assumed to correspond to the three separate iterations. (1 ""normal"" sequence search + 2 subsequent profile searches) . In each block, hits are ranked according to their significance. Strikingly, bit scores and E values across blocks do not seem to be comparable. When ranking all targets according to bit scores, hit from a profile-search iteration step might appear well superior to a target found in the first iteration. See target WP_004066529.1 and WP_084684326.1 for query WP_148290433.1 as examples. Other ""goodness of alignment"", confirms that target from the first search iteration is indeed better thus bit score from the profile search iteration might be biased (overestimated). It would ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350:2146,log,log,2146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350,1,['log'],['log']
Testability,"nscriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignments, the over-extended start will get chopped off through the alignment anyway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:1082,benchmark,benchmark,1082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"nslate orf 	0; > Use all table starts 	false; > Offset of numeric ids 	0; > Create lookup 	0; > Add orf stop 	false; > Chain overlapping alignments 	0; > Merge query 	1; > Search type 	0; > Search iterations 	1; > Start sensitivity 	4; > Search steps 	1; > Slice search mode 	false; > Strand selection 	1; > Disk space limit 	0; > MPI runner 	; > Force restart with latest tmp 	false; > Remove temporary files 	false; > ; > prefilter tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/QUERY.mms /shared/projects/phycovir/FORMATED_DB/TrEMBL/TrEMBL tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 32 --compressed 0 -v 3 -s 5.7 ; > ; > Query database size: 446 type: Aminoacid; > Target split mode. Searching through 12 splits; > Estimated memory consumption: 91G; > Target database size: 230328648 type: Aminoacid; > Process prefiltering step 1 of 12; > ; > Index table k-mer threshold: 122 at k-mer size 7 ; > Index table: counting k-mers; > tmpDir/tmp_Juil.D465_1000nt.fasta.2000.pep/9777472437024274047/blastp.sh : ligne 99 : 10291 Instruction non permise $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; > Error: Prefilter died. ## Context. TrEMBL installed using the mmseqs databases command. ## Your Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. Operating system and version:; Linux version 3.10.0-1160.6.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) )",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/564:4124,mock,mockbuild,4124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/564,1,['mock'],['mockbuild']
Testability,"nt b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Alphabet size 21; K-mers per sequence 21; scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:1991,test,test,1991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"ny more logging or output files (there were a bunch of output files X.0, X.1, X.2.. not merged outputs). I killed it after 2 days. UPDATE: I've also tried to set --split-memory-limit 40G, it did finish running (in 16 hours) and produced a single output file, despite still displaying the message ""can not touch X into memory"". Also, the output file is larger than the output I got from running on the server previously (cloud VS server = 67G/41G, 109912025 lines/ 65303318 lines). I can't figure out what could cause the differences, given the same input files, same script (except for adding --split-memory-limit). So my two questions are:; 1) What's up with the warning ""Can not touch X into main memory""? ; 2) Why are the output files different?. ## Steps to Reproduce (for bugs); `mmseqs easy-search pdb_unique_seqs_all.fasta uniref100.fasta output/pdb_uniref100_6cpu_s3_e10minus3 tmp/ -a -s 3 --threads 6 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar,qaln,taln`; ## MMseqs Output (for bugs); Log file for running on cloud instance WITHOUT setting --split-memory-limit, no merged output, job hanging.; [log_easysearch.txt](https://github.com/user-attachments/files/16683740/log_easysearch.txt). Log file for running on the cloud WITH setting --split-memory-limit 40G, finished running with a single output (but larger than the one produced from server):; [log_easysearch2.txt](https://github.com/user-attachments/files/16692626/log_easysearch2.txt). ## Context; Posts with similar issues but unanswered (this looks sort of a common problem): ; [https://github.com/soedinglab/MMseqs2/issues/870](url); [https://github.com/soedinglab/MMseqs2/issues/702](url). ## Your Environment; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):ffb05619cadadd8655b8719818ed566caaa6d0a6 (static build with AVX2, https",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/877:1690,Log,Log,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/877,1,['Log'],['Log']
Testability,"o appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1285,test,test,1285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"o tried various settings with `--split-memory-limit` with no effect. . This may have something to do with `I/O` and NFS communication, but I really don't know where to start. Any insight would be very much appreciated. In addition to this issue, it would be very helpful to know:; 1) How can we estimate how much temporary disk space is required for an `easy-taxonomy` analysis?; 2) What are the steps involved in an `easy-taxonomy` run? This is absent from the documentation, making it very difficult to track progress across the steps. ## Steps to Reproduce (for bugs); Executed commands:; ```; mmseqs databases UniRef90 /dept/appslab/datasets/dp_mmseqs-database/UniRef90 /pbi/flash/dportik --threads 12; ```; ```; mmseqs easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G ; ```. ## MMseqs Output (for bugs); ### Log file:; ```; easy-taxonomy /dept/appslab/datasets/dp_ZymoMockComparison/Zymo6331-STD.fasta /pbi/dept/appslab/datasets/dp_mmseqs-database/UniRef90 STD_Results /pbi/flash/dportik/mmseqs --threads 24 --split-memory-limit 80G. MMseqs Version: 13.45111; ORF filter 0; ORF filter e-value 100; ORF filter sensitivity 2; LCA mode 3; Majority threshold 0.5; Vote mode 1; LCA ranks; Column with taxonomic lineage 0; Compressed 0; Threads 24; Verbosity 3; Taxon blacklist 12908:unclassified sequences,28384:other sequences; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423:1663,Log,Log,1663,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423,1,['Log'],['Log']
Testability,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1881,log,logger,1881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,5,['log'],['logger']
Testability,oman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_rescore1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 128 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 1.39K 0s 7ms; Sort entries; Find missing connections; Found 1460 new connections.; Reconstruct initial order; [=================================================================] 100.00% 1.39K 0s 4ms; Add missing connections; [=================================================================] 100.00% 1.39K 0s 1ms. Time for read in: 0h 0m 0s 32ms; Total time: 0h 0m 0s 60ms. Size of the sequence database: 1388; Size of the alignment database: 1388; Number of clusters: 854. Writing results 0h 0m 0s 0ms; Time for merging to pre_clust: 0h 0m 0s 27ms; Time for processing: 0h 0m 0s 126ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 10ms; createsubdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 -v 3 --subdb-mode 1. Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 9ms; filterdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1 roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2 --filter-file roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/order_redundancy. Filtering with filter files.; [=================================================================] 100.00% 854 0s 23ms; Time for,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:7336,test,test,7336,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"ommand I get for my protein sequence the `Clostridium AM magnum` hit. ```; mmseqs taxonomy queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies -c 0.8 --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28 --blacklist """". mmseqs createtsv queryDB 14_First_11_21_S2_binned.gtdb.taxresults.database test.taxonomy.tsv --threads 28; ```. test.taxonomy.tsv output:; ```; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 30313 species Clostridium AM magnum Bacteria;Bacillota A;Clostridia;Clostridiales;Clostridiaceae;Clostridium AM;Clostridium AM magnum;uc_Clostridium AM magnum; ```. If I repeat the same with `mmseqs search` I get following hits:. ```; mmseqs search queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz tmp --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 -s 6 --threads 28; mmseqs convertalis queryDB /vol/scratch/databases/mmseqs2/gtdb/out/gtdb_database test.faa.gz mmseqs.out.tsv; ```. mmseqs.out.tsv output:; ```; uery target pident alnlen mismatch gapopen qstart qend tstart tend evalue bits qlen tlen qcov tcov; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_JH601103.1_106 88.200 163 19 0 1 163 1 163 1.803E-90 301 164 164 0.994 0.994; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FMWM01000002.1_685 49.700 154 76 0 7 159 5 158 6.046E-36 144 164 170 0.933 0.906; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_FLQT01000003.1_544 49.200 154 77 0 7 159 5 158 2.131E-35 143 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_LT707417.1_163 49.100 154 77 0 7 159 5 158 2.921E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 JAEXBU010000001.1_1 49.000 154 78 0 7 159 5 158 4.002E-35 142 164 167 0.933 0.922; 14_First_11_21_S2_bin.16_6644_ef2cc1_CJIKHDKB_00326 NZ_OPYI01000008.1_105 48.900 154 78 0 7 159 5 158 5.484E-35 14",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/859:1100,test,test,1100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/859,1,['test'],['test']
Testability,"ompared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs resul",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1233,test,test,1233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/159:1209,Test,Test,1209,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159,6,['Test'],['Test']
Testability,"on a linux system, however when looking to compile from source for use of MPI, I encounter a segmentation fault with signal 11. This test was not run with an additional `RUNNER` variable, so I'm guessing it relates to the initial installation?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I installed mmseqs as instructed in the manual, with added MPI support; ```; git clone https://github.com/soedinglab/MMseqs2.git; mv MMseqs2 mmseqs2 && cd mmseqs2/; mkdir build-mpi && cd build-mpi; cmake -DHAVE_MPI=1 -DCMAKE_INSTALL_PREFIX=. -DCMAKE_BUILD_TYPE=Release ..; make; make install; ```. Following this, I got the example DB.fasta file from the examples folder, renamed exp.fa.; ```; mmseqs easy-cluster exp.fa test tmp2; ```. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; ```; Create directory tmp2; easy-cluster exp.fa test tmp2. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max sequence length 	65535; Max results per query 	20; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.8; Coverage mode 	0; Compositional bias 	1; Compositional bias 	1; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Spaced k-mer pattern; Local temporary path; Threads 	24; Compressed 	0; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679:1126,test,test,1126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679,1,['test'],['test']
Testability,"ons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Input database ""/mount-nfs/mydataset/single_train_sequences.fasta"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid; ```. ## Context; I am trying to extract the pssm for a big fasta file following this steps:; https://github.com/soedinglab/MMseqs2/issues/580; Unfortunately, only the easy-search is working and not the search. If I tried to just use the easy-search I get the same message as above when I try to run the ""result2profile"" script. I also tried to extract a single sequence from my fasta file, and I got the same error.; Here is the single fasta file that I am trying to test with :; ```; >A0A8I6GHU0 tr|A0A8I6GHU0|A0A8I6GHU0_RAT U6 snRNA-associated Sm-like protein LSm1 OS=Rattus norvegicus OX=10116 GN=Lsm1 PE=3 SV=1; HCISSLKLTAFFKRSFLLSPEKHLVLLRDGRTLIGFLRSIDQFANLVLHQTVERIHVGRK; YGDIPRGIFVVRGENVVLLGEIDLEKESDTPLQQVSIEEILEEQRVEQQSRLEAEKLKVQ; ALKDRGLSIPRADTLDEY; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Which MMseqs version was used: latest version from conda.; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): CPU support both AVX2/SSE and the server has 450GB of memory; * Operating system and version: Ubuntu 20.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/720:3417,test,test,3417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/720,1,['test'],['test']
Testability,"onsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1224,test,test,1224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"ory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last command. > $ mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header; > Progr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1508,test,test,1508,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"otide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	0; Compressed 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:4454,test,test,4454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,3,['test'],"['test', 'testdb']"
Testability,"ould I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB work",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:926,Test,Test,926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,20,['Test'],['Test']
Testability,"ov/genomes/genbank/vertebrate_other/Neoceratodus_forsteri/latest_assembly_versions/GCA_016271365.1_neoFor_v3/GCA_016271365.1_neoFor_v3_genomic.fna.gz; 001396	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Grammatotria_lemairii/latest_assembly_versions/GCA_015107535.1_JDD8.scf/GCA_015107535.1_JDD8.scf_genomic.fna.gz; 001524	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Cetomimus_sp._NI1144/latest_assembly_versions/GCA_900660305.1_Opsanus_beta_assembly/GCA_900660305.1_Opsanus_beta_assembly_genomic.fna.gz; 001652	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Neolamprologus_hecqui/latest_assembly_versions/GCA_015103515.1_Bel14.scf/GCA_015103515.1_Bel14.scf_genomic.fna.gz; 001780	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Larimichthys_polyactis/latest_assembly_versions/GCA_010119295.1_ASM1011929v1/GCA_010119295.1_ASM1011929v1_genomic.fna.gz; 001908	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Periophthalmodon_schlosseri/latest_assembly_versions/GCA_000787095.1_PS.fa/GCA_000787095.1_PS.fa_genomic.fna.gz; 002036	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Tropheus_sp._brichardi_kipili_AB-2019/latest_assembly_versions/GCA_015110695.1_LGA5.scf/GCA_015110695.1_LGA5.scf_genomic.fna.gz; 002164	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Argyrosomus_japonicus/latest_assembly_versions/GCA_015710095.1_ASM1571009v1/GCA_015710095.1_ASM1571009v1_genomic.fna.gz; ```; You can put that list in a file and pass it to this script as an argument. The script is mostly to change the identifiers. ```; #!/usr/bin/env bash. while read -r fid link; do; wget -O - ""${link}"" |\; gzip -dc |\; awk -v""id=${fid}"" -F'>' 'NF > 1{printf "">E%06d_%06d"", id, i++} NF == 1'; done < ""${1}"" | mmseqs createdb stdin seqdb --dbtype 2; ```; I imagine for testing purposes making the database with just a couple files would work. I am using MMseqs2 with singularity so that might be a confounding factor.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824:5057,test,testing,5057,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824,1,['test'],['testing']
Testability,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1475,test,test,1475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917,1,['test'],['test']
Testability,"p/9700814981231218113/search_tmp/10627605686170015473/search/input_2 -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 11ms; offsetalignment tmp/9700814981231218113/query tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/aln tmp/9700814981231218113/result --chain-alignments 0 --merge-query 1 --search-type 0 --threads 40 --compressed 0 --db-load-mode 0 -v 3 . Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 93ms; Writing results to: tmp/9700814981231218113/result; [=================================================================] 516.30K 0s 162ms. Time for merging to result: 0h 0m 0s 158ms; Time for processing: 0h 0m 1s 659ms; Remove temporary files; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa . Time for processing: 0h 0m 0s 45ms; rmdb tmp/9700814981231218113/search_tmp/10627605686170015473/t_orfs_aa . Time for processing: 0h 0m 0s 0ms; convertalis tmp/9700814981231218113/query /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/result test.m8 --sub-mat nucl:nucleotide.out,aa:blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 0 --db-load-mode 0 --search-type 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 84ms; Time for merging to test.m8: 0h 0m 0s 181ms; Time for processing: 0h 0m 2s 227ms; Removing temporary files; rmdb tmp/9700814981231218113/result . Time for processing: 0h 0m 0s 8ms; rmdb tmp/9700814981231218113/query . Time for processing: 0h 0m 0s 38ms; rmdb tmp/9700814981231218113/query_h . Time for processing: 0h 0m 0s 3ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:17013,test,test,17013,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['test'],['test']
Testability,"pected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Exp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1124,TEST,TEST,1124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,pening alignment database...; done.; Clustering mode: Set Cover; ...; Sort entries. Find missing connections. Found 7484 new connections. Reconstruct initial order.; ...; Add missing connections.; ...; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 32435; Size of the alignment database: 32435; Number of clusters: 27782; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/clu /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust /tmp/test/9465698490903227639/linclust/831108043510341376/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/test/9465698490903227639/clu_redundancy panproteome.db /tmp/test/9465698490903227639/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Covera,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:13332,test,test,13332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 typ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:2995,test,test,2995,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['test'],"['test', 'testdb']"
Testability,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:113,log,login,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351,1,['log'],['login']
Testability,"ple using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/77:1720,test,test,1720,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77,1,['test'],['test']
Testability,"positional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. res",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:1879,test,test,1879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"q-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_openib_add_procs] could not prepare openib device for use; MPI Init; Rank: 0 Size: 1; kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. kmermatcher roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 128 --compressed 0 -v 3. Database size: 1388 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:3272,test,test,3272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,2,['test'],['test']
Testability,"ram call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2 /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	10; Verbosity 	3. Query file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Target file: /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy; Prefilter database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_filter2; Result database: /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2; ...Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/input_step_redundancy /tmp/test/9465698490903227639/linclust/831108043510341376/pref_rescore2 /tmp/test/9465698490903227639/linclust/831108043510341376/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 2147483647 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshol",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:9866,test,test,9866,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,"rd Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:3381,test,testMMS,3381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.model.utg8847.2; evm.model.utg8847.1_evm.model.utg8847.2.5.5abb479e; evm.model.utg1937.4; evm.model.utg12562.19; ```. Head of the mmseqstest_nucl.fasta_QDB_h_index file == . ```; 1 0 32; 2 32 32; 3 64 33; 4 97 23; 5 120 53; 6 173 42; 7 215 53; 8 268 22; 9 290 24; ```. The _SDB file has this as its head. ```; 2 585 0.986 1.536E-193 1248 2085 1044 0 279 281; 1 514 0.877 2.516E-168 1248 2085 1044 0 280 282; 3 497 0.852 1.632E-162 1248 2085 1044 0 280 282; 7 365 1.000 2.704E-120 1075 1579 507 0 168 170; 6 316 0.883 2.496E-103 1075 1579 507 0 170 172; 5 306 0.857 1.240E-99 1075 1579 507 0 170 172; 3 591 0.993 2.689E-197 1081 1921 843 0 280 282; 1 520 0.886 7.407E-172 1081 1921 843 0 280 282; 2 493 0.845 2.708E-162 1081 1921 843 0 279 281; 1 591 0.993 2.689E-197 1081 1921 843 0 280 282; ```. The reason I was performing this test was to see how nucleotide -> protein searches worked and to see if the little wrapper script I made to automate MMS2 searches needed any modifications. I figured I'd try using the protein DB as both query and target which resulted in search and convertalis working perfectly. Thus, I think the issue me and @CHEN-Zhihan are having is occurring when performing a nucleotide -> protein search (based off his query file being named ""read.fasta"" I expect that it is a nucleotide sequence) and seems to be limited to the convertalis step since search looks fine to me. Does this sound right to you?. Zac.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:2828,test,test,2828,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['test'],['test']
Testability,"reate directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1419,test,test,1419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"reatedb"", os.path.join(out_dir, amino_acid_fasta), os.path.join(target_db_dir, ""target_seqs""). # search; ""mmseqs"", ""search"", ""-e"", evalue ,os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), tmp_dir, ""-s"", ""8.5"", ""--threads"", threads. # tsp output; ""mmseqs"", ""createtsv"", os.path.join(phrog_db_dir, ""phrogs_profile_db""), os.path.join(target_db_dir, ""target_seqs""), os.path.join(mmseqs_dir, ""results_mmseqs""), os.path.join(out_dir,""mmseqs_results.tsv""), ""--full-header"", ""--threads"", threads. Lines 458-69 and 496-507 do the same method for the CARD and VFDB databases. ## Expected Behavior. Command should take 5-10 minutes to run. ## Current Behavior. Command hangs indefinitely. As you can see in the log file for v14-7e284 the prefilter step took 36 minutes, then the prefiltering scores calculation hung for 20 hours until the program was killed. I have attached 2 log files - one for each version of mmseqs2. The log files include all the mmseqs2 output written to stdout. ## Steps to Reproduce (for bugs). conda create -n pharokkaenv pharokka mmseqs2==14.7e284; conda activate pharokkaenv; install_databases.py -d ; pharokka.py -i lambda.fasta -o lambda_out -t 8 . Input file attached . ## MMseqs Output (for bugs); Log files attached with ""correct"" output (13.4511) showing mmseqs2 run 3 times takes approximately 6 mins, vs 14.7e284 which takes 36 minutes to prefilter on the first step, then hangs (for 20 hours). ## Context. ## Your Environment. I have tested this on MAC OSX (intel and M1) and also Linux ubuntu environments with bioconda installations. I get the same issue. [lambda.fasta.txt](https://github.com/soedinglab/MMseqs2/files/9845844/lambda.fasta.txt); [pharokka_mmseqs2_13.45111.log](https://github.com/soedinglab/MMseqs2/files/9845842/pharokka_mmseqs2_13.45111.log); [pharokka_mmseqs2_14_7e284.log](https://github.com/soedinglab/MMseqs2/files/9845843/pharokka_mmseqs2_14_7e284.log). George",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625:2112,log,log,2112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625,7,"['Log', 'log', 'test']","['Log', 'log', 'tested']"
Testability,"replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Sensitivity 	5.7; k-mer",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1791,test,test,1791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"rgetDB.idx.dbtype"" + ""targetDB.idx.index"". It seems there should be only one ""targetDB.idx"" file generated. However, that file was not there although it says in the last few lines of the log ""Time for merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1237,Log,Log,1237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['Log'],['Log']
Testability,"rmatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96:1120,TEST,TEST,1120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96,1,['TEST'],['TEST']
Testability,rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15560,test,test,15560,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"roduction steps with newly recreated and empty tmp folders.; mmseqs createdb ~/04.db/krakenuniq/library/nt-bacteria-dustmasked.fna nt-bacteria-dustmasked --dbtype 2; mmseqs createtaxdb nt-bacteria-dustmasked tmp --ncbi-tax-dump ~/04.db/krakenuniq/taxonomy --tax-mapping-file ~/04.db/krakenuniq/library/nt-bacteria.fna.map; mmseqs createdb BIN_REASSEMBLY/reassembled_bins/bin.18.strict.fa test; mmseqs taxonomy --threads 16 test ~/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked test_res tmp --search-type 3; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 3; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search test /public/home/bh2022044/04.db/mmseqs/taxonomy/nt-bacteria-dustmasked tmp/3407079133035171875/first tmp/3407079133035171875/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 --threads 16 -s 2 --mask 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --search-type 3. prefilter tmp/3407079133035171875/tmp_hsp1/941510883324284880/query_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/target_seqs_split tmp/3407079133035171875/tmp_hsp1/941510883324284880/search/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 15 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 1 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697:1495,test,test,1495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697,1,['test'],['test']
Testability,rs per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 22s; - checkReturnCode 'Prefilter died'; - '[' 0 -ne 0 ']'; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - '[' '!' -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ']'; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:4778,test,test,4778,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['test'],['test']
Testability,"s ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1884,test,tests,1884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,2,['test'],['tests']
Testability,"s createdb ${DATA_DIR}/${INPUT} ${DB_NAME}; mmseqs cluster ${DB_NAME} ${DB_NAME}_clu90 ${TMP_DIR}/clu90 --min-seq-id 0.9 --cov-mode 1 -c 0.8 -s 3; ```; I repeated the cluster step to make 3 different thresholds where `--min-seq-id` is 0.7 and 0.5. The aligned for each of the 3:; ```; mmseqs align ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD} ${DB_NAME}_clu${ID_THRESHOLD}_aln -a -e inf; ```; However, it's on the next step that it seems to stall. ; ```; mmseqs result2profile ${DB_NAME} ${DB_NAME} ${DB_NAME}_clu${ID_THRESHOLD}_aln ${DB_NAME}_clu${ID_THRESHOLD}_prof --threads 32; ```. I have 3 machines running in parallel to process these databases at the same time, and they're all stuck on exactly the same point. With CPU utilisation suggesting only 1-2 cores are being used. ; ```; PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 7869 miles 20 0 377.2g 97.8g 46.6g S 88.2 51.8 14d+18h mmseqs ; ```; Here is the output log of the `results2profile`:; ```; ~~ pldb70 Creating Profile: Thu 16 May 09:59:16 BST 2024; result2profile pldb pldb pldb_clu70_aln pldb_clu70_prof --threads 32 . MMseqs Version: 998c50a01da760713ca2c7580801e94555d23c4d; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; E-value threshold 0.001; Mask profile 1; Profile E-value threshold 0.001; Compositional bias 1; Compositional bias 1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Use filter only at N seqs 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0.0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Pseudo count mode 0; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Preload mode 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Threads 32; Compressed 0; Verbosity 3. Query database size: 108337839 type: Aminoacid; Target database size: 108337839 type: Aminoacid; [================================================================; ```. In my testing this step ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848:1179,log,log,1179,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848,1,['log'],['log']
Testability,"s-linux-avx2.tar.gz; Resolving mmseqs.com (mmseqs.com)... 147.46.145.74; Connecting to mmseqs.com (mmseqs.com)|147.46.145.74|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: 44786049 (43M) [application/octet-stream]; Saving to: 'mmseqs-linux-avx2.tar.gz.4'. mmseqs-linux-avx2.tar.gz.4 100%[=======================================================================================>] 42.71M 11.2MB/s in 4.0s . 2023-05-22 07:55:24 (10.7 MB/s) - 'mmseqs-linux-avx2.tar.gz.4' saved [44786049/44786049]; ```. 3. Third test case—using `curl` also results in inconsistent success:; ```; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (35) OpenSSL SSL_connect: Connection reset by peer in connection to mmseqs.com:443 ; root@linux-server:/opt/test# curl -LO https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 42.7M 100 42.7M 0 0 9058k 0 0:00:04 0:00:04 --:--:-- 9904k; ```. ## Context; We have been observing this issue for the past two weeks, which has been arising in one of our package's Azure Pipelines tests. The examples above were reproduced using an Ubuntu server. ## Your Environment; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): `latest` static version; * Operating system and version:; * For example cases above:; ```; Linux 5.4.0-139-generic #156-Ubuntu SMP x86_64 x86_64 x86_64 GNU/Linux; ```; * Azure image:; ```; Operating System; Ubuntu; 20.04.6; LTS; Runner Image; Image: ubuntu-20.04; Version: 20230507.1; Included Software: https://github.com/actions/runner-images/blob/ubuntu20/20230507.1/images/linux/Ubuntu2004-Readme.md; Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu20%2F20230507.1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706:4184,test,tests,4184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706,1,['test'],['tests']
Testability,"s/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode 'Alignment died'; - '[' 0 -ne 0 ']'; - '[' 4 -gt 4 ']'; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 4 -lt 4 ']'; - let SENS=SENS+SENS_STEP_SIZE; - INPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 5 -le 4 ']'; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 resultDB; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4.index resultDB.index; - checkReturnCode 'Could not move result to resultDB'; - '[' 0 -ne 0 ']'; - '[' -n '' ']'. Why was there an 'Could not move result to resultDB' error code even though the ""resultDB"" and ""resultDB.index"" file was correctly generated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:5928,test,test,5928,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,4,['test'],['test']
Testability,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256:1717,log,log,1717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256,1,['log'],['log']
Testability,"s_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example ab",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1347,test,tests,1347,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['test'],['tests']
Testability,"se was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.8; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.9; ```. ...another reason why the multi-file output of mmseqs commands produces headaches. Why aren't the multi-output files generated when using multiple threads (as the example above) just automatically merged back into one database file instead of leaving many `clu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:1434,test,tests,1434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['test'],['tests']
Testability,"seqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:2787,Test,Testdata,2787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['Test'],['Testdata']
Testability,small database for testing,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/407:19,test,testing,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/407,1,['test'],['testing']
Testability,"some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102:1172,test,test,1172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102,1,['test'],['test']
Testability,"ster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3550,test,test,3550,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,"sters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:1647,test,tests,1647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,2,['test'],['tests']
Testability,"t > nucleotide.edit.mat.out`:. ```; # Background (precomputed optional): 0.3267 0.3267 0.3267 0.3267 0.00001; # Lambda (precomputed optional): 0.34657; # Avg SeqId (precomputed optional): 0.854; 	A	C	G	T	X; A	2	-3	-3	-3	2; C	-3	2	-3	-3	2; G	-3	-3	2	-3	2; T	-3	-3	-3	2	2; X	2	2	2	2	2; ```. 2. Search sequence against itself with 12 bases replaced with X `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`. The sequence is much longer but this is the part of the sequence that was edited. >1 is the original and >2 has the replaced bases:. `>1; CTTTGGTGGAAATCCGGAGCGGATCTCGGTTTCCGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. `>2; XTTTGGTGGAAATCCGGAGCGGAXXXXXXXXXXXGGACATTCTGCCGGTGGTCATTTGACAGGAATGTTAATGAGCACAGATTGG`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. `mmseqs easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out`:. ```; 1	1	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; 1	2	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	1	0.997	4378	13	0	1	4378	1	4378	0.000E+00	6957; 2	2	1.000	4378	0	0	1	4378	1	4378	0.000E+00	6957; ```. ```; easy-search test.fa test.fa test.fa.easy-search.tsv tmp --search-type 3 --sub-mat nucleotide.edit.mat.out --seed-sub-mat nucleotide.edit.mat.out . MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.edit.mat.out,aa:nucleotide.edit.mat.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/448:1446,test,test,1446,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/448,1,['test'],['test']
Testability,"t/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16299,test,test,16299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184785; Top 10 Kmers; 	YTGTPK		230; 	PGFVVC		201; 	TNMHCE		201; 	GSPYYE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; Min Kmer Size: 0; Empty list: 63346238. Time for index table init: 0h 0m 0s. 	k-mers per position = 1.5412, k-mer match probability: 7.54641e-14; k-mer similarity threshold: 130; k-mer match probability: 7.54641e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 27782; Target db start 1 to 27782; ..; 1 k-mers per position.; 1604 DB matches per sequence.; 0 Overflows.; 27 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 1s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 2s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 /tmp/test/9465698490903227639/aln_step0 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 10 threads.; Query database type: Ami",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:16285,test,test,16285,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,4,['test'],['test']
Testability,"teParser::format(*((size_t *)par[i]->value), 'a', 'h');; (gdb) bt; #0 Parameters::printParameters (this=0x56bba090, module=""createindex"", argc=2, pargv=0xffffcddc, par=std::vector of length 38, capacity 64 = {...}); at ./src/commons/Parameters.cpp:2017; #1 0x5669efec in Parameters::checkIfDatabaseIsValid (this=0x56bba090, command=..., argc=2, argv=0xffffcddc, isStartVar=false, isMiddleVar=false, isEndVar=false); at ./src/commons/Parameters.cpp:1905; #2 0x566a32a9 in Parameters::parseParameters (this=0x56bba090, argc=2, pargv=0xffffcddc, command=..., printPar=<optimized out>, parseFlags=0, outputFlags=0); at ./src/commons/Parameters.cpp:1850; #3 0x5689d5ac in createindex (argc=2, argv=0xffffcddc, command=...) at ./src/workflow/CreateIndex.cpp:137; #4 0x565bbf0d in runCommand (p=0x56bc30c0, argc=2, argv=0xffffcddc) at ./src/commons/Application.cpp:38; #5 0x565aabcb in main (argc=4, argv=0xffffcdd4) at ./src/commons/Application.cpp:196; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; ```; mmseqs-avx2 createdb examples/DB.fasta DB; mmseqs-avx2 createindex DB tmp; ```. ## MMseqs Output (for bugs); ```; Create directory tmp; createindex DB tmp . Illegal instruction (core dumped); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 45111; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Compiled for 32-bit x86 on Debian using https://salsa.debian.org/med-team/mmseqs2/-/tree/debian/experimental/debian/patches; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): avx2 capable processor, > 60 GiB memory; * Operating system and version: Debian ""testing""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418:4024,test,testing,4024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418,1,['test'],['testing']
Testability,"ted: 0.182017; Actual: 0.182017. EXPAND (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 21s); TEST FAILED (NO REPORT). NUCLNUCL_TRANS_SEARCH (Time: 14s); TEST FAILED (NO REPORT). CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 14s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 12s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 4s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:1667,TEST,TEST,1667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['TEST'],['TEST']
Testability,thanks @martin-steinegger ; it seems that we cannot use cluster names to extract them. This is a test to reproduce:. ```; mmseqs createdb examples/DB.fasta DB.db; mmseqs cluster DB.db DB_clu temp/ --threads 20 -c 0.0 --cascaded -s 7 --cluster-mode 2; mmseqs createtsv DB.db DB.db DB_clu DB_clu.tsv; cut -f1 DB_clu.tsv|head -n5 > requested_clusters; mmseqs createsubdb requested_clusters DB_clu DB_clu_filtered. Start writing to file DB_clu_filtered; Key A7YWM6 not found in database; Key C4KHV1 not found in database; Key C4KHV1 not found in database; Key C4KHV1 not found in database; Key C4KHV1 not found in database; Time for merging files: 0 h 0 m 0 s; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/27#issuecomment-297672438:97,test,test,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/27#issuecomment-297672438,1,['test'],['test']
Testability,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:789,log,log,789,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670,5,['log'],"['log', 'log-mmseqs-msa-server']"
Testability,"that the result is an alignment database and not a taxonomy database. Similarily, when I run the `taxonomyreport` command with the nrDB as the result and seqTaxDB, it tells me that nrDB is an aminoacid database. . ```; taxonomyreport ../nrDB ../nrDB report.html --report-mode 1. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Report mode 1; Threads 20; Verbosity 3. Input database ""../nrDB"" has the wrong type (Aminoacid); Allowed input:; - Taxonomy; ```. I tried copying the `.dmp` files from the downloaded taxonomy into the same folder as my database, and renaming them to `nrDB_merged.dmp`, `nrDB_names.dmp`, and `nrDB_nodes.dmp`. My database is still not being recognized as a taxonomy database though. . ### createdb log file; ```; createdb ../test/nr.fsa nrDB. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Database type 0; Shuffle input database true; Createdb mode 0; Write lookup file 1; Offset of numeric ids 0; Compressed 0; Verbosity 3. Converting sequences; [=================================================================================================== 1 Mio. sequences processed. =================================================================================================== 340 Mio. sequences processed; ==============================. Time for merging to nrDB_h: 0h 2m 37s 499ms; Time for merging to nrDB: 0h 3m 51s 292ms; Database type: Aminoacid; Time for processing: 0h 45m 44s 356ms; ```; ### createtaxdb log file; ```; createtaxdb nrDB tmp --ncbi-tax-dump ../test/taxonomy/ --tax-mapping-file ../test/nr.fsa.taxidmapping. MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; NCBI tax dump directory ../test/taxonomy/; Taxonomy mapping file ../test/nr.fsa.taxidmapping; Taxonomy mapping mode 0; Taxonomy db mode 1; Threads 36; Verbosity 3. Loading nodes file ... Done, got 2304309 nodes; Loading merged file ... Done, added 61039 merged nodes.; Loading names file ... Done; Init RMQ ...Done; ```; Thanks for taking the time to look at this!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401:2770,log,log,2770,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401,5,"['log', 'test']","['log', 'test']"
Testability,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:906,log,log,906,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,4,['log'],"['log', 'log-mmseqs-msa-server']"
Testability,"the whole log overwhelms my system, but I captured most of the information that occurs before this bug:. ```; clusterer:/mnt/cluster/filt_80_2020-04-19/combined12$ time /custom_install/installations/mmseqs-nonmpi/MMseqs2/build/bin/mmseqs linclust inDB linClu90DB tmp --min-seq-id 0.90 --kme; r-per-seq 40 -c 0.9; Tmp tmp folder does not exist or is not a directory.; Create dir tmp; linclust inDB linClu90DB tmp --min-seq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:10,log,log,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,1,['log'],['log']
Testability,"tput file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGAT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1111,test,test,1111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ts pass except for SLICEPROFILE:. SEARCH (Time: 16s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH (Time: 20s); TEST SUCCESS; GOOD; Expected: 0.238353; Actual: 0.238353. EASY_SEARCH_INDEX_SPLIT (Time: 21s); TEST SUCCESS; GOOD; Expected: 0.118265; Actual: 0.118265. PROFILE (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.367396; Actual: 0.367396. EASY_PROFILE (Time: 42s); TEST SUCCESS; GOOD; Expected: 0.33876; Actual: 0.338768. SLICEPROFILE (Time: 22s); TEST FAILED (NO REPORT). DBPROFILE (Time: 17s); TEST SUCCESS; GOOD; Expected: 0.182017; Actual: 0.182017. EXPAND (Time: 52s); TEST SUCCESS; GOOD; Expected: 0.16614, 0.171723, 0.222982; Actual: 0.16614, 0.224627, 0.222982. NUCLPROT_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: 0.238076; Actual: 0.238076. NUCLNUCL_SEARCH (Time: 31s); TEST SUCCESS; GOOD; Expected: 0.192043; Actual: 0.192043. NUCLNUCL_TRANS_SEARCH (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.11646; Actual: 0.11646. CLUSTER (Time: 17s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_CLUSTER (Time: 19s); TEST SUCCESS; GOOD; Expected: 15722; Actual: 15722. EASY_NUCL_CLUSTER (Time: 3s); TEST SUCCESS; GOOD; Expected: 106; Actual: 106. CLUSTER_REASSIGN (Time: 14s); TEST SUCCESS; GOOD; Expected: 17403; Actual: 17403. LINCLUST (Time: 7s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. LINCLUST_SPLIT (Time: 10s); TEST SUCCESS; GOOD; Expected: 26491; Actual: 26491. EASY_LINCLUST (Time: 12s); TEST SUCCESS; GOOD; Expected: 26493; Actual: 26493. CLUSTHASH (Time: 0s); TEST SUCCESS; GOOD; Expected: 5; Actual Prot: 5 Nucl: 5. PROTNUCL_SEARCH (Time: 28s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 13s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 25s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663:1046,TEST,TEST,1046,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868877663,1,['TEST'],['TEST']
Testability,"tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job.log.txt). Added "".txt"" to upload easily. I really appreciate any help to debug this error. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:1936,log,log,1936,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,2,['log'],['log']
Testability,ty type 	2; Threads 	10. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover; ...; Sort entries. Find missing connections. Found 7484 new connections. Reconstruct initial order.; ...; Add missing connections.; ...; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 32435; Size of the alignment database: 32435; Number of clusters: 27782; Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/clu /tmp/test/9465698490903227639/linclust/831108043510341376/pre_clust /tmp/test/9465698490903227639/linclust/831108043510341376/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/test/9465698490903227639/clu_redundancy panproteome.db /tmp/test/9465698490903227639/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset res,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:13272,test,test,13272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['test'],['test']
Testability,u_tmp/13904432016917844997/pref_rescore1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pre_clust. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/input_step_redundancy. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter1. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/pref_filter2. Time for processing: 0h 0m 0s 42ms; rmdb roman/test/tmp/9420428648710735811/clu_tmp/13904432016917844997/clust. Time for processing: 0h 0m 0s 1ms; createtsv roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/cluster.tsv --threads 128 -v 3. Time for merging to cluster.tsv: 0h 0m 0s 188ms; Time for processing: 0h 0m 0s 378ms; result2repseq roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_rep --threads 128 -v 3. [=================================================================] 100.00% 784 0s 6ms; Time for merging to clu_rep: 0h 0m 0s 164ms; Time for processing: 0h 0m 0s 369ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Re,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:15235,test,test,15235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,3,['test'],['test']
Testability,"udo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:3237,Test,Testdata,3237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,2,['Test'],['Testdata']
Testability,"ues 1; Mask lower case residues 0; K-mer size 0; Shift hash 5; Split memory limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files true; Force restart with latest tmp false; MPI runner; Split seq. by length true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0. createdb roman/seqs/lectins_seq.fasta roman/test/tmp/9420428648710735811/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dbtype 0 --dont-shuffle 1 --id-offset 0 --compressed 0 -v 3. Converting sequences; [1314] 0s 4ms; Time for merging to input_h: 0h 0m 0s 69ms; Time for merging to input: 0h 0m 0s 70ms; Time for merging to input.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 273ms; Tmp roman/test/tmp/9420428648710735811/clu_tmp folder does not exist or is not a directory.; Create dir roman/test/tmp/9420428648710735811/clu_tmp; linclust roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_tmp -e 0.001 --min-seq-id 0.5 -c 0.8 --remove-tmp-files 1. Set cluster mode SET COVER.; --------------------------------------------------------------------------; The OpenFabrics (openib) BTL failed to initialize while trying to; allocate some locked memory. This typically can indicate that the; memlock limits are set too low. For most HPC installations, the; memlock limits should be set to ""unlimited"". The failure occured; here:. Local host: wibi-mickey; OMPI source: btl_openib.c:794; Function: ompi_free_list_init_ex_new(); Device: mlx4_0; Memlock limit: 65536. You may need to consult with your system administrator to get this; problem fixed. This FAQ entry on the Open MPI web site may also be; helpful:. http://www.open-mpi.org/faq/?category=openfabrics#ib-locked-pages; --------------------------------------------------------------------------; [wibi-mickey][[56626,1],0][btl_openib.c:880:mca_btl_o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:2091,test,test,2091,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,4,['test'],['test']
Testability,"ult2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_rep roman/test/tmp/9420428648710735811/rep_seq.fasta --use-fasta-header -v 3. Time for processing: 0h 0m 0s 31ms; createseqfiledb roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu roman/test/tmp/9420428648710735811/clu_seqs --threads 128 -v 3. Time for merging to clu_seqs: 0h 0m 0s 135ms; Time for processing: 0h 0m 0s 323ms; result2flat roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/input roman/test/tmp/9420428648710735811/clu_seqs roman/test/tmp/9420428648710735811/all_seqs.fasta -v 3. Time for processing: 0h 0m 0s 34ms; Removing temporary files; rmdb roman/test/tmp/9420428648710735811/input. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/input_h. Time for processing: 0h 0m 0s 1ms; rmdb roman/test/tmp/9420428648710735811/clu_seqs. Time for processing: 0h 0m 0s 37ms; rmdb roman/test/tmp/9420428648710735811/clu_rep. Time for processing: 0h 0m 0s 2ms; rmdb roman/test/tmp/9420428648710735811/clu. Time for processing: 0h 0m 0s 42ms; /home/toa21/miniconda3/envs/scala/lib/python3.8/site-packages/scala/datastructures.py:193: UserWarning: Lost Sequences in first clustering step !!; warnings.warn(""Lost Sequences in first clustering step !!""). ## Context; I am trying to use mmseqs to hierarchically cluster a set of AA sequences but already in the first clustering step we are missing sequences. ; I believe the option ""--cluster-reassign"" is not available for easy-linclust. Is there another option to handle this? . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9c224bbe44205774ab72a97ec3f7dcbd52fc2e70-MPI; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; * ; * For self-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/603:16551,test,test,16551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/603,1,['test'],['test']
Testability,"unadopted data in the 'assignGroup' function, allowing for more effective clustering. ### Details. **1 Extended Search Process :**. > For the same k-mer group, the process of combining the representative sequence with each sequence has been extended. The algorithm now calculates sequence dissimilarity using adjacent sequence information. The most dissimilar sequence is selected as the next representative sequence, and this exploration process is repeated. If there are multiple sequences with the same level of dissimilarity, the most recently explored sequence is chosen as the representative sequence. Additionally, the selection of the most dissimilar sequence is limited to sequences that follow the current representative sequence in the search order. **2. Data Structure Challenges**. > The implementation of this method introduced challenges in maintaining the original in-place data structure. To overcome these challenges, a new data structure has been introduced with an additional buffer (slack space) at the end. The new data structure includes a default buffer size of 5%. . **3. Dynamic Memory Allocation**. > If memory becomes insufficient during operation, the structure dynamically resizes by splitting and reallocating memory based on the progress of the previous process. This approach ensures efficient memory usage and prevents potential memory shortages. ### Benchmark Results. > I conducted benchmarking on datasets randomly selected from the UniParc dataset, with sizes of 1.3M, 2.7M, 5.3M, 11M, 21M, 42M, and 85M. The results confirmed that the new algorithm effectively reduces the number of clusters while maintaining linearity, showing no significant time difference compared to the existing Linclust method. Despite these improvements, the algorithm still lags behind the easy-cluster method and does not fully reach the ideal results obtained by performing a quadratic search that captures all possible combinations. Thus, there remains room for further improvement.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873:1575,Benchmark,Benchmark,1575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarking']"
Testability,"ut I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1227,test,test,1227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,"ver/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1687,log,logger,1687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,1,['log'],['logger']
Testability,"verage criteria. ## Steps to Reproduce (for bugs). ### Data. 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). 2 proteins serving as probes (uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing)). ### Clustering. 3 different clustering approaches were tested:; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign`; * `mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering`. However, all three approaches lead to the same behavior (although the exact number of alignments changes) . ### Testing. `mmseqs easy-search probes/probes.faa {clustering_dir}/uhgp90_rep_seq.fasta results/single-step-clustering-uhgp90.m8 tmp --min-seq-id 0.9 -c 0.9 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln"" --threads 16`. ## Output. The m8 files obtained with the `easy-search` command were uploaded to Google Drive [here](https://drive.google.com/drive/folders/1qpyZaOSlxwRsha0t6bAJ8blV_YhDNr8Q?usp=sharing). ## Context. I want to assign assembled proteins from metagenomes to clusters from a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with linclust, so I attempted to cluster de-dupli",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/639:1317,Test,Testing,1317,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/639,1,['Test'],['Testing']
Testability,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31:1322,test,testDB,1322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31,4,['test'],"['test-', 'testDB']"
Testability,"ximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/139:2977,test,testMMS,2977,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139,1,['test'],['testMMS']
Testability,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94:1030,test,test,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94,1,['test'],['test']
Testability,y4mvibdqrlghr/bin/c++; -- Check for working CXX compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc; -- Check for working C compiler: /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-4.8.5/gcc-10.3.0-o57x6h2gubo7bzh7evmy4mvibdqrlghr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Source Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Project Directory: /storage/home/hcoda1/6/rridley3/data/dir/mmseqs2; -- Compiler is GNU; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Performing Test HAVE_POSIX_MADVISE; -- Performing Test HAVE_POSIX_MADVISE - Success; -- Performing Test ATOMIC_LIBRARY_NATIVE; -- Performing Test ATOMIC_LIBRARY_NATIVE - Failed; -- Performing Test ATOMIC_LIBRARY_LIB; -- Performing Test ATOMIC_LIBRARY_LIB - Success; -- Found Atomic: atomic; -- IPS4O sorting works; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:1083,Test,Test,1083,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,14,['Test'],['Test']
Testability,"y?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templates:; used_dbs.append(template_db); if use_env:; used_dbs.append(metagenomic_db). for db in used_dbs:; if not dbbase.joinpath(f""{db}.dbtype"").is_file():; raise FileNotFoundError(f""Database {db} does not exist""); if (; (; not dbbase.joinpath(f""{db}.idx"").is_file(); and not dbbase.joinpath(f""{db}.idx.index"").is_file(); ); or os.environ.get(""MMSEQS_IGNORE_INDEX"", False); ):; logger.info(""Search does not use index""); db_load_mode = 0; dbSuffix1 = ""_seq""; dbSuffix2 = ""_aln""; dbSuffix3 = """"; else:; dbSuffix1 = "".idx""; dbSuffix2 = "".idx""; dbSuffix3 = "".idx"". # fmt: off; # @formatter:off; search_param = [""--num-iterations"", ""3"", ""--db-load-mode"", str(db_load_mode), ""-a"", ""-e"", ""0.1"", ""--max-seqs"", ""10000""]; search_param += [""--prefilter-mode"", str(prefilter_mode)]; if s is not None:; search_param += [""-s"", ""{:.1f}"".format(s)]; else:; search_param += [""--k-score"", ""'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:1847,benchmark,benchmarks,1847,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['benchmark'],['benchmarks']
Testability,yDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30; Include identical Seq. Id. false; Spaced Kmer 1; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: queryDB(size=246); Target database: targetDB.sk7(size=10000); Needed memory (14434761936 byte) of total memory (2704,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1:2407,test,test,2407,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1,1,['test'],['test']
Usability," ## Steps to Reproduce (for bugs); mmseqs databases GTDB gtdb tmp. ## MMseqs Output (for bugs); Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	64; Verbosity 	3. 09/27 13:21:52 [NOTICE] Downloading 1 item(s). 09/27 13:21:53 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 09/27 13:21:53 [NOTICE] Download GID#5876f1173053ff82 not complete: tmp/3290078511923703767/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 5876f1|ERR | 0B/s|tmp/3290078511923703767/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 245 0 --:--:-- --:--:-- --:--:-- 245. 09/27 13:21:54 [NOTICE] Downloading 1 item(s). 09/27 13:21:54 [NOTICE] Allocating disk space. Use --file-allocation=none to disable it. See --file-allocation option in man page for more details.; *** Download Progress Summary as of Wed Sep 27 13:22:54 2023 *** ; ===============================================================================; [#2b99bd 207MiB/51GiB(0%) CN:5 DL:10MiB ETA:1h24m8s]; FILE: tmp/3290078511923703767/gtdb.tar.gz; -------------------------------------------------------------------------------. *** Download Progress Summary as of Wed Sep 27 13:23:54 2023 *** ; ===============================================================================; [#2b99bd 723MiB/51GiB(1%) CN:5 DL:8.7MiB ETA:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758:2376,resume,resume,2376,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758,1,['resume'],['resume']
Usability," Environment. I am running this on an AWS EC2 instance of type g4dn (128GB RAM). Here you go:. $ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Address sizes: 46 bits physical, 48 bits virtual; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Vendor ID: GenuineIntel; Model name: Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz; CPU family: 6; Model: 85; Thread(s) per core: 2; Core(s) per socket: 16; Socket(s): 1; Stepping: 7; BogoMIPS: 4999.98; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht; syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid ap; erfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt; tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch pti fsgsbase; tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni; Virtualization features: ; Hypervisor vendor: KVM; Virtualization type: full; Caches (sum of all): ; L1d: 512 KiB (16 instances); L1i: 512 KiB (16 instances); L2: 16 MiB (16 instances); L3: 35.8 MiB (1 instance); NUMA: ; NUMA node(s): 1; NUMA node0 CPU(s): 0-31; Vulnerabilities: ; Gather data sampling: Unknown: Dependent on hypervisor status; Itlb multihit: KVM: Mitigation: VMX unsupported; L1tf: Mitigation; PTE Inversion; Mds: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Meltdown: Mitigation; PTI; Mmio stale data: Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown; Retbleed: Vulnerable; Spec rstack overflow: Not affected; Spec store bypass: Vulnerable; Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization; Spectre v2: Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected; Srbds: Not affected; Tsx async abort: Not affected",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822:3463,Clear,Clear,3463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822,2,['Clear'],['Clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>) at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578) at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```; For the clu90 job:; ```; (gdb) thread apply all bt. Thread 32 (Thread 0x7f6e65ffe640 (LWP 135852) ""mmseqs""):; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:29610,clear,clear,29610,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 1 (LWP 7869 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:28681,clear,clear,28681,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 2 (LWP 7870 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:27752,clear,clear,27752,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 3 (LWP 7871 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:26823,clear,clear,26823,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 4 (LWP 7872 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:25894,clear,clear,25894,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 5 (LWP 7905 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24965,clear,clear,24965,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 6 (LWP 7906 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:24036,clear,clear,24036,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 7 (LWP 7907 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:23107,clear,clear,23107,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 8 (LWP 7908 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:22178,clear,clear,22178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability," environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; MMseq version: 13.45111; CPU: 2x AMD 7543 (64 cores total); RAM: 512 GB; Local Disk: 7 TB SSD; Network: 100 GBit Infiniband; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 32; Socket(s): 1; NUMA node(s): 1; Vendor ID: AuthenticAMD; CPU family: 23; Model: 49; Model name: AMD EPYC 7502P 32-Core Processor; Stepping: 0; CPU MHz: 2500.000; CPU max MHz: 2500.0000; CPU min MHz: 1500.0000; BogoMIPS: 5000.22; Virtualization: AMD-V; L1d cache: 32K; L1i cache: 32K; L2 cache: 512K; L3 cache: 16384K; NUMA node0 CPU(s): 0-31; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/826:10140,pause,pausefilter,10140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/826,1,['pause'],['pausefilter']
Usability," processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequences processed; ...........................................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ........................................ 3 Mio. sequences processed; ...................................................................; Index table: Masked residues: 47802947; Index table: fill...; Erreur de segmentation (core dumped); ```. Many thanks for any help or advice. I have watched the mmseqs demo on https://www.youtube.com/watch?v=LqiHyCLjPno and am looking forward to enjoying the huge simplification it promises (the last example in the demo is the 2bLCA we applied to metagenomics data and my workflow was much more complex and slow than with mmseqs!)...; Best, ; Pascal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3:3534,simpl,simplification,3534,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3,1,['simpl'],['simplification']
Usability,"## Context. Hi!. We're currently looking for a replacement for CD-HIT-EST for clustering genes in nucleotide space. We have a few conditions when clustering. The CD-HIT-COMMAND is straightforward:. ```; cd-hit-est -i genes.fa -o cluster.fa -c 0.95 -T 64 -M 0 -G 0 -aS 0.9 -g 1 -r 0 -d 0; ```. Basically, we want to perform greedy clustering at 95% identity and at least 90% of the shorter gene should be aligned. The longest sequence of a cluster should become the representative and a member of a cluster should not align against any other representative with a better score/percid. We have now come up with the following command(s):. ```; mmseqs createdb genes.fa genes.mmseqs.db --dbtype 2 --shuffle 0. mmseqs cluster genes.mmseqs.db genes.mmseqs.cluster tmp --kmer-per-seq-scale 0 --kmer-per-seq 1000 \; -s 4 --max-seq-len 80000 --remove-tmp-files 0 --cluster-mode 2 --min-seq-id 0.95 --threads 64 --cov-mode 1 \; -c 0.9 --spaced-kmer-mode 0 --alignment-mode 3 --cluster-reassign 1; ```. The key parameter seems to be `--spaced-kmer-mode 0` as this prevents very similar sequences being placed in different clusters. as reported by others (#831 #489). Using these parameters the clustering compares quite well against the clusters produced by cd-hit:; ```; mmseqs clusters = 13'471'787; cdhit clusters = 13'640'333; runtime(mmseqs) / runtime(cdhit) = 0.09; Rand Score: 0.99; Adjusted Rand Score: 0.91; V-measure: 0.99; ```. So it seems that mmseqs is slightly overclustering (might be due to local vs global alignment) and the cluster consistency metrics indicate that even the cluster membership (and not only the representatives) seem to be mostly correct. . I would like to get your feedback on the command(s) before I make this our standard (nucleotide) gene clustering pipeline. Do you think there are other parameters that could be tweaked?. ## Your Environment; version: `6f45232ac8daca14e354ae320a4359056ec524c2`; Downloaded static binary from GitHub. Best and thanks,; Hans",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/836:1690,feedback,feedback,1690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/836,1,['feedback'],['feedback']
Usability,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53:690,simpl,simple,690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53,1,['simpl'],['simple']
Usability,"## Expected Behavior ; I would like to run MMseq2 to search for genes in a reference genome. As a sanity check, I simply searched for the genes annotated on the genome in the reference genome, so they should match perfectly. (Next, I'll run it on genes that might not perfectly match the reference as they can have some differences in the third char of each coddon.). ## Current Behavior; When running a nucleotides search I get ~5K results, most of them are long enough and mapped well.; When running a translated search I get 89K results that are very short and non of them covers the entire gene.; I assume that this is not a bug but rather an intended behavior. What am I missing?. ## Steps to Reproduce (for bugs); the files can be found here:; query - https://files.cs.huji.ac.il/morani/cds_from_genomic.fna; target - https://files.cs.huji.ac.il/morani/GCF_000011885.1_ASM1188v1_genomic.fna ; translated search command -` mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_translated.m8 tmp --search-type 2 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`; regular search command - `mmseqs easy-search cds_from_genomic.fna GCF_000011885.1_ASM1188v1_genomic.fna memseq_igc_to_salmonella_atcc_9150_nucleotides.m8 tmp --search-type 3 -a --format-mode 4 --format-output ""target,query,tstart,tend,nident,qlen""`. ## MMseqs Output (for bugs); output files:; translated search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_translated.m8; regular search - https://files.cs.huji.ac.il/morani/memseq_igc_to_salmonella_atcc_9150_nucleotides.m8. ## Context; For a pipeline I'm designing, I'm comparing a few tools that can search for gene in a reference genome. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used : 15.6f452; * Downloaded using conda; * Server info:; NAME=""Debian GNU/Linux""; VERSION_ID=""10""; VERSION=""10 (",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/796:114,simpl,simply,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/796,1,['simpl'],['simply']
Usability,"## Expected Behavior. Dear all, I created a toy example downloading 2 fastq.gz, assembling a bacterial genome and predicting proteins with prokka. Then I used just 3 proteins as a source of a collection of genes in order to estimate the abundance of these genes in each sample [and then scale this strategy further]. Yesterday Milot helped a lot by suggesting using '_summarizealis_' + '_createtsv_'. . ## Current Behavior. I am getting a table like the one below (I just added that row as 'headers' for simplicity). > **READS	PROTEIN	#3	#4	#5**; > SRR4213076.15870	EMNFODFG_00006	0.486	0.486	1; > SRR4213076.580999	EMNFODFG_00006	0.965	0.965	1; > SRR4213076.382442	EMNFODFG_00006	0.988	0.988	1. ## Steps to Reproduce (for bugs); I followed these steps:. ```; mmseqs createdb SRR* sample_db; mmseqs createdb protein.faa collection_db; mmseqs cluster collection_db collection_clu temporal; mmseqs createsubdb collection_clu.index collection_db collection_rep; mmseqs map sample_db collection_rep sample_map temporalx; mmseqs convertalis sample_db collection_db sample_map result.m8; mmseqs summarizealis sample_map sample_map_summary; mmseqs createtsv sample_db collection_db sample_map_summary sample_map_summary.tsv; ```. ## MMseqs Output (for bugs). The full file [sample_map_summary.tsv is here](https://github.com/soedinglab/MMseqs2/files/7523250/sample_map_summary.txt). ## Context. In the sample_map_summary.tsv when I sort it I get 1079 'lines' (hits?) for one of the proteins. **I have 2 questions** . A) can you detail what are columns 3-4-5 (I guess it is overlap protein/read estimated in different ways). B) is it correct then to calculate abundance [for this protein] as 1079 / [total number reads = wc -l sample_db.index ] or `1079/1443540` . I am trying to estimate the abundance and coverage of a collection of proteins in metagenomic data (using the reads as query in this case). I am trying to use mmseqs due to its speed and the scale of the task in this case. ; Thanks for your hel",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/504:504,simpl,simplicity,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/504,1,['simpl'],['simplicity']
Usability,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201:185,simpl,simple,185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201,1,['simpl'],['simple']
Usability,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/42:22,Feedback,Feedback,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42,5,"['Feedback', 'feedback']","['Feedback', 'feedback']"
Usability,"## Expected Behavior; I want to cluster a nucleic acid database. ## Current Behavior; I have some question with mmseqs; 1. What is the difference between result2repseq and createseqfiledb; 2. --Are min seq-id and - c the same? If I want to cluster them based on 50% similarity, what should they be set to?. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I use this to cluster; ```bash; mmseqs createdb test.fasta tmps/DB; mmseqs linclust tmps/DB tmps/DB_clu tmps --min-seq-id 0.90 --threads 96; mmseqs result2repseq tmps/DB tmps/DB_clu tmps/DB_clu_rep.fasta; mmseqs convert2fasta tmps/DB_clu_rep.fasta outs.fasta; ```. But I read the PDF guide manual on Github, which is. ```bash; mmseqs cluster DB DB_clu tmp; mmseqs linclust DB DB_clu tmp; mmseqs createsubdb DB_clu DB DB_clu_rep; mmseqs convert2fasta DB_clu_rep DB_clu_rep.fasta; ```; i wonder if their are same or not?. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. their are two output. ```; ls -l; total 1107472; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep.fasta; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.fasta.dbtype; lrwxrwxrwx 1 root root 32 Nov 22 02:16 DB_clu_rep.fasta_h -> /data/codonOP/50filter/tmps/DB_h; lrwxrwxrwx 1 root root 39 Nov 22 02:16 DB_clu_rep.fasta_h.dbtype -> /data/codonOP/50filter/tmps/DB_h.dbtype; lrwxrwxrwx 1 root root 38 Nov 22 02:16 DB_clu_rep.fasta_h.index -> /data/codonOP/50filter/tmps/DB_h.index; -rw-rw-r-- 1 root root 30698239 Nov 22 02:16 DB_clu_rep.fasta.index; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.lookup -> /data/codonOP/50filter/tmps/DB.lookup; lrwxrwxrwx 1 root root 37 Nov 22 02:16 DB_clu_rep.fasta.source -> /data/codonOP/50filter/tmps/DB.source; ```. ```; ls -l; total 1107476; -rw-rw-r-- 1 root root 1103346632 Nov 22 02:16 DB_clu_rep; -rw-rw-r-- 1 root root 4 Nov 22 02:16 DB_clu_rep.d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/783:721,guid,guide,721,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/783,1,['guid'],['guide']
Usability,"## Expected Behavior; I would like to replicate the scores given by other implementations of SW local alignment such as parasail. . ## Current Behavior; Even when I use the same substitution matrix as parasail, I get different scores. From looking at the code it looks like the substitution matrix is modified by the ""lambda"" and ""background"" values. I would like for mmseqs align to simply use the substitution matrix I input without any modifications. . ## Steps to Reproduce (for bugs); I created a list of repetitive sequences; ['AAAAAAAAAAAAAA',; 'CCCCCCCCCCCCCC',; 'DDDDDDDDDDDDDD',; 'EEEEEEEEEEEEEE',; 'FFFFFFFFFFFFFF',; 'GGGGGGGGGGGGGG',; 'HHHHHHHHHHHHHH',; 'IIIIIIIIIIIIII',; 'KKKKKKKKKKKKKK',; 'LLLLLLLLLLLLLL',; 'MMMMMMMMMMMMMM',; 'NNNNNNNNNNNNNN',; 'PPPPPPPPPPPPPP',; 'QQQQQQQQQQQQQQ',; 'RRRRRRRRRRRRRR',; 'SSSSSSSSSSSSSS',; 'TTTTTTTTTTTTTT',; 'VVVVVVVVVVVVVV',; 'WWWWWWWWWWWWWW',; 'YYYYYYYYYYYYYY',; 'XXXXXXXXXXXXXX']. I converted these sequences to a database and used ""map"" with this database against itself with the following BLOSUM62 substitution matrix (the # in the first 3 lines was removed for formatting):. Background (precomputed optional): 0.0794 0.0213 0.0501 0.0468 0.0525 0.0647 0.0228 0.0642 0.0491 0.0869 0.0323 0.0376 0.0447 0.0426 0.0649 0.0564 0.0528 0.0591 0.0115 0.0284 0.00001; Lambda (precomputed optional): 0.34657; Avg SeqId (precomputed optional): 0.32351; 	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y	X; A	4	0	-2	-1	-2	0	-2	-1	-1	-1	-1	-2	-1	-1	-1	1	0	0	-3	-2	0; C	0	9	-3	-4	-2	-3	-3	-1	-3	-1	-1	-3	-3	-3	-3	-1	-1	-1	-2	-2	-2; D	-2	-3	6	2	-3	-1	-1	-3	-1	-4	-3	1	-1	0	-2	0	-1	-3	-4	-3	-1; E	-1	-4	2	5	-3	-2	0	-3	1	-3	-2	0	-1	2	0	0	-1	-2	-3	-2	-1; F	-2	-2	-3	-3	6	-3	-1	0	-3	0	0	-3	-4	-3	-3	-2	-2	-1	1	3	-1; G	0	-3	-1	-2	-3	6	-2	-4	-2	-4	-3	0	-2	-2	-2	0	-2	-3	-2	-3	-1; H	-2	-3	-1	0	-1	-2	8	-3	-1	-3	-2	1	-2	0	0	-1	-2	-3	-2	2	-1; I	-1	-1	-3	-3	0	-4	-3	4	-3	2	1	-3	-3	-3	-3	-2	-1	3	-3	-1	-1; K	-1	-3	-1	1	-3	-2	-1	-3	5	-2	-1	0	-1	1	2	0	-1	-2	-3	-2	-1; L	-1	-1	-4	-3	0	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487:384,simpl,simply,384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487,1,['simpl'],['simply']
Usability,"## Expected Behavior; More docs about the pairaln module, which seems to be an important module for the MSA pairing of AlphaFold Multimer. ## Current Behavior; I cannot find any descriptions about what this module do. Does it pair any given sequences? Or it just simply extracts the species descriptions in UniRef30 (wrt the MSA pairing demand in ColabFold)? If this is the case, the naming can be a little bit confusing.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/628:263,simpl,simply,263,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/628,1,['simpl'],['simply']
Usability,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/200:1028,simpl,simple,1028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200,1,['simpl'],['simple']
Usability,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41:101,guid,guidance,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41,1,['guid'],['guidance']
Usability,"## Expected Behavior; The analysis finished in minutes on MMSeq2 MSA server using colabfold. ## Current Behavior; Local mmseqs always paused for hours without generating outputs. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; I am using `colab_search` which calls `mmseqs` like `search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8`. The query contains 4 amino acid sequences, and each has the length of 493 amino acid. NOTE, when I took off `--split 8`, I also observed that mmseqs halts at certain stage. ## MMseqs Output (for bugs); <pre>; search search_results/qdb db/uniref30_2103_db search_results/res search_results/tmp --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000 --split 8 [93/1999]. MMseqs Version: b768f48f0bd73688b6a68132159a97f7b6310f03; Substitution matrix aa:blosum62.out,nucl:nucleotide.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 2; Pseudo count a substitution:1.100,context:1.400; Pseudo count b substitution:4.100,context:5.800; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Correlation score weight 0; Gap open cost aa:11,nucl:5; Gap extension cost aa:1,nucl:2; Zdrop 40; Threads 72; Compressed 0; Verbosity 3; Seed substitution matrix aa:VTML80.out,nucl:nucleotide.out; Sensitivity 8; k-mer length 0; k-score seq:2147483647,prof:2147483647; Alphabet size aa:21,nucl:5; Max results per query 10000; Split database 8; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517:134,pause,paused,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517,1,['pause'],['paused']
Usability,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52:676,guid,guide,676,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52,1,['guid'],['guide']
Usability,"## Expected Behavior; mmseqs createindex; finishes in reasonable time on splitted db. ## Current Behavior; mmseqs createindex ; gets stucked in seemingly infinite loop after filling the index. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; The problem is interimttent but simply running the steps to create subdatabases from the manual, followed by createindex. Size of database does not matter much.; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; The output is standard, just incomplete. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; 11-e1a1c. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; cluster admin compiled the version so self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; probably reasonably current gcc...; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; about 120GB RAM per node, intel CPUs with SS2, not sure about AVX2.; * Operating system and version:; some flavor of linux (debian-style)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/314:355,simpl,simply,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/314,1,['simpl'],['simply']
Usability,"## Expected Behavior; searching against MMseqs2 databases after clustering step. ## Current Behavior; after mmseq2 db creation (giving a type nucleotide db) and clustering, it does not proceed due to formating issue (clustering). I tried to create a new sub db using the index from the clustering DB ; (createsubdb clust_ORF_min100/dORF_seq_DB.index clust_ORF_min100/dORF_seq_DB clust_ORF_min100/dORF_rep_DB); but it still print the same error. How can i change the mmseq2 cluster output to make it usable by the search function ?. ## MMseqs Output (for bugs); Input database ""clust_ORF_min100/dORF_rep_DB"" has the wrong type (Clustering). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; MMseqs Version: 	15.6f452; conda environement on a server (linux distribution)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/876:499,usab,usable,499,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/876,1,['usab'],['usable']
Usability,"## Information. Hi,. I am a bit confused with the MMseqs2 suite modules. If I understood correctly:. - when I do `mmseqs search args`, it uses the algorithm described in https://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.3988.html (3 stages: prefilter, ungapped alignment, gapped SW alignment. The last one generates similarity file, giving the % of similarity for each pair of sequences); - when I run `mmseqs linclust args`, it executes the algorithm described in https://www.nature.com/articles/s41467-018-04964-5; - For `mmseqs cluster`, I saw that it is slower than linclust, but also way more sensitive. So, I am using this module, to cluster sequences with min-seq-id = 0.8 (default of mmseqs). But I do not understand what is used. In the userguide, I saw :. > mmseqs cluster: Clusters sequences by similarity. It compares all sequences in the sequence DB with each other using mmseqs search, filters alignments according to userspecified criteria (max. E-value, min. coverage,. . . ), and runs mmseqs clust to group similar sequences together into cluster' (p.17). At the same time, in p.22, I saw:. > The cascaded clustering workflow first runs linclust, our linear-time clustering module, that can produce clustering’s down to 50% sequence identity in very short time. To achieve lower sequence identities and/or to further improve the resulting clusters, we continue with three cascaded clustering steps. Cascaded clustering being the default for `mmseqs cluster`, this would mean that the search module is not used?. When using `mmseqs search args` I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. I don't know if my questions are really clear. Please do not hesitate to ask me if you need some more information. Thanks a lot for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/279:1806,clear,clear,1806,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279,1,['clear'],['clear']
Usability,"## Suggestion of a feature. It would be extremely useful if mmseqs have native python bindings. Results from the search could be returned as pandas Dataframe (which is standard python tabular format). It would simplify the usage of mmseqs2 as a building block for bioinformatics aplications.; Such bindings could be implemented using pybind (https://github.com/pybind/pybind11). Currently we are interested in this feature as a [whole organisation](https://github.com/covid-genomics), however we don't have enough resources to create and maintain bindings by ourselves.; With little to no change mmseqs2 could be also used as a Python framework for biological sequences manipulation (similar to [Biopython](https://biopython.org/) of [Biotite](https://www.biotite-python.org/index.html), but faster and dedicated for large volumes of sequences). ## PoC. We created a very rough [PoC with bypind11](https://github.com/covid-genomics/biosnake) to examine how easy it is to create api wrappers.; The bindings are far from being production-ready and the project was just used as a proof that this is possible. ## Possible collaboration. We want to know if you are interested in helping us develop and maintain the bindings. If yes, then we would like to see tight future collaboration to make mmseqs2 more accessible. Bindings would make it easier to use in standard data science pipelines and much more flexible. [Covid Genomics](http://covidgenomics.com/) contact email: [contact@covidgenomics.com](mailto:contact@covidgenomics.com)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450:210,simpl,simplify,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450,1,['simpl'],['simplify']
Usability,"/8813_db --threads 10; `; I thought [this was the way](https://github.com/soedinglab/MMseqs2/issues/436) to feed the next steps, 8813_db would be the query in this case. I reasoned since the database of nonredundant proteins is in nucleotide format and the reads created a nucleotide database the search would be between nucleotide. . **I run** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --search-type 3; `. I got this error ; ```; Unrecognized parameter --search-type; Did you mean ""--seed-sub-mat""?; ```. **Or** ; `mmseqs map ./SRR13068813/SRR13068813_db ../DATABASE/viral6_rep SRR13068813_pi tempural --threads 1 --seed-sub-mat nucl`. and I got this message error; ```; It is unclear from the input if a translated or nucleotide search should be performed; Please provide the parameter --search-type 2 (translated), 3 (nucleotide) or 4 (translated nucleotide backtrace); ```. Using 8813_FA as a query which -a simple database created from a fasta, part of the assembly of that sample, the search works. `mmseqs search 8813_FA ../DATABASE/viral_rep 8813_hit temporal --threads 10 --search-type 3; `. ## MMseqs Output (for bugs). ```; mmseqs map 8813_db viral6_rep 8813_match temporal --threads 1 --seed-sub-mat nucl; map 8813_db .viral6_rep SRR13068813_match temporal --threads 1 --seed-sub-mat nucl . MMseqs Version: 	113e3212c137d026e297c7540e1fcd039f6812b1; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucl,aa:nucl; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0.95; Coverage mode 	2; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id. 	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/476:1732,simpl,simple,1732,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/476,1,['simpl'],['simple']
Usability,"0 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a58d38379bfb3c5ad75272d358bfec9f2c100b61; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): HPC, nodes with support for both.; * Operating system and version: SUSE 12.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/89:1612,clear,clear,1612,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89,1,['clear'],['clear']
Usability,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:256,guid,guide,256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103,1,['guid'],['guide']
Usability,"===============================================] 100.00% 154 0s 46ms; Time for merging to aln_step0: 0h 0m 0s 4ms; 227 alignments calculated; 207 sequence pairs passed the thresholds (0.911894 of overall calculated); 1.344156 hits per query sequence; Time for processing: 0h 0m 0s 72ms; clust clu/sim2_tmp/12164117771218227067/input_step_redundancy clu/sim2_tmp/12164117771218227067/aln_step0 clu/sim2_tmp/12164117771218227067/clu_step0 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 154 0s 8ms; Sort entries; Find missing connections; Found 1 new connections.; Reconstruct initial order; [=================================================================] 100.00% 154 0s 8ms; Add missing connections; [=================================================================] 100.00% 154 0s 0ms. Time for read in: 0h 0m 0s 85ms; Total time: 0h 0m 0s 161ms. Size of the sequence database: 154; Size of the alignment database: 154; Number of clusters: 140. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 165ms; mergeclusters in/DB_in clu/sim2_clu clu/sim2_tmp/12164117771218227067/clu_redundancy clu/sim2_tmp/12164117771218227067/clu_step0 --threads 16 --compressed 0 -v 3. Clustering step 1; [=================================================================] 100.00% 154 0s 39ms; Clustering step 2; [=================================================================] 100.00% 140 0s 132ms; Write merged clustering; [=================================================================] 100.00% 164 0s 195ms; Time for merging to sim2_clu: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 253ms. ## Context; Is combining `--min-seq-id` with `--similarity type 1` the correct approach to define thresholds for clustering? From what I read in the guidelines, I expect this measure to be automatically converted.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414:32362,guid,guidelines,32362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414,1,['guid'],['guidelines']
Usability,"> I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf). Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`. This code explains: ; https://github.com/soedinglab/MMseqs2/blob/87e7103d289029dc3345f85ea9a4c4c6d6416e46/src/prefiltering/PrefilteringIndexReader.cpp#L385. Basically `--db-load-mode 3` is the combination of `--db-load-mode 2` and `vmtouch`, meaning `mmseq` will mmap and put the necessary data in the memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519:28,Guid,Guide,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-2422790519,1,['Guid'],['Guide']
Usability,> The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; > See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2. Thank you very much!; Thank you for your help. Our problem has been resolved. The order of memory insertion has been changed.; Dankschön!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374:213,progress bar,progress bar,213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824574374,1,['progress bar'],['progress bar']
Usability,"> The point is that `result2msa` create an MSA per each cluster, and even the MSA is in binary format you can visualize the result with a simple `less` but you can't use for other pourpouse. Is there any way, may be using `apply`, to export this binary-MSA output to flat-text? Because I can see the result and It's exactly that I want. I've found a solution. We can use linux `strings` function to convert the binary-MSA to flat-text.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-559387067:138,simpl,simple,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-559387067,1,['simpl'],['simple']
Usability,@LittletreeZou Unfortunately without a progress bar I wasn't sure how much longer it needed to finish. I killed it after it ran for ~30 hours.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/726#issuecomment-1856024215:39,progress bar,progress bar,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/726#issuecomment-1856024215,1,['progress bar'],['progress bar']
Usability,"@adriaaula Would it be possible to send me the `top1` input (including `.[0-9]`, `.index` `.dbtype`) of the LCA module? So that I do not need to download the full sequences of gtdb. You can find it by looking at the input parameter for the LCA call. The call should look similar to this:. lca gtdb_54kDB tmp/3061363735539572485/top1 taxresdb --compressed 0 --blacklist 12908,28384 --tax-lineage 0 --threads 12 -v 3. @genomewalker thank you a lot! I would add it to the user guide. I am sure many user would profit from it",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774:474,guid,guide,474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774,1,['guid'],['guide']
Usability,@fbreitwieser wrote a guide how to turn a NCBI BLAST database into a mmseqs taxonomy datebase. https://github.com/soedinglab/MMseqs2/wiki#create-a-sequence-database-with-taxonomic-information-from-an-existing-blast-database,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-491492666:22,guid,guide,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-491492666,1,['guid'],['guide']
Usability,@hochshi the relevant repository for our server is here https://github.com/soedinglab/MMseqs2-App ; Their is a small guide how to set up a server.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/522#issuecomment-1006319042:117,guid,guide,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/522#issuecomment-1006319042,1,['guid'],['guide']
Usability,"@ksahlin Thank you for the feedback :) ; Yes, the first column is the identifier of the representative ""centre"" sequence and the second column contains the identifier of a member of the cluster. See also https://github.com/soedinglab/mmseqs2/wiki#clustering-format",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418155122:27,feedback,feedback,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418155122,1,['feedback'],['feedback']
Usability,"@liuxianghui thank you for asking this question! . ```; cd-hit-est -i $CLUSTERS.IN -c 0.95 -T $MC_CPU -M 0 -G 0 -aS 0.9 -g 1 -r 1 -d 0 -o $CLUSTERS.OUT > $CLUSTERS.log; ```. CD-HIT computes in default global sequence identity, while MMseqs2 computes local. Therefore it is not possible to mimic exactly the same behaviour. But since you turn of the the global sequence identity computation, you can get fairly close to CD-HIT's criteria. Here is my suggested parameter mapping. ```; -c 0.95 -> --min-seq-id 0.95 ; -T $MC_CPU -> --threads $MC_CPU; -G 0 -> MMseqs2 uses local alignments is the default, there is no way to make alignments global; -aS 0.9 -> --cov-mode 1 -c 0.9; -g 1 -> it is not possible with MMseqs2 using greedy incremental clustering (needed for --cov-mode 1). However, setcover assigns sequence to the best matching representative in default. ; -r 1 -> MMseqs2 in default considers forward and reverse strand; ```. Final command: . ```; mmseqs easy-cluster in.fa clu tmp --min-seq-id 0.95 --cov-mode 1 -c 0.9 --threads $MC_CPU; ```. I have also added a guide how parameters of CD-HIT and MMseqs2 are related in the documentation https://github.com/soedinglab/MMseqs2/wiki#how-do-parameters-of-cd-hit-relate-to-mmseqs2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473:1072,guid,guide,1072,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/317#issuecomment-643981473,1,['guid'],['guide']
Usability,"@martin-steinegger Thanks for the answer!; Intuitively, I've already tried running your latest suggested command:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln"" --gap-open 3 --gap-extend 0`. However, no output file is generated (in this case, `alnRes.txt`) when the gap options are passed to convertalis. As for the warning, I am quickly testing things on my PC, but the usually I will run this for bigger datasets on a Linux machine. I will test on Linux as well to see if there is any difference. EDIT - On Linux:; `5316 Aborted (core dumped) mmseqs convertalis seqsDB revDB alignDB alnRes.txt --search-type 3 --format-output ""query,target,raw"" --gap-open 3 --gap-extend 1`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481:43,Intuit,Intuitively,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201#issuecomment-491344481,1,['Intuit'],['Intuitively']
Usability,"@milot-mirdita Hi Milot, how is it going with this topic of global alignment? . My workflow for protein clustering like below:; 1. blastp for local alignment, find similar sequence pairs;; 2. needle for global alignment access similarity for blastp pairs;; 3. mcl to cluster the needle result. According to my experience, only a local alignment could be not enough to have clusters.; I'm not clear about the clustering function in mmseqs2, is it enough to substitute my whole workflow?. Hope to see your comment. Cheers,. **WANG**",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186:392,clear,clear,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696168186,1,['clear'],['clear']
Usability,@milot-mirdita Thanks so much for this clarification. I noticed this page before just wasn't clear to me how it impacted my scores. Fixed my issue. I'm interested in linclust's workflow so I'm running through linclust's prefiltering and alignment step! I'd like to see the alignmentDB before the greedy set cover algo.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/861#issuecomment-2212557728:93,clear,clear,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/861#issuecomment-2212557728,1,['clear'],['clear']
Usability,"@milot-mirdita noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-510545621:44,progress bar,progress bar,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-510545621,2,['progress bar'],['progress bar']
Usability,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:346,guid,guide,346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178,1,['guid'],['guide']
Usability,@nick-youngblut we check the compatibility of the input database in each module. I hope this reduces usability problems.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-513131346:101,usab,usability,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-513131346,1,['usab'],['usability']
Usability,And what about if I use **clust** independently when clustering using profiles? The following part of my workflow:; making profiles; ```; mmseqs search nr30_db nr70_db nr30_res tmp --num-iterations 3 --e-profile 0.001 -e 0.001 --threads 116; mmseqs result2profile nr30_db nr70_db nr30_res nr30_prof_db tmp --threads 110; ```; and then searching; ```; mmseqs search nr30_prof_db nr30_prof_db_consensus nr30_pp_res_0_05_cov tmp --threads 110 -e 0.05 --add-self-matches -c 0.8 --cov-mode 1; mmseqs clust nr30_prof_db nr30_pp_res_0_05_cov nr30_pp_clu_0_05_cov --threads 110 --cluster-mode 1 --similarity-type 1; ```; produces erroneous huge cluster along with many others. But I suspect it connects too many entries into that one big cluster (encompassing 4.5M sequences out of 10M). So therefore my question is how to control cov-mode within **clust** as it has not explicit option. Would that be through the **search** - I provided respective options to the above **search** but that doesn't solve the big cluster problem... Of course if the covering options applied to the **search** itself apply also to subsequent clustering it will be clear to me then that my data (in this case nr database) clusters transitively in too broad manner.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-375620783:1137,clear,clear,1137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-375620783,1,['clear'],['clear']
Usability,"Are you using the `easy-search`? You can use the `--format-output` parameter to print any/all of the following fields `qseq,tseq,qheader,theader,qaln,Talk `. Then you can reformat the resulting tsv with some simple script into a fasta file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/356#issuecomment-705441447:208,simpl,simple,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356#issuecomment-705441447,1,['simpl'],['simple']
Usability,Are your profiles in the MMseqs2 clusters format? If yes than you can update the cluster database by following the next steps. (0) search the profiles against the set of new proteins.; (1) use `swapresults` to get mapping of protein to profile.; (2) use `filterdb ... --extract-lines 1` to extract the top hit for each protein. ; (3) trim only the first column since the cluster format just has only the sequence identifier. This can be done with `fliterdb ... --trim-to-one-column`.; (4) swap again to get a profile (cluster) to protein mapping `swapresults`.; (5) use `mergedbs` to combine your old database with your new database. This is really hardcore mmseqs internal knowledge. We will offer a MMseqs2 tutorial at the ECCB18 if you want to learn more about its internals.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910:747,learn,learn,747,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910,1,['learn'],['learn']
Usability,"Based on the graph below, which I pulled from the MMSeqs2 [paper supplement](https://www.biorxiv.org/content/biorxiv/suppl/2017/06/07/079681.DC5/079681-1.pdf), I was expecting my query to take less than an hour (even with higher sensitivity). However, it seems to be taking much, much longer. Additionally, it seems to be hanging on the stage after `Index table: fill` is printed, after printing a good portion of the progress bar. . ![image](https://github.com/soedinglab/MMseqs2/assets/49450966/7ed7b5b0-8236-477c-93f1-904cb461d691). My query database is only 14 sequences in size (which I realize is much smaller than the MMSeqs2 program is intended to work with). The target database, which is the result of splitting all of GTDB into sub-datasets, is about 6 million sequences (6,263,739 to be exact). This is the command I executed. . `mmseqs easy-search -s 7 query.fasta targetDB_split result.m8`. Here is some information about my computing environment. I should also note that I am submitting the job using ``slurm``, and allocated 50 GB of memory (which is less than the 23 GB predicted by the program). . ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 32; On-line CPU(s) list: 0-31; Thread(s) per core: 1; Core(s) per socket: 16; ```; It is possible that this is just a slurm issue, or something else going on which is not related to MMSeqs -- I just wanted to double-check that there is nothing glaringly wrong with this workflow. Also, thank you so much for how quickly you respond to issue requests! I really appreciate it.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805:418,progress bar,progress bar,418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805,1,['progress bar'],['progress bar']
Usability,"Based on your previous suggestion, I simply downloaded the PDB using Foldseek via the following command; `foldseek databases PDB pdb tmp `. Then I used mmseqs to filter for the tax I wanted. ; `mmseqs filtertaxseqdb pdb pdb_human --taxon-list 9606`. Were you suggesting something different from this? ; Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919:37,simpl,simply,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919,1,['simpl'],['simply']
Usability,"Computing the idx with 8 threads takes ~1 hour. Transferring the large index is much faster. My previous jobs that created the idx on the fly took ~2 hours, but with the pre-computed idx, the jobs take ~30 minutes. . Is there any why to homogenize the splits so that they are all approx. the same size. . To be clear, ~29G of h_vmem per thread (using 8 threads) is needed to run the `mmseqs search` jobs, but the largest split idx file is 70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741769461:311,clear,clear,311,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741769461,1,['clear'],['clear']
Usability,"Dear all,. Does MMSeqs2 provide a way (a command) to generate PSSM profiles from the MMSeqs2 multiple sequence alignment (msa) output file out.mm_msa?. I think providing such a functionality can help a lot. In this way, we don't need to call psiblast (which downgrades the runtime performance of the machine-learning tools) anymore to generate PSSM features for the protein residues. Alright?. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/580:308,learn,learning,308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/580,1,['learn'],['learning']
Usability,"Do you also have the previous steps? Alternatively, clear the temp directory and rerun the command. At this point the profiles already contain over 7k entries for some reason (`7.00K 0s 8ms`).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726118628:52,clear,clear,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/372#issuecomment-726118628,1,['clear'],['clear']
Usability,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/70:677,intuit,intuition,677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70,1,['intuit'],['intuition']
Usability,"Do you have a recommendation for creating a mmseqs nt database from a collection of fasta files? The instructions for making a mmseqs2 database from a blastdb are clear. My guess is that one could just take a collection of fasta files and convert them to a blastdb using makeblastdb, but I worry about the other things that creating a blastdb will do (repeat masking). As a more specific example, we would like to make a 'taxonomy aware' version of an mmseqs database for all NCBI Virus RefSeq genomes from NCBI Assembly (https://www.ncbi.nlm.nih.gov/assembly). So would you recommend we just download them and make a blastdb of these or is there an approach more amenable to the use of mmseqs?. Thanks,. Scott",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412:163,clear,clear,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412,1,['clear'],['clear']
Usability,"Exactly, you can also use the precompiled binaries at https://mmseqs.com/latest/. I've also added links to the corresponding user guide commits for older releases:; https://github.com/soedinglab/MMseqs2/wiki",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490:130,guid,guide,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490,1,['guid'],['guide']
Usability,"FYI:. MMseqs2 has been committed to the FreeBSD ports collection.; It might be helpful to users if you could post a message like; the following on your website:. Thanks!. MMseqs2 can be installed on FreeBSD via the FreeBSD ports system. To install via the binary package, simply run:. pkg install MMseqs2. This will very quickly install a prebuilt binary using only highly-portable; optimizations, much like apt, yum, etc. FreeBSD ports can just as easily be built and installed from source,; although it will take longer (for the computer, not for you):. cd /usr/ports/biology/mmseqs2; make install. Building from source allows installing to a different prefix, compiling with; native optimizations, and in some cases, building with non-default options; such as different compilers or dependencies. For example, adding. CFLAGS+=-march=native. to /etc/make.conf will cause ports built from source to use all native; optimizations known to the compiler for the local CPU, resulting in faster; but less portable binaries. To report issues with a FreeBSD port, please submit a PR at:. https://www.freebsd.org/support/bugreports.html. For more information, visit https://www.freebsd.org/ports/index.html.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460:272,simpl,simply,272,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460,1,['simpl'],['simply']
Usability,"For the clu70:; ```; (gdb) thread apply all bt. Thread 32 (LWP 7932 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:623,clear,clear,623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"Frameshift aignments are very useful for Nanopore data, where indels are common. It can also be used for virus-related research, as [some phages have conversed programmed frameshifts](https://www.cell.com/fulltext/S1097-2765(04)00539-8) in important genes. DIAMOND supports frameshift-aware alignments since [version 0.9.14](https://github.com/bbuchfink/diamond/releases/tag/v0.9.14). This is a simple explanation in their documentation:. > Penalty for frameshifts in DNA-vs-protein alignments. Values around 15 are reasonable for this parameter. Enabling this feature will have the aligner tolerate missing bases in DNA sequences and is most recommended for long, error-prone sequences like MinION reads. In the pairwise output format, frameshifts will be indicated by `\` and `/` for a shift by +1 and -1 nucleotide in the direction of translation respectively.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417:395,simpl,simple,395,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417,1,['simpl'],['simple']
Usability,"Hello,. I would like to perform clustering of a large nucleotide sequence with the easy-clust .; However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation. Thanks,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512:116,clear,clear,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512,1,['clear'],['clear']
Usability,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257:1024,clear,clear,1024,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257,1,['clear'],['clear']
Usability,"Hi @martin-steinegger ,; many thanks for this update. From our first tests we see a clear improvement in this scenario and we are now able to find more exact matches with MMSeqs2 than before and even compared to Diamond.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566:84,clear,clear,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566,1,['clear'],['clear']
Usability,"Hi @milot-mirdita, thanks for the quick reply!. I am not creating a new substitution matrix. I am using the default parameters. Increasing the k-mer size seems intuitive, I'll try that. I am doing this for multiple alphabet reduction schemes to see the amount of reduction in dataset size. Should I keep the k-mer size of 11 across the alphabets or scale it based on the alphabet size? (e.g. longer k-mers for smaller alphabets).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819072155:160,intuit,intuitive,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781#issuecomment-1819072155,1,['intuit'],['intuitive']
Usability,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:562,clear,cleared,562,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129,1,['clear'],['cleared']
Usability,"Hi Andres,. thanks a lot for your feedback. It is possible to restart modules in MMseqs2 e.g. prefilter, align, clust, ... (see https://github.com/soedinglab/mmseqs2/wiki#how-to-restart-a-search-or-clustering-workflow) but merging can not be restarted. However there is a way using ffindex_build (https://github.com/soedinglab/ffindex_soedinglab). The following steps should create a new database (you need to adjust the 7 so it matches the amount of ""index.[0-9]+"" files in the folder). . ```; for i in {1..7}; do; ffindex_build -a aln.{0,index.0} -d aln.$i -i aln.index.$i;; done; ffindex_build -as aln.{0,index.0}; mv aln.0 aln; mv aln.index.0 aln.index; ```. Another option: MMseqs2 reports per default 300 alignment. You could just rerun the alignment with `--max-accept` to decrease the hard disk space needed. you can read more about disk space requirements at (https://github.com/soedinglab/mmseqs2/wiki#alignment-module).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/30#issuecomment-300689028:34,feedback,feedback,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/30#issuecomment-300689028,1,['feedback'],['feedback']
Usability,"Hi Ann,. Thank you for guiding me so far. I did a bit of digging around in the temporary files. I'll call the two close sequences with one mismatch between them seqA and seqB. What I found was that they were both found within a larger cluster in the pref database with seqC (cluster head). seqC is about 20% different to both seqA and seqB, but their ungapped alignment scores may not reflect that. In the pref.tsv (createtsv pref); seqC seqB 5 0; seqC seqB 5 0. In the pref_rescore1.index file (pref_rescore1.1 - pref_rescore1.16 are in binary format, and I wasn't sure if that is the one you are referring to), I only see two rows that contain seqA and seqB. seqA seqA 100 0; seqB seqB 100 0. After the pipeline finishes, all three sequences seqA-C end up being separate clusters. Also, I'm using 10000 unique sequences in the input, so should one expect 10000-choose-2 pairs in the pref database? The total number of rows in the pref database is 69737, which is 0.13% of the total number of pairs. I had run linclust with these parameters in this run-; -e 1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 100 --kmer-per-seq-scale 0 -k 15 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16 --remove-tmp-files 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541:23,guid,guiding,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541,1,['guid'],['guiding']
Usability,"Hi Ann,. Thank you for suggesting that. I know that using --cov-mode 3 paired with -c 0.99 is quite strict. When we relaxed it, we were finding 'false positive' clusters, where the cluster head/representatives (the largest sequence in the cluster) had novel enough genetic information in it, that we would have preferred it to be it's own cluster (with a solitary member). That being said, in my grid search, I have only explored varying -c values with a constant --cov-mode 3. The sequence pairs that I am finding that should be clustered together (and aren't) have nearly identical lengths (+-1) with a few mismatches (<10). It is my understanding that those should have been clustered regardless of the value of --cov-mode, even with the stringent -c 0.99. To give you another example, even when I use a very lenient clustering criterion (please note the values of min-seq-id, -c) - ; --kmer-per-seq-scale 0 --min-seq-id 0.80 --cov-mode 3 -c 0.80 --cluster-mode 1 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. I still find representative sequence pairs that have a levenshtein distance of 1 between them. Although now, I find very few such pairs (8 / 1378 all-v-all alignment of representative sequences with a levenshtein distance of < 10). I understand these could be edge cases, but I find them interesting, and I want to learn what linclust is doing by focussing on these 8 alone. (Making a long post even longer!) I'm validating linclust clusters by generating an all-v-all levenshtein distance matrix of representative clusters. And an all-v-all levenshtein distance matrix of all members within a cluster. Because my understanding of linclust is not great, I'm treating it as a black box that I intend to understand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989:1365,learn,learn,1365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923071989,1,['learn'],['learn']
Usability,"Hi Antonio,. You can do something like this:. ```; mmseqs cluster db clu tmp; mmseqs align db db clu aln -a; mmseqs createtsv db db aln aln.tsv; ```. The `-a` parameter computes the whole backtrace, you can also use `--alignment-mode 3`, but that computes the backtrace anyway since it needs it for the seq. id. ; `--alignment-mode` 1 and 2 only approximate the sequence identity. Thank you for the feedback! We will add this to the FAQ and also discuss if it make sense to provide the same output also for Uniclust in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695:399,feedback,feedback,399,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695,1,['feedback'],['feedback']
Usability,"Hi Hannes,. Thank you for your feedback. . Sorry to have overlooked the SeqAn license terms for your code. We have replaced the genetic code tables from SeqAn with code from NCBI in the `translatenucs` tool. We have used no other code from SeqAn. . Thanks for the note on the license terms of `smith_waterman_sse2.cpp`. We changed the licence agreement to MIT since the code originated from https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library . If you see any other problems we would be glad to know. Thank you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/5#issuecomment-255291908:31,feedback,feedback,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/5#issuecomment-255291908,1,['feedback'],['feedback']
Usability,"Hi I am new to MMseqs2 (and the coding world in general). What I want to do I am sure is very simple I just cannot seem to figure out how to do it. I ran a query protein sequence against the UniProtKB/Swiss-Prot database. The resultant ResultDB showed 20 hits. I want to extract those sequences corresponding to the 20 hits to do a MSA using ClustalO. Is there a way to obtain the actual sequences corresponding to the hits from a search query and convert them to fasta format?. I tried using the creattsv function to convert the ResultDB to a tsv file, but because there is no header information the convert2fasta function did not work. Any help or suggestions would be appreciated. . Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/492:94,simpl,simple,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/492,1,['simpl'],['simple']
Usability,"Hi Joel,. You are running into several usability traps of MMseqs2, that we are currently thinking about how to solve. 1) The prefiltering will stop after --max-seqs sequences. Without any further filtering cut-offs (e.g. --min-ungapped-score) the prefiltering might miss the best hits. Raise the value for this parameter to something like 10000. 2) The default alignment mode uses a sequence identity estimation based on the score per column:; https://github.com/soedinglab/MMseqs2/wiki#how-is-mmseqs-computing-the-sequence-identity. The real sequence identity is not computed in this case. You can pass either pass --alignment-mode 3 or -a to compute the real sequence identity (and the full backtrace in the case of -a). Without the real sequence identity, it is very difficult to distinguish between a 99% and a 100% match. 3) Very short query sequences might not be able to gather enough statistical significance to pass the alignment. Raise the e-value cut-off (-e) for that. 4) Both masking (--mask) and composition bias correction (--comp-bias-corr) can cause a hit to not recognize itself. . Best regards,. Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48#issuecomment-342108067:39,usab,usability,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48#issuecomment-342108067,1,['usab'],['usability']
Usability,"Hi MMseqs2 team,. I am completely new to MMseqs2 and simply want to taxonomically classify a few (30 max.) amino acid sequences that I retrieved from my pipeline. For this, I want to use the Uniref90 repository and I started with creating the database and indexed:. mmseqs createdb uniref90.fasta uniref90_DB; mmseqs createindex uniref90_DB uniref90_index --threads 16; mmseqs createtaxdb uniref90_DB tmp. I did the same for my queries:; mmseqs createdb queries.fa queries_DB; mmseqs createindex queries_DB queries_index. Then, I searched the query database against the Uniref90 database:; mmseqs search queries_DB uniref90_DB queries_search_result uniref90_index --threads 16. Finally, I applied LCA taxonomy:; mmseqs taxonomy Untersee/SRR17021127_orf_nosZ_only_DB uniref90_DB taxonomyResult tmp --tax-lineage 1 . This is the output:; MMseqs Version: 	12ba202798016f7f8880be11d792592fdb674448; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	; Column with taxonomic lineage 	1; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nuc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/708:53,simpl,simply,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/708,1,['simpl'],['simply']
Usability,"Hi Milot, thanks for your fast response. The option --pernode is deprecated in openmpi-1.10.3, the recommended option is: ppr:n:node. > -npernode, --npernode <#pernode>; > On each node, launch this many processes. (deprecated in favor of --map-by ppr:n:node) ; ; I'm using machines with 4 sockets and 8 cores+HT per CPU. To keep it simple I'm trying to make it run in just one of them. Following Hristo Iliev comments in https://stackoverflow.com/questions/28216897/syntax-of-the-map-by-option-in-openmpi-mpirun-v1-8 , this is my mpicmd:. ```; #!/bin/bash; mpirun --np 1 --report-bindings --map-by ppr:1:socket:pe=8 --bind-to core ""$@""; ```; And this is my launch script:. ```; #!/bin/bash; rm -rf tmp; mkdir tmp; ldd /ngs/software/mmseqs/mmseqs-MPI; ./mpicmd /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 8; ```. This should run 1 instance of mmseqs with 8 threads assigned to 1 socket.; This is the std output:; ```; 	linux-vdso.so.1 => (0x00007ffe4cf8f000); 	libmpi_cxx.so.1 => /usr/lib64/openmpi/lib/libmpi_cxx.so.1 (0x00002b8050f24000); 	libmpi.so.12 => /usr/lib64/openmpi/lib/libmpi.so.12 (0x00002b805113f000); 	libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00002b8051423000); 	libm.so.6 => /lib64/libm.so.6 (0x00002b805172c000); 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00002b8051a2e000); 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002b8051c54000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b8051e6a000); 	libc.so.6 => /lib64/libc.so.6 (0x00002b8052086000); 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00002b8052447000); 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00002b80526c4000); 	libdl.so.2 => /lib64/libdl.so.2 (0x00002b8052968000); 	librt.so.1 => /lib64/librt.so.1 (0x00002b8052b6c000); 	libutil.so.1 => /lib64/libutil.so.1 (0x00002b8052d74000); 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00002b8052f77000); 	/lib64/ld-linux-x86-64.so.2 (0x00002b8050d02000); 	libn",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:332,simpl,simple,332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,1,['simpl'],['simple']
Usability,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:1165,guid,guide,1165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,1,['guid'],['guide']
Usability,"Hi There,; I am curious if you could provide any solution to generate Blast XML based on the output of MMseqs2. It seems there were some efforts but not final solution. I want to use blast2go at the next step but it is not possible to generate required format using m8 format. I would be appreciate if you could guide me.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/486:312,guid,guide,312,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/486,1,['guid'],['guide']
Usability,"Hi all, . I am trying to search many (30M) small peptides (15aa length) against a database of ; all known protein sequences (BLAST NR). I know that each of the peptides is contained in the database, i.e. ; there should be at least one exact match in the database. I only care about exact or very close matches, ; a very sensitive search should not be necessary. . However, the result table contains only 1.6M entries. I manually checked a few peptides, and they are indeed included ; in the database (using `grep` on the mmseqs db). . So far, I have been using `easy-search` using default parameters: . ```bash; mmseqs easy-search \; query.fa \; /path/to/nr \; result.tsv \; ./tmp; ```. Can you guide me what parameters I need to tune to get more hits (including the exact matches) and at the same ; time not compromise the runtime? Also, I don't understand the differences between the `search` and the `map` command. Should I use the latter for my purpose? . Thanks in advance, ; Gregor . ## Your Environment. * `MMseqs2 Version: 45c4de7f1daefa06b45688195305eadedaea4d97`; * static build with AVX2 support; * `Intel(R) Xeon(R) CPU E5-2699A v4 @ 2.40GHz`, 44 cores, 1TB RAM; * Operating system and version: `CentOS Linux 7 64bit / Linux 3.10.0-1127.13.1.el7.x86_64)`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373:695,guid,guide,695,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373,1,['guid'],['guide']
Usability,"Hi everybody,; First of all, let me tell you that MMseqs really allowed me to perform exactly the kind of analysis I have been trying to perform in months! It really saved my day.; I have a rather simple question: is there a way to extract from a query DB (a metagenome in FASTQ format) the sequences matching the targetDB (a custom protein reference database). I guess there's some option I'm not looking at...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/356:197,simpl,simple,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/356,1,['simpl'],['simple']
Usability,"Hi!. I was wondering how I can increase chances of getting more hits with mmseqs search that are not full-length to full-length but subsequences of a query and/or a target? (seems intuitively that --max-accept, playing with -s parameter can help, but maybe i'm missing smth?); Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/753:180,intuit,intuitively,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/753,1,['intuit'],['intuitively']
Usability,"Hi, ; thanks for the quick response!. I use the latest mmseqs package (15.6f452).; I attach my:; * my 2 fasta files; * the script easy_rbh.py which simply runs ""easy-rbh"", its command line output and the m8 output file (which contains 590 pairs).; * the script my_rbh.py which runs mmseqs createdb+rbh+convertails, its command line output and the m8 output file (which contains 489 pairs). [easy_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336021/easy_rbh.log); [easy_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336022/easy_rbh.m8.txt); [easy_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336023/easy_rbh.py.txt); [my_rbh.log](https://github.com/soedinglab/MMseqs2/files/13336024/my_rbh.log); [my_rbh.m8.txt](https://github.com/soedinglab/MMseqs2/files/13336025/my_rbh.m8.txt); [my_rbh.py.txt](https://github.com/soedinglab/MMseqs2/files/13336026/my_rbh.py.txt); [UP000000425_122586_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336156/UP000000425_122586_protein.fasta.txt); [UP000000429_85962_protein.fasta.txt](https://github.com/soedinglab/MMseqs2/files/13336158/UP000000429_85962_protein.fasta.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167:148,simpl,simply,148,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808330167,1,['simpl'],['simply']
Usability,"Hi, I am doing a search with the same fasta in query and subject. Doing so, I noticed that the sequence identity computed between the exact same sequence is not equal to 1. I used the following command line: ; `mmseqs search example.fasta.dbm example.fasta.dbm example.fasta.dbm_selfMMseq tmp -s 5.7 --search-type 4 --max-seqs 100000 --threads 20 `; I am using MMseq version 13.45111. If I focus on the sequence named 1441628, we can see in the following screenshot that the percentage of identity of itself against itself in not 1. In addition, there are several hits, and none on the full length of the sequence. ![Screenshot_20230323_112234](https://user-images.githubusercontent.com/57403425/227251314-6cb3f088-b125-414f-a15c-efd85c8c0c93.png). Whereas with blastn, I have the expected behaviour, which is a single hit on the full length of the sequence, with 100% of identity:; ![Screenshot_20230323_112448](https://user-images.githubusercontent.com/57403425/227252003-f94f513c-bc28-44d6-bb70-6c278b91daed.png). I tried running MMseq with the option `-a`, which is simply supposed to add backtrace string, according to the help. The output being different, I now understand that this option also calculate the percentage of identity differently. I now get hits with 100% identity, however, there are still several hits and none on the full length of the sequence:; ![Screenshot_20230323_112723](https://user-images.githubusercontent.com/57403425/227252775-92ad6a26-5703-4b3a-ad85-6709a2a4a8fb.png). I am thus very confused by the outputs generated by MMseq, even with the option `-a`, and would like to know whether someone has any explanation about it? Of course, I don't need MMseq to tell me the percentage of identity between a same sequence, I know it is 100%, but the fact that MMseq cannot figure this out worries me, including for search between different sequences. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/688:1070,simpl,simply,1070,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/688,1,['simpl'],['simply']
Usability,"Hi, just a simple question, since I have profiles build with result2profile, how do I extract the alignment from each profile?; Stockholm, fasta, a2m, a3m, or any well known format. . Also, a related question, may I use the profiles directly to hhalign? Yet, there are huge difference between compare profile with mmseqs result2profile and use hhalign?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153:11,simpl,simple,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153,1,['simpl'],['simple']
Usability,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:73,simpl,simply,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513,1,['simpl'],['simply']
Usability,"Hi,. I am interested in computing all pairwise sequence identities in a given cluster. I believe mmseqs alignall accomplishes this task, but I am getting unexpected results. Using the ""examples"" folder that was downloaded during the mmseqs installation process, I created the following clusters:. `mmseqs createdb examples/QUERY.fasta queryDB`; `mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8`; `mmseqs createtsv queryDB queryDB queryDB_clu queryDB_clu.tsv`. I then use mmseqs alignall to compute all pairwise sequence identities in each cluster:. `mmseqs alignall queryDB queryDB_clu queryDB_alnall`; `mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv`; `OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv`. Unfortunately, the pairwise sequence identities that get calculated seem incorrect. For instance, when you compare the sequence P40148 against itself, I get a sequence identity less than 100% (i.e., 93.1%). Below is an example line from the output file `queryDB_alnall_newid.tsv`:. `P40148 P40148 P40148 192 0.931 2.952E-59 -1 96 97 -1 96 97`. Alternatively, I tried specifying alignment mode of 3 (because I think that's also the default of `mmseqs cluster`):. `mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3`. Then I strangely get 0% sequence identity for *all* pairwise comparisons. E.g,:; `P40148 P40148 P40148 192 0.000 2.952E-59 0 96 97 0 96 97`. I am a non-scientist learning how to use mmseqs, so I may be missing something obvious. I would be very grateful for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503:1504,learn,learning,1504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503,1,['learn'],['learning']
Usability,"Hi,. I have a quick question for which I could not find a solution on the manual. ; Is there a way to extract a specific set of sequences (and potentially a specific subsequence region) out of mmseqs2 DB?; From what I have seen, mmseqs view --id-list extract sequences only based on the internal DB id and not the sequence id (e.g that printed on the search output). Is there an easy way to do it? Something like blastdbcmd equivalent?. For example, I have the following hit:; `Uniq65133;size=2; NR_027575.1 0.928 56 4 0 1 56 892 946 2.908E-13 80 58 0.966 573370 Desulfovibrio magneticus gene for 16S rRNA`; ; mmseqs view DB --id-list ""NR_027575.1"" --idx-entry-type 3; `X17276.1 Giant Panda satellite 1 DNA`. Only when I locate the sequence id on the DB.lookup I manage to get the correct seq with view:; mmseqs view DB --id-list 2068063 --idx-entry-type 3; `NR_027575.1 Desulfovibrio magneticus RS-1 16S ribosomal RNA, partial sequenceD43944.2 Desulfovibrio magneticus gene for 16S rRNA `. I don't have the results DB available anymore, so reformatting the results is unfortunately not an option... Any advice?. Sorry if I missed any trivial answer in the user guide :-)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/626:1162,guid,guide,1162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/626,1,['guid'],['guide']
Usability,"Hi,. I have seen that in the mmseqs user guide, there is a part about how to preprocess the GTDB database. I am still confusing after reading that. I want to ask if there is more details about how to build the database from the latest GTDB data (https://data.ace.uq.edu.au/public/gtdb/data/releases/release202/202.0/) for mmseqs taxonomy? . Thanks for your any suggestions. Sincerely; Shaojun",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514:41,guid,guide,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514,1,['guid'],['guide']
Usability,"Hi,. I'm trying to learn the workflow through the tutorial. unfortunately, the commands in the tutorials are wrong according to the program codes. i followed this steps. # Download the database; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03.fasta.gz; wget http://wwwuser.gwdg.de/~compbiol/mmseqs2/tutorials/uniprot_sprot_2018_03_mapping.tsv.gz; gunzip uniprot_sprot_2018_03_mapping.tsv.gz. # Create a taxonomically annotated sequence database; mmseqs createdb uniprot_sprot_2018_03.fasta.gz uniprot_sprot; mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv . (mmseq2) cyborg@skynet:~/root_dev$ mmseqs createtaxdb uniprot_sprot tmp --tax-mapping-file uniprot_sprot_2018_03_mapping.tsv; mmseqs createtaxdb:; Annotates a sequence database with NCBI taxonomy information. The program will download the Uniprot taxMappingFile and ncbi-taxdump-folder if only two arguments are passed. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> [<i:taxMappingFile> <i:ncbi-taxdump-folder>] <tmpDir> [options]. common options	default 	description [value range]; -v	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --tax-mapping-file; Did you mean ""-v""?. if there are any updates to the codes, please let me know. -Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823:19,learn,learn,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823,1,['learn'],['learn']
Usability,"Hi,. I'm using MMseqs2 for all-vs-all alignments. As indicated in the user guide pdf, I'm using the bash script to perform a fake prefiltering step before aligning. That seems to work, as all alignments are computed, but the results are a bit unexpected:; ```; >Q8CD91; EERVVHWYFKLLDKNSSGDIGKKEIKPFKRFLRKKSKPKKCVKKFVEYCDMNNDKSITVQELMGCLGVTREEGKANTRKRHTPRGNAESSSSNRQPRKQG; >Q95JC9; GPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPGPPPPGPAPPGARPPPGPPPPPPGPSPPRPPPGPPPQ; ```; I didn't change much of the defaults; ```; mmseqs createdb --dbtype 1 dummyfasta.fasta seq_db; mmseqs_fake_prefilter.sh seq_db seq_db pref; mmseqs align seq_db seq_db pref align_db --alignment-mode 3 -e inf --min-seq-id 0.3; mmseqs convertalis seq_db seq_db align_db check_alignments.tab; ```. ```; query target fident alnlen mismatch gapopen qstart qend tstart tend evalue bits; Q8CD91 Q8CD91 1.000 100 0 0 1 100 1 100 1.707E-71 202; Q8CD91 Q95JC9 1.000 2 0 0 83 84 91 92 4.610E+01 9; Q95JC9 Q95JC9 1.000 100 0 0 1 100 1 100 7.088E-35 108; Q95JC9 Q8CD91 0.333 3 1 0 11 13 21 23 1.508E+02 7; ```; The second alignment's `fident` makes no sense to me. I understand that the e-value is high too, but I really want all pairwise % identities returned so I don't use it for filtering. Do I need to use a different configuration to make this work, or is mmseqs2 just not suitable for this all-vs-all identity task?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/498:75,guid,guide,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/498,1,['guid'],['guide']
Usability,"Hi,. Is it possible to see all the hits (seq id, e-val etc.) for a query sequence that are used to inform the lca? I have some hits to the taxonomic level 'root' that seem to to be clearly from a particular taxa when I blast them against NR and I'd like to see in more detail what's going on in the lca stage of mmseq taxonomy. Cheers,; Andrew",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/705:181,clear,clearly,181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/705,1,['clear'],['clearly']
Usability,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/173:459,guid,guiding,459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173,1,['guid'],['guiding']
Usability,"Hi,; I am trying to get the taxonomy of several contigs present in a multi-fasta file, but I'm having some issues with the `easy-taxonomy` command, as it is has not completed the assignment of about 804K contigs on 16 threads in 24h using as reference database NR. ; Due to the limits of the machine that I'm using (I can use a partition with external connection using only a single core and a rather short time limit) set up the database using a mix of the `databases` command and the other commands shown in the user guide. Among the different steps I changed the number of threads used, as, for example, it seemed that `createdb` worked only using the same number of threads with which `databases` was initially run.; Is this something to be expected or have I done something wrong during the database setup?. Thanks in advance for your help and, also, for making this tool!. These are the commands that I've used:; ```; mmseqs databases NR refDB/NR tmp --threads 1 -v 3 --force-reuse 1; mmseqs createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3; mmseqs createtaxdb refDB/NR tmp; mmseqs createindex refDB/NR tmp --split-memory-limit 100G; mmseqs easy-taxonomy contigs.fasta refDB/NR alnRes tmp --split-memory-limit 100G --threads 16; ```. This is the output of `createdb`:; ```; createdb tmp/11117391383852458210/nr.gz refDB/NR --compressed 0 -v 3 . MMseqs Version: 	13.45111; Database type 	0; Shuffle input database	true; Createdb mode 	0; Write lookup file 	1; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Converting sequences; [===================================================================================================	1 Mio. sequences processed; ===================================================================================================	2 Mio. sequences processed; ===================================================================================================	3 Mio. sequences processed; ======================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/515:519,guid,guide,519,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/515,1,['guid'],['guide']
Usability,"Hi,; I had used the explicit 'split' size, because I intended to create the index on a different machine than the one where the index would be used (which have less RAM). But because I'm now indexing on the fly, I no longer need to fiddle with the 'split' option :) Clearly a local SSD on each node would be ideal, but with index files as large as 200GB per database, this would require either deleting the index file after each job (therefore transferring the index file before each job, too much network traffic) or installing giant SSDs?...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542:266,Clear,Clearly,266,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542,1,['Clear'],['Clearly']
Usability,"Hi,; I tried it before, but I found I obtain a clustering TSV file when I used easy workflows for clustering. The TSV file are similiar with the CD-HIT's CLSTR formatted file. I maybe not read the user guide prudentially. By the way, are clustering output results obvious different beween easy workflows and clustering workflows used to clustering the proteins?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/219#issuecomment-512651559:202,guid,guide,202,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/219#issuecomment-512651559,1,['guid'],['guide']
Usability,"Hi,I'm trying to convert the MSA of a cluster DB to HH-blits format. Following the user guide below. > mmseqs cluster DB clu tmp; mmseqs result2msa DB DB clu cluMsa --msa-format-mode 1; ln -s DB_h cluMsa_header.ffdata; ln -s DB_h.index cluMsa_header.ffindex; ln -s DB cluMsa_sequence.ffdata; ln -s DB.index cluMsa_sequence.ffindex; mpirun -np 2 cstranslate_mpi -i cluMsa -o cluMsa_cs219 -A /path/to/cs219.lib -D /path/to/context_data.lib -x 0.3 -c 4 -I ca3m -b. However, I notice there is no one file named clusMsa, although 11 files with different file extensions are outputed. And the 'ln -s' links seems to be unnecessary.; When I try to run cstranslate, I got this error:. > Unable to read input file 'clu_msa'. I think the file not existing.; So how to realize the output file of result2msa? If I just need the single clu_msa file for next analysis, is there any way to get it?. My mmseqs version is 13.45111 and CPU support for AVX2/SSE.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508:88,guid,guide,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508,1,['guid'],['guide']
Usability,"Hope I am not making a simple mistake but output seems to be not what I expect. Thanks for any help. ## Expected Behavior; Fasta-formatted cluster results have output following documentation. ## Current Behavior; Fasta-formatted cluster results have empty lines that don't seem to correspond to correct clustering. Examples:. ```; >Pip8wV; >Pip8wV; MQKNLIQRYIPLSDKNWFCTGGPARFYTEPETTQEFVKSLEFANLHNLELFILGKGANILISDNGFDGLVIKPNLQQISHQDYDNDHALVHAQAGACIKDLITYCLKNNMTGPEEFSGIPGTIGGSVYINIHYFNFFLSDFLYNAQVIHKKTGDIFTVTKNWFNFGYDKSKLFEKEYFLVQATFKLKKITPIKAAYATGRSIEIIRHRNARYPNSGTCGSFFRNFLDSEVTLNIAGTEKKMIYVGYYLDKLGVKGNLNVGGASVSHKHANMIVNTNNATSTDIINLARQMQKLVQENFGITPQPECQLIGFKKYPLL*; >PJB17I; >E7HKRc; MFKRSVCVFCGSRKGRNPAHEAAATDLGTALAQNDMRLVYGAGDVGLMGAVARAAQAAGGETFGVIPDHLVKWEVGKTDLTRYIVTETMHERKKVMFMNCDAVVVLPGGAGSLDEYFEVLTWRQIGLHEKPVFLLNTEGYWTKLIHLIDHVIDEGFADASLRDYTTVVDTVQDLMDGLGATGR*; ```. and . ```; >S2LnDK; >S2LnDK; MNNKSENQSSQGDARRGMLIGMALGMGIGAVIGLVLGDISSGFIIGMGIGAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258:23,simpl,simple,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258,1,['simpl'],['simple']
Usability,"I am currently doing a benchmark on clustering algorithms, where I find that Greedy Set Cover would also hugely benefit from this option. This is in line with the guidelines, describing `--cluster-reassign` as the one solution for the cascaded clustering caveat; without this option, there is no certainty that clustering criteria remain fulfilled over multiple cascade steps due to changing representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284:163,guid,guidelines,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-776539284,1,['guid'],['guidelines']
Usability,"I am having a problem with the taxonomy module, probably linked to building a taxdb by myself. I have created the taxdb for proteins I want to be all classified simply as ""virus"" (taxid 10239). head NEWDB_all_70_rep.fasta ; >DB_2501651210_000001|2501651824|2501735350; MSITKFINKRKYMDFSTFESASQALSLSIYFLVGAAAAIAFVQGFKSN. mmseqs createdb NEWDB_all_70_rep.fasta NEWDB_70_rep; awk '{print $2 ""\t10239""}' NEWDB_70_rep.lookup > taxidmapping; mkdir ncbi-taxdump && cd ncbi-taxdump; wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz; tar xzvf taxdump.tar.gz; cd -; mmseqs createtaxdb NEWDB_70_rep /tmp --ncbi-tax-dump ncbi-taxdump/ --tax-mapping-file taxidmapping. I am then able to use this taxdb with taxonomy module. I then used concatdbs to add my taxdb to U90. mmseqs concatdbs ../NEWDB/NEWDB_70_rep U90 U90andNEWDB70 --threads 1; mmseqs concatdbs ../NEWDB/NEWDB_70_rep_h U90_h U90andNEWDB70_h --threads 1; nohup mmseqs createindex U90andNEWDB70 /tmp/ &; mmseqs createtaxdb U90andNEWDB70 /tmp. I am then able to use this concat taxdb with taxonomy module. I then applied taxonomy filter to the concatdb. nohup mmseqs filtertaxseqdb U90andNEWDB70 U90andNEWDB70_nostrepto --taxon-list '!35493' 1>& filter.out &. In this case, I get the following error:; Input taxonomy database ""../../../U90andNEWDB70_nostrepto"" is missing files:; - ../../../U90andNEWDB70_nostrepto_nodes.dmp; - ../../../U90andNEWDB70_nostrepto_names.dmp; - ../../../U90andNEWDB70_nostrepto_merged.dmp. In fact, I'm finding out that there were none of the _nodes.dmp, _merged.dmp and _delnodes.dmp files created for the new taxdb and the concatdb. Maybe that's where the problem comes from?. Could you kindly help figuring out what's wrong with this? . Thanks a lot for your help,; Florian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/474:161,simpl,simply,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/474,1,['simpl'],['simply']
Usability,"I can't reproduce asan errors (on a simple search at least, the `run_search.sh` script in our regression). With neither gcc-12 nor clang-15. . I enabled the following asan options:; ```; ASAN_OPTIONS=abort_on_error=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829:36,simpl,simple,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829,1,['simpl'],['simple']
Usability,I consider this issue closed. Please open a new issue if you expirience further problems. ; Thanks a lot for you feedback and for benchmarking MMseqs2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-253720564:113,feedback,feedback,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-253720564,1,['feedback'],['feedback']
Usability,"I could use your help again. I am trying to replace hmmer in my work follow with mmseqs, but I am not getting the same results.; I am trying to replace:. ```BASH; hmmsearch --domtblout vogdb_output vogdb_loc query_faa; ```. With some form of:; ```BASH; mmseqs search query_db vogdb_profile vogdb_output tmp_dir -k 5 -s 7.5; # then convertalis; ```. However, when I match output on qId I see that before filtering I have 300 records that are in hmmer output and not in mmseqs output. After filtering the number jumps to 699. There are also some mmseqs hits that are not matched in hmmer about 129, but I am not as worried about extra information. In the end there are 1247 hmmer hits and only 749 mmseqs hits after filtering. . To be clear there are 1533 mmseqs hits before filtering but the 300 hits that were in the filtered hmmer hits are not in the unfiltered mmseqs hits. Any Ideas you have will be much appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-824909985:733,clear,clear,733,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-824909985,1,['clear'],['clear']
Usability,"I don't know if I'm doing something wrong a some flag I'm leaving out, please help me.; ## Expected Behavior; I have a fasta file I want to generate a PSSM from, here is an example fasta; >EH1(72); MLLPETRNLLDLMDAATRGGRPRLETLPHAVGRKAVDKMSEDGEADPPEVAEVANGGFAGPASEIRFRRYRPLGEAAGLLPTLIYYHGGGFVIGNIETHDSTCRRLANKSRCQVISIDYRLAPEHPFPAPIDDGIAAFRHIRDNAESFGADAARLAVGGDSAGGAMAAVVCQACRDAGETGPAFQMLIYPATDSSRESASRVAFAEGYFLSKALMDWFWEAYVPEDTDLTDLRLSPLLATDFTGLPPAFVLTAGYDPLRDEGRAYADRLIEAGIKTTYVNYPGTIHGFFSLTRFLSQGLKANDEAAAVMGAHFGT. First I create an database of the fasta file and a database for the search database with this command. ; mmseqs createdb {input_file} {output_index}. Then I follow the steps mentioned in the user guide to create a PSSM; f""mmseqs search {query_db} {search_db} {pssm_filename.out} tmp -e {evalue} --num-iterations {num_iterations} --max-seqs {max_seqs} -s {sensitivity} -a"". f""mmseqs result2profile {query_db} {search_db} {pssm_filename}.out {pssm_filename}.profile"". f""mmseqs profile2pssm {pssm_filename}.profile {pssm_filename}"". Then a pssm file is generated with a PSSM like matrix for each sequence in the initial fasta file (the order seems to be random and doesn't follow the order of the input fasta file). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Here is the PSSM generated for the example fasta . The second column of a standard PSSM generated by PSIBlast corresponds to the aminoacids of the input fasta however the PSSM generated by Mmseqs changes the sequences somehow. My questions are:. * What is the Cns column?; * Shouldn't it have the same sequence as the input fasta sequence because otherwise how could you map the PSSM generated with the sequence it comes from?; * ; I don't know if it si a bug or if I'm missing some flag to make the sequences equal; . Pos	Cns	A	C	D	E	F	G	H	I	K	L	M	N	P	Q	R	S	T	V	W	Y; 0	M	-2	0	-3	-2	0	-3	-1	1	-1	1	6	-2	-2	0	-2	-1	-1	0	0	0; 1	L	-2	0	-3	-3	0	-3	-2	1	-3	3	1	-3	-2	-2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/847:711,guid,guide,711,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/847,1,['guid'],['guide']
Usability,"I encountered an error while executing the command cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ... My cmake version is 3.28.0, and gcc version 7.3. The error message I received is as follows:. -- The CXX compiler identification is GNU 7.3.0 ; -- The C compiler identification is GNU 7.3.0 ; -- Detecting CXX compiler ABI info ; -- Detecting CXX compiler ABI info - failed ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ ; -- Check for working CXX compiler: /home/anaconda3/envs/AlphaFlow/bin/c++ - broken ; CMake Error at /usr/local/share/cmake-3.28/Modules/CMakeTestCXXCompiler.cmake:60 (message): ; The C++ compiler; ""/home/anaconda3/envs/AlphaFlow/bin/c++"" ; is not able to compile a simple test program. ; It fails with the following output:; Change Dir: '/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz'; Run Build Command(s): /usr/local/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_8b7b3/fast ; /usr/bin/gmake -f CMakeFiles/cmTC_8b7b3.dir/build.make CMakeFiles/cmTC_8b7b3.dir/build; gmake[1]: Entering directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; Building CXX object CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o ; /home/anaconda3/envs/AlphaFlow/bin/c++ -o CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -c /home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz/testCXXCompiler.cxx ; Linking CXX executable cmTC_8b7b3 ; /usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8b7b3.dir/link.txt --verbose=1 ; /home/anaconda3/envs/AlphaFlow/bin/c++ -rdynamic CMakeFiles/cmTC_8b7b3.dir/testCXXCompiler.cxx.o -o cmTC_8b7b3 ; collect2: fatal error: cannot find 'ld' compilation terminated. ; gmake[1]: *** [cmTC_8b7b3] Error 1 ; gmake[1]: Leaving directory `/home/MMseqs2/build/CMakeFiles/CMakeScratch/TryCompile-PJYDVz' ; gmake: *** [cmTC_8b7b3/fast] Error 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/816:729,simpl,simple,729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/816,1,['simpl'],['simple']
Usability,"I guess the issue is that the default substitution matrix name and the substitution matrix name that actually gets written into the index is different (see also https://github.com/soedinglab/MMseqs2/issues/204). I have an idea for a hack, but this is a bit tricky to fix with regards to good UX.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-507754165:292,UX,UX,292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-507754165,1,['UX'],['UX']
Usability,I had this same issue when trying to use mmseqs2. Are you sure it's safe to simply rename these files?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-435239641:76,simpl,simply,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-435239641,1,['simpl'],['simply']
Usability,"I have a question regarding the choice of linclust parameters in the Steinegger et al. 2019 paper. These are the parameters:. --kmer-per-seq 80 --cluster-mode 2 **--cov-mode 1 -c 0.9** --min-seq-id from 50% to 90%. My question concerns the part in bold:. if I understand well, it means that the query must cover at least 90% of the target to be listed in the cluster, is that so?. If that is the case, could you explain to me the rationale behind this? Somehow, to me seems more intuitive that it is the query which should kind of fit into the target. Even if it's much shorter, but still similar, I would expect it to be in the same cluster (or it shouldn't be?). Thanks a lot for your clarification,. G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/245:479,intuit,intuitive,479,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/245,1,['intuit'],['intuitive']
Usability,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/85:367,intuit,intuitive,367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85,1,['intuit'],['intuitive']
Usability,"I have created mmseq database with ncbi nt, and added taxonomy information. To shorter the search time, I am trying to create a small database with a certain number of species. I have got the ncbi taxIDs of them already, my question is how to filter the ntDATABase with those taxIDs. In my mind now, I should use the filterdb function with --filter-regex and --filter-column. Problem is I don't know which column is the taxID in the ntDATAbase. Could anyone guide me how to check the structure of the data base and find which column is the taxID? Or are there any other ways to filter the nt database using the taxID list?. Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/865:458,guid,guide,458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/865,1,['guid'],['guide']
Usability,"I have found a [wrapper script](https://github.com/soedinglab/MMseqs2/issues/196#issuecomment-485953970) that works in another issue. Alternatively, I also came up with a simple solution:; ```; #!/bin/bash. external-tool <(cat); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822:171,simpl,simple,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/536#issuecomment-1041133822,1,['simpl'],['simple']
Usability,"I hope it would be still very useful to have an option to override `getTotalSystemMemory`. I understand there might be modules that does not have a splitting logic (either it is not implemented yet, or it simply does not make sense) a many other aspects (like the preloading). But I see these as use cases where you simply MUST HAVE enough memory to be able to do the computations (on a system with little physical memory this would lead to swapping). On the other hand, the option to override `getTotalSystemMemory` would allow me to fake the total system memory to keep reasonable memory/computation length trade-off on grid computing architecture with job scheduler.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827:205,simpl,simply,205,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359804827,2,['simpl'],['simply']
Usability,"I improved the wiki documentation on how to produce a correct MPI build:; https://github.com/soedinglab/MMseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-mpi. You have to pass the `-DHAVE_MPI=1` parameter during `cmake` invocation or MPI support will not be enabled. We should make this clearer somehow and let MMseqs2 fail more gracefully if called with MPI without having been built with MPI support. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/287#issuecomment-597886353:295,clear,clearer,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287#issuecomment-597886353,1,['clear'],['clearer']
Usability,"I just learned that `mmseqs cluster` and `mmseqs clust` were different things, which solved the issue. Apologies for the confusion.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/844#issuecomment-2096686643:7,learn,learned,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/844#issuecomment-2096686643,1,['learn'],['learned']
Usability,I moved the feature request to the GitHub project tracker to consider it for the future. If someone is willing to work on this we would be very happy to help guide through the development.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-551237343:158,guid,guide,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-551237343,1,['guid'],['guide']
Usability,"I read the wiki and [User Guide](http://mmseqs.com/latest/userguide.pdf).; Although there are examples about `--db-load-mode 2`, none mentions or explains `--db-load-mode 3`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027:26,Guid,Guide,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/517#issuecomment-995048027,1,['Guid'],['Guide']
Usability,"I searched with your example query.fasta (101mA, 10mhA) against the target.fasta (A0A021WW32, A0A021WZA4). MMseqs2 can not detect any alignments. I aligned these sequences with smith waterman and the sequence identity is <= 20%. Is this intended? Maybe you want to use profiles? . Please don't use the parameter --include-id if the query database and target database do not contain the same identifier. The --include-id is just important for clustering. The option --max-seq-id 1.0 is just needed if you try to compute profiles and you don't use profiles in this example. . Could you provide the whole dataset please? So we can test this behavior? I tried to reproduce it with some fasta files on my computer but I was not able to. . Thanks a lot for your feedback.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090:756,feedback,feedback,756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247860090,1,['feedback'],['feedback']
Usability,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:442,learn,learn,442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193,1,['learn'],['learn']
Usability,"I think you are nearly there, you just have to swap the order or `nrDB` and `resultDB` then it should work. The difference between a taxonomy result and a taxonomy sequence database is not quite clear in the output of MMseqs2, we should improve that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771803529:195,clear,clear,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771803529,1,['clear'],['clear']
Usability,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151:1478,simpl,simple,1478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151,1,['simpl'],['simple']
Usability,"I was a little confused by the way the description for `--idx-entry-type` was written. I think this makes it clearer. I'm actually not quite sure what the difference between `sequence` vs `src sequence` and `header` vs `src header`. Though I haven't looked closely at the docs either, so that's probably on me...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/263:109,clear,clearer,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263,1,['clear'],['clearer']
Usability,I was sure I was missing something quite simple.; Thanks a lot for your quick reply and have a nice week-end (despite the circumstances).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/288#issuecomment-598867813:41,simpl,simple,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/288#issuecomment-598867813,1,['simpl'],['simple']
Usability,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106:22,simpl,simple,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106,1,['simpl'],['simple']
Usability,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:84,guid,guide,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178,1,['guid'],['guide']
Usability,"I'm already grateful for your attempt!. Let me try to simplify the problem. What I am actually looking for is not all perfectly correct alignment characteristics for a cluster, but rather an estimation of the similarity percentage between the cluster representative and the cluster member, and a start and stop position of the cluster members relative to the cluster representative. Just so I have an idea of how strong the similarity ""edge"" is and where the ""query"" fits on the ""reference"". Would those simplifications make the problem tractable?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317:54,simpl,simplify,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-581773317,2,['simpl'],"['simplifications', 'simplify']"
Usability,"I'm examining the efficiency of template retrieval using different MMseqs2 configurations for MSA generation, which is crucial for identifying templates via hhsearch. Notably, the **ColabFold MMseqs2 detailed version** involves complex steps like search, expansion, alignment, and filtering, offering high accuracy but with significant time investment. On the other hand, the **MMseqs2 easy search version** simplifies the process, potentially reducing time but at a possible cost to accuracy. Given that my project processes a large volume of PDB chains (around 400k), understanding the trade-offs between these methods is essential. Key inquiries:; **Does the difference in MSA quality between the two MMseqs2 versions significantly affect template identification accuracy?; How can I optimize the MMseqs2 template search to balance efficiency and precision effectively?**; I appreciate any insights or experiences with these tools. <Colabfold mmseqs2>; `def mmseqs_search_monomer(; dbbase: Path,; base: Path,; uniref_db: Path = Path(""uniref30_2202_db""),; template_db: Path = Path(""""), # Unused by default; metagenomic_db: Path = Path(""colabfold_envdb_202108_db""),; mmseqs: Path = Path(""mmseqs""),; use_env: bool = True,; use_templates: bool = False,; filter: bool = True,; expand_eval: float = math.inf,; align_eval: int = 10,; diff: int = 3000,; qsc: float = -20.0,; max_accept: int = 1000000,; prefilter_mode: int = 0,; s: float = 8,; db_load_mode: int = 2,; threads: int = 32,; ):; #Run mmseqs with a local colabfold database set; #; #db1: uniprot db (UniRef30); #db2: Template (unused by default); #db3: metagenomic db (colabfold_envdb_202108 or bfd_mgy_colabfold, the former is preferred); ; uniref_db = Path(""/store/colabfold/db/uniref30_2202_db""); template_db = Path(""/store/colabfold/db/pdb70_220313""); if filter:; # 0.1 was not used in benchmarks due to POSIX shell bug in line above; # EXPAND_EVAL=0.1; align_eval = 10; qsc = 0.8; max_accept = 100000. used_dbs = [uniref_db]; if use_templa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/853:408,simpl,simplifies,408,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/853,1,['simpl'],['simplifies']
Usability,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:998,simpl,simple,998,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969,1,['simpl'],['simple']
Usability,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144:34,simpl,simple,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144,1,['simpl'],['simple']
Usability,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160:161,resume,resume,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160,1,['resume'],['resume']
Usability,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11:557,simpl,simple,557,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11,1,['simpl'],['simple']
Usability,"I've been using KOFAMSCAN but it takes forever because it writes a LOT of intermediate files. . I tried making a custom version but the cutoff logic was confusing and it's in a language I'm not familiar with. If you're taking requests, would you consider configuring a KOFAM database?. Also, unrelated question but is there a guide to tuning the MMSEQS parameters for Pfam that most similarly match the Hmmer results? I'd like to replace hmmer with mmseqs in my workflows.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771:326,guid,guide,326,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771,1,['guid'],['guide']
Usability,"I've found that GenBank allows me to download complete bacterial genome assembly fasta files, which I built into a database using 'createdb'. I downloaded a total of 19084 complete genomes and in my database.source file, I see 19084 rows in the file. When I look in the database.index file I have 38630 rows (as I understand it, createdb will break up long sequences into multiple entries to help processing speed). When I run a 'mmseqs search' function for my one query gene against this entire target database of bacterial genomes using a '--max-seqs' value of 40000 (well above the 38630 entries in my database index) and a '-s' value of 7.0 for full pre-filtering sensitivity, my final index statistics tell me that only 18615 alignments were calculated and that only 13173 sequences pairs passed the alignment threshold. . Is it true that a '-s' value of 7.0 applies a list of similar K-mers with only 7 entries for each K-mer during pre-filtering, or is the value 7.0 scaled differently? I ask because a float value seems weird for what would seem to be an integer parameter.. Also, I noticed that in my .m8 result file, none of my alignments have any gaps present. Is this normal? Is it advisable/possible to modify the Smith-Waterman alignment parameters to include gaps in my alignment algorithm to ensure that I'm not screening out a large number of false-negatives?. Also, is it possible to remove repeat rows (2 or more rows corresponding to the same original bacterial target genome) from my result .m8 file in order to determine the final number of bacterial genomes in the total original set (19084 genomes) that aligned successfully to my gene? (basically undoing the breaking up of sequences into multiple entries during 'createdb'). Thank you for all of your help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160:1672,undo,undoing,1672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160,1,['undo'],['undoing']
Usability,"If I use the command:; ```; mmseqs easy-cluster {input} {params.outprefix} tmp/ --min-seq-id 0.9; ```. How will mmseqs determine the representative cluster? I've tried reading through the documentation, issues, and papers, but it wasn't clear to me how the representative was selected for `easy-cluster`...I'm sorry if I missed something! I think in the linclust paper it's mentioned that the longest sequence is selected as the representative, but I couldn't find a similar citation for `easy-cluster`.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/712:237,clear,clear,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712,1,['clear'],['clear']
Usability,"In the user guide there is an example how to turn a SILVA taxonomy into a mmseqs taxonomy database. I think you can use a similar approach for this. Check out ""Create a sequence database with taxonomic information for SILVA"" in the wiki https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/244#issuecomment-556828115:12,guid,guide,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244#issuecomment-556828115,1,['guid'],['guide']
Usability,"Looking at the user guide and at the code I cannot seem to understand the difference between the evalThr and evalProfile parameters of the search method. Given their names I have a hard time understanding which of the two the -e parameter changes, it would be nice to provide a specific explanation of all the hyperparameters of the functions as it is especially usefull for new users as I am.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/675:20,guid,guide,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/675,1,['guid'],['guide']
Usability,"MMseqs2 could until recently not handle sequences longer than 32768 residues and split longer sequences into multiple entries (with incrementing suffices _0, _1, ...). Recently (use the latest git version), MMseqs2 learned to handle longer sequences.; By default, it will handle up to 65k residue. . By passing `--dont-split-seq-by-len` or `--max-seq-len` with a higher value to `createdb` it should also be able to handle those. Though, this is only a few weeks old and not very heavily battle tested yet. Hope that helps,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/97#issuecomment-397043815:215,learn,learned,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97#issuecomment-397043815,1,['learn'],['learned']
Usability,"MMseqs2 uses internally a cascaded workflow. This means it will first cluster with a low sensitivity and get step by step higher ( see https://github.com/soedinglab/MMseqs2/wiki#cascaded-clustering). But there is also a way to recluster clustered databases again to create a hierarchy. Please check out the guide at https://github.com/soedinglab/MMseqs2/wiki#how-to-manually-cascade-cluster. The structure of the clustering (`clust_stepN` files) would look like this . Seq.DB. Clustering Result 1 Clustering Result 2; ID1 ID3 -> ID2, ID7. ID3 -> ID5; ID2 ID5 -> ID1 ID9; ID3 ID9 -> ID8, ID6 ID4; ID4 ID4; ID5; ID6; ID7; ID8; ID9. All entries on the left side of `->` are the keys in the `.index` file. While the right side is in the data file. I do now know how you want to use the hierarchy. If you give us more information, maybe we can help you how to use the tools to achieve it. You could also use profiles to cluster more senstive. See issue https://github.com/soedinglab/MMseqs2/issues/66.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-369612859:307,guid,guide,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/68#issuecomment-369612859,1,['guid'],['guide']
Usability,"Much simpler I think. I just wanted to make sure that my very long sequences (2e4 - 2e9 nts) are clustered completely and that `mmseqs linclust` doesn't remove very long sequences. The `--max-seq-length` makes it seem like it would throw out any sequence longer than that which would be the majority in my case, but it looks like this is not the case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957982550:5,simpl,simpler,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/499#issuecomment-957982550,1,['simpl'],['simpler']
Usability,No feedback. I assume its fixed now.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-238199054:3,feedback,feedback,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-238199054,1,['feedback'],['feedback']
Usability,No problem. I know that the errors are not very clear. We'll try to improve that. :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274594720:48,clear,clear,48,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274594720,1,['clear'],['clear']
Usability,"No, I expected more than 566 million of total FASTQ entries. I just clear the log .. but anything else written to sterr just the number of sequences processed.; I am in VirtualBox Ubuntu 16.04 and have 10Go of RAM.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459381114:68,clear,clear,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459381114,1,['clear'],['clear']
Usability,"No, I just saw an ad on Stack Overflow and was randomly looking for something I could improve. It’s not my project, so it’s not for me to judge, but just out of curiosity: why not use unique_ptr instead of manual memory management whenever ownership is clear? It’s safer, shorter (no delete) and has zero overhead. I get that you don’t want to use more questionable C++ features like inheritance, RTTI or exceptions, but zero-cost static GC is the most useful thing you can pick up in C++ coming from C. And range-based for just makes code more readable and thus easier to support. Iterators are out of place there, they’re from a [lower abstraction level](https://www.fluentcpp.com/2016/12/15/respect-levels-of-abstraction/) than the surrounding code. I’ll pass, but thanks :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356:253,clear,clear,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/255#issuecomment-563504356,1,['clear'],['clear']
Usability,"None that I know of, also the input fasta is a concatenated output of two linclust runs (merged the two *.clu_rep_seq.fasta with a simple `cat`)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591541137:131,simpl,simple,131,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591541137,1,['simpl'],['simple']
Usability,"OK, maybe I over simplified the question because I was actually counting merged hits with a minimum size of 520 nt (empirical, a bit less than RT size).; I indeed get 37061 hits with mmseqs, 34268 remain after merging overlaping hits, and 1099 merged hits pass the size filter.; With blast+, I get 8159 hits, 6262 merged, and 2947 merged hits pass the size filter.; So yes, I get more raw hits with mmseqs but they are short :(; Sorry for misleading at first !",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843192525:17,simpl,simplified,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843192525,1,['simpl'],['simplified']
Usability,"Ok, good to know. Thanks a lot for explaining and also for being so responsive to all my questions, much appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617736180:68,responsiv,responsive,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-617736180,1,['responsiv'],['responsive']
Usability,"Okay, so the option is actually available and should be usable, but we have a bug in the parameter list display and its not shown. I will look into it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375242026:56,usab,usable,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375242026,1,['usab'],['usable']
Usability,Okay. I didn't realize that. I assumed from the wiki page with `createsubdb` grabbing from the index could be equivalent to the fasta file headers. Your way is about what I was doing but with some intermediate python code for extra filtering. First I filter out all hits in the forward search which didn't meet a set bitscore threshold. Could I do this easily with `filterdb`? Next if a query sequence had multiple best hits with the same bitscore in the forward search then I retained all those target sequences for the reverse search. It's an edge case but could be important with our annotation pipeline. On my tests on real data we do see query sequences with multiple best hits when bitscores are less than ~90. Your script is a great first try though. Really clears up how to use the `filterdb` and `createsubdb` commands for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865:765,clear,clears,765,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162#issuecomment-462214865,1,['clear'],['clears']
Usability,Please how do I generate neff of an MSA using Mmseqs? I saw something about that in page 57 of the user guide but not much was discussed on how to get it. Can I get a help on this? Thanks.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/638:104,guid,guide,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/638,1,['guid'],['guide']
Usability,"Same here, has tracked it down to this command:. mmseqs tar2db /localscratch/users/latest/gtdb.tar.gz /localscratch/users/latest/tardb --tar-include faa$. The problem comes with the regular expresion used in the option --tar-include, I cannot find why, but if you set it with the $ at the end, it doesn't works. If you remove it it works but obviously it is going to accept more files than desired. . I have tried with different regular expressions, scaping the $, quoting it, etc... no one works, it seems like the tar2db is silently failing when you use there any regular expression, but works when you use a simple string.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763:611,simpl,simple,611,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763,1,['simpl'],['simple']
Usability,"Seems like all threads finished except one that is stuck computing the largest (or one of the largest) cluster(s). The main time is being spent in computing context specific pseudo counts, which was implemented a couple versions ago. You can force the simpler pseudo count computation with `--pseudo-cnt-mode 0`. This will result in a slight decrease of profile diversity, though be much faster.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134889688:252,simpl,simpler,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134889688,1,['simpl'],['simpler']
Usability,"Something went wrong in the first `kmermatcher` step that produced an invalid database. Now every time you rerun the job it will take the previous result in the `tmp` folder and try to run it through `rescorediagonal` to compute the alignment. Can you clear out the `tmp` folder, rerun the job and post the log? Can't learn much from the `rescorediagonal` call sadly.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537695295:252,clear,clear,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537695295,2,"['clear', 'learn']","['clear', 'learn']"
Usability,"Sorry @juefish, your comment get lost among all the closed issues. I outlined some steps in what we need for the XML output below. ## Compilation; Compilation instructions can be found in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. We have also started writing a developer guide with some hints at how we want the code base to look:; https://github.com/soedinglab/MMseqs2/wiki/MMseqs2-Developer-Guide. ## Output Type; We also need a new output type `FORMAT_ALIGNMENT_BLAST_XML` here:; https://github.com/soedinglab/MMseqs2/blob/master/src/commons/Parameters.h#L102. ## Implementing XML output; The `convertalis` module responsible for taking in an MMseqs2 alignment result and reformatting it into something that user requested lies here:; https://github.com/soedinglab/MMseqs2/blob/master/src/util/convertalignments.cpp. You can take inspiration from the easier `FORMAT_ALIGNMENT_BLAST_WITH_LEN` case starting in line 606, or the never finished `FORMAT_ALIGNMENT_GFF` case starting in line 661. ## Ensuring XML is valid; We do not want to link a full XML library for MMseqs2. The XML documents should be built by appending strings. To ensure that the document is valid, we have to make sure all dynamic XML arguments are escaped. We have a `std::string escapeAttribute(const std::string& data)` function in:; https://github.com/soedinglab/MMseqs2/blob/master/src/taxonomy/taxonomyreport.cpp. This should be moved to either the `Util` class or a new `XmlUtil` class:; https://github.com/soedinglab/MMseqs2/blob/master/src/taxonomy/taxonomyreport.cpp. We also need a class to escape content inside a XML tag. ## Turning the MMseqs2 database into a single XML document; This will be more tricky. When we pass `--db-output false` to `convertalis` it will create a text-only flat file, without null bytes between output. However to ensure that we have the correct XML prelude and end tag, we don't have a very clean solution. But let's think about that once the ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-559259551:316,guid,guide,316,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-559259551,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Sorry for not making the memory limit clear: snakemake is just running qsub jobs for me, and it's just setting different amounts of memory (eg., `qsub -l h_vmem=720G`). . I'll try `--split-memory-limit` and see if it fixes the problem",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452272685:38,clear,clear,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452272685,1,['clear'],['clear']
Usability,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:99,user experience,user experience,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,1,['user experience'],['user experience']
Usability,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:647,simpl,simple,647,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665,1,['simpl'],['simple']
Usability,"Thank you for the feedback! I have rewrote the cluster criteria section . (2) a minimum coverage (option -c [0,1], which is defined by the number of aligned residue pairs divided by either the maximum of the length of query/centre and target/non-centre sequences alnRes/max(qLen,tLen) (default mode, --cov-mode 0), or by the length of the target/non-centre sequence alnRes/tLen (--cov-mode 1), or by the length of the query/centre alnRes/qLen (--cov-mode 2);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-375544123:18,feedback,feedback,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-375544123,1,['feedback'],['feedback']
Usability,Thank you for the very prompt response! Your correction of course solved my problem. I don't see the dual purpose of createtsv as a deficiency at all; I simply missed the the distinction between the command formats. Perhaps adding to the clustering format documentation a line that notes the different createtsv input formats for dual purposes would help avoid confusion.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050:153,simpl,simply,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/319#issuecomment-645040050,1,['simpl'],['simply']
Usability,Thank you for this question. We have currently not documented this format. Here is the format definition: . ```; (1) Target identifier ; (2) Number of sequences aligning to target; (3) Unique coverage of target uniqueAlignedResidues / totalLength; (4) Target coverage alignedResidues / totalLength; (5) Average sequence identity; ```. I will also added it the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/390#issuecomment-755029635:365,guid,guide,365,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/390#issuecomment-755029635,1,['guid'],['guide']
Usability,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:337,guid,guide,337,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558,1,['guid'],['guide']
Usability,"Thank you this bug report. The problem is that our `DBReader` searches first for the extension `.[0-9]` if it exists then it knows that it is a multi-part database. In your case your single part database is not seen by the `DBReader` since you have leftover files from your pervious search that uses the same output file name. I currently do not have a solution for this issue. I will discuss this later with @milot-mirdita. For your suggestion to provide a guide for output per module, I totally agree we need this. We might be able to generate something from your command declaration in `MMseqsBase.cpp` since we already define input and output types to validate the user input.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094:458,guid,guide,458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336#issuecomment-664795094,1,['guid'],['guide']
Usability,Thanks @martin-steinegger ! Sorry I missed that in the docs. A possible usability improvement could be not outputting identity values in `-a false` case.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/116#issuecomment-422870199:72,usab,usability,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/116#issuecomment-422870199,1,['usab'],['usability']
Usability,"Thanks Milot!; Indeed it seems that running it with `--format-output fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen` was ended successfully.; Trying to run the `p queryId` after the `bt` when it crashed resulted in the following error:; `(gdb) p queryId; No symbol ""queryId"" in current context.`. I see now that the names of a few of my query IDs are complex/long... So I guess this could be the issue... What would be the best strategy to continue? change the names to something simple like s1, s2, s3, etc., and rerun? Or any other idea? . Thanks!; Haim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492:505,simpl,simple,505,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492,1,['simpl'],['simple']
Usability,"Thanks a lot for the help, @milot-mirdita . Build PROFILEDB and search with this was successful.; final steps:; > mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 --add-self-matches ; > mmseqs convertalis PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.tsv . At this point, everything okay. ; The step below also was performed nicely without errors. ; > mmseqs extractalignedregion PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.ALIGNEDREGION . The crash happens here:; > mmseqs convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . With this message:; ```; Program call:; convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . MMseqs Version: 	7-4e23d; Use ffindex header	false; Verbosity 	3. Could not open data file pbp.found_with_profile.ALIGNEDREGIONS!; ```. But I realised maybe I did everything wrong. . What I want, actually, is the MSA for each cluster with only aligned regions. ; Also, I want the MSA of aligned regions from a search result. The deal is: I have 501 queries single domain, I would to use this against a 17M sequences DB, since the matches probably have at least 1 region contains the same domain as the query, I would like the MSA or even a sequence DB itself contain **only the regions of the match**. ; Extracting only the region of the matches allow me to infer more accurate alignments and phylogeny. Also allow me build specifics models. . Could you provide me a simple workflow to this task?. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413:1633,simpl,simple,1633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413,1,['simpl'],['simple']
Usability,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:423,guid,guide,423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['guid'],['guide']
Usability,"Thanks a lot! I started updating the user guide. That output of the formatalignment should be equivalent to BLAST with the -m 8 parameter. . An excerpt from the upcoming updated documentation:; The file is formatted as a tab-separated lists with 12 columns: (1,2) identifiers for query and target, (3) sequence identity, (4) alignment length, (5) number of mismatches, (6) number of gap openings (7-8, 9-10) match start and end-position in query and in target, (11) E-value, and (12) bit score. --format-mode 1 should work correctly if you execute the search with the --add-backtrace parameter. --format-mode 2 is not implemented yet. Hopefully we can fix this soon and also add warnings if --format-mode 1 is used without backtraces. Edit: Which MMseqs1 tool do you mean?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-244817012:42,guid,guide,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-244817012,1,['guid'],['guide']
Usability,"Thanks a lot. Also, I'd like to know if profile generated from search output (simple search, seqs against seqs) can include HSP from some same sequence in different profiles.; I mean, if some protein has 2 domains and two different queries matches with each domain (query 1 -> domain 1; query 2 -> domain 2), the two profiles generated at the end will include the same protein?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/151#issuecomment-455180294:78,simpl,simple,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151#issuecomment-455180294,1,['simpl'],['simple']
Usability,"Thanks for the answer, find below the results. # Result of bt. `#0 0x00000000006c9ef3 in IndexTable::sortDBSeqLists (); #1 0x00007efc5116705f in GOMP_parallel () from /env/ig/soft/ig/gcc-7.3.0/el6-x86_64-generic/lib64/libgomp.so.1; #2 0x00000000006c5935 in IndexBuilder::fillDatabase(IndexTable*, SequenceLookup**, SequenceLookup**, BaseMatrix&, Sequence*, DBReader<unsigned int>*, unsigned long, unsigned long, int, bool, bool) (); #3 0x00000000004e0049 in Prefiltering::getIndexTable (); #4 0x00000000004ebdcd in Prefiltering::Prefiltering(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int, Parameters const&) (); #5 0x00000000004df035 in prefilter(int, char const**, Command const&) (); #6 0x00000000004587f0 in runCommand(Command*, int, char const**) (); #7 0x000000000044a1f0 in main ()`. # Result of ps. `Warning: bad syntax, perhaps a bogus '-'? See /usr/share/doc/procps-3.2.8/FAQ; jarnoux 96787 99.4 0.7 5468368 2884544 ? Rl Dec07 993:48 mmseqs prefilter /dev/shm/U5yXKTXUDw/FRAG/panfam_frag_subDB /dev/shm/U5yXKTXUDw/FRAG/panfam_frag_subDB /dev/shm/U5yXKTXUDw/CLUST/PanFam8080/panfam_pref --max-seqs 300 -c 0.8 --comp-bias-corr 1 -s 2 --split-memory-limit 250G --threads 32; jarnoux 150328 0.0 0.0 103360 920 pts/0 S+ 10:14 0:00 grep mmseqs`. # Others. I try to simplify like this prefilter+align = search and prefilter+align+clust=cluster. It's look working for the time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-740497921:1583,simpl,simplify,1583,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-740497921,1,['simpl'],['simplify']
Usability,"Thanks for the fast feedback!; Here are the requested info about our architecture. I'll try the two suggestions (no indexing, and indexing without the --split) as soon as our machine is free again (a big cd-hit is swapping like crazy)... ```; $ uname -a . Linux bioinfo 4.4.0-38-generic #57-Ubuntu SMP Tue Sep 6 15:42:33 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux. $ cat /proc/cpuinfo. processor : 23; vendor_id : GenuineIntel; cpu family : 6; model : 62; model name : Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz; stepping : 4; microcode : 0x416; cpu MHz : 1228.906; cache size : 15360 KB; physical id : 1; siblings : 12; core id : 5; cpu cores : 6; apicid : 43; initial apicid : 43; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts; bugs :; bogomips : 5189.25; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053:20,feedback,feedback,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-250500053,1,['feedback'],['feedback']
Usability,"Thanks for the hint. I'll try that. I'm using redundancy reduced database - pdb_05 is PDB Seqres database clustered with e-value 0.05, and the profiles are generated for pdb_05 sequences on nr70 database, which is nr clustered to 70% sequence identity. As to computer - yes, I'm using 120 cores single machine (it has four Xeons E7-4890 v2). The software; scales up amazingly. Now I'm computing 6it profiles for 31M sequences and; that will be accomplished in few days (prefiltering scores calculation took 65 h 52 m 33s). I see that when calculating S-W alignments the soft crunches the data using all given threads but after finishing million of sequences (or leaning towards finishing that million) it runs gradually on less and lass cores (perhaps some cores were given more time consuming alignments so the program might estimate times and balance threads more efficiently, but this is very minor and would be noticed for users working on big databases only), which might be a speed bottleneck for big dataset such as nr database processed on big machines. In few days I'll start tests also with MPI run, so that mmseqs2 will be ran; on 1600 CPUs on cluster (here I wish the software had used GPUs as the cluster I'm using has additionally some Firepros to use - I write it smiling as MMseqs2 is light years ahead of cd-hit, which I was using to date). I'll give you a feedback on the speed soon then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733:1374,feedback,feedback,1374,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369633733,1,['feedback'],['feedback']
Usability,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:34,feedback,feedback,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680,2,['feedback'],['feedback']
Usability,"Thanks for the suggestion. I'll do that for future runs to avoid the huge logfiles. Re: my original problem, I want to mention that I am using a Perl script (which parallel::forkmanager) to fork separate jobs for each sample in my list and then run each sample separately. I tried running mmseqs search with ""--threads 10"" using this same script, but I noticed that the intermediate steps in the command (extractorfs, align etc) all just used one process per sample. I am still trying to figure out if it is because of the parallel script or something to do with mmseqs itself. If I run the same search command on the terminal with ""--threads 10"" it goes fast. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Thursday, July 11, 2019 12:55:59 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). @milot-mirdita<https://github.com/milot-mirdita> noticed that the interactive progress bar could be a problem, in your case it produced at 13GB output. You can turn of the interactive progress bar by setting the environment variable to TTY=0. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDOM5JCFUYB7FDWEK7TP65JY7A5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZXE5VI#issuecomment-510545621>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMTYNMFATMDFBRTPR3P65JY7ANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405:1056,progress bar,progress bar,1056,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539001405,2,['progress bar'],['progress bar']
Usability,"Thanks for your answer, this is an interesting problem for many machine learning applications to avoid homology leakage. Here biology is not so important (for me at least). We want to be as fair as possible in this case.; ; So, if I understand correctly, this will do some prefiltering and then give back sparse similarity values which is indeed something that can be used for this purpose. Is this still the recommended way to do this, from the [user guide](https://mmseqs.com/latest/userguide.pdf)?. ````; fake_pref qdb tdb allvsallpref; mmseqs align qdb tdb allvsallpref allvsallaln; mmseqs convertalis qdb tdb allvsallaln allvsall.m8; ````. Thank you!; Sincerly,; P.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199:72,learn,learning,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-2136930199,2,"['guid', 'learn']","['guide', 'learning']"
Usability,"Thanks milot-mirdita!. I will take a closer look, but think I may have come up with a solution using bbtools gi2taxid to encode the taxonomy IDs in the fasta headers:. A simple for-do loop script like this:. `for i in *.fna.gz; do; 	F=`basename $i .fna.gz`;. gi2taxid.sh in=${i} out=${F}_taxID.fna.gz \; 	server=t \; 	taxpath=${TAXPATH} \; 	-Xmx64g \; 	pigz=6 unpigz=t bgzip=t preferbgzip=t zl=9;. done;`. This isn't exactly full taxonomy support, but I am then able to pull the taxIDs from either the tophit or lca reports and can analyze them downstream using something like taxonkit (https://bioinf.shenwei.me/taxonkit/). Not as optimal as built in taxonomy support within mmseqs2 and running LCA will be an additional challenge, but it is a partial and useful solution for us. Thanks! Look forward to seeing full NT taxonomy support!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754:170,simpl,simple,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754,1,['simpl'],['simple']
Usability,Thanks you a lot for analyzing this behaviour. I never ran into this problem since our nodes have 128GB. The best stragety is to keep the index on a local SSD drive if possible. I will add this information to the user guide. However I think the most user will use it like you did since its the most comfortable solution. ; I will think about a away how MMseqs2 can automatically decide whats the best strategy. . Why do you split the database 8 times? MMseqs2 should automatically decide on the best amount of splits if you don't specifiy the `--split` parameter. . If you are more interested in MMseqs2 than you can check out our paper at the biorxiv http://www.biorxiv.org/content/early/2016/10/07/079681.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252406841:218,guid,guide,218,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252406841,1,['guid'],['guide']
Usability,"Thanks, that clears it up.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/45#issuecomment-330902698:13,clear,clears,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/45#issuecomment-330902698,1,['clear'],['clears']
Usability,"That is interesting. In that case, I mistakingly drew lines between this option and the explanation on sequence identity computations in the guidelines (Header ""**How does MMseqs2 compute the sequence identity**""). But now I understand that these distance metrics are hardcoded based on which coverage mode is selected. . > ""... and there it allows to switch to picking the cluster representative either by the highest sequence identity or alternatively by alignment score."". I am not sure how that works. the highest sequence identity or alignment score compared to what? Since set cover determines the representatives by the number of edges, is the sequence identity/alignment score for ties?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/414#issuecomment-782179653:141,guid,guidelines,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/414#issuecomment-782179653,1,['guid'],['guidelines']
Usability,"That seems to have done it. Nice work!. I'm still not clear on why it was working on your FreeBSD VM or why it works with GCC. From what I can tell, CMPXCHG16B was only lacking on VERY early AMD64 architectures. My hardware is old, but not that old.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870653723:54,clear,clear,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870653723,1,['clear'],['clear']
Usability,That usability-pitfall is on our side. Sorry :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1791835361:5,usab,usability-pitfall,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1791835361,1,['usab'],['usability-pitfall']
Usability,"Thats a bit of a usability trap on our side. `createsubdb` will only create a new subset database for the sequence db, but not for the header db (`_h` suffix). . You can either also create that:; ```; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db_h tcdb_found90.db_h; ```. Or save some space by creating symlinks:; ```; ln -s tcdb_found.db_h tcdb_found90.db_h; ln -s tcdb_found.db_h.index tcdb_found90.db_h.index; ```. Or pass the database with all entries to `result2flat`:; ```; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header; ```. Either of these will work. We'll think of something to avoid this trap.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/102#issuecomment-403321117:17,usab,usability,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102#issuecomment-403321117,1,['usab'],['usability']
Usability,"The `--remove-tmp-files` will clear out the `tmp` folder after execution. However, during workflow execution, we do need to keep a lot of files around.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/237#issuecomment-549172339:30,clear,clear,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/237#issuecomment-549172339,1,['clear'],['clear']
Usability,"The `taxonomy` workflow is usable for your use case, but still under construction to make it user friendly. Building taxonomy databases is still not straightforward, however, this will change in the next few weeks. . We have only tested taxonomic annotations based on the UniProt KB (for which it should be pretty easy to build a database following the instructions on the [wiki](https://github.com/soedinglab/MMseqs2/wiki#prerequisites)). If you generate a mapping between a NCBI accession and its NCBI taxonomy identifier, you should be able to build an MMseqs2 taxonomy database, but we haven't done that yet ourselves. Also the `taxonomy` workflow requires to run [two additional searches](https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy). The second search is quite an expensive operation, since it requires high sensitivity searches against a large database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299:27,usab,usable,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166#issuecomment-465149299,1,['usab'],['usable']
Usability,"The file used here is [DB.fasta](https://github.com/soedinglab/MMseqs2/blob/master/examples/DB.fasta) , I simply renamed to exp.fa as I was testing in a directory with other similarly named files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909:106,simpl,simply,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461567909,1,['simpl'],['simply']
Usability,The output is kind of mangled. Could you execute both runs with empty `tmp` directories and redirect the whole output to a file please? You might also want to set the `TTY=0` environment variable to disable the progress bar (not sure why it broke so badly in your output.; See: https://github.com/soedinglab/MMseqs2/wiki#environment-variables-used-by-mmseqs2,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474:211,progress bar,progress bar,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-824035474,1,['progress bar'],['progress bar']
Usability,"The point is that `result2msa` create an MSA per each cluster, and even the MSA is in binary format you can visualize the result with a simple `less` but you can't use for other pourpouse. Is there any way, may be using `apply`, to export this binary-MSA output to flat-text? Because I can see the result and It's exactly that I want.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558554682:136,simpl,simple,136,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558554682,1,['simpl'],['simple']
Usability,The user guide and the cli disagree on the range of the sensitivity parameter,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:9,guid,guide,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,1,['guid'],['guide']
Usability,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240:9,guid,guide,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240,2,['guid'],['guide']
Usability,"The wiki entry needs a bit work. I recommend using the precomputed index only for very specific cases. You also will likely neither need merge nor concat, they are both for combining two databases in different ways (concat sticks all the entries of one database after the entries of the other one; merge combines database entries). . In your case you should just pass multiple FASTA files to `createdb`. `mmseqs createdb FASTA1.fa FASTA2.fa ... FASTN.fa db`. This will create a `.source` file with:; ```; 1 FASTA1.fa; 2 FASTA2.fa; ...; ```. And these values are the `qsetid` and `qset` (or `tsetid`, `tset`) respectively. Regarding approximate size, you can look up the memory consumption entries in the wiki/user-guide. It more depends on avg length, than max-length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067:714,guid,guide,714,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1734762067,1,['guid'],['guide']
Usability,"They function and mean the same in nucleotide space. . > On Dec 9, 2021, at 18:59, Florian Plaza Oñate ***@***.***> wrote:; > ; > ﻿; > Hello,; > ; > I would like to perform clustering of a large nucleotide sequence with the easy-clust .; > However, it is not clear for me whether the ""--min-seq-id"" and ""-c"" parameters refer to alignments in nucleotide space or alignments in amino-acid space after sequence translation.; > ; > Thanks,; > Florian; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755:259,clear,clear,259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/512#issuecomment-989770755,1,['clear'],['clear']
Usability,"This is a bit of a problem of confusing documentation. `convertalis` is never called in the taxonomy workflow. You can instead pass the parameter `--tax-output-mode 1` to get only an alignment result and then call `lca` and `convertalis` separately:. ```; mmseqs taxonomy $OUT/seqtable_queryDB $DB $OUT/taxonomyResult tmp_aa -a --start-sens 1 --sens-steps 3 -s 7 --search-type 2 --tax-output-mode 1; mmseqs convertalis $OUT/seqtable_queryDB $DB $OUT/taxonomyResult $OUT/aln.m8 --format-output ""query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,taln""; mmseqs lca $OUT/seqtable_queryDB $DB $OUT/taxonomyResult $out/lcaDB --tax-lineage true --lca-ranks ""superkingdom:phylum:class:order:genus:species""; mmseqs createtsv $OUT/seqtable_queryDB $out/lcaDB $OUT/lca.tsv; ```. We'll think how to make this clearer or how to allow to add alignment information to a taxonomy result.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/226#issuecomment-526769228:832,clear,clearer,832,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/226#issuecomment-526769228,1,['clear'],['clearer']
Usability,"This is a feature request: I've found myself making simple databases outside of the mmseqs database formats (eg., gene & cluster databases) in order to keep track of metadata associated with each gene/cluster (e.g., the origin of the gene, the taxonomy of the genome possessing the gene, etc). It would be great if one could include metadata directly in an mmseqs genes/cluster database instead of having to maintain that info in separate files. One could then use that gene/cluster metadata to filter out genes/clusters (eg., selecting just genes/clusters originating from X & Y genomes or originating from metagenomes from biome Z).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/361:52,simpl,simple,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/361,1,['simpl'],['simple']
Usability,"This is for the clu70 machine running 998c50a:; ```; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>); at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008a28f6 in GOMP_parallel (); #6 0x000000000065bbd3 in result2profile (argc=<optimized out>, argv=<optimized out>, command=..., returnAlnRes=<optimized out>); at /home/vsts/work/1/s/src/util/result2profile.cpp:140; #7 0x0000000000427a67 in runCommand (p=0x1e903c0, argc=argc@entry=6, argv=argv@entry=0x7fff44ebc578); at /home/vsts/work/1/s/src/commons/Application.cpp:47; #8 0x000000000040e7d6 in main (argc=8, argv=0x7fff44ebc568) at /home/vsts/work/1/s/src/commons/Application.cpp:203; ```. This is the for clu90 machine running 15.6f452; ```; #0 futex_wait (val=0, addr=0x5f8465e1c2c4) at ../../../libgomp/config/linux/x86/futex.h:97; #1 do_wait (addr=addr@entry=0x5f8465e1c2c4, val=val@entry=0); at ../../../libgomp/config/linux/wait.h:67; #2 0x00007f7069056753 in gomp_team_barrier_wait_end (bar=0x5f8465e1c2c0, state=0); at ../../../libgomp/config/linux/bar.c:112; #3 0x00007f7069055daa in gomp_work_share_end () at ../../../libgomp/work.c:254; #4 0x00005f846452c867 in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]; (); #5 0x00007f706904f583 in GOMP_parallel (; fn=0x5f846452bc00 <result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0]>,; data=0x7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988:597,clear,clear,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134805988,1,['clear'],['clear']
Usability,"This isn't really a bug but an idea for improvement: I'd like to know if there's a simple way to tell ""mmseqs databases"" to use a European mirror site to download the uniref family databases. Currently it takes ""mmseqs database"" (and even wget) more than 3 days to download uniref100 from where I am in France (using ftp.uniprot.org/), whereas downloading individual DBs from the Swiss mirror site (https://ftp.expasy.org/databases/uniprot/) takes only a few tens of minutes. Thanks to all your team for your work and for this magnificent tool, mmseqs.; Guillaume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/791:83,simpl,simple,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/791,1,['simpl'],['simple']
Usability,"To be clear, as far as I can tell, `mmseqs taxonomy` is completely unusable due to this bug. I'm surprised others have not commented on this earlier. I've reproduced this error multiple times, so it's not stochastic.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558:6,clear,clear,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558,1,['clear'],['clear']
Usability,"To utilize the taxonomy features in MMseqs2/Foldseek, you must first label the sequences in your database with taxonomy IDs. You can find detailed instructions on how to do this in our user guide wiki: https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment. I recommend posting this question on the FoldSeek GitHub page. :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/683#issuecomment-1474073582:190,guid,guide,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/683#issuecomment-1474073582,1,['guid'],['guide']
Usability,"Using the HMMER3 hmms is probably a bad idea, they already include pseudocounts, which will negatively affect the sensitivity of MMseqs2. . I am currently evaluating all those tools again, but I don't have a clear recommendation yet. . If your first sequence in the alignment is not a real query, then your two options are to use `hhconsensus` + `msa2profile` or `hhconsensus` + `hhmake -nocontxt -diff 1000` (way slower) + `convertprofiledb`. `msa2profile` is the newer tool as not as well tested as `convertprofiledb`. The testing we already did indicates that it is working well though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344565989:208,clear,clear,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/51#issuecomment-344565989,1,['clear'],['clear']
Usability,"We currently don't support global alignments. It should be not too difficult to integrate a fast NW implementation as a separate MMseqs2 module. However, since none of us is working with global alignments, this would be a very low priority feature. The `--global-alignment` parameter is really badly named and does something unrelated for normal searches. We really should remove it. Either [opal](https://github.com/Martinsos/opal) or [parasail](https://github.com/jeffdaily/parasail) might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291:599,guid,guide,599,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518442291,1,['guid'],['guide']
Usability,"We did tag a commit id for the Nature Biotech publication through [Zenodo](https://zenodo.org/record/840208). We had many important improvements since then though, on speed, user experience and also new modules.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339923168:174,user experience,user experience,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339923168,1,['user experience'],['user experience']
Usability,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:252,guid,guide,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,1,['guid'],['guide']
Usability,"We don't have any need internally at the moment for global alignments, so we don't really plan on implementing real global alignments. We would be happy for external contributions or guiding someone through the implementation though. What exactly is the purpose of global protein alignments in your case? Generally we would solve this problem through a high bi-directional coverage cut-off (See https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696187082:183,guid,guiding,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-696187082,1,['guid'],['guiding']
Usability,"We don't implement any clustering like that, as its usually biologically not very meaningful. You can compute a sparse all-vs-all search and cluster based on scores with whatever clustering algorithm you prefer that, e.g. scikit-learn implements. You might want to increase `--num-seqs` in this case though, to report more than the top-300 alignments.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-1903314008:229,learn,learn,229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/801#issuecomment-1903314008,1,['learn'],['learn']
Usability,"We finished the SIMDe integration yesterday. Please use the main MMseqs2 git. I am happy for any feedback since this is fresh from the oven, but please make a new issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251:97,feedback,feedback,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649410251,1,['feedback'],['feedback']
Usability,We integrated the MMseqs2 regression test into the git repository. See:; https://github.com/soedinglab/MMseqs2/wiki/MMseqs2-Developer-Guide#regression-test,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656:134,Guid,Guide,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-539000656,1,['Guid'],['Guide']
Usability,"What exactly are you doing there? Is this a nucl-nucl or nucl-protein search? MMseqs2 will usually take characters until the first whitespace in the FASTA header as the identifier (if it does not recognize the format, it has a separate parsing logic for e.g. Uniprot format etc). I'd suggest you write a simple `awk` script that trims the suffix.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773916:304,simpl,simple,304,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462773916,1,['simpl'],['simple']
Usability,Yes! This module is quite special and therefore creates usability issues. Sorry for the inconvenience.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/194#issuecomment-486890444:56,usab,usability,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/194#issuecomment-486890444,1,['usab'],['usability']
Usability,"Yes, the TSV file can take quite some space. We often thought about binary based formats but decided to not do this for the sake of usability. The problem with hdf is that it can not be processed in parallel.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/524#issuecomment-1027631944:132,usab,usability,132,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/524#issuecomment-1027631944,1,['usab'],['usability']
Usability,"Yes, this exactly the definition. I should write this more clearly in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/245#issuecomment-558095189:59,clear,clearly,59,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/245#issuecomment-558095189,1,['clear'],['clearly']
Usability,"Yes, this is a limitation of MMseqs. We split sequences by default after 32000 residues (in the Uniclust database, even after 14000). Sequences that were split will get suffices _0 to _N for N-1 splits. I will have to make that clearer in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-248667513:228,clear,clearer,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-248667513,1,['clear'],['clearer']
Usability,"Yes, this is indeed a counter intuitive behavior. The reason is that cascaded clustering has a big effect on the runtime. Linclust performs the following steps: ; (1) `kmermatcher`<- assign sequences to cluster centroids ; (2) `rescorediagonal` <- using some fast ungapped alignment between centroids and members ; (3) `clust` <- clusters the sequences that already passed the alignment criteria and remove them from the remaining set ; (4) `rescorediagonal` <- remove hits that have a low chance to fulfil the alignment criteria ; (5) `align` <- align the remaining hits with Gotoh-Smith-Waterman . The more sequences that Linclust filters at an early stage (3) the faster the algorithm runs since the slowest part is the Gotoh-Smith-Waterman algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950:30,intuit,intuitive,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/351#issuecomment-695797950,1,['intuit'],['intuitive']
Usability,You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module `result2repseq`. I think I fixed the performance issue in the latest commit cc7d7da30ec779d6a2e886438f8295f59e2192f1. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the `easy-` workflows yet. I'd recommend to stick to the basic commands as shown in the user guide.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441:203,simpl,simple,203,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"You should read the SLURM documentation for the difference between `--ntasks` and `--cpus-per-task`. Generally you should only run 1 task per MPI node (or just 1 task in the simple case). And the set `--cpus-per-task` to the number of cores the node has. If you run more than 1 task per machine, MMseqs2 and SLURM will interact badly. The parallelization approach we use is called a Hybrid OpenMP/MPI approach.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849696337:174,simpl,simple,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849696337,1,['simpl'],['simple']
Usability,"Your initial idea is sound. The only problem is that `extractalignedregion` does not really support it since it was built for one very specific purpose and should be generalized. I started working on that though I don't quite have time to finish it up. I have an idea for a hack though:; ```; mmseqs prefixid aln aln.tsv --tsv; awk '{ $1 = NR++; print $0; }' aln.tsv > aln_new.tsv; mmseqs tsv2db aln_new.tsv aln_new --output-dbtype 5; mmseqs extractalignedregion query target aln_new target_new --threads 1; awk '{ print $2; }' aln.tsv > target_ids.tsv; mmseqs createsubdb target_ids.tsv target_h target_new_h; sort -k2,2 target_new_h.index | awk '{ $1 = NR++; print $0; }' > target_new_h.index_new; mv -f target_new_h.index_new target_new_h.index; mmseqs cluster target_new clu tmp; ```; I wrote this down without testing, but this should create a valid domain sequence database from the alignment result. If you are interested in actually fixing the `extractalignedregion` module in the MMseqs2 codebase then I could also try guiding you through that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504:1028,guid,guiding,1028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504,1,['guid'],['guiding']
Usability,"[bioseq@compute-0-294 ~]$ lscpu; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 24; On-line CPU(s) list: 0-23; Thread(s) per core: 1; Core(s) per socket: 12; Socket(s): 2; NUMA node(s): 4; Vendor ID: AuthenticAMD; CPU family: 16; Model: 9; Model name: AMD Opteron(tm) Processor 6172; Stepping: 1; CPU MHz: 800.000; CPU max MHz: 2100.0000; CPU min MHz: 800.0000; BogoMIPS: 4200.23; Virtualization: AMD-V; L1d cache: 64K; L1i cache: 64K; L2 cache: 512K; L3 cache: 5118K; NUMA node0 CPU(s): 0-5; NUMA node1 CPU(s): 6-11; NUMA node2 CPU(s): 18-23; NUMA node3 CPU(s): 12-17; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc art rep_good nopl nonstop_tsc extd_apicid amd_dcm pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt nodeid_msr hw_pstate npt lbrv svm_lock nrip_save pausefilter",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444:1014,pause,pausefilter,1014,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-641389444,1,['pause'],['pausefilter']
Usability,"`dbtype` is a recent development that is going to help a lot with usability with some planned enhancements, such as automatic validation of input database types (which is a huge usability pitfall currently). `tsv2db` needs a flag to specify what the output dbtype is supposed to be. I'll add that soon. The requirement for the indexed database format (the file itself and the corresponding `.index` files) exist since the beginning of mmseqs' development. There is no other feasible solution to fast linear and random access in millions or billions of entries that we are currently handling. . How can we improve the user experience with regards to workflow management systems in your view?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987:66,usab,usability,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-458961987,3,"['usab', 'user experience']","['usability', 'user experience']"
Usability,"`mmseqs search --num-iterations 1` generates 1 db file for each thread. For example: `hits_db.0`, `hits_db.1`, `hits_db.2`, `hits_db.3`. However, `mmseqs search --num-iterations 2` (or a larger number of iterations) only generates one ""main"" output file (eg., `hits_db`). This change affects the downstream processing. For instance, if one then uses `mmseqs convertalis` with `hits_db` as the input, but `hits_db.0`, `hits_db.1`, `hits_db.2`, and `hits_db.3` still exist in that same directory from a past run, then `mmseqs convertalis` dies with the error:. ```; Invalid database read for database data file=hits_db, database index=hits_db.index; ```. This is confusing for the user, given that it's not clear which files `mmseqs convertalis` will look for and potentially try to use. Also, there doesn't seem to be any documentation about the altered output in `mmseqs search`. In general, it would be very helpful to have a list of the actual input and output files (eg., `*.dbtype`, `.index`, `.lookup`, etc) generated by each command. Just including some logging info such as ""looking for *.dbtype file... found file XXX.dbtype` would be helpful.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/336:705,clear,clear,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/336,1,['clear'],['clear']
Usability,"an optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development and short projects always lean heavily on the distro. As for bugs, you can always strongly suggest that bug reports and issues be filed against your own project-compiled binaries and test against those binaries first when tracking bugs.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:1421,Clear,Clear,1421,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,1,['Clear'],['Clear']
Usability,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88:19441,pause,pausefilter,19441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88,1,['pause'],['pausefilter']
Usability,"ated memory consumption: 400G; Target database size: 74390789 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 74.39M 1m 27s 612ms; Index table: Masked residues: 17937595794; Index table: fill; [=================================================================] 74.39M 13s 623ms; Index statistics; Entries: 495972652; DB size: 12603 MB; Avg k-mer size: 0.387479; Top 10 k-mers; CSSCCCS 40539; CSSCSCS 36980; CSCSSCS 36180; CSCSCSS 35290; CSSCDSS 34425; CSCCSSS 33905; CSSCSSS 32740; CSCDSSS 31596; SCSCDSS 30280; CSCSDSS 29715; Time for index table init: 0h 2m 0s 290ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 74390789; Target db start 1 to 74390789; [==. ## Context; I have translated all the sequences in Uniref90 based on a reduced amino acid alphabet that has only 5 letters (C, A, D, G, S). I have tried clustering it again using `linclust` to 90% identity and 80% overlap, however, the number of clusters is larger than I expected (75M from 76M initial Uniref90 size). I thought that might be due to the reduced sensitivity as a further reduced amino acid alphabet is applied before computing the k-mers. . I've tried to use `mmseq cluster` instead, however, this seems to take a very long time. After 13h the progress bar has only two '=' signs. . I am not sure if I am approaching the right way. Is linclust capable to cluster a protein sequence database that has been translated to a reduced amino acid alphabet or does it interfere with the mmseq alphabet used during k-mer comparison?. I was expecting a much smaller number of clusters as sequences only use 5 letters now so they are more likely to be more similar. . For `mmseq cluster`, what is the expected computation time for 76M sequences? . ## Your Environment; Running on a 64-core and 500GB RAM Linux machine.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/781:14154,progress bar,progress bar,14154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/781,1,['progress bar'],['progress bar']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 9 (LWP 7909 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized o",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:21249,clear,clear,21249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 10 (LWP 7910 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:20319,clear,clear,20319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 11 (LWP 7911 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:19389,clear,clear,19389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 12 (LWP 7912 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:18459,clear,clear,18459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 13 (LWP 7913 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:17529,clear,clear,17529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 14 (LWP 7914 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:16599,clear,clear,16599,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 15 (LWP 7915 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:15669,clear,clear,15669,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 16 (LWP 7916 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:14739,clear,clear,14739,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 17 (LWP 7917 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:13809,clear,clear,13809,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 20 (LWP 7920 ""mmseqs""):; #0 MathUtil::NormalizeTo1 (def_array=0x0, length=20, array=0x7ecabcfc9220) at /home/vsts/work/1/s/src/commons/MathUtil.h:248; #1 PSSMCalculator::computeContextSpecificWeights (this=this@entry=0x7f1ffd7dbc10, matchWeight=0x7ee3e2190040, wg=0x7ee412750010, Neff_M=<optimized out>, queryLength=queryLength@entry=8032918, setSize=setSize@entry=1, X=0x7f20081f9a70) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:533; #2 0x00000000006c9cd5 in PSSMCalculator::computePSSMFromMSA (this=this@entry=0x7f1ffd7dbc10, setSize=setSize@entry=1, queryLength=8032918, msaSe",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:10920,clear,clear,10920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 21 (LWP 7921 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9990,clear,clear,9990,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 22 (LWP 7922 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:9060,clear,clear,9060,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 23 (LWP 7923 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:8130,clear,clear,8130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 24 (LWP 7924 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:7200,clear,clear,7200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 25 (LWP 7925 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:6270,clear,clear,6270,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 26 (LWP 7926 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:5340,clear,clear,5340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:3413,clear,clear,3413,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 29 (LWP 7929 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:2483,clear,clear,2483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 31 (LWP 7931 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 30 (LWP 7930 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:1553,clear,clear,1553,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"etSize@entry=1, queryLength=8032918, msaSeqs=0x7f20081f9a70, wg=<optimized out>, scoreBias=scoreBias@entry=0) at /home/vsts/work/1/s/src/alignment/PSSMCalculator.cpp:163; #3 0x000000000065834b in _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:263; #4 0x00000000008ab97e in gomp_thread_start (); #5 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #6 0x0000000000964ff3 in clone (). Thread 19 (LWP 7919 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 18 (LWP 7918 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:12879,clear,clear,12879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"lion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688751441>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAV63EW3N5Z32FV3JA5T3JDSEX37XANCNFSM4Q7W6YLA>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:1565,simpl,simple,1565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"merging to targetDB.idx: 0h 0m 0s 169ms"". I attached the log file. Please see if you spot something wrong.; [LOG_createindex.txt](https://github.com/soedinglab/MMseqs2/files/12741806/LOG_createindex.txt). Another thing I want to mention is during the ""mmseqs createindex input/targetDB imp"" step, our memory was constantly exhausted (125G total~ 65G used+ 60G cache/buff, before the procedure started there was only 5Gb being used). I wonder if that might be the cause of not producing the final ""targetDB.idx""? I'm working on requesting larger memory right now. If that's the case, how big of RAM do I need?; ################################################; After this, I want to fetch the indexed database into memory to speed up the search of queries: . `mmseqs touchdb input/targetDB`. Log for this was:. > MMseqs Version:	f5f780acd64482cd59b46eae0a107f763cd17b4d; > Threads 	32; > Verbosity	3. ##################################################; Then I did:; `mmseqs search query/queryDB input/targetDB output/resultDB /tmp -a -s 8.5 --num-iterations 2 --db-load-mode 2`. This was a simple query but was taking a long time and I had to cancel the job. Normally it took less than a minute to do the search. ; ####################################################; My environment is:; Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz; 32 CPUs, supports AVX and SSE4; 125Gb memory; 2T disk space; MMseqs2 Version: https://github.com/soedinglab/MMseqs2/commit/f5f780acd64482cd59b46eae0a107f763cd17b4d. ##################################################; My questions are:; 1) How big of a RAM is required for the createindex step? Was that the reason a ""targetDB.idx"" was not generated?. 2) How much memory do I need for the indexed files to be fetched into memory (i.e. the""touchdb"" step)? Is it the total of all the ""targetDB.idx.0,1,2...14 "" files which will be over 1TB? Or is it something smaller?. 3) The log message for mmseqs touchdb step wasn't very helpful. Did it work or not?. Thank you,; Tongji",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/757:1535,simpl,simple,1535,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/757,1,['simpl'],['simple']
Usability,mmseqs easy-cluster crashes with a very simple file as an input:. ```; >UPI0005E38868_574-614; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >A0A2T6WYU8_88-128; ENVSQNTADITTNTNSINQNTTDIATNTTNINNLSDSITTL; >UPI0005DBD517_138-178; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >Q9F2D8_129-169; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149:40,simpl,simple,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149,1,['simpl'],['simple']
Usability,"niref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And the taxon id for this specie is not exist in uniref90.fsa). And then I search the same word in ""uniref90_cleaned_DB_v5_h"" :; ```bash; grep ""Candidatus Izimaplasma"" uniref90_cleaned_DB_v5_h --text | head -n 5; UniRef90_A0A2A1ZTN3 Uncharacterized protein n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZTN3_9BACT; UniRef90_A0A2A1ZRW6 Cadmium-translocating P-type ATPase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZRW6_9BACT; UniRef90_A0A2A1ZNE5 ATP-dependent RecD-like DNA helicase n=1 Tax=Candidatus Izimaplasma sp. ZiA1 TaxID=2024899 RepID=A0A2A1ZNE5_9BACT; UniRef90_A0A094INE2 Peptidase family S41 n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094INE2_9BACT; UniRef90_A0A094KYW2 Internalin-A n=1 Tax=Candidatus Izimaplasma sp. HR2 TaxID=1541960 RepID=A0A094KYW2_9BACT; ```; I suppose that something happens when I use the createtaxdb to create the targetDB, but I'm not sure about what it is... ; I hope my description is clear for you. Thanks,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:2980,clear,clear,2980,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706,1,['clear'],['clear']
Usability,"nsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; --Type <RET> for more, q to quit, c to continue without paging--c; #7 0x0000000000964ff3 in clone (). Thread 28 (LWP 7928 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1496; #4 _Z14result2profileiPPKcRK7Commandb._omp_fn.0(void) () at /home/vsts/work/1/s/src/util/result2profile.cpp:280; #5 0x00000000008ab97e in gomp_thread_start (); #6 0x00000000008befc9 in start_thread (arg=<optimized out>) at pthread_create.c:477; #7 0x0000000000964ff3 in clone (). Thread 27 (LWP 7927 ""mmseqs""):; #0 0x00000000008ae21c in gomp_team_barrier_wait_end (); #1 0x00000000008ad719 in gomp_work_share_end (); #2 0x0000000000657e72 in std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_erase_at_end (this=<optimized out>, __pos=<optimized out>) at /usr/include/c++/9/bits/stl_vector.h:1795; #3 std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::clear (this=<optimized ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608:4410,clear,clear,4410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/848#issuecomment-2134846608,1,['clear'],['clear']
Usability,"o Reproduce (for bugs); Run `mmseqs databases GTDB gtdb tmp`. ## MMseqs Output (for bugs); ```; Create directory tmp; databases GTDB gtdb tmp . MMseqs Version: 	14.7e284; Tsv 	false; Force restart with latest tmp	false; Remove temporary files 	false; Compressed 	0; Threads 	48; Verbosity 	3. 08/24 16:37:41 [NOTICE] Downloading 1 item(s). 08/24 16:37:42 [ERROR] CUID#7 - Download aborted. URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; Exception: [AbstractCommand.cc:351] errorCode=3 URI=https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION; -> [HttpSkipResponseCommand.cc:218] errorCode=3 Resource not found. 08/24 16:37:42 [NOTICE] Download GID#e7463566c34e03ba not complete: tmp/3792731134469971229/version. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e74635|ERR | 0B/s|tmp/3792731134469971229/version. Status Legend:; (ERR):error occurred. aria2 will resume download if the transfer is restarted.; If there are any errors, then see the log file. See '-l' option in help/man page for details.; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 196 100 196 0 0 363 0 --:--:-- --:--:-- --:--:-- 364. 08/24 16:37:42 [NOTICE] Downloading 1 item(s); ```; (I stopped the download early after seeing the error above...). ## Context; Including the `Resource not found` error above, I developed a fix to address the format of GTDB release 214. Required changes to `data/workflow/databases.sh`:; - `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION` should be `https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt` (approx. line 139); - Each FAA file inside `gtdb.tar.gz` is now gzipped. Thus, `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR}` should be `""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740:1367,resume,resume,1367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740,1,['resume'],['resume']
Usability,"simplify comparisons in DBReader::Index, DBReader::LookupEntry",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/894:0,simpl,simplify,0,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/894,1,['simpl'],['simplify']
Usability,"the counting k-mers shows the usual progress bar, fails after that. the progress bar seems tad faster than it should be, so I think the k-mers get discarded after creation",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220:36,progress bar,progress bar,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604517220,2,['progress bar'],['progress bar']
Usability,"this isn't the correct place for such questions.; I am using mmseqs2 to implement a process similar to that used by [colabfold's mmseqs_search_monomer()](https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py). ; I have the following process:; 1. First I create a queryDB from a fasta file with many sequences in it. `mmseqs createdb queries.fasta queryDB`; 2. Next I run the `search`, `expandaln`, `align`, and `filterresult` commands pretty much as described in the colabfold code. . The output of the `filterresult` command generates 20 files, in my case the base name is `res_exp_align_filter` and then there are also `res_exp_align_filter.{0..19}`, plus `.dbtype` and `.index` files. . My next step was to generate MSA alignments for each of my query strings. I tried passing the `res_exp_align_filter` file to the result2msa command which works, however this doesn't give the output that I want since I want one MSA file per query sequence. ; Instead I tried the following, I concatenated all the `res_exp_align_filter` files as follows: `cat res_exp_align_filter.{0..19} > res_exp_align_filter.all`. I then used the `res_exp_align_filter.index` file to get the byte offsets for each query and read the appropriate section of the concatenated file. This seems to work, at least insofar that I get what looks like properly aligned sections, with more overlapping targets at the top and less overlapping sequences towards the end. I then write these sections to separate files `./tmp/query`. Finally I try to pass these new files to the `result2msa` command, but then I get the following error:. ```; Input database ""/tmp/query"" has wrong type (Generic); Allowed inputs:; - Alignment; - Prefilter; - Bi-directional prefilter; - Clustering; ```. I'm wondering if there is a simpler way of doing this, and if not why can't I pass the subset of the `res_exp_align_filter` file into the result2msa command even though it has the same structure as the `res_exp_align_filter` file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850:2012,simpl,simpler,2012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850,1,['simpl'],['simpler']
Usability,user guide error and unknown output format,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2:5,guid,guide,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2,1,['guid'],['guide']
Usability,x86)\mmseqs\\bin/bbconfig: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bunzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cal: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/catv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chgrp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chmod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chown: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chpst: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chroot: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cksum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/clear: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cmp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/comm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cpio: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crond: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crontab: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cryptpw: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cttyhack: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cut: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/date: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/df: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/diff: Permission denied; busybox: c,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/150:1786,clear,clear,1786,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150,1,['clear'],['clear']
