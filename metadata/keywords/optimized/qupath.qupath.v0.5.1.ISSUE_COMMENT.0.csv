quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability, 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:216) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179) ; 	at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53) ; 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166) ; 	at qupath.QuPath.main(QuPath.java:150) ; 23:18:19.945 [main] [WARN ] loci.formats.Memoizer - file deletion failed D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; 23:18:20.901 [main] [INFO ] loci.formats.ImageReader - LeicaSCNReader initializing D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1.scn ; 23:18:20.904 [main] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs ; 23:18:20.917 [main] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata ; 23:18:20.957 [main] [INFO ] loci.formats.in.BaseTiffReader - Populating OME metadata ; 23:18:21.207 [main] [ERROR] loci.formats.Memoizer - temp file rename returned false: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo520701858290608434 ; 23:18:21.318 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: Bio-Formats for D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:5771,ERROR,ERROR,5771,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['ERROR'],['ERROR']
Availability, /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f795822700,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19855,down,downloads,19855,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability," 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the be",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5768,error,error,5768,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['error'],['error']
Availability, 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19969,down,downloads,19969,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability," > Hi David,; > Since this is through GitHub, I don't have any your contact address to ; > get in touch privately, and any email replies to this thread are shown ; > here <https://github.com/qupath/qupath/issues/45> (can also ; > edit/delete through that link). However, if you'd like to follow up on ; > this maybe you could send me a private message on ResearchGate?; > Thanks,; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-275047111>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEfakb3PrwmDrXw9e2ycOiIbRa12rks5rVwcggaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-275055657:2039,error,error,2039,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-275055657,1,['error'],['error']
Availability," String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2773,down,downsample,2773,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability," agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the benefits that this PR brings. > > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. > Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. Basically All you the above. It accesses ~50 `.czi` images, weighting ~10GiB each. Leaving the the big size aside, it's also known that BioFormats themselves (required by `.czi`) are slow to work with.; Adding up to this scenario, images are often stored on a remote server (be it OMERO or just a sftp/samba server). This is due to the fact that it is hard for every member of a laboratory to have them stored on their own computer, as they all need to collaborate and, even if they wanted, they would soon fill up their local storage. in this scenario, the fact that QuPath offer an highly-scriptable interface is many laboratories' luck. It means that a pipeline of scripts can be applied one after the other, resulting in a full analysis of the whole project. Sometimes, you may even want to tweak some parameters, and for this you have to re-run the whole pipeline in batch again. In the end, I really get you are wary of quickly merging this. I'm sure reducing code is a top priority in order to offer the best bug-free experience to QuPath's wide user-base. A base experience that can be extended by plug-ins and scripts _outside_ of QuPath's code/responsibility. However, I feel like the ability to run scripts in QuPath is at the **core** of its streghts. It allows to offer an extensible basis on which downstream developers can then build upon.; For this reason I ask you to please also consider future scenarios that this small PR opens up in batch script execution, and not only its implications with the object classifier. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:3602,down,downstream,3602,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,2,['down'],['downstream']
Availability," and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.Event",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1213,ERROR,ERROR,1213,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,1,['ERROR'],['ERROR']
Availability," at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9240,Error,Error,9240,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['Error'],['Error']
Availability," at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1740,Down,Download,1740,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['Down'],['Download']
Availability," com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.jar:jars/packager.jar:jars/reactfx",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9823,ERROR,ERROR,9823,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability," cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The following should work (at least for RGB images):. ```groovy; ...; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false). // Get the hierarchy overlay (could put at top of the file); def hierarchyOverlay = getCurrentViewer().getOverlayLayer(qupath.lib.gui.viewer.overlays.HierarchyOverlay.class). // Paint the overlay (except TMA grid); def img = imp.getProcessor().getBufferedImage(); def g2d = img.createGraphics(); g2d.scale(1.0/downsample, 1.0/downsample); g2d.translate(-request.getX(), -request.getY()); g2d.setClip((int)request.getX(), (int)request.getY(), (int)request.getWidth()+2, (int)request.getHeight()+4); hierarchyOverlay.paintOverlay(g2d, request, downsample, null, true); g2d.dispose(); imp.setProcessor(new ij.process.ColorProcessor(img)). // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```. Because the display settings are obtained from the current viewer, then settings applied there should be maintained (including the use of measurement maps to visualize cell features in context).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:2474,down,downsample,2474,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,4,['down'],['downsample']
Availability," each tile as a separate image.; *; * Two things are notable about this script:; * - The location from which each tile was obtained (in terms of pixel values in the full-resolution image); * is encoded in the filename; * - ImageJ is used to write the output images; *; * The significance of using ImageJ to write TIFF images (rather than, say, ImageIO to write PNGs or JPEGs); * is that this enables the storage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeS",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1037,down,downsample,1037,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,2,"['Down', 'down']","['Downsampling', 'downsample']"
Availability," happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/Syste",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1746,Down,Downloads,1746,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3392,down,down,3392,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,2,['down'],"['down', 'downloaded']"
Availability," o, n) -> {; 					if (n.doubleValue() == columnImage.getPrefWidth()); 						return;; 					if (hasOverlay); 						columnOverlay.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnImage);; 			}. 			if (hasOverlay) {; 				columnOverlay.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnOverlay.setCellFactory(c -> new ImageTableCell(imageCache, true));; 				columnOverlay.maxWidthProperty().bind(maxSmallWidth);; 				columnOverlay.widthProperty().addListener((v, o, n) -> {; 					if (n.doubleValue() == columnOverlay.getPrefWidth()); 						return;; 					if (hasImages); 						columnImage.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnOverlay);; 			}; 		}; ```. This might be better for now! Since it works in both cases:; 1. If both ```columnImage``` and ```columnOverlay``` are available.; 2. When one of the ```columnImage``` or ```columnOverlay``` is not available. I discovered this because when TMA Data is exported for the multichannel image (non-RGB) it is exported as TIF. The TMA viewer only seems to load the image if it is saved as .jpg for the ```columnImage``` column. For the overlay it load either .jpg or .png. Here is TMA Data exporter code that exports the images:; https://github.com/petebankhead/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMADataIO.java#L107; ```java; 	String coreExt = imageData.getServer().isRGB() ? "".jpg"" : "".tif"";; ```. and Here is TMA Data Viewer code that loads the images:; https://github.com/petebankhead/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1714; ```java; 	File fileImage = new File(dirData, name + "".jpg"");; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472:2369,avail,available,2369,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472,2,['avail'],['available']
Availability, r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 230,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17133,down,downloads,17133,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability," solution, it is worth considering inelegant ones. I can think of a few possibilities, although how feasible they are would depend upon how many cores you need to analyze, what outputs you require, and just how different the cores are. ---. Here are some ideas (not necessarily all good ones):. 1. You could annotate regions of interest and detect cells only inside your annotations - no need for a classifier at all. This would mean you need to draw an awful lot of annotations (one or more for every core), but at least you are in full control of what is annotated. 2. You could train up a classifier for all the ‘similar-enough-looking’ cores on one slide, and save that classifier. For all the cores that aren’t handled well enough, you could go through and set them as ‘Missing’. When you export your results, you need to be careful to ignore all the ‘Missing’ cores.; Then, you can duplicate your project, and delete all your annotations. You can go through and set all the ‘Missing’ cores to be available, and all the available cores to be ‘Missing’. Then train up a new classifier, and export the results again.; This way you can use multiple classifiers. It’s not very elegant at all, and I’m not sure that I would recommend it… but it is an option.; > If you try this, you could toggle the ‘Missing’ status in a script or manually. If you do it manually, I’d suggest opening the ‘Hierarchy’ tab on the left of the screen, and selecting the first core. Make sure you have clicked somewhere inside the main viewer to activate it, then use the arrow keys to move around the TMA grid, and press ‘backspace’ to toggle the ‘Missing’ status. Because the default settings mean that selected cores are shown as yellow, rather than dark/light blue, having the ‘Hierarchy’ tab open is useful to show you whether the selected core is missing or not. 3. You could do something similar to the above, but set the ‘missing’ status before cell detection… so you end up without any cells in the cores that sho",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:1468,avail,available,1468,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,4,['avail'],['available']
Availability," text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional exten",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1436,redundant,redundant,1436,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['redundant'],['redundant']
Availability," that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1168,Down,Download,1168,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['Down'],['Download']
Availability," that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image, but the downsample isn't fixed to *have* to be a pyramidal level. Thinking about it, that could potentially be implemented more simply with another default method added to the interface that ultimately just called `readRegion`. The main trouble is that I don't know what to call the method. I'll keep thinking and try to add something to this PR.... *- I think that QuPath is doing the right thing in most places (based on [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142) and [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142)). But I strongly suspect the [`TileExporter`](https://github.com/qupath/qupath/blob/9eaf034e2cd0325d38967bde5ac43900ddc15e3f/qupath-core/src/main/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:2024,down,downsample,2024,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,4,['down'],['downsample']
Availability," this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:120); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1092); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:633); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:1292,ERROR,ERROR,1292,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['ERROR'],['ERROR']
Availability," will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Composi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1041,ERROR,ERROR,1041,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,1,['ERROR'],['ERROR']
Availability," your files. Without actual specifics (e.g. an example file), I don't see why you should assume the 'bug' is in QuPath and not elsewhere. OpenSlide only sets the bounds for a subset of file formats, so most shouldn't be affected anyway. I've only seen it for scn and mrxs, which are the two formats mentioned in the commit that makes the bounds available: https://github.com/openslide/openslide/commit/421cb647acdc8fe35e33c2683949f5098925c8ac. Note my comment above about 'cropping' being arguably the same as 'not padding'... one could argue that QuPath simply removes the padding that OpenSlide has added, because [the bounds define where there is pixel data](https://github.com/openslide/openslide/issues/424#issuecomment-1382416341). QuPath aims to read the pixels from an image consistently, regardless of whether OpenSlide is used or not. As a specific example from my side, see the image `Leica-1.scn` from the OpenSlide freely-distributable data:; https://openslide.cs.cmu.edu/download/openslide-testdata/Leica/. Screenshots below show the image with a full image annotation within QuPath. ## Bio-Formats; <img width=""939"" alt=""SCN-Bio-Formats"" src=""https://github.com/qupath/qupath/assets/4690904/039b2449-5c20-4b93-a4af-d65928324a50"">. ## OpenSlide (default, cropped to bounds); <img width=""941"" alt=""SCN-OpenSlide"" src=""https://github.com/qupath/qupath/assets/4690904/771af2d0-2dcb-44ee-95e6-31ff62f0f7e2"">. ## OpenSlide (with `--no-crop` arg); <img width=""941"" alt=""SCN-OpenSlide-no-crop"" src=""https://github.com/qupath/qupath/assets/4690904/3cf52a48-ca91-4dff-8eb4-7e299d851b3e"">. The size is identical when read using QuPath v0.4.3 when using either OpenSlide or Bio-Formats by default (no extra arguments passed to either). Explicitly passing the `--no-crop` arg causes QuPath to ignore what OpenSlide considers to be bounds, and generate a much larger image with extreme padding that causes both much higher memory use and can thwart processing tasks like thresholding or pixel classif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660:1205,down,download,1205,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660,2,['down'],['download']
Availability,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-576671751:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751,1,['error'],['error']
Availability,"""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn"" -script ""D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy"" -classpath ""C:\\Users\\rmd\\QuPath\\extensions"". The error is still the same",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260#issuecomment-457918978:239,error,error,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457918978,1,['error'],['error']
Availability,"#1465 should fix the first issue. About:. > Quick addition. Defining an area using a polygon no longer works for the in-built detection, just when running a stardist script:. I wasn't able to reproduce the error. Does it happens on every run? Is it possible to share the project throwing the error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443#issuecomment-1938648182:206,error,error,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443#issuecomment-1938648182,2,['error'],['error']
Availability,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7598,ERROR,ERROR,7598,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767,4,['ERROR'],['ERROR']
Availability,"* downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); } catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; println(""Done"");; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:3421,down,downsample,3421,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,4,"['down', 'error']","['downsample', 'errors']"
Availability,", ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Loca",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5177,ERROR,ERROR,5177,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['ERROR'],['ERROR']
Availability,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2383,down,downsample,2383,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,4,"['ERROR', 'Error', 'down']","['ERROR', 'Error', 'downsample']"
Availability,-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15901,down,downloads,15901,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,". This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1190,error,errors,1190,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['error'],['errors']
Availability,". What format are you using?; Depending on the sensitivity you need, QuPath automatically includes your red and green channel mean intensities, so as long as you expand the cytoplasm out far enough, you will get a measure of how much stain is within that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu classification system.; ```. import qupath.lib.objects.classes.PathClass; import qupath.lib.objects.classes.PathClassFactory. def Positive = PathClassFactory.getPathClass(""Positive""); def Negative = PathClassFactory.getPathClass(""Negative""). //I honestly forget the exact text for the given fluorescence features; //but feature would be one of those; d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:1377,down,down,1377,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,2,['down'],['down']
Availability,".com/qupath/qupath/blob/master/qupath-core/src/main/java/qupath/lib/roi/PolygonROI.java) for polygons. The most useful constructor is:; ```groovy; public PolygonROI(float[] x, float[] y, int c, int z, int t); ```; For ```c```, ```z``` and ```t``` (channel, z-slide & time point) you can probably use ```-1```, ```0```, ```0``` by default. . After creating your polygon ROI, then create a [```PathAnnotationObject```](https://github.com/qupath/qupath/blob/master/qupath-core/src/main/java/qupath/lib/objects/PathAnnotationObject.java) with the ROI:; ```groovy; public PathAnnotationObject(ROI pathROI); ```. and finally you can add this annotation to the hierarchy simply with; ```groovy; addObject(annotation); ```. I have some memory of Aperio ImageScope having a concept of layers, and also 'negative' regions; I don't know if this would also be in your XML. If so, these may not have exact matches inside QuPath, but there are various tricks you could use if you find they are needed (e.g. combining or subtracting ROIs, adding them to the hierarchy in different ways, setting names, classifications or colors etc.). If you haven't already, I suggest checking out the Wiki for [Writing custom scripts](https://github.com/qupath/qupath/wiki/Writing-custom-scripts) and [Advanced scripting with IntelliJ](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ), which can help with writing the code and accessing the QuPath source. Finally, it may also be useful to know that, if you want to use any other Java libraries to help, then you can drag the required Jar file onto QuPath to copy it into QuPath's extensions directory. Even if the Jar isn't a 'real' QuPath extension, this means that it will still be available on QuPath's classpath when running the script. This could be useful if your XML parsing code is already contained in a Jar, or if you want to add another library (e.g. ```groovy-xml.jar```) to help with scripting the parsing. Hopefully that helps to get started.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/61#issuecomment-290912225:2456,avail,available,2456,https://qupath.github.io,https://github.com/qupath/qupath/issues/61#issuecomment-290912225,2,['avail'],['available']
Availability,".fireEvent(Event.java:198); 	at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3144); 	at javafx.scene.Scene$DnDGesture.processTargetEnterOver(Scene.java:3316); 	at javafx.scene.Scene$DropTargetListener.dragEnter(Scene.java:3024); 	at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragEnter$0(GlassSceneDnDEventHandler.java:83); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399); 	at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragEnter(GlassSceneDnDEventHandler.java:77); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragEnter$9(GlassViewEventHandler.java:733); 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragEnter(GlassViewEventHandler.java:732); 	at com.sun.glass.ui.View.handleDragEnter(View.java:684); 	at com.sun.glass.ui.View.notifyDragEnter(View.java:1020); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:316); 	at java.base/java.lang.Thread.run(Thread.java:833); 13:36:13.428 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); 13:36:13.788 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); 13:36:14.052 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); ```. This doesn't happen with files or lists. (actually, this happens when the dragboard has a string, because apparently dragging+dropping URLs from a web browser doesn't make them recognised as URLs by dragboard)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1727641846:2623,ERROR,ERROR,2623,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1727641846,3,['ERROR'],['ERROR']
Availability,".qpdata files are files full of objects, not the image itself. The error you are getting is probably QuPath trying to find the same file path to the _image_ file. In general, it is best to store the images within the project folder, and transfer the entire project folder. Regardless, you should be able to look at your data again, even with a completely new project. Just create the project, import the images again, and then copy the qpdata files into the ""data"" folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461090032:67,error,error,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461090032,1,['error'],['error']
Availability,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3408,down,downsample,3408,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,3,"['down', 'error']","['downsample', 'errors']"
Availability,/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3086,down,downloads,3086,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,00000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16495,down,downloads,16495,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,0:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16018,down,downloads,16018,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,0d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 23060194,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17357,down,downloads,17357,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,1. Clone or download the repository (and extract if necessary); 2. Open a command prompt in the downloaded folder; 3. Run `gradlew clean jpackage`. See https://qupath.readthedocs.io/en/0.5/docs/reference/building.html,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1542#issuecomment-2162851928:12,down,download,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/1542#issuecomment-2162851928,2,['down'],"['download', 'downloaded']"
Availability,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9594,error,error,9594,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11161,error,error,11161,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""ex",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1825,down,downsample,1825,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,1,['down'],['downsample']
Availability,2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000 r-xp 00000000 fd:00 68762842 /usr/lib64/gio/modules/libdconfsettings.so; 7f7958a34000-7f7958c33000 ---p 0000c000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:20083,down,downloads,20083,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"3.0 | v0.4.0-SNAPSHOT |; | ------------- | ------------- |; | 593.9 s | 60.1 s |. Results identical as far as I can tell. So... quite a substantial difference :). Cell detection took close to 30s, with 326 498 cells detected,. ```groovy; def checkpoints = [:]. setImageType('BRIGHTFIELD_H_E'); setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 255 255 255""}'). clearAllObjects(). checkpoints << ['Tissue detection': System.currentTimeMillis()]. createAnnotationsFromPixelClassifier(""Tissue detection"", 10000.0, 0.0, ""INCLUDE_IGNORED""). checkpoints << ['Cell detection': System.currentTimeMillis()]. selectAnnotations(); runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 1.0, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}'). for (classifier in ['Some probability', 'Some classification']) {. // Create annotation measurements; checkpoints << [""Annotation measurements for $classifier"": System.currentTimeMillis()]; selectAnnotations(); addPixelClassifierMeasurements(classifier, classifier); ; // Create cell measurements; checkpoints << [""Cell measurements for $classifier"": System.currentTimeMillis()]; selectCells(); addPixelClassifierMeasurements(classifier, classifier); }; checkpoints << [""Done"": System.currentTimeMillis()]; resetSelection(); println 'Done!'. def entries = checkpoints.entrySet() as List; println ""Total time: \t${entries[-1].value - entries[0].value} ms""; for (int i = 0; i < entries.size()-1; i++) {; println "" ${entries[i].key} \t${entries[i+1].value - entries[i].value}""; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584:1610,checkpoint,checkpoints,1610,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584,8,['checkpoint'],['checkpoints']
Availability,4/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15784,down,downloads,15784,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"4GB is fairly low, I had trouble running much with even 8GB on an older laptop, but if you can replicate and post more details on the error (a screenshot?) maybe Peter can help you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55#issuecomment-285858735:134,error,error,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/55#issuecomment-285858735,1,['error'],['error']
Availability,71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuP,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3174,down,downloads,3174,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16615,down,downloads,16615,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f7943,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16732,down,downloads,16732,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16849,down,downloads,16849,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16966,down,downloads,16966,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5980,avail,available,5980,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,2,['avail'],['available']
Availability,:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/g,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17245,down,downloads,17245,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19741,down,downloads,19741,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9149,Down,Downloads,9149,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10123,error,error,10123,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11690,error,error,11690,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1460,avail,available,1460,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,1,['avail'],['available']
Availability,"; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1692,error,error,1692,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['error'],['error']
Availability,"; }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.cod",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2941,ERROR,ERROR,2941,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> (since you're using annotations to train the classifier, how should QuPath distinguish between which annotations are for training and which should be classified...?). I'm not actually, sadly I don't get the chance to work in QuPath much as I mostly work with 3D images. This came about because of this post: https://forum.image.sc/t/using-annotations-imported-into-qupath/95333. It seems the user imported ROIs as annotations instead of detections. Ultimately probably more of a user error based on the current design of the system, but I just do feel it is confusing that everything is given the generic label of ""object"" (both the submenu and the filter) when it only works on detections. Perhaps another submenu within the Object classification menu specifically for Detection classification commands? I know that currently that would mean a single submenu item in the Object classification menu, but it would add clarity to the current state of things, and I would imagine that at least some of these commands will be restricted to detections only well into the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079438553:486,error,error,486,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079438553,1,['error'],['error']
Availability,"> > Can I ask how did you edited cfg file in terminal?; > ; > First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents. The config file is inside the Contents/app directory. Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end: `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM. That's great. It worked! Thanks so much :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502:427,avail,available,427,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502,1,['avail'],['available']
Availability,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633364724:814,avail,available,814,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724,2,"['avail', 'down']","['available', 'downgrade']"
Availability,"> > When does the `getAssociatedImage(String)` function of `qupath.lib.images.servers.ImageServer` is used? I don't think I was able to test it; > ; > It is used with _View → Show slide label_ - but is really only relevant for some file formats (although useful when relevant).; > ; > It's inspired by the 'associated images' provided by [OpenSlide here](https://openslide.org/api/python/#openslide.OpenSlide.associated_images) - since otherwise QuPath would have had no way to provide access to the label etc. But it doesn't map so easily to images from other readers, including Bio-Formats, which doesn't identify label images as being different. Do you know a way to test it? This *Show slide label* window always indicates ""No label available"" with the images I have. Apart from that, I think this pull request can be merged. The bio-format and omero ice image servers seem to be working with these new changes. I may still have to clean the code a bit but I think having the OMERO extension working properly is more important for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1706263104:737,avail,available,737,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1706263104,1,['avail'],['available']
Availability,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732318132:1410,avail,available,1410,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132,1,['avail'],['available']
Availability,"> About the rest, am I correct if a recap of what you ask is:; > * Metadata parsing is fragmented between `BioFormatsImageServer` and `OMEReaderWrapper` / `OMETileReader`. This should not happen. Metadata should be requested only once and not lazily. Yes. See https://downloads.openmicroscopy.org/images/Vectra-QPTIFF/perkinelmer/PKI_fields/ and `HnE_3_1x1component_data.tif` for an example where it is a problem. This contains a 32-bit float image, along with an 8-bit thumbnail. If I try to open the thumbnail with this PR it fails, I believe because it is using a mixture of metadata (i.e. assuming that it has enough bytes for 32-bit data, and failing with an `ArrayIndexOutOfBoundsException`. > * One tile reader should support accessing only one `series`. Possibly - it is one option to overcome the issue. Currently, the implementation of `BioFormatsReaderWrapper` in this PR has two `getPixelValues()` methods. One of them sets the series and then resets it back to its original value, the other sets it but doesn't reset it. Without the reset, then the reader has changed into a different state - and the values returned by any call that requests metadata from the reader are subject to giving different results *(example at the end of this post)*. Additionally, both methods are potentially broken in a multithreading context because there is no synchronization done on the reader. . Excessive synchronization could harm performance. Forbidding the series and ID to be changed anywhere inside the class - *and* forbidding the reader from being accessed outside (i.e. not providing a `getReader()` option) - would reduce the need for synchronization, but probably not eliminate it because I am not sure that Bio-Formats guarantees that pixels can be accessed simultaneously from different threads even if the series and ID aren't changed. The alternative is to synchronize everything that uses the reader, and then taking care to design the class in such a way that it's not possible to get a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:268,down,downloads,268,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['down'],['downloads']
Availability,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869219746:275,error,error,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746,4,['error'],['error']
Availability,"> And as in @biovoxxel's video (thanks for the resource!), our users sometimes struggle with the ""DPI/PPI"" calculations. If this was a set parameter in preferences (e.g. 300PPI by default), then you could write next to downsample what would be the maximum figure size for that PPI (e.g. downsample 2, 300PPI -> up to 1200cm x 800cm figure).; > ; > The user would then be able to choose an appropriate downsample for their figure that's say, up to 20cm wide at the requested PPI. Side note:; I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. Boils down to: Less need for thinking and calculating with a better result image!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185:219,down,downsample,219,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185,4,['down'],"['down', 'downsample']"
Availability,"> Before deciding, one thing to check is whether or not TensorFlow can work via Rosetta2 on the Intel build, since this would give an alternative. Previously it failed, but it's worth checking again with the latest DeepJavaLibrary. Can confirm this definitely does **not** work... in fact, it causes QuPath to abruptly quit when just trying to download TensorFlow and load the engine.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406#issuecomment-1782786354:344,down,download,344,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406#issuecomment-1782786354,1,['down'],['download']
Availability,"> But does the Macro image show anything? Or is it there?. Thanks. I can indeed see it under the Image tab under ""Series 1 (label)"" (I did not know about this). But access from the pull down menu and label pop-up viewer is not working, which remains an issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731459267:186,down,down,186,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731459267,1,['down'],['down']
Availability,"> Can I ask how did you edited cfg file in terminal?. First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents.; The config file is inside the Contents/app directory.; Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end:; `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897:422,avail,available,422,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897,1,['avail'],['available']
Availability,"> Can you rename .tiff to .ndpi? They are .ndpi via the link, and that's what they should be. OK I didn't understand that, but I still got the error:. ![image](https://github.com/user-attachments/assets/dff4b9c4-f1e4-4a48-8fb3-0a85ef356f6a). Anyway this is not related to this PR, so we can skip that for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1620#issuecomment-2328940858:143,error,error,143,https://qupath.github.io,https://github.com/qupath/qupath/pull/1620#issuecomment-2328940858,1,['error'],['error']
Availability,"> For the order, should ""Core Extensions"" be first since this will be relevant for all users? Then filters down to those wanting to explore extensions further? I do like the idea of combining the ""Manage Extension"" section into a bar at the top of the ""User Extensions"" section. My logic was that you can't actually *do* anything with core extensions, but I remain undecided there. The rest are all good points, unlikely to be able to address them all today",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748590254:107,down,down,107,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748590254,1,['down'],['down']
Availability,"> However, now memory defaults to 50% of the available system memory. I would understand that this works for computers with not much RAM (e.g. 8 GB or 16 GB). But when you have 64 GB RAM or more, will using only 50% of available system memory mean having the other half of the massive RAM essentially unused?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986#issuecomment-1171673291:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/986#issuecomment-1171673291,2,['avail'],['available']
Availability,"> I also don't see any javadocs if I call ./gradlew run; it would be nice if they could be available, but it isn't crucial since the normal use will be via jpackage builds. Actually this increases the startup time by a few seconds each time I run QuPath after changing something, which is quite annoying. Should we remove that feature?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2096277248:91,avail,available,91,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2096277248,1,['avail'],['available']
Availability,"> I can't replicate the bug on my Mac - if I drag a URL from chrome, the dragboard contains both a URL and a String - but good if it solves the problem somewhere. Yeah I suspect it's a Linux issue, either way I think trying to handle Strings as URLs is about the best we can do, as long as it shows the right kind of error. > *-I've consistently avoided [starred imports] & convinced my IntelliJ to stop doing it automatically - can discuss later if we want to change that policy. I don't pay any heed to imports; they're automatically hidden for me. The only strong argument I've been exposed to on the topic was that having a) a license and b) every imported class/static method right at the top of the file means that every file you open, you need to page down a couple of times before reading any code. If there was a risk of ambiguity I might be more concerned, but I think when there's a collision Java forces you to use a fully qualified name?. Anyways I think the license and imports are auto-hidden for me, so this doesn't really matter",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1731105750:317,error,error,317,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1731105750,2,"['down', 'error']","['down', 'error']"
Availability,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431978:269,error,error,269,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978,1,['error'],['error']
Availability,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410954902:180,error,errors,180,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902,2,['error'],['errors']
Availability,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1077,avail,available,1077,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006,6,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"> I think when there's a collision Java forces you to use a fully qualified name. It does, but I think they look ugly and weird in code. I tend to prefer the overview of what the class really uses, rather than 'a class here, a class there, some between 0 and absolutely everything from package X...'. I figure that, even with starred imports, there will be a need to page down anyway.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1731132912:372,down,down,372,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1731132912,1,['down'],['down']
Availability,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633285245:154,error,error,154,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245,1,['error'],['error']
Availability,"> Is this a feature anyone really wants?. The answer to that is almost always ""yes""; the better question is whether it is worthwhile to implement given the refactoring/maintenance burden it entails. > Is it likely to be more helpful or confusing for new users?. It seems like the sort of thing that would be confusing if done accidentally, so we should try to make that difficult if possible, but as Leo says in imaging software it's common to have multiple images open. > Detaching one viewer (and leaving the rest of the 'viewer grid' intact). Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. > Breaking up the UI entirely, so that there is no longer a grid and instead we have separate windows (including for the toolbar and analysis pane, more like ImageJ). It seems to me like at least some UI elements should be broken up across windows. For example I'd want to be able to view/edit the object hierarchy in each image separately (e.g. for training classifiers). If we wanted to emulate the other mode you described, then being able to hide UI elements would be a good start. > Is there a need to have the same image open in multiple viewers? . Probably a natural behaviour, as long as we lock the imageData when a viewer is interacting with it. There's a related issue in here to improve support for QuPath windows in tiling window managers, but I suspect I'm the only person who cares about that right now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939:168,mainten,maintenance,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939,1,['mainten'],['maintenance']
Availability,"> Mmmm, I find I have no way to hide the unclassified TMA cores. And sorting my ascending/descending seems to only impact the two that I gave classes to - the rest remain stubbornly as they were (both before and after the classified core) - so I initially didn't think sorting was implemented. Ah yes, I think I misunderstood what my sorting logic was doing; should now be fixed. > Since we aren't dealing with NaNs, I have the feeling that string sorting would make sense here... even if that means 'Unclassified' being sorted as a string. That's intuitive to me, although it does somewhat point to the odd behaviour about unclassified things having a null class, or `PathClass.NULL_CLASS`... > And actually... what do you think about having 'Name' as another potential 'Measurement'... which we could relabel 'Sort by'? Then we could change 'Show measurement' to 'Show value' - both to save space, and because we're no longer limited to measurements. Sounds good, done. > Minor thing: when I assign a classification to a core after displaying the grid, this becomes available in the 'Classes' drop-down - which is nice. The less nice thing is that all the classes there appear deselected.... but aren't necessarily not visible. This should be fixed now, with only minor cursing at ControlsFX",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2329158926:1068,avail,available,1068,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2329158926,4,"['avail', 'down']","['available', 'down']"
Availability,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:261,error,error,261,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032,2,['error'],['error']
Availability,"> Run Extensions → ImageJ → Send snapshot to ImageJ; > Try to interact and use accelerators with both ImageJ and QuPath windows in focus. For example, pressing shortcut+L should; > launch the ImageJ command finder if an ImageJ window is in focus; > launch the QuPath command list if a QuPath window is in focus; > not launch either the wrong window, or both at once. This is how it behaves, but I checked on a previous version and it also behaved this way. ""Send snapshot to ImageJ"" always sends the image on the ""primary"" viewer, not the selected one. Is this intended?. Side note: movement/zoom is coupled between viewers, even when different images are open. Is this intended? Seems counterintuitive to me. Also is not great if you have an image highly zoomed and then open another, or if two images have different levels of detail available",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1318#issuecomment-1713690482:835,avail,available,835,https://qupath.github.io,https://github.com/qupath/qupath/pull/1318#issuecomment-1713690482,1,['avail'],['available']
Availability,"> So long as 'arbitrarily large' is still small enough to work as a single image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently.; > ; > One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:857,down,downsample,857,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],['downsample']
Availability,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821,3,"['avail', 'error']","['available', 'error']"
Availability,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:7,error,error,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728,1,['error'],['error']
Availability,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623989433:371,down,down,371,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433,1,['down'],['down']
Availability,"> When I build QuPath with ./gradlew jpackage I'm only getting the non-core QuPath jars (qupath-bioimageio-spec and qupath-fxtras). Does it also happen with `./gradlew clean jpackage`? Since it's a `Copy` task it's safer to `clean` before. > I also don't see any javadocs if I call ./gradlew run; it would be nice if they could be available, but it isn't crucial since the normal use will be via jpackage builds. Added with last commit. > Lastly, when I open the Javadoc viewer, I see this:. There is an automatic redirection that is not triggered on the old Javadoc viewer. It seems to work on the new Javadoc viewer, can you check if it also works on your side?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2095709470:331,avail,available,331,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2095709470,1,['avail'],['available']
Availability,"> Where could you find the Weka extention? thanks. For me it was in C:\Users\ (Your Name)\QuPath\extensions. It was in the 7th line of code in the debug image from my original post above. Weka is an extension that I downloaded for a previous project so it must have been outdated (as suggested by @Svidro above). I would try removing all extensions to rule out any outdated / buggy ones causing the issue. If removing all the extensions does not work, could you post a screenshot of a log after opening QuPath through the debug application?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632435699:216,down,downloaded,216,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632435699,1,['down'],['downloaded']
Availability,"> but it would be fiddly to try to get the location of the bar and font size to exactly match what is displayed in QuPath's viewer. I don't think this is strictly necessary because in the viewer, the scalebar tries to be unobtrusive, but as part of a figure, I think it would look too small (or that was the case for the figure I was trying to make). So yes, which corner, which physical length / thickness, length displayed (above/below) should ideally all be user defined (IMHO). Maybe an ""export preview"" window would help?. And as in @biovoxxel's video (thanks for the resource!), our users sometimes struggle with the ""DPI/PPI"" calculations. If this was a set parameter in preferences (e.g. 300PPI by default), then you could write next to downsample what would be the maximum figure size for that PPI (e.g. downsample 2, 300PPI -> up to 1200cm x 800cm figure). The user would then be able to choose an appropriate downsample for their figure that's say, up to 20cm wide at the requested PPI. Anyway anyway, I'll compile a v0.5 and check out the new additions. Thank you very much for taking the time to implement this @petebankhead !",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604160841:745,down,downsample,745,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604160841,3,['down'],['downsample']
Availability,"> my Mac automatically offloads them to the cloud if I haven't opened them for a few days. My best guess is that there is a cloud-related factor. Where is the project stored - is it only on your local computer, or is it also in OneDrive/iCloud/similar?. If the project is in a cloud folder, please try copying it to a local directory that doesn't experience any automatic cloud-offloading/downloading. Also, when this happens, please check under *View &rarr; Show log* for any messages or other information that could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614:389,down,downloading,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614,1,['down'],['downloading']
Availability,"> try accessing the images some other way before opening them in QuPath (e.g. through Windows Explorer), in case 'pre-warning' the OS is somehow useful. I think this is it! I opened the folder containing the images in explorer, and set the thumbnail size to ""large icons"" via `view > large icons`. This would generate thumbnails for all files that are currently displayed on screen. After those were generated, I scrolled down, so that the remaining files would also have their thumbnails generated. Then, I launched the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:422,down,down,422,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,1,['down'],['down']
Availability,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-939704186:615,avail,available,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186,1,['avail'],['available']
Availability,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472857161:315,down,downloaded,315,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161,3,"['down', 'error']","['downloaded', 'error']"
Availability,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:46,down,download,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516,3,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,"@Rylern figured out what's going on, and #1578 helps address this bit of undo/redo weirdness. The fix should be available in v0.6.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1487#issuecomment-2277243206:112,avail,available,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/1487#issuecomment-2277243206,2,['avail'],['available']
Availability,"@SahPet can you confirm:; * Are you using TensorFlow CPU or GPU?; * Does it work for small images?; * Does it run for a bit and *then* crash terribly, or does it not run at all?. In the past with OpenCV/JavaCPP these errors have often been because an object (e.g. a Mat) has been freed too soon and then some later code tries to use it... which is often prompted by the garbage collector running during some intensive processing. If this is the issue, then I'd expect that it works for a while... and then suddenly everything disappears. Does that fit what you're seeing?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630637888:217,error,errors,217,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630637888,1,['error'],['errors']
Availability,"@Svidro Really appreciate your code!!! I guess it's little bit too much to ask, but I'm wondering if you could do me a final favor to teach me the code of reading coordinates from a json format like:; ```json; {; ""tumor"": [; {; ""name"": ""Annotation 0"",; ""vertices"": [; [; 100,; 150; ],; [; 200,; 250; ],; [; 300,; 350; ]; ]; },; {; ""name"": ""Annotation 1"",; ""vertices"": [; [; 1000,; 1500; ],; [; 2000,; 2500; ],; [; 3000,; 3500; ]; ]; }; ]; }; ```. I tried to use import groovy.json.JsonSlurper; But it gave me error of; `Script1.groovy: 5: unable to resolve class groovy.json.JsonSlurper`; With this part done, my entire issue should be resolved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/140#issuecomment-359361318:509,error,error,509,https://qupath.github.io,https://github.com/qupath/qupath/issues/140#issuecomment-359361318,1,['error'],['error']
Availability,"@Svidro That's a different error. I couldn't replicate it, but my idea of a 'decent number' may be lower. If you are displaying all detections under the 'Hierarchy' tab, you can right-click on it and choose to hide them. That might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484627853:27,error,error,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484627853,1,['error'],['error']
Availability,"@Svidro Yes it is rather small. They mention their images being up to that size, but images only a quarter of that size are actually available. I realize it's incredibly small, but there's not much I can do about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620737325:133,avail,available,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620737325,1,['avail'],['available']
Availability,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620375806:16,error,error,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806,2,"['error', 'recover']","['error', 'recover']"
Availability,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932290410:34,error,errors,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"@bpmed12 can you be more specific regarding what exactly you have tried, what does/does not work and any error messages you see?. Note that the 'image list' (under the 'Image' tab) does not exist in m3. So your issue may be different. Also not that the Bio-Formats extension must *not* be installed with m3 - it is included by default. You may still need to install the visual studio redistributable as specified at https://docs.openmicroscopy.org/bio-formats/6.1.1/formats/zeiss-czi.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-517719018:105,error,error,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-517719018,1,['error'],['error']
Availability,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761851656:155,avail,available,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656,1,['avail'],['available']
Availability,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-577108438:50,error,error,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438,1,['error'],['error']
Availability,"@melvingelbard ; Thank you for kindly providing a possible solution!; However, manually modifying `.qptma` file is rather complicated. I have to first export `.qptma`, insert uniqueID, and import it, for every image.; For now, my alternative solution is through menu File -> TMA data -> import TMA data, copy arranged Unique ID, finally `Paste Gird`. At least, this method avoids export `.qptma` file with lots of other images. Hope the ""Drag and Drop `.qpmap`"" feature can be repaired soon~",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/829#issuecomment-944358370:477,repair,repaired,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-944358370,1,['repair'],['repaired']
Availability,"@mezwick Hashes aren't currently generated or made available. Making a release remains a fairly laborious and manual process. Although the builds themselves are now generated automatically using GitHub Actions, I have to download and check these run on each platform and then upload again. And write all the release notes, tag the version etc. There can also be some extra renaming required, since `jpackage` (used for the build) has some awkwardness connected to artefact naming and 0.x.x versions that affects some platforms but not others (e.g. I think macOS forbids 0.x.x versions, so this needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:51,avail,available,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,3,"['avail', 'down']","['available', 'download']"
Availability,@ofrag I read this thread again and today I understood :). We've replaced `RoiTools.makeTiles` with a the new `Tiler` class that supports different alignment options. Hopefully it will make things much easier.; * https://github.com/qupath/qupath/pull/1350. I'll close this issue as the new class should be available soon when v0.5.0 is available.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1277#issuecomment-1738963292:306,avail,available,306,https://qupath.github.io,https://github.com/qupath/qupath/issues/1277#issuecomment-1738963292,2,['avail'],['available']
Availability,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620643098:187,down,download,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098,3,"['Down', 'down']","['Download', 'download']"
Availability,"@petebankhead How does one get the code, mentioned above, (https://github.com/qupath/qupath/issues/202#issuecomment-415312268 where the pictures with specific contrast/brightness settings are exported) to work in version 0.2.0-m2?; It has some import failures in my version and when I am deleting all imports and click on ""include default bindings"" it also does not work. Can you help or do I have to use an older/newer version?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520236152:251,failure,failures,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520236152,1,['failure'],['failures']
Availability,"@petebankhead I will definitely share the new QuPath jobs. Thank you for these fixes to the TMA Data viewer. The table now has correct colors and all the columns that were missing values now have correct values. . I am just realizing that the data table is only sluggish when the TMAs have cell detections present. If I were to calculate my measurements of interest for each TMA and remove detections before testing the TMA Data viewer then it works very smooth. Is it possible that the vertical scroll issue sluggishness is a side effect of being able to view huge combined dataset ""live""!. I hope TMA Viewer is here to stay as a legacy feature for a while, it seems to have served well and continues to work. Thank you for keeping it alive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289156832:736,alive,alive,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289156832,1,['alive'],['alive']
Availability,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520238308:73,error,error,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error', 'errors']"
Availability,@petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. . @Svidro I agree it does seem after some research like this might be the most reliable method. At the same time however doesn't this make it harder to train on a very large number of images? In order to train on 50 images I would need to create a project with 50 images and save the data in each project. It is my understanding and experience that these large project are much slower than smaller ones and frequently crash.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/360#issuecomment-530543289:215,reliab,reliable,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530543289,1,['reliab'],['reliable']
Availability,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-589578173:122,error,errors,122,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173,3,['error'],"['error', 'errors']"
Availability,"@petebankhead thank you for tagging me on these changes. . > Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I agree. > My proposal is to change **Unique ID** to become **Case ID**. You have my upvote for this. Not necessarily better but the alternative I could think of is **Subject ID** but it has a similar vibe to **Patient ID**. > Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it, but it means that IDs saved in QuPath v0.4.0 won't be recognized in older versions. If these changes mean less confusing and clear APIs in the future, then, the sooner we address them, the fewer projects will be affected. . I personally do not have a reason to go back to 0.3.X once I create a project in 0.4.0X - because I believe all the commands that were present in 0.3.0X will be available in 0.4.0X. Please correct me if I am wrong - Are there any methods/workflows that will be dropped in 0.4.0? It would be easy to make a decision if we could identify potential reasons for someone to want to go back to 0.3.X - besides the fact that not everyone is running the most up-to-date version of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568:1173,avail,available,1173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568,2,['avail'],['available']
Availability,@petebankhead thank you for your response! I see what you mean. I think for now Bio-Formats is enough for me. I had some errors building with adoptopenjdk-14-hotspot so I built it with 15 (plus this little workaround for the cfg file to get it to run),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725527739:121,error,errors,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725527739,1,['error'],['errors']
Availability,"@petebankhead thank you, could you please have a look at this question? I tried to build from github but got this error. https://stackoverflow.com/questions/71835049/failed-to-apply-plugin-class-org-gradle-api-plugins-javaplugin-gradle-plugins",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096:114,error,error,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096,1,['error'],['error']
Availability,"@petebankhead thanks, yeah same exact error",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925039627:38,error,error,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925039627,1,['error'],['error']
Availability,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-919283605:375,error,error,375,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605,1,['error'],['error']
Availability,"@r-mvl You could try the following script to investigate; ```groovy; import qupath.lib.images.servers.*. FileFormatInfo.cache.clear(). // Directory containing files; def path = 'path/to/scn/files'. // Filter only scn files; def files = new File(path).listFiles().findAll{it.getName().endsWith('.scn')}. // Print available readers; for (builder in ImageServerProvider.getInstalledImageServerBuilders()); print builder. for (f in files) {; def uri = f.toURI(); // Print all possible readers for the current file; print ImageServerProvider.getServerBuilders(java.awt.image.BufferedImage, uri.toString()).size(); // Print preferred reader; print ImageServerProvider.getPreferredUriImageSupport(java.awt.image.BufferedImage, uri.toString()); }; ```; I've tried a lot of files this morning and haven't been able to find any that fail... it remains mysterious :/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518131563:312,avail,available,312,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518131563,2,['avail'],['available']
Availability,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:115,error,error,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,3,"['down', 'error']","['downloads', 'error']"
Availability,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-617732952:41,avail,available,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952,1,['avail'],['available']
Availability,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-826532977:138,error,error,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977,1,['error'],['error']
Availability,"@suzeteguarda you could try posting your question on the forum at https://forum.image.sc/tag/qupath. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813:105,error,error,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813,1,['error'],['error']
Availability,"@yli-hallila did you spot any patterns when it happened?. Like, was it a high-resolution pixel classifier, and did the memory use accumulate over time?; Would it happen after 3 images, 30 images, or 300 images...?. I'm hoping that there is some place where I'm just failing to release memory used by OpenCV / JavaCPP, but I thought I'd tracked down where that was the case. The script does two things: clears the cache, and calls the garbage collector. If the thing that helps is clearing the cache, then that suggests to me that it is delaying (rather than solving) the problem - and there is probably still a leak somewhere. If the thing that helps is running the garbage collector then... I guess I'm confused, because I think that should happen before an out-of-memory error occurs anyway. I quite like hunting for leaks (as long as they are in code I can control), but here I'm not sure where exactly I should start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498:344,down,down,344,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498,4,"['down', 'error']","['down', 'error']"
Availability,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/642#issuecomment-791435458:679,redundant,redundant,679,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/654#issuecomment-743001513:736,error,error,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513,3,"['Error', 'error']","['Error', 'error']"
Availability,"About commit [a7b184f](https://github.com/qupath/qupath/pull/1474/commits/a7b184f2bf0134432c52080e394ab51fea02dfe3):. In Zarr files (or at least in the Zarr files I have), the z values are scaled with the resolution. This means that if there is an image of shape (t: 10, c: 20, z: 30, y:40, x: 50) at full resolution, it will have a shape of (t: 10, c: 20, z: **15**, y:20, x: 25) with a downsample of 2 (and not (t: 10, c: 20, z: **30**, y:20, x: 25)). This means that in the BioFormats `IFormatReader.getIndex(z, c, t)` function, `z` can only take values between 0 and **15** (and not **30**) when called for the image of downsample 2. I'm not satisfied with this commit because it's ugly and assumes every Zarr files scale the z values with the resolution (which I was not able to find if it's the case in the [OME-ZARR specs](https://ngff.openmicroscopy.org/latest/)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1971320350:388,down,downsample,388,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1971320350,2,['down'],['downsample']
Availability,"Actually there are more errors, introduced (I think) in v0.2.0-m5 when attempting to avoid recursion. The running statistics are not being reset between clusters, potentially resulting in further problems throughout these measurements.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/552#issuecomment-656226269:24,error,errors,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/552#issuecomment-656226269,1,['error'],['errors']
Availability,"Actually, I was just reminded that there was another topic that handled this, if you scroll down to 4 in Peter's response. It has a macro you can run through the _Extensions -> ImageJ macro runner_ . That may be much more in line with what you are looking for.; https://github.com/qupath/qupath/issues/57",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315177285:92,down,down,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315177285,1,['down'],['down']
Availability,"Actually, no need to send the error... I was able to reproduce the problem on an older Mac here. It would still be good to know what version of the operating system you are running. It works for me on Sierra, but not on Mavericks - although I'm not sure if that's relevant. In any case, my awkward hack of copying the ```lib*``` files from a working version to v0.1.1 appears to work - so I will try to find which part is missing in v0.1.1, and recompile a version with everything that is required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265496307:30,error,error,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265496307,1,['error'],['error']
Availability,"Actually... something that *might* help in the short term is to use the specify the color with [addLabel](https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html#addLabel(qupath.lib.objects.classes.PathClass,int,java.lang.Integer))​, i.e.; ```groovy; // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.BLACK) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1, makeRGB(1, 1, 1)) // Choose output labels (the order matters!); .addLabel('Stroma', 2, makeRGB(2, 2, 2)); .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(); ```. You might still end up with an RGB image in Python, but when I tried it briefly it gave me a 2D image without LUT - as long as my RGB colors were all grayscale.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159782587:511,down,downsample,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159782587,2,['down'],['downsample']
Availability,"Adding link back to original discussion: https://forum.image.sc/t/potential-bug-with-load-pixel-classifier-show-as-text-qupath-v0-4-3/80470. Haven't figured out exactly what aspect of the script is troublesome, so haven't come up with a proper minimal non-working example yet :/. Even without that, we can assume that a proper solution involved removing use of regex from the [styler classes](https://github.com/qupath/qupath/tree/v0.4.3/qupath-extension-script-editor/src/main/java/qupath/lib/gui/scripting/richtextfx/stylers)... or at least handling styling errors more quietly, without having an exception pop up.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1264#issuecomment-1532779834:560,error,errors,560,https://qupath.github.io,https://github.com/qupath/qupath/issues/1264#issuecomment-1532779834,1,['error'],['errors']
Availability,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-642570985:101,ERROR,ERROR,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Ah ok, it should be a pyramidal TIFF then. Are you running QuPath on Linux, by any chance? Or what platform? Do you see any error message when you try, either popping up or under *View &rarr; Show log*?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371741529:124,error,error,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371741529,1,['error'],['error']
Availability,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925047351:239,error,error,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351,1,['error'],['error']
Availability,"Ah, my best guess was wrong. But now that I know the image, I have tried it out... and it opens for me on my Mac, also 10.13.3, without problems (using OpenSlide). Do all .tif whole slide images fail for you in QuPath? Do any other formats work (e.g. SVS or NDPI - there are freely available test images on the OpenSlide website)?. A lot of that error message comes from the failed Bio-Formats attempt - you might want to remove or disable it since it didn't solve the problem. But the log shows that OpenSlide was also tried without success.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371778042:282,avail,available,282,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371778042,2,"['avail', 'error']","['available', 'error']"
Availability,"Ah, seems not to be the issue I linked to then... but rather a 'normal' (albeit very poorly handled) memory error. Do you have more memory that you could make available to QuPath, or try reducing parallelization? ; There are some suggestions at https://github.com/qupath/qupath/wiki/Troubleshooting. Out-of-memory errors are (somewhat) inevitable when pushing things particularly hard, but if this results in completely losing .qpdata files then that definitely sounds like a bug that needs fixed. I will try to reproduce the problem and see if I can make it at least fail less catastrophically... and ideally not at all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493945197:108,error,error,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493945197,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"Ah, sorry, I made this change on 0.4.3 where I was working on the extension and switched to main to cherry-pick without testing. The context I spotted it is definitely an edge case. 1. zoom in an arbitrary amount, say past 1x; 2. Click ""Adjust zoom for all images to fit the entire image in the viewer""; 3. Image downsample factor changes but displayed magnification doesn't. But this is fixed in main already it seems. Sorry!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1639814876:313,down,downsample,313,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1639814876,1,['down'],['downsample']
Availability,"Ah, thanks @melvingelbard - so it *is* OpenCV-related. That's really good to know, seems to confirm my suspicions although I have no clue why. It also seems to be specifically the `org.bytedeco.opencv.global.opencv_imgproc` class - assuming object classifiers are working, then `opencv_core` and `opencv_ml` must be ok. If you still have access to the computer, you could check if pixel classifiers work - since they use `opencv_imgproc` as well. If they do, perhaps the problem is more restricted. If launched from a command line, there might be more detailed errors emitted at some point. On Windows, that can be done simply by using the console exe launcher. On a Mac, it means running something like this from a terminal `/Applications/QuPath.app/Contents/MacOS/QuPath` (exact path might need changed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-873087104:561,error,errors,561,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-873087104,2,['error'],['errors']
Availability,"Ah, that will be a Pete question, but I don't know of any way currently. It took a bit of work for me to get find new _mean_ stain intensities for the nucleus/cytoplasm when applying a variety of color vectors for multiplexing... ; I suspect the nucleus would be doable since that is a stand alone ROI, especially if you dig into the java files (the pixel by pixel cytoplasmic values, as far as I know, are only used as the cells are generated), but the cytoplasm might be more difficult. ; The file I am thinking about is: https://gist.github.com/Svidro/eaf29399e36d34caacddf345ab668b0c#file-watershedcelldetection-java; That is a version of it that I edited to use % of different color vectors for the nuclear detection, rather than just OD sum or Htx. That is where I would recommend starting if you want to try to insert an IQR measurement. But I really don't know!. It would be nice to have that information available, if you/Pete can get it working, but I don't think I can help much more here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/236#issuecomment-433484202:913,avail,available,913,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433484202,1,['avail'],['available']
Availability,"Ah, this is a harder one to work around... the problem is that QuPath strictly requires that the pixel size information is available in microns when using OpenSlide (which is the case here). Unfortunately, your newly-created pyramidal TIFF seems to be missing this information. I need to look into updating QuPath to support customizing this pixel size information when it's missing, rather than just refusing to open the image. Realistically this will take some weeks at least, although I'll report back here if I can think of a workaround in the short term. In the meantime, if you can find some way of adding the pixel size information (if known) to the TIFF in an OpenSlide-friendly way then that should also resolve the issue. Please do let me know if you manage to do this, as it could be useful in general. (Incidentally, do you know the origin of the TIFF? Is there any way to get the pixel size information - or even go back to the original software that wrote the TIFF in the first place and export the file directly into a different format?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423807718:123,avail,available,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423807718,1,['avail'],['available']
Availability,"Already loaded sounds like a the right error to see. I don't encounter any zooming problem when I use my touchscreen (without a pen) and don't recall having made any changes in this regard since v0.1.3. I can use the brush comfortably with the touchscreen & my finger, and it only zooms if I 'swipe' at the end of the gesture - otherwise the image is static. Is this also what you see? Since it turns out that JPen works after all, I really don't have enough information to know _exactly_ what problem you are reporting, when it occurs, how to reproduce it and with precisely what settings enabled in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479825671:39,error,error,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479825671,1,['error'],['error']
Availability,"Another example... zoomed in much more, and the distinction is more obvious when the boundaries are tracing pixels. ## Previous. ![Older-unconvincing](https://github.com/user-attachments/assets/53dff476-2374-4ab1-933c-3ef40a8b3300). ### With this PR. ![Newer-questionable](https://github.com/user-attachments/assets/a6f3af0a-c680-4ec2-aedf-3a24b522dcae). Note that when viewing at a downsample ≥ 1, there is no difference in behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1623#issuecomment-2332558420:383,down,downsample,383,https://qupath.github.io,https://github.com/qupath/qupath/pull/1623#issuecomment-2332558420,1,['down'],['downsample']
Availability,"Another possibility for TMAs might be something like ; ```; getDetectionObjects() each {detection -> detection.setName(detection.getParent().getName())}; fireHierarchyUpdate(); ```; in order to name all cells after their parent TMA core (assuming no other annotations have been drawn at this point). . At that point, there could be a list of TMA cores you wanted to apply that particular classifier to which the script checks before applying the current classification steps. ; Downside: you would have to create both the list and each classifier. ; Upside: you would have complete control over the classifier and once created it would be easy to apply across many TMAs. PS. It might be more streamlined to check the parent annotation name within the classifier script against the list, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-289249459:478,Down,Downside,478,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-289249459,1,['Down'],['Downside']
Availability,"Another way would be to change the opacity of the stromal (etc) colors to 1%. It refuses to allow 0% for full transparency, but if you double click on the color in the annotation tab, select Custom Color, you can manually turn down the opacity to 1%, which may be good enough. I am not sure how to do this in a script, however.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/108#issuecomment-335863365:227,down,down,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/108#issuecomment-335863365,1,['down'],['down']
Availability,"Another workaround in your case could be a script like this:; ```groovy; def hierarchy = getCurrentHierarchy(); for (annotation in getAnnotationObjects()) {; hierarchy.getSelectionModel().setSelectedObject(annotation); runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; }; ```; Or you could set the number of threads in a script:; ```groovy; import qupath.lib.gui.prefs.PathPrefs; PathPrefs.setNumCommandThreads(1); // Do other things... e.g.; selectAnnotations(); runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; PathPrefs.setNumCommandThreads(Runtime.getRuntime().availableProcessors()) // The default; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-337002695:1724,avail,availableProcessors,1724,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-337002695,1,['avail'],['availableProcessors']
Availability,"Any time I click Run for Add Intensity Features and have a one channel; selected and am running at least the mean. But so far only in the LuCa; image (of the few I have tested). Fairly regular cell generation parameters.; ![image](https://user-images.githubusercontent.com/23145209/61767453-2a224000-ad99-11e9-9422-582c1f37723a.png). On Tue, Jul 23, 2019 at 10:16 PM Pete <notifications@github.com> wrote:. > When is the error generated?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/301?email_source=notifications&email_token=AFQSV6KEL332YBYM5ENN5ATQA7QRPA5CNFSM4HDEAJ5KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2VGFYA#issuecomment-514482912>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFQSV6I7Q5KND67GRIGVTQLQA7QRPANCNFSM4HDEAJ5A>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514484941:421,error,error,421,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514484941,1,['error'],['error']
Availability,"As @Svidro says, QuPath doesn't modify the whole slide images - and nor can it write a whole slide image itself (unless you were to do all the low-level stuff in a script yourself - just about anything should be possible then). Personally, I've never needed this functionality; or, more accurately, I've always found a way around it that was much easier than solving the problem of writing an entirely new whole slide image. These include:; * Exporting the original pixels along with the binary image (e.g. if using the masks to define training regions to create a new algorithm); * Exporting the binary image at a low resolution, and either exporting the scaling factor (downsample) or approximating this later based on the width & height compared to the original; * Exporting cropped regions, and including the bounding box and scale information in the file name; * Exporting cropped regions as ImageJ TIFFs, where QuPath is able to set the key information in the image properties to facilitate reading the regions back later. QuPath requests pixels using `RegionRequest` objects. To generate a string containing the key information from a `RegionRequest` you might use the following:; ```groovy; String name = String.format('%s_(%.2f,%d,%d,%d,%d)',; server.getShortServerName(),; request.getDownsample(),; request.getX(),; request.getY(),; request.getWidth(),; request.getHeight(); ); ```; The script [here](https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html) uses this when exporting to include this information in the file name. If none of these methods seem like they would work for you, it would help if you describe a bit more what you need the final output for and what software you would be using next to read the images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388535578:520,mask,masks,520,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388535578,2,"['down', 'mask']","['downsample', 'masks']"
Availability,"As I mentioned (each time you brought this up :) ) the approach you have taken creates a dependency on `ImageDisplay` that I *really* do not want to be stuck with. It creates an awkward confusion between the GUI and core code that will be a maintenance headache, and would greatly complicate trying to implement a better design later. I added the alternative scripting methods that I linked to before precisely because you asked for it. Running that for a project is the solution I propose. It uses `ImageDisplay` internally (because it has to), but doesn't expose this publicly. Romain's comment wasn't a question, it seemed you had a solution you were satisfied with, and I received no reply to the changes I made for you except for 👍 so it remains very unclear to me what you want...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632627020:241,mainten,maintenance,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632627020,1,['mainten'],['maintenance']
Availability,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-606731627:661,avail,available,661,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627,1,['avail'],['available']
Availability,"As a bonus, here's how to write cores in parallel - this time as JPEGs:; ```groovy; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); getTMACoreList().parallelStream().forEach({core ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, core.getName() + '.jpg')); }); print('Done!'); ```. This should give a bit of a speedup. Hopefully some combination of this or the other script will help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-327535268:206,down,downsample,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-327535268,2,['down'],['downsample']
Availability,"Awesome @petebankhead, yeah it's the first time someone uses an ImageJ server with rotation so we were quite at a loss too. Noticing that it worked with the BioFormats server saved the user's project and helped narrow down the issue a bit.; Thanks so much for looking into it!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1138#issuecomment-1317589117:218,down,down,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/1138#issuecomment-1317589117,1,['down'],['down']
Availability,"B"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItems",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1742,Error,Error,1742,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['Error'],['Error']
Availability,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811,3,"['avail', 'down']","['available', 'downloads']"
Availability,"BTW, the C++ API of PyTorch has no such limitations when it comes to this kind of semantic segmentation, and we can easily use it from Java: https://github.com/bytedeco/javacpp-presets/tree/master/pytorch. There is some sample code in C++ available here: https://github.com/AllentDan/LibtorchSegmentation. @HGuillemet might have some sample code in Java to offer. However, I don't believe it supports algorithms like logistic regression and SVM...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518:239,avail,available,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518,1,['avail'],['available']
Availability,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:695,toler,tolerate,695,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726,2,"['avail', 'toler']","['available', 'tolerate']"
Availability,"Because I'm not very good at GitHub Actions. Which is also why I have to download the Linux stuff to make the tar.xz locally (and possibly Windows .zip? not sure if that's fixed), and why we end up with some packaged builds we never use (like the macOS .app).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1936081052:73,down,download,73,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1936081052,1,['down'],['download']
Availability,"Before doing that, could you check if there's anything is in https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html that could help?. I *think* the issue may be because there's no test for the event type in your current code - and so it could be fired on a mouse move event as well (with the middle button down). So I think you need to check for a pressed, released or click event (I forget which... this is a place were cross-platform stuff can be annoying). I've never used [`isStillSincePressed()`](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html#isStillSincePress()) because I don't discovered it recently, but perhaps it can also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857:332,down,down,332,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857,1,['down'],['down']
Availability,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:412,ERROR,ERROR,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['ERROR'],['ERROR']
Availability,"Both of these issues are now addressed in `v0.0.5`. For now, running _Add intensity features_ will _always_ result in a prompt to confirm which objects will be used - to help force more deliberate choices. Additionally, large regions will be automatically split into tiles. Provisional checks suggest the results are almost identical to the untiled measurements - although further tests are needed. Some small loss in precision is to be expected compared to the 'true' measurement without tiling (e.g. with Haralick features, were adjacencies across tile boundaries will not be computed), but this should be low... and better than QuPath hanging, or an out-of-memory error. Currently, the _implicit_ tiling of large ROIs for the purposes of avoiding memory errors does not make use of parallelization. Therefore it is still _not_ advisable to compute measurements across very large areas at high resolution. However, it is expected that this shouldn't often be needed, because:; 1. the most useful measurement for a large region is the average intensity, which can be computed at a low resolution with good accuracy, and; 2. measurements of texture (e.g. standard deviation, or Haralick textures) are rarely meaningful when computed over very large numbers of pixels, but rather are more normally computed individually for (explicitly-created) tiles generated within such an the area (e.g. using the _Create tiles_ command). Intensity measurements made for _separate_ objects (including tile objects) will be parallelized, as normal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/15#issuecomment-258995011:667,error,error,667,https://qupath.github.io,https://github.com/qupath/qupath/issues/15#issuecomment-258995011,2,['error'],"['error', 'errors']"
Availability,"Both of these issues should now be addressed in `v0.0.5`. Error messages are shown if no objects are selected, or if a region is selected which is particularly large.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/13#issuecomment-259152982:58,Error,Error,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/13#issuecomment-259152982,1,['Error'],['Error']
Availability,"Can anyone help me with any suggestions, please? I am not able to open the images although the project file is opening I am getting an error message: Caused by Unable to build ImageServer for file. Thank you,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-826477900:135,error,error,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826477900,1,['error'],['error']
Availability,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/752#issuecomment-866148194:12,error,errors,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194,4,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Can somewhat resolve item 2 by adding this:. ```java; 				ImageRow selectedImageRow = getSelectedImageRow();; 				refreshTree(selectedImageRow);; ```; to the end of `actionAddMetadataValue`, although this isn't a particularly robust way of doing it in case metadata are edited elsewhere",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1537#issuecomment-2139690675:226,robust,robust,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/1537#issuecomment-2139690675,1,['robust'],['robust']
Availability,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/633#issuecomment-719684705:315,error,error,315,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705,1,['error'],['error']
Availability,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/325#issuecomment-514589547:12,avail,available,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547,1,['avail'],['available']
Availability,"Closed due to lack of activity and because the import statement should address the original error. The need for better command line support remains, but this is the subject of other issues also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213#issuecomment-494365043:92,error,error,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-494365043,1,['error'],['error']
Availability,Closing this because the proposed fix is now available in v0.2.1. Feel free to reopen or create a new issue if a related problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320#issuecomment-648053675:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-648053675,1,['avail'],['available']
Availability,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1404,robust,robust,1404,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465,2,['robust'],['robust']
Availability,Closing this issue because the proposed fix is now available in v0.2.0-m10 - please feel free to open it if you find the problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/345#issuecomment-617734843:51,avail,available,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-617734843,1,['avail'],['available']
Availability,"Closing this with the note that I was able to use Simplify Annotations to prevent the error from occurring. As mentioned it only happened with script generated annotations, and even then only when creating them off of a downsampled ImageProcessor, followed by upscaling them back into annotations in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-595979672:86,error,error,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-595979672,2,"['down', 'error']","['downsampled', 'error']"
Availability,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/613#issuecomment-708516373:32,ERROR,ERROR,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Currently, you can do that via the workflow tab - assuming you've run it once before on that image. Or you can leave the window open when switching images - assuming they are the same type... bad things may happen if not, e.g. fluorescence to brightfield. Although that led me to see that bad things happen with this PR when the image type changes: QuPath isn't able to adjust and update the available options. So if I run cell detection for brightfield, then I can't use it for fluorescence within that QuPath session - because it will be stuck with the same available channels the first time it was run.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318:392,avail,available,392,https://qupath.github.io,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318,2,['avail'],['available']
Availability,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932330593:316,ERROR,ERROR,316,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying o",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1362,error,errore,1362,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['errore']
Availability,"Dear @Svidro ,. Many thanks for your suggestions. I am extremely sorry as I did not attach the original image to my previous post. I thought that you got everything with enclosed QPDATA files. I, here, give a ****download link** (below) of the original image.**; https://my.pcloud.com/publink/show?code=XZN1HC7ZCU8ImbiEUGShoj457lSYa7TCxtEy. **I have tried the following things as you suggested but could come up of the following issues:**. 1. I could not switch in-between diffient channels of colors as shown (comfortably) in the video. In other words, I could not check the _color deconvolution_ before estimating the vectors . 2. I wanted to get separate values for the number of cells with each color. But looks like, QuPath gives as a total number. Having them, is very important for me as . 3. In most cases, after _running_ the Positive Cell Detection, even some blue cells are not encircled, letting me assume that they were not counted probably. Image below:; ![capture](https://user-images.githubusercontent.com/44507241/50253977-ea821880-03b1-11e9-826e-bb092ba9b087.JPG). I admit that I am a newbie to QuPath. I apologize if you see these problems are because of very silly mistakes. . Many thanks for helping me out!; sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-448783885:213,down,download,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-448783885,1,['down'],['download']
Availability,"Dear Arnulf,. Thanks again for your reply. I'm glad that the brightfield/RGB `*.mrxs` files are working. I'm not certain, but since Zoom from MicroDimensions is Windows-only, I suspect it may be using the Windows-only software libraries provided by [Zeiss](http://www.zeiss.com/microscopy/int/products/microscope-software/zen/czi.html) and [3D Histech](http://www.3dhistech.com/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:378,down,downloads,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,2,"['avail', 'down']","['available', 'downloads']"
Availability,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:66,ERROR,ERROR,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,1,['ERROR'],['ERROR']
Availability,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:73,Error,Error,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,1,['Error'],['Error']
Availability,"Dear Pete,. I understand the problems with the Windows-only algorithms. Unfortunately, we do not have the resources at our institution to create software like that, even though some of our medical physicists may have the programming skills. In the meantime, I was able to load a smaller three channel RGB tiff exported from a *.czi multichannel fluorescence file. However, in my first attempts I could not get QuPath to identify any cells. I get an error message telling me that my image is not brightfield (which is true). Do I understand it correctly that QuPath is not (yet?) ready for the analysis of fluorescence images? Do you plan to implement this functionality? I think that fluorescence files provide some strong advantages with regard to image analysis. . Best regards,. Arnulf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259121186:449,error,error,449,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259121186,1,['error'],['error']
Availability,"Dear Pete,. thank you very much for your fast reply!. Regarding *.mrxs files, the problems occur only with multichannel fluorescence images. Brightfield images open without a problem. Here is an example:. ![brightfield_example](https://cloud.githubusercontent.com/assets/23238491/19998070/e2515342-a26a-11e6-8f3d-8c2746210dc1.jpg). Indeed, as we can see, OpenSlide is used to access the *.mrxs file. Regarding the fluorescence files, all of the requirements that you stated above are fulfilled for my files. QuPath opens them using ImageJ. When I use ImageJ (or in my case, Fiji) to open them directly, the behaviour is the same: access is only possbile at the most coarse resolution. Both *.czi and *.mrxs can be exported as tiff files from their viewers (ZEN2 and CaseViewer). The monochrome tiffs can be opened in QuPath. However, when I joined three of these monochrome files in an RGB file, my first attempt at opening it in QuPath failed. I am going to keep experimenting. However, I wanted to point out that the technology to open multichannel *.czi and *.mrxs files already exists because it is implemented in a free viewer application called ""Zoom v2.0.0"", available from MicroDimensions (https://micro-dimensions.com/zoom/). We have been providing some slides for them over the last years to test their algorithms. They might be interested in a scientific cooperation. We can also provide test slides (image data) via our file transfer system for you if you give me an e-mail address. Best regards,. Arnulf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258370511:1166,avail,available,1166,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258370511,1,['avail'],['available']
Availability,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407093698:75,down,downsampled,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698,1,['down'],['downsampled']
Availability,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527339421:672,mask,masked,672,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421,2,"['avail', 'mask']","['available', 'masked']"
Availability,"Did you change anything in the build script?. Specifically, I get the same errors as you if I change `useGPU = true`... which is one of the reasons why `useGPU = false`. I have not been able to replicate the problem on any platform where `useGPU = false`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633259796:75,error,errors,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633259796,1,['error'],['errors']
Availability,"Do you see any errors under *View &rarr; Show log*?; Does it happen with annotations that have been generated in m10, or only ones that have been generated earlier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619374419:15,error,errors,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374419,1,['error'],['errors']
Availability,"Does m11 run with all features? Specifically, does the *Wand* tool appear in the toolbar and does it work...?. QuPath is written so that if certain dependencies (including OpenCV) aren't available then the rest of the application should work, just with missing options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630584161:187,avail,available,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630584161,1,['avail'],['available']
Availability,"Does the View->Show log give you any information when this happens? . I am not sure in your case, but if you are running the full script I wonder if it isn't the cell detection rather than the classifier that is erroring out. I don't believe the classifier runs in tiles, it should apply to the entire image at once, and only after the cell detection part of the script is completed. Memory might be an issue there, though there used to be some possible edge cases with very small tiles (where the tile clips the edge of the tissue and a very tiny region is generated) causing problems. I usually was able to get around that by changing the Simple Tissue detection settings, as it was incredibly rare. The logs should help determine what is happening. You said randomly, so this means you can't reproduce it on any single slide running it twice? Are the images QuPath is accessing stored across a potentially busy or slow network?. As an aside, you are running both a classifier in the cell detection (Positive cell detection with three thresholds), and again with a trained classifier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355477217:212,error,erroring,212,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355477217,1,['error'],['erroring']
Availability,"Eventually I managed to create a new Linux download for [v0.0.6](https://github.com/qupath/qupath/releases/tag/v0.0.6) using OpenJDK and OpenJFX. Still, two troubles remain: one minor, one major. The minor trouble is that (at least on Ubuntu 16.04) the build process is not entirely seamless, and `jfxrt.jar` needs to be manually copied into the distribution at the end (perhaps because it's not included in OpenJDK, but rather only a symbolic link is made with installing `openjfx` with Synaptic?). The major trouble is that OpenSlide continues not to be distributed in a ready-to-run fashion (as mentioned [here](https://github.com/qupath/qupath/wiki/Installing-QuPath#linux)). Indeed, I'm not sure if it will work on anyone's machine other than the one I was using. It is likely clear that my Linux use and experience is limited. The suggestions of someone who is more familiar with this would be very welcome. I think one of the following is required:; - Inclusion of OpenSlide and all its dependencies, precompiled (in the same way as QuPath provides for Windows and macOS), or; - A method of ensuring the Java library path in the packaged version of QuPath includes all the places that would be required to find a local installation of OpenSlide. In the second case, the user would still be asked to download and install it... but if this step goes smoothly, it can be expected to work. I plan to investigate this more in the future, but it may take some time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-261056258:43,down,download,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-261056258,4,['down'],['download']
Availability,"Everyone's forum :). You might want to check out [this new blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) describing how to try out lots of new QuPath improvements early. Especially check out the bit about *Positive pixel count* (about half-way down the page), which describes now & improved outputs that the command can give.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-374165232:279,down,down,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-374165232,1,['down'],['down']
Availability,"Excellent, thanks - can confirm that; ```; ./gradlew clean run; ```; doesn't include the javadocs, but; ```; ./gradlew clean getJavadocs run; ```; does. And they are also included with; ```; ./gradlew clean jpackage; ```; Only minor comment is that `getJavadocs` doesn't seem a very gradle-ish task name and isn't so descriptive (use `gradlew tasks` to see all those that are available). What do you think of; ```; assembleJavadocs Copies the Javadoc jars to a directory for access within QuPath; ```; ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1518#issuecomment-2097819235:376,avail,available,376,https://qupath.github.io,https://github.com/qupath/qupath/pull/1518#issuecomment-2097819235,1,['avail'],['available']
Availability,"Fair enough. Thanks for looking in to this. It would be great if ""at least"" the annotations could be kept 👍 ; Seeing the java heap space error I thought it might be that... but I have been able to run larger batches/images in the past so I wasn't expecting to have such problem. Can't remember if I actually did a larger analysis using this version though... and I don't get an error when not running it slide by slide (outside batch mode).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493948324:137,error,error,137,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493948324,2,['error'],['error']
Availability,"Fantastic, that's a relief, thanks!; I saw those errors tile width/height too, only with MRXS files... but yes, they don't seem to cause trouble. For reference, this is what happened:; I recompiled OpenSlide for Mac back for v0.0.7, to address issues related to opening MRXS files with certain types of compression (possibly BMP or PNG). However, I appear to have accidentally included the previous versions of the library + dependencies in the Mac download, possibly because the machine on which I finally compiled the Mac version of QuPath for distribution had cached the original libraries, which had the same version number (since they traced back to the same version of OpenSlide). So v0.1.1 was the first download to actually contain the Mac OpenSlide updates intended for v0.0.7. And it turned out that those updates were missing a couple of required files, but which were available on my development machines... lulling me into a false sense of security that all was well. Anyhow, I've now repackaged OpenSlide + dependencies, added in the license notices for the additional required files, and bumped up the version number to 3.1.4_2 to make it clear which OpenSlide should be included in all future versions of QuPath compiled for Mac - regardless of machine. Outcome:; * OpenSlide included with the Mac distribution of v0.1.1 should be able to handle slightly more kinds of image than previous versions... but in the overwhelming majority of cases, it will look the same; * None of this matters for QuPath running on anything other than Mac; * I was never going to figure out there was a problem on my own, since it was working for me... so thanks for letting me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265679401:49,error,errors,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265679401,8,"['avail', 'down', 'error']","['available', 'download', 'errors']"
Availability,"First, draw a rectangle. Then select the area you want within the rectangle with the “Wand” tool (it will go out of the rectangle). Next, zoom in the image, hold down the ""Alt"" key and use the ""Brush"" tool to erase the area outside the rectangle",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-2046510611:162,down,down,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-2046510611,1,['down'],['down']
Availability,"Following up with my solution:. - The latest version of JPackage (Build 49) has renamed the `create-image` parameter to `create-app-image`, so this line needs to be changed accordingly to `params << 'create-app-image'`:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L415-L419. - Running the gradle build after doing this raised the ""Invalid Option: [--strip-native-commands]"" error, which I resolved by commenting out this line:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L439-L440. My understanding from [here](https://openjdk.java.net/jeps/343) is that `--strip-native-commands` is a jlink flag, and not a jpackage one?. Let me know if you have any questions!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/311#issuecomment-487145110:423,error,error,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487145110,1,['error'],['error']
Availability,"For now it was 2 times and luckily only 2 images (unfortunate within the same project). I think, it always happens when you use the Task manager to shut down the software, maybe that is something to be tested? I remember last time I also had to close the software with the Task manager because after half an hour it still did not respond.. . It would be awesome if indeed QuPath can discover the .bkp file and ask if this needs to be saved as the new data file, maybe indicating the date and time of the last back up to ask if you want to go back to this file or start from scratch to say so. But in general, this sounds like a good possible solution! Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640575237:153,down,down,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640575237,1,['down'],['down']
Availability,"For small TMA cores and small biopsies (*.vsi and *.ndpi files, H-DAB, RGB, 100 - 500 mb, small images with one core or biopsy per image) the simple tissue detection and Stardist script often worked through the entire project in batch mode, about 100 images, without issues. For whole slides image projects (100 mb - 3,5 GB images) it can do 0 -1 images before crashing and more often crashes on the gigabyte whole slide images, so some sort of memory trouble can indeed be a possible issue (the m12 Tensorflow Qupath build only allows 32 GB memory I see, even though 64 GB is available - any way of forcing it to expand that?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630737119:577,avail,available,577,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630737119,2,['avail'],['available']
Availability,"From the log, it looks like you're calling the script with `40770,35790` as the width and height parameters - which seems much too big, leading to a memory allocation error. Could it be that the bug is in whatever script you're using to make the request from QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079,1,['error'],['error']
Availability,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473504477:64,error,error,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477,8,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'ErrorCollector', 'error']"
Availability,"Generating the tissue annotation can be a little tricky, for fluorescent images I started sending a downsampled image to ImageJ and using blur+thresholding tools there to generate the initial annotation. It worked well as long as the staining/nuclear density was great enough. For the rest, QuPath should be easy as long as you have a multichannel image. What format are you using?; Depending on the sensitivity you need, QuPath automatically includes your red and green channel mean intensities, so as long as you expand the cytoplasm out far enough, you will get a measure of how much stain is within that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:100,down,downsampled,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,2,['down'],['downsampled']
Availability,"Github issues are really for bugs. Please post on the [community forum](https://forum.image.sc/tag/qupath) :). Also if you have a sample image for other people to download and a clearer description of what you've tried so far it'll be easier. Pete mentioned above some options, that's probably a good start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/305#issuecomment-874790067:163,down,download,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-874790067,2,['down'],['download']
Availability,"Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632495950:186,down,downloads,186,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632495950,1,['down'],['downloads']
Availability,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567689754:150,toler,tolerate,150,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754,2,"['error', 'toler']","['error', 'tolerate']"
Availability,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/648#issuecomment-739896593:120,down,downsample,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593,1,['down'],['downsample']
Availability,"Good! To answer your question:. ```QP``` is inside the 'core' modules, which means it doesn't know anything about the GUI. ```QPEx``` is a subclass of ```QP``` that lives inside the GUI module - which has access to all the core modules too. Therefore ```QPEx``` adds extra GUI-related methods (e.g. to request the QuPathGUI instance, or viewers) that aren't available within ```QP```. *Potentially*, if you only rely on ```QP```, you could run a script headlessly, and completely independent of the QuPath GUI. If instead you run your scripts from QuPath directly, then you may as well use ```QPEx```. It should do the same, but also give you access to more stuff if you need it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332441466:358,avail,available,358,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332441466,1,['avail'],['available']
Availability,Great to hear that you could reproduce the error.; we've tried under osx Sierra and osx el Capitan with the same results.; thanks again!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265532855:43,error,error,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265532855,1,['error'],['error']
Availability,"Great! Thanks for confirming, glad that has solved it. I'll keep in mind the error in case I see it again, and close this issue now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414691671:77,error,error,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414691671,1,['error'],['error']
Availability,"Great! Yes, I think we shouldn't increase the download by too much. My suggestion is to use a command line flag e.g. `-Pdocs=all` to activate this. Possible options:. * `all` - all javadocs, devs building locally may (rarely) want this; * `none` - don't include any javadocs; * `qupath` - jars that include `qupath` as the first element in the name only (should include extensions); * `default` - curated list of jars; I'd say `qupath` + JTS + ImageJ as a starting point. I think the default list should only add ~10MB or so. This also allows the gradle to be simplified and `mergedJavadocs` can be removed as a task (in preparation for a nicer javadoc viewer). **Note:** Currently, I can't build this PR fully with `./gradlew jpackage` because I get either. ```; The specified installation directory '/path/to/qupath/qupath-app/build/install/QuPath-0.6.0-SNAPSHOT' is neither empty nor does it contain an installation for 'QuPath-0.6.0-SNAPSHOT'.; ```; or (if I delete that directory); ```; Entry lib/qupath-gui-fx-0.6.0-SNAPSHOT.jar is a duplicate but no duplicate handling strategy has been set. Please refer to https://docs.gradle.org/8.7/dsl/org.gradle.api.tasks.Copy.html#org.gradle.api.tasks.Copy:duplicatesStrategy for details.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369:46,down,download,46,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369,2,['down'],['download']
Availability,"Great, thanks!. The API documentation would be good... although I'm not entirely sure where/how to arrange to get it hosted. I guess you may already have things set up with IntelliJ as described on the Wiki (if not, you probably should!), and through that there may be a way to generate javadocs... or at least browse the code directly. In moments of desperation when I'm relying only on QuPath's editor, I use Java reflection to get a list of methods. Here, for example, is a script to generate a list of all the methods in QPEx, with a little bit of cleanup to reduce redundancy:. ```groovy; import qupath.lib.scripting.QPEx. def objectMethods = Object.getMethods() as Set. def replacements = [; 'qupath.lib.scripting.QPEx.' : '',; 'qupath.lib.scripting.QP.' : '',; 'public static ' : '',; 'java.lang.': '',; 'java.io.File': 'File',; 'java.util.List': 'List',; ',': ', '; ]. def sb = new StringBuilder('Methods:\n'); for (m in QPEx.getMethods()) {; if (m in objectMethods); continue; def method = m.toString(); for (entry in replacements.entrySet()); method = method.replaceAll(entry.getKey(), entry.getValue()); sb << method; sb << '\n'; }; ; print sb; ```. One day I hope to get this documented better and available on the Wiki (like ImageJ's macro reference)...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332629803:1210,avail,available,1210,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332629803,1,['avail'],['available']
Availability,"Haha, I mean the ability to have access to a list! It has always been something I missed in more complex classifiers. . Thanks for the link, it has been a while since i used Weka, but I may give that a try the next time I want to trim down or adjust my input selection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424771491:235,down,down,235,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424771491,1,['down'],['down']
Availability,"Haha, I tried to do that too once! I never did pursue it though, since it only needed to be run once at the end of a project. The dirResults object is not a file path though, so manually selecting a directory means at least some of the downstream code needs to be rewritten. I will take another crack at it unless Pete gets to it first :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/268#issuecomment-467951358:236,down,downstream,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467951358,1,['down'],['downstream']
Availability,"Have you set qupath to use the available ram?. Den lør. 20. okt. 2018, 13:09 skrev simonesteffens <notifications@github.com; >:. > Hey Guys,; >; > could an image or annotation be to large for any analysis/computation?; > Because I tried to calculate my images on different computers but all of; > them stopped around 80% of the calculation.; >; > I talked to some IT-experts but they told me that these computer power; > (RAM, Processor unit etc.) should able to handle that.; >; > Anyone had that problem before?; >; > Greetings and thanks a lot.; > Simone; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/232>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL5LW98a8f0kSlN7mcHQxVGhUybwrks5umwRigaJpZM4Xx3eP>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/232#issuecomment-431572591:31,avail,available,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/232#issuecomment-431572591,1,['avail'],['available']
Availability,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630295536:75,down,downloadable,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536,1,['down'],['downloadable']
Availability,"Have you tried removing the Weka extension causing the error?. On Mon, Apr 27, 2020, 7:19 PM ajerusalmi <notifications@github.com> wrote:. > getting Failed to launch JVM error. Can open m8 without problems; > Thanks; >; > [image: image]; > <https://user-images.githubusercontent.com/62674450/80439704-1cc05600-88d5-11ea-95fe-ebbe661cc4ed.png>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/458>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AFQSV6L7W4UXZTAEQFZDAWTROY4LXANCNFSM4MSNUQHQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620339935:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620339935,2,['error'],['error']
Availability,"Hello @petebankhead, . Thank you for your quick consideration of the issue.; From what I have tested until now, it works fine. The number of characters in block comments does not throw the error anymore. and I can still run the scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176#issuecomment-1362564457:189,error,error,189,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176#issuecomment-1362564457,1,['error'],['error']
Availability,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-716174039:247,down,download,247,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039,2,['down'],['download']
Availability,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-757517752:117,down,downsampled,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752,3,"['down', 'mask']","['downsampled', 'mask']"
Availability,"Hello,; Thanks for the detailed and rapid reply. I have made some progress following your instructions and am now at a different error message. ERROR: Error at line 17: Cannot invoke method getServer() on null object; ERROR: Script error. at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:35); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117); at Script1.run(Script1.groovy:18); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:757); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:687); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:669); at qupath.lib.scripting.DefaultScriptEditor.access$3(DefaultScriptEditor.java:659); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:979); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). I should say that I wasn't able to copy libjep.jnilib as it doesn't exist on my system, instead it's called libjep.so. I don't know if that might be causing",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262778143:129,error,error,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262778143,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Here is another issue I ran into. Not entirely QuPath's fault because MS Excel on windows for some reason decided to capitalize the column with values ```True``` & ```False```. When I opened the text file containing TMA data and saved it with MS Excel missing TMAs were no longer flagged as missing!! . Changing both of this:; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1627; and,; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1713. to use ```Str1.equalsIgnoreCase(Str2)``` addresses the issue. i.e.; ```java; boolean missing = missingColumn != null && ""True"".equalsIgnoreCase(missingColumn.get(i));; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1292103430:56,fault,fault,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1292103430,1,['fault'],['fault']
Availability,"Here's another OpenJDK 15 issue; after building with OpenJDK 15, I get the following error message (on a Linux system):. ```; euler:~/qupath (master) $ build/dist/QuPath-0.2.3/bin/QuPath-0.2.3 ; Error opening ""/home/jdg/qupath/build/dist/QuPath-0.2.3/lib/app/QuPath-0.2.cfg"" file: No such file or directory; ```. This does not occur when the package is built with OpenJDK 14, so somewhere the path is getting messed up. . Best wishes,. Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-716706199:85,error,error,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-716706199,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hey @biovoxxel . > I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Problem is, the original images in QuPath are whole slide images, and rather large. [OS-2.ndpi for example](https://cytomine.com/collection/os-2/os-2-ndpi) is 126976 pixels wide. So first thing QuPath asks when doing an SVG export (with the image + overlay as background) is what downsampling factor should be applied to the original image. It's a necessary step, but what is not clear, is which factor would actually match some publication guidelines (for example, 300PPI + width of 170 mm for full page width figure [as defined here](https://cancerandmetabolism.biomedcentral.com/submission-guidelines/preparing-your-manuscript)). > Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. I agree with you, but the background bitmap embedded in the SVG document only needs to be as big as the physical size it will be printed at. Some reviews also impose a maximum file size for the SVG documents (e.g. < 20MB), so we can't just use a downsample of 1 or 2 and hope for the best. Then yes, anything vectoriel on top of the background image (lines, polygons, text...) just needs to be readable at the printed size and could easily be modified in Inkscape if not (fond size, linewidths...). Maybe I'm missing something (wouldn't be the first time), so let me know how you see this work. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665:409,down,downsampling,409,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665,4,['down'],"['downsample', 'downsampling']"
Availability,"Hey @zindy ,. Ok, I see. For such big images, I would agree that you have to down sample. I would try to stick to a factor divisible by two.; If you want to stick to the 300 PPI to theoretically have a pixel per printed dot (which is plain theory because dependent on printing device and final printing size) you could calculate it as follows (please check it again not that I made a mistake):. 17cm = 17cm / 2.54 cm/inch ~6.7 inches; At 300 PPI you would need an image width of 300 * 6.7 = 2,010 pixels minimally. Principally, you could divide your real original image width by this ~2010 pixels and you have the approximate down sampling factor. I would then use the closest factor, smaller than that and divisible by two to give it slightly more PPI.; So, if you have an original image width of 120,000 pixel, that would be an approximate factor of 120,000 / 2,000 = 60.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604913590:77,down,down,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604913590,2,['down'],['down']
Availability,"Hi @EgorBushmelev, I'll have a look at this but it might take a little time. The module itself looks tiny, but I'm not sure if including it brings in any extra services. In general I'm reluctant to include jdk modules in the distribution without a clear understanding of what they will be used for (especially if QuPath doesn't require them itself) - can you give any more details of this?. Is your extension already available under an open source license / will it be? If you can link me to the code then I'd probably understand the need better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639#issuecomment-726872071:417,avail,available,417,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-726872071,2,['avail'],['available']
Availability,"Hi @GiuseppeAntoniazzi, as indicated during issue creation, non-bugs are better for the forum. As an aside, it is also far more helpful to post the text of your error messages rather than a screenshot, as screenshots cannot be searched or copied from.; The error itself indicates that you have created objects with negative area and sounds like the sort of thing that happens with Warpy or transforming objects from another image resulting in the objects existing partially outside of the image area. I found [this forum post ](https://forum.image.sc/t/too-many-annotations-gives-me-data-export-error/81659/5?u=mike_nelson)when searching for the error. . You do seem to have a very large number of tiles, so if your tile size is close to a single pixel, that also might be causing problems.See this forum post. You do seem to have a very large number of tiles, so if your tile size is close to a single pixel, that also might be causing problems. Either way, this does not sound like a bug with QuPath, but more specific to your use case, and thus better placed on the forum.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1290#issuecomment-1679084114:161,error,error,161,https://qupath.github.io,https://github.com/qupath/qupath/issues/1290#issuecomment-1679084114,4,['error'],['error']
Availability,Hi @SikangSHU I'm closing this issue because you've also posted it at https://github.com/qupath/qupath/issues/221 and https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380. Please help us manage the demand for QuPath support by posting each question only once. The forum is the right place to ask so I've responded [there](https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285:143,error,error-exists-when-open-a-tiff-image,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285,2,['error'],['error-exists-when-open-a-tiff-image']
Availability,Hi @SikangSHU I've responded on the forum at https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-1000156683:70,error,error-exists-when-open-a-tiff-image,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-1000156683,1,['error'],['error-exists-when-open-a-tiff-image']
Availability,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/831#issuecomment-949332484:343,error,error,343,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484,1,['error'],['error']
Availability,"Hi @gianlucadirienzo my guess is that JPEG is probably the wrong format to share the files; QuPath works best with [pyramidal images](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html). I suggest asking whoever send the files if they can do so using a different format. If a JPEG is 100 MB, then it is probably much much larger when uncompressed. This would cause the error you see.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834#issuecomment-955668356:382,error,error,382,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955668356,1,['error'],['error']
Availability,"Hi @hubutui could you try building with `gradlew` (Gradle wrapper) instead? That's the 'proper' way to build QuPath - see https://qupath.readthedocs.io/en/stable/docs/reference/building.html. The part you link to in `build.gradle` isn't actually trying to specify the toolchain, but rather to recover the Java version for the toolchain that is already being used. When it comes to *specifying* the toolchain, it looks like the example you give is just copied from the code I wrote here :); https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.java-conventions.gradle#L11. That's what QuPath already uses, so you can already pass it a `-Ptoolchain=20` if you like. **However** I think the problem is that QuPath's build is locked to Gradle 7.5.1 because of ; * https://github.com/bytedeco/gradle-javacpp/issues/28. There hasn't been another `gradle-javacpp` release yet, and I don't want to switch to a snapshot - so I'm waiting for that before updating our build scripts. Since Gradle releases break stuff pretty often, I suspect other changes will be needed. Also, older Gradles can't build using toolchains for newer Javas and Java 20 wasn't around when Gradle 7.5.1 was released - so you're probably stuck building QuPath v0.4.x on Java 17-19. But using Gradle wrapper avoids most of those problems, as long as you use a compatible toolchain version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346:293,recover,recover,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346,1,['recover'],['recover']
Availability,"Hi @ipaine01 this sounds like the issue reported at https://forum.image.sc/t/bug-channel-name-changed-when-changing-color/95010/6. If so, I have already fixed it at https://github.com/qupath/qupath/pull/1508 and the fix will be available in the next QuPath release. In the meantime, the workaround is to double-click on the channel (rather than clicking the color box) since this will allow you to choose a custom color in a different way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988:228,avail,available,228,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988,1,['avail'],['available']
Availability,"Hi @kaizen89 ,. Git issues are really for bugs, please use the forum to ask questions/help with QuPath: https://forum.image.sc/tag/qupath (plus you'll get more visibility there and more chances to get loads of answers to your questions). I'll answer here for future visitors that are looking for a similar help anyway. ; You can _Run for project_ this little script, which will save a factor-10 downsampled `tif` image of the currently opened image:. ```; // Get current server; def server = getCurrentServer(). // Write the full image downsampled by a factor of 10; def requestFull = RegionRequest.createInstance(server, 10). // Create dir and image file; def imageName = getProjectEntry().getImageName(); def path = buildFilePath(PROJECT_BASE_DIR, ""downsampled_images""); if (!new File(path).exists()); mkdirs(path). // Write image region; writeImageRegion(server, requestFull, buildFilePath(path, GeneralTools.getNameWithoutExtension(getProjectEntry().getImageName()) + "".tif"")). print ""Done!""; ```. For more info about this, check out the official docs [here](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html). It's full of answers (partly including this one) and good tips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-747467234:395,down,downsampled,395,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-747467234,2,['down'],['downsampled']
Availability,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-744399347:116,error,error,116,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347,8,['error'],"['error', 'errors']"
Availability,"Hi @oharismendy,. I've tried on some of my svs images but it seems to work fine.; What error message does QuPath show whenever you try to open the slide label?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731358458:87,error,error,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731358458,1,['error'],['error']
Availability,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554797379:15,error,error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379,3,['error'],['error']
Availability,"Hi @petebankhead, do you know how to modify the script to export every file in a project to a jpeg with a downsampling factor of 10?; Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-747453397:106,down,downsampling,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-747453397,1,['down'],['downsampling']
Availability,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996226418:246,Down,Download,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418,4,"['Down', 'Repair', 'down', 'repair']","['Download', 'Repair', 'download', 'repair']"
Availability,"Hi @petebankhead,. I just tried . ```groovy; objects_to_save = getAnnotationObjects(). def out_muscle_path = getCurrentImageData().getServer().getPath() +'_muscle_objects'. println(out_muscle_path). new File(out_muscle_path).withObjectOutputStream {; it.writeObject(objects_to_save); }; ```. and just got . ```; ERROR: Error at line 272: file:\network\path\to\the\file.ome.tiff_muscle_objects (The specified path is invalid); ```. Anything I can improve to make it work ?. Thanks :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/289#issuecomment-476099497:312,ERROR,ERROR,312,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-476099497,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:252,down,download,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470,2,['down'],['download']
Availability,"Hi @vatempeli . I can replicate the bug if I delete one of the values in the *Create thresholder* dialog, and then press one of the associated up or down arrows. The solution is to type a valid number instead. Then the arrows should work. If that's not the issue you're seeing, I'd need more details about *exactly* what steps you used. I'd also need the full log message (the top is cropped off in the screenshot, so it misses the most important information).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/988#issuecomment-1145813614:149,down,down,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/988#issuecomment-1145813614,1,['down'],['down']
Availability,"Hi @zindy I'm afraid this can't be included, as it breaks the menus on the Mac. In fact I've had to stay away from `CustomMenuItem` almost entirely for that reason (it's ok in popup menus). The problem is that QuPath uses the system menubar where possible. You can change this in the preferences, but it's on by default and that means that the app feels a lot more like a native one; on the Mac it means the menubar at the top, rather than anchored in the window. The downside on the Mac is that icons don't appear, and `CustomMenuItem` isn't supported. When I try this PR it causes the text of the recent menu items to disappear entirely. It reappears if I turn off the system menubar option... but then blocks me from ever turning it on again. I can't check it on Linux right now, but I suspect there might also be issues. Re. the separator, I can see an argument for changing it - but I'd tend towards leaving it as it is. My thinking is that it really represents the end part of the URI, so the slashes should be forward. Additionally, I'd encourage the use of forward slashes in paths for QuPath scripts - even when written in Windows - since they work consistently, while users need to know to escape backslashes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1145#issuecomment-1319606359:468,down,downside,468,https://qupath.github.io,https://github.com/qupath/qupath/pull/1145#issuecomment-1319606359,1,['down'],['downside']
Availability,"Hi Adam, the problem is access to the images - for which I can see you're using a custom extension, and not something that's part of QuPath itself. I got an email about this issue a while back; the conclusion then was that if you can access the .svs image files directly, rather than via the extension, the problem should go away. I'll close the issue here because it isn't really within QuPath itself. If you can send me an email (or track me down on ResearchGate, LinkedIn, Twitter or elsewhere) then I can discuss it further there. The missing annotations thing is a bit of a mystery, and may or may not be connected. If you can find a way to reproduce it please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/174#issuecomment-390186531:444,down,down,444,https://qupath.github.io,https://github.com/qupath/qupath/issues/174#issuecomment-390186531,1,['down'],['down']
Availability,"Hi Benjamin, the; ```groovy; guiscript=true; ```; line has to be the *very first line* in the script. Nothing else (even a comment) is allowed above it. This is a rather hackish, QuPath-specific trick to ensure that the script is run on the one JavaFX thread that is allowed to interact with the GUI. Otherwise, any attempt to do anything affecting the GUI directly results in the kind of errors you're seeing. There's an example of its use [here](https://gist.github.com/petebankhead/6f73a01a67935dae2f7fa75fabe0d6ee). Without the guiscript trick, you'd need to wrap the contents of the script in something like this; ```groovy; javafx.application.Platform.runLater {; // Everything else here...; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332887649:389,error,errors,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332887649,1,['error'],['errors']
Availability,"Hi Benjamin,. Great! Glad it works, thanks for letting me know. Regarding including the extension by default, that would definitely be handy. It should also be quite easy technically (thanks to Maven), but until now I've been a bit apprehensive about what requirements it would place on QuPath in terms of the GPL... i.e. providing source code, licenses for Bio-Formats and all its dependencies etc. So while I'm still learning about that side of things, I thought that requiring a separate download direct from the OME website makes things simpler in one way, even if it's a bit inconvenient. I'll give it a bit more thought though, and hopefully will be able to come up with a more streamlined way to install it at some point. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266709923:491,down,download,491,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266709923,2,['down'],['download']
Availability,"Hi Benjamin,. It should work already. If you download the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension), then so long as you add the latest Bio-Formats 5.3.0 then you should get CZI support immediately. I've tried it with a couple of images and it seems to work well. I have some plans to update the Bio-Formats extension to incorporate [memoization](https://www.openmicroscopy.org/site/support/bio-formats5.3/developers/matlab-dev.html#improving-reading-performance) to see if it improves performance... although it shouldn't be needed for CZI support in general. Please let me know if it works for you as well, or if you find any problems. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266703994:45,down,download,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266703994,1,['down'],['download']
Availability,"Hi Georgia,; Could you try using _Edit &rarr; Reset Preferences_?; If that resolves the issue then I think the QuPath isn't able to find some path to scripts. I'm not sure why (maybe a directory is missing or located on a server that isn't accessible?) and it shouldn't cause an error like this so I'll investigate anyway on the QuPath side.; If the doesn't resolve it then I'm not sure what the problem could be.... does it happen with all projects or just one?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373#issuecomment-549758228:279,error,error,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/373#issuecomment-549758228,1,['error'],['error']
Availability,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753634843:472,mainten,maintenance,472,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843,2,['mainten'],['maintenance']
Availability,"Hi Mario,. Thanks for letting me know. I have tried several MRXS images on v0.1.1 using Mac and it seems to be working here, so it would be good to know a bit more about the problem you are seeing. * Are you running QuPath on Windows/Linux/Mac?; * When it doesn't work, do any errors appear - or do you see any errors logged under *View &rarr; Show log*?; * Do you know if v0.1.0 works?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265467061:277,error,errors,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265467061,2,['error'],['errors']
Availability,"Hi Pete!; Reopening this as it's very similar and still happening in QuPath 0.5.0; A user had an annotation inside which there was another annotation filled with detections (over 5000); When runing ""Delaunay cluster features 2D"" we ran into; ```; Error running plugin: java.util.ConcurrentModificationException; java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:177); at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.ConcurrentModificationException; at java.base/java.util.ArrayList.checkForComodification(Unknown Source); at java.base/java.util.ArrayList.equals(Unknown Source); at java.base/java.util.WeakHashMap.matchesKey(Unknown Source); at java.base/java.util.WeakHashMap.get(Unknown Source); at java.base/java.util.Collections$SynchronizedMap.get(Unknown Source); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.getNameMap(NumericMeasurementList.java:142); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.close(NumericMeasurementList.java:133); at qupath.lib.measurements.NumericMeasurementList$FloatList.close(NumericMeasurementList.java:352); at qupath.opencv.features.DelaunayTriangulation.addClusterMeasurements(DelaunayTriangulation.java:466); at qupath.opencv.features.DelaunayClusteringPlugin$DelaunayRunnable.run(DelaunayClusteringPlugin.java:215); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1182#issuecomment-1876997601:247,Error,Error,247,https://qupath.github.io,https://github.com/qupath/qupath/issues/1182#issuecomment-1876997601,1,['Error'],['Error']
Availability,"Hi Pete, . I have annotations that are created by the tiles to annotations plugin. So I have 3 different classes and a lot of annotations of the same class. ; Then i select annotations by class 1 first, merge them and then i want to go on by selecting all annotations with class 2. ; That is the point when it fails. Running all steps within one run does not work. . Yes, I use windows. ; And no, the above script with rectangles and ellipse does not work on my laptop. It has Windows 10. . Svidros recommendation (thank you Svidro) did also not help. . I get a script error: Line 27 is my second ""mergeSelectedAnnotations();"" after ; resetSelection();; selectObjects { p -> p.getPathClass() == getPathClass(""NAMEofCLASS"") };. ERROR: Error at line 27: null. ERROR: Script error; at java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:742); at java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1042); at qupath.lib.scripting.QPEx.mergeAnnotations(QPEx.java:320); at qupath.lib.scripting.QPEx.mergeSelectedAnnotations(QPEx.java:353); at qupath.lib.scripting.QPEx.mergeSelectedAnnotations(QPEx.java:309); at qupath.lib.scripting.QPEx$mergeSelectedAnnotations$0.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:198); at Script132.run(Script132.groovy:28); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354857398:569,error,error,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354857398,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hi Pete, ; it happend two more times and I found in the log file, that the chosen channel 4 does not offer information for celldetection. After that QuPath switches automatically into channel 1. But Cell detection errors happen. Maybe because the switch is to slow?. You can see the nature of the cell detection errors in the screenshots. It happens, that QuPath copies celldetections form one part of the image into another one. I marked that in the screenshot above with the red polygons. . I changed the script using directly channel 1 instead of channel 4. ; Now it seems like not to happen anymore. I keep you updated. Since I changed the channel, I analysed only two more images. . The script uses fluorescence type on a DAB only stained jpg image for watershed cell detection. ; That seems to make no sence in the first place. But I found out by accident, that it allows cell detection in white areas if nuclei are not stained at all. ; This is very useful for many applications. . Is there any argument against this way for image processing of a brightfield image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370400288:214,error,errors,214,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370400288,2,['error'],['errors']
Availability,"Hi Pete, ; yes indeed. It works if pixel size information is available. . I work with jpg´s without pixel size information at the moment. . Thank you for your explanation!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/154#issuecomment-371119105:61,avail,available,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/154#issuecomment-371119105,1,['avail'],['available']
Availability,"Hi Pete, and thanks for putting us in the loop!; It is true that the` RegionRequest` bits are a bit verbose, and any ease on that part would be welcome. . The proposed changes will have little effect on our scripts, as most calls are for `IJTools.createPathImage()` in any case... Concerning Warpy, and other extensions, we are happy to modify them and to update them no problem, and make sure to freeze the previous versions. On a personal note, breaking changes let us keep an eye on scripts that are still being used (often for projects that have little to do with the original requirements), so we kind of see it as a good thing when people come to us because something ""no longer works"". Helps us make sure that not too many weird things are being done with our scripts :) . I am pinging @rdornier, for completion, as he was working on the OMERO-RAW part we have here and might need to make some changes there, if we keep that extension after the 0.4 update. . One argument for making more intensive changes, without too much backwards compatibility is that it really forces us to keep up with the new developments, rather than let it linger on until it's too late. So I'm more in favor of ""breaking"" than keeping full backwards compatibility. Though admittedly, our user base is not as large as yours, so we won't see as much of a tidalwave... > include this in QuPath v0.4.0 (hopefully later this month). Awesome. > remove the default implementation of readRegion in v0.5.0, forcing any subclass of ImageServer to be updated to work... but still allowing scripts to use readBufferedImage, with the deprecation message logged. OK for us, though if the scripts end up breaking, this would not be a problem, kind of a nice extra way of announcing that things have changed. > remove readBufferedImage later, e.g. in v0.6.0. Not in v0.5.0 already? . Thanks again for the discussion! Looking forward to notes and comments from others!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547:785,ping,pinging,785,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547,1,['ping'],['pinging']
Availability,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486769907:76,error,error,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:251,avail,available,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,7,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'errors']"
Availability,"Hi Pete,. . thank you so much for the new versoin, it works perfectly with my hp spectre 360 and the hp tilt pen!. . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. . Once again thank you so much!. . Yours,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 31. Juli 2018 11:10; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with Step by step guide) you should end up with a runnable version of QuPath, with all the different components and dependencies. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-409255073> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t63nFYvKbsHb5pvIvHf0JgJLMPRaks5uMHMygaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9tyO3hUoiEJIDsuFGimLqg7M8qJCfks5uMHMygaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410879743:498,down,down,498,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410879743,2,['down'],['down']
Availability,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-409252791:435,down,down,435,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791,1,['down'],['down']
Availability,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414685806:578,down,down,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806,4,"['down', 'error']","['down', 'download', 'error']"
Availability,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753650048:291,mask,mask,291,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048,4,"['mainten', 'mask']","['maintenance', 'mask']"
Availability,"Hi Pete,. I tried your code from your blog regarding creating binary masks: https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy. It works perfectly smooth and would save me lots of work. There's just one thing that gives me a bit of trouble: The binary masks are not embedded in the whole image, meaning if I read them in somewhere else, I just get the mask according to those squared little images but I don't know where exactly they are located in the whole image that I'm annotating (unless there's something I'm overlooking right now). Could you tell me how to modify your code from the blog in order to save the binary masks embedded in the whole image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388339764:69,mask,masks,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388339764,4,['mask'],"['mask', 'masks']"
Availability,"Hi Pete,. I'm running QuPath under Mac. We replicated the issue on 2 machines. Version 1.0.0 works fine, too.; Server Type: OpenSlide. V1.0.1. Error in log is: Could not load OpenSlide native library (followed by a lot of Java errors); Server Type: ImageJ server. Cheers,; Mario",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265471212:143,Error,Error,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265471212,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hi Pete,. I’ve attached the classifier file. Thanks very much for your help,. Cam. From: Pete [mailto:notifications@github.com]; Sent: 22 March 2018 15:07; To: qupath/qupath <qupath@noreply.github.com>; Cc: Camilla Coulson-Gilmer <>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] loading classifier error (#160). I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that might affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the .qpclassifier file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the QuPath user forum on Google Groups<https://groups.google.com/forum/#!forum/qupath-users> I can contact you directly. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/160#issuecomment-375339965>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Aj60nFu_XkbrWH1Xr6vaENeGtItS4XCuks5tg74MgaJpZM4S3J1c>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375346429:318,error,error,318,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375346429,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-637489171:698,down,downloads,698,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171,1,['down'],['downloads']
Availability,"Hi Pete,. Thank you for your reply. I attach another video which goes back in time to find which version was last able to open the image in question. In short, it's 0.3.0, but the video serves as evidence that I checked them correctly. I will rerun the tile extraction using QuPath 0.3.0 tonight (as opposed to 0.3.2, which is the one that failed). I hope this new information helps. When I say the code fails on one image, but works if I rerun it, I'm really not joking. It is super weird. I was thinking of putting it inside a try and except statement and giving it three or four goes before accepting failure because it never seems to fail on the same image twice in a row. I'd like to try building from source out of curiosity. I will also ask my PI if I'm allowed to get the image to you, if you'd like to try it for yourself?. https://user-images.githubusercontent.com/44713405/156409401-178cd9aa-81b1-4c2d-b76a-4bc8965f394c.mp4. Best,. Jim",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057152300:604,failure,failure,604,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057152300,1,['failure'],['failure']
Availability,"Hi Pete,. That's very helpful, thanks a lot ! It will make my analysis way faster. Sincerely,. GOEPP Julie; Manager of the Primary Airway Cell Biobank (PACB); Cystic Fibrosis Translational Research Center (CFTRc)<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>; McGill University - Department of Physiology; McIntyre Building, Room 1012; 3655 Promenade Sir William Osler; Montreal – Qc – Canada – H3G 1Y6; (514) 398-4323 (ext #2 or 3); PACB Website<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>. ________________________________; De : Pete <notifications@github.com>; Envoyé : 21 juin 2018 11:23:17; À : qupath/qupath; Cc : Julie Goepp, Ms; Author; Objet : Re: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). There are a few options:. * Get the measurements from Measure → Show annotation measurements, copy them into a spreadsheet and add them up there; * When you're drawing with the Brush tool (or the Wand might be nicer, if you have good contrast between the purple stain and surroundings), hold down Shift to append to an existing annotation - if you're pressing Shift, different regions can be discontinuous but still counted as one (similarly, you can hold down Alt to use the Brush or Wand and subtract regions); * Select all the annotations (either in the Annotations pane on the left, or by alt-clicking on them with the Move tool selected in the main image), right-click on the image and choose Annotations → Merge selected annotations. Hopefully one of those helps!. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/179#issuecomment-399142573>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AmmAR_KTr2VFQD77eEVrU9ppSThbe9tKks5t-7pkgaJpZM4UyRk4>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399149480:1081,down,down,1081,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399149480,2,['down'],['down']
Availability,"Hi Pete,. thanks for your answer. I want to learn all functions of QuPath. I like ; your documentation a lot. Its well done work. Do you develop QuPath all alone by yourself?. Another question: is there a log file, QuPath is writing, that can help ; you to track and find the reason for bugs and system crashes?. We did that with our software in the past. It is very helpful. Best. David. Am 23/01/2017 um 21:44 schrieb Pete:; >; > Thanks for reporting this. I have not been working with CZI images ; > myself, but I recently received one example image with this problem. ; > Unfortunately, I have not yet been able to identify the exact cause, ; > beyond the fact that too much memory is used. Because the image is not ; > being read by QuPath directly (but rather Bio-Formats) it is a bit ; > harder for me to track down where exactly the problem lies. However, I ; > will continue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; G",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:818,down,down,818,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,2,['down'],['down']
Availability,"Hi Pete,. there's no much else I can do on this for now. It's ready to be tested by someone else in case I missed anything, and I don't have a mac to test on so I just can't guarantee this will work on all platforms. Also, the code is probably over-annotated and over-verbose on the console side, but that's just so that you can check what's going on in case there are issues I didn't notice myself. Once okayed, the code can be both toned down and cleaned up :-). If this is too much to test before the new release, we can reconsider this change for later. In fact, for this to be complete, I would also need to document my change (wouldn't be fair to let *you* do it if I wrote the feature) and add a middle button to your ""input viewer"". Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231:440,down,down,440,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231,1,['down'],['down']
Availability,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:62,error,error,62,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['error'],['error']
Availability,"Hi Pete,; I really appreciate your fast reply and your support.; As a non-code-speaking researcher I have found qupath relatively easy to navigate, although there is a degree of trial-and-error involved.; I have implemented your suggestions and it seems to have got around the problem. My main issue is that I need more memory on my computer for the processing that I am doing (4GB RAM is not enough).; Thanks again,; Chris. From: Pete [mailto:notifications@github.com]; Sent: Monday, 8 January 2018 6:19 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Christopher Rowe <Christopher.W.Rowe@uon.edu.au>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] PositiveCellDetection and Classifier fails (#130). It sounds like a memory issue to me too, although I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:. // Print the current memory situation. def runtime = Runtime.getRuntime(). double scale = 1.0/1024.0/1024.0. print 'Max memory (MB): ' + (runtime.maxMemory() * scale). print 'Total memory (MB): ' + (runtime.totalMemory() * scale). print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache. javafx.application.Platform.runLater {. getCurrentViewer().getImageRegionStore().cache.clear(). System.gc(). }. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355877016:188,error,error,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355877016,2,['error'],['error']
Availability,"Hi Pete. I tried ImageJ earlier to no avail same issue with the pink overlay, looks like a bioformat issue, . here is a link to the file if you would like to have a look. I will try and get in touch with the guys up at Dundee regarding this issue . https://drive.google.com/file/d/1-zEYM58GxPxk5ldECU3LU-A4ZpSMVqJd/view?usp=sharing. Mustafa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358757127:38,avail,avail,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358757127,1,['avail'],['avail']
Availability,"Hi Pete:. Thanks so much for your helpful comments!. I am a veterinary pathologist working with novel immunotherapeutic approaches to cancer treatment. We use in situ hybridization extensively for target discovery and to identify target + cells within our xenograft models. In addition to measuring a reduction in xenograft size via calipers, I am interested to use QuPath to document a reduction in the number of ISH target + cells / unit area of the xenograft. It would be incredibly helpful to have a ""learn by example"" approach to speed the task. Maybe you would select ISH- stromal cells, ISH+ stromal cells, ISH- tumor cells and ISH+ tumor cells, etc. as annotations and then run the Classifier?. I am also involved in gene therapy experiments in which we are attempting to knock down mRNA expression in specific cell populations in vivo. I would like to use QuPath to identify the cell population using annotations, then measure the amount of ISH signal per cell in treated vs untreated animals. In this case, rather than eliminating the cells of interest, we are attempting to demonstrate a reduction in ISH signal per cell. Thus, simply designating cells as ""positive"" or ""negative"" will not suffice. Rather, using the script you wrote above would be helpful to show that you have a reduction of cells listed as 4+ and 3+ and an increase in cells listed as 0 or 1+. Alternatively, if you could calculate an ""H score"" based upon a 5-point scale (negative, 1+, 2+, 3+, 4+), that would be a great way to compare between groups. . I think the intersection between pathology and artificial intelligence / machine learning is fascinating. I wonder if it would be feasible to learn Groovy so I can write my own scripts? . Thanks again!. Jim",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368345195:786,down,down,786,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368345195,2,['down'],['down']
Availability,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:101,error,error,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,1,['error'],['error']
Availability,"Hi Peter, . Thank for the very complete message! I'll go and implement this now and submit it to see if it's to your liking. Right now I have placed my version of the ImageJMacroRunner in our QuPath, so that I could process the images I am receiving. > Furthermore, it might be prudent to take parallelization into account, and the result returned by PathPrefs.getNumCommandThreads(). I am not sure how you want to address this, each command thread might take an image of a different size, and these threads to not talk to each other. In a case like this, it would make more sense to find a way to gracefully show some sort of out of memory error in case this happens. > Currently you can use Objects → Create full image annotation. Perfect, then you're right, no need to send the whole image by default if it's just one command! I was making a RectangleROI with the dimensions of the image server in my script...; [EDIT] Hmm.. Actually I just tested that last one and preferred my way, as I do not need to add the annotation to the hierarchy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356863236:641,error,error,641,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356863236,1,['error'],['error']
Availability,"Hi Svidro,. thank you very much for your suggestion. I renamed the file you attached (TMA.txt) to a .qpdata file giving the same name of my image (1.qpdata). Then, I opened the 1.qpdata by double clicking, but I found the following two error messages: ""Error invoking method"" and ""failed to launch JVM"". Could you suggest me how to use the qpdata file?. thank you in advance for your help. best regards. ________________________________________; Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:236,error,error,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Tobias,. Everything in the stack trace relates to JavaFX - so I don't see anywhere where QuPath would be able to catch the error and do anything about it. A similar error was reported as a JavaFX bug but is apparently resolved [here](https://bugs.openjdk.java.net/browse/JDK-8095826). I'll leave the issue open for a while in case any new info comes to light, but since I don't have a Dell Active Pen to test with, and it doesn't _seem_ to be a problem in QuPath itself, I'm not sure whether anything can be done about it on the QuPath side. (If you could write a minimal JavaFX application that replicates the problem then it could be submitted as a JavaFX bug)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549435406:126,error,error,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549435406,2,['error'],['error']
Availability,"Hi again! I finally went and edited the changes into my code in Eclipse, and while the channel option shows up and does not cause any errors, I am not seeing the channel change have any effect on the result. Has anyone else tested this and had it work? I am not sure if I am doing something wrong or missed something. I tried it with a few files from the OpenSlide site, like Mirax2-Fluorescence-1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323671758:134,error,errors,134,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323671758,1,['error'],['errors']
Availability,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:833,ERROR,ERROR,833,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"Hi! I was just considering this problem, and I was wondering if you have tried splitting the image into two as a possible work-around?. There are multiple problems with this, but... one thing to try is:; 1. Get Pannoramic Viewer (Caseviewer does not do this) from 3DHISTECH.; 2. Export your image twice, and select only 3 of the 4 channels each time, with one different between the images.; 3. Import both images into QuPath, calculate your values, then recombine the images at the end. Since your DAPI channel should be the exact same, the cells generated should pair 1 to 1, and we even have XY coordinates now! Another downside though is that Pannoramic Viewer only exports .mrxs files in JPEG PNG and BMP, not JPEGXR, so you might lose some information there if you took the images in another format, or your files might end up being huge. Please let me know if this works for you! I may end up trying it some day...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/49#issuecomment-278233145:622,down,downside,622,https://qupath.github.io,https://github.com/qupath/qupath/issues/49#issuecomment-278233145,1,['down'],['downside']
Availability,"Hi, I test in Mac OS 10.13.3, I find log with errors:. ERROR: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif; at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:111); at loci.formats.FormatReader.setId(FormatReader.java:1397); at loci.formats.DelegateReader.setId(DelegateReader.java:300); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:677); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1156); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1111); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:1025); at qupath.lib.images.servers.BioFormatsImageServer.<init>(BioFormatsImageServer.java:234); at qupath.lib.images.servers.BioFormatsImageServer.<init>(BioFormatsImageServer.java:198); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:46,error,errors,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"Hi, I tried to use openslide to show Tumor_005.tif 1.49G in command line, and errors:. OpenSlide('/Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif'); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/anaconda/lib/python3.6/site-packages/openslide/__init__.py"", line 154, in __init__; self._osr = lowlevel.open(filename); File ""/anaconda/lib/python3.6/site-packages/openslide/lowlevel.py"", line 174, in _check_open; ""Unsupported or missing image file""); openslide.lowlevel.OpenSlideUnsupportedFormatError: Unsupported or missing image file; ; It is very strange and seems opensilde cannot work in my macbook",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371990019:78,error,errors,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371990019,1,['error'],['errors']
Availability,"Hi, ah, silly error on my part. Thanks. . Ok, so now the imports seem to work, but something isn't connecting right for the jep section of the script. ```. INFO: Mean red (from Java): 86.81525; INFO: Mean green (from Java): 72.492275; INFO: Mean blue (from Java): 68.141675; INFO: java.lang.UnsatisfiedLinkError: no jep in java.library.path. ```. I tried the script you sent and received:; ```. INFO: Current image data: ImageData: Fluorescence, IMG_5_11_sq; INFO: Current image server: ImageJ server: /home/bl/Documents/IMG_5_11_sq.png (IMG_5_11_sq.png). ```. I should say that I think jep is installed ok, though I have only played with for a second this morning. But I can start jep, and do the basic test on the jep git Getting Started page (the python to java one).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262781834:14,error,error,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262781834,1,['error'],['error']
Availability,"Hi, if an extension is written in Java (not Javascript) then it would be possible to make it work like it's a built-in part of the software, e.g. with menu items to import/export the annotations. Then it could potentially be included in QuPath as well. I agree it would be useful, although I do have two hesitations...; * The kinds of annotations supported by ImageScope and QuPath don't quite match, and not all regions that could be drawn in ImageScope could be shown in QuPath, and vice versa (although rectangles should be fine); * I'm not aware of any publicly available specification for the XML used with ImageScope. The second one is maybe more important. I'm apprehensive about trying to add built-in support for these kinds of annotations without a specification.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/128#issuecomment-354851520:566,avail,available,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/128#issuecomment-354851520,1,['avail'],['available']
Availability,"Hi, joining a bit late.... part of one of the suggestions above contained:; ```groovy; getDetectionObjects().parallelStream().forEach({Polygon ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, Polygon.getName() + '.jpg')); }); ```. If you want to keep that kind of concise way of looping, `eachWithIndex` might help. The corresponding part might look something like this:; ```groovy; getDetectionObjects().eachWithIndex {pathObject, index ->; def img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, pathObject.getROI())); def name = pathObject.getDisplayedName() + '_' + index + '.jpg'; ImageIO.write(img, 'JPEG', new File(dirOutput, name)); }; ```. I also used `getDisplayedName()`; if no name has been set, this will try to come up with something else useful for that object (e.g. the classification). And I added `def`, which you don't really need but it keeps the variables local (otherwise you could likely access them after the loop).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346934805:213,down,downsample,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346934805,2,['down'],['downsample']
Availability,"Hi, yes I'm afraid the error is related to memory and unfortunately 4GB is probably not enough to do much analysis with QuPath. For browsing and annotating images it should be ok. Nevertheless, you might be able to get further if you adjust the memory settings and then restart QuPath for them to take effect - there is some information [here](https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits). The above link also contains instructions for how to reduce the number of things QuPath does in parallel, which can reduce the amount of memory needed for processing (at the cost of things taking longer to run). In this situation, it would be best to run QuPath with as few other applications as possible open on your computer at the same time. For the specific example of getting the *Estimate stain vectors* command to work, you can also try selecting a smaller rectangle in your image, as described [here](https://github.com/qupath/qupath/wiki/Preprocessing#find-a-representative-region).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55#issuecomment-285868226:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/55#issuecomment-285868226,1,['error'],['error']
Availability,"Hi,. Congratulations for QuPath v2-mx series, amazing work!. Working with .ndpi files, ""No label available"". It would be useful to see the label in QuPath, e.g. when working with large collections of images from different experimental conditions, errors can easily occur when renaming the files after scanning, and being able to view the label would be valuable to detect possible errors, while at the same time adding an alternative to only relying on the file name for slide identification. Kind regards,; Carlos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/40#issuecomment-622099365:97,avail,available,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/40#issuecomment-622099365,3,"['avail', 'error']","['available', 'errors']"
Availability,"Hi,. Looking back that the documentation, I see it wasn't the clearest... I've just tested the following on macOS Sierra with a downloaded QuPath and I was able to run the script in the docs after the following steps:. 1. If you don't already have a QuPath extensions directory, you can either set one under *Edit &rarr; Preferences* or follow the process to install any extension that takes your interest [here](https://github.com/qupath/qupath/wiki/Extensions). 2. Next, locate where JEP is installed and create a symbolic link in your QuPath extensions directory to its Jar file. For me, this was the command:; ```; ln -s /usr/local/lib/python2.7/site-packages/jep/jep-3.5.3.jar /Users/pete/QuPath/extensions/jep.jar; ```. 3. Alongside the Jar, there were also two native files ```jep.so``` and ```libjep.jnilib```. The easiest way to get QuPath to see them is simply to copy these into your QuPath directory containing ```QuPathApp.jar``` (there should already be other native libraries there too). I haven't tested this on Linux, but would be very interested to know if it works (or, indeed, if other things are working fine for you with Fedora). If so I'll update the docs to be a bit clearer. Note that I never took the use of JEP with QuPath far enough for it to be genuinely useful, since I didn't have a sufficient need for it myself until now. But I think the ability to run Python scripts could be really valuable, so I'd be happy to help with setting this up or coming up with a neat way to wrap or convert data structures. If you'd like to discuss more the kind of applications you see this being useful for (e.g. segmentation, classification, manipulating objects, statistical analysis...) just let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262733775:128,down,downloaded,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262733775,2,['down'],['downloaded']
Availability,"Hi,. Strange... my quick attempt on Ubuntu also didn't work, but apparently for a different reason... An alternative method to add to your library path would be to track down the ```QuPath.cfg``` file within your QuPath installation, and amend it - something like the following:; ```; [JVMOptions]; -Djava.library.path=.:/usr/local/lib/python2.7/dist-packages/jep/; ```. With this, it shouldn't be necessary to copy the files. Does this help at all, or is it the same error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262835928:170,down,down,170,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262835928,2,"['down', 'error']","['down', 'error']"
Availability,"Hi,. Thank you both very much for your comments, I've gone for the more robust longer method. That seems to work better for these samples as I can adjust the selection better. It works really well, thank you for the quick responses!. Ieva",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/121#issuecomment-349293402:72,robust,robust,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/121#issuecomment-349293402,1,['robust'],['robust']
Availability,"Hi,. thanks all for your responses. I'm not sure if I can follow what you actually mean but I think we talking about two different things. Anyways, I think, I'm good to go with the information that is included in the file name. I didn't notice at first that the coordinates given in the file name was '0,0'-coordinate of the respective small image. I believe that I just can generate an array with filled zeros in the size of the RoI and then fill in the binary mask at the coordinates in the file name,. Thanks a lot to you guys for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388643336:462,mask,mask,462,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388643336,1,['mask'],['mask']
Availability,"Hi,; Yes, I have both `jep`.so and `libjep.so` copied in the folder and am still getting the error message I reported. I didn't realize initially but `libjep.so` is just a symlink to `jep.so`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262802247:93,error,error,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262802247,1,['error'],['error']
Availability,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561071266:95,error,error,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:374,error,error,374,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hmm, I had already forgotten about that... and I have not yet been able to replicate the error with those turned off. *Places head into contact with table repeatedly*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484630072:89,error,error,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484630072,1,['error'],['error']
Availability,"Hmm, I still think your best option will be running something like the Simple Tissue Detection to get your annotation area to exclude all background that is external to your tissue (you may have to go over the edges yourself, and definitely play with the Max fill area, as setting it to just larger than the largest fat globule you want to measure is key!) so that you only have two populations, background/fat globule (low OD) and tissue (high OD).; You might also play with tiling your tissue annotation (pretty much everything I suggest will involve generating an annotation, I'm afraid) and then sending each tile to ImageJ for thresholding (Extensions->ImageJ->ImageJ Macro runner). The returned detections end up looking something like these... and depending on how much you play with your thesholds (both size and OD) you will see more or less of the errors around the edges. The tiling allows you to analyze the image in small enough sections such that ImageJ can handle the full resolution.; Edit: deleted on account of privacy. Maybe Peter will have something better I have not thought of, though :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286453790:858,error,errors,858,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286453790,1,['error'],['errors']
Availability,"Hmm, I worry about burying the option in the preferences. It reminds me of ImageJ's 'Black background' option where a hidden preference causes different results for different users, making it harder to give instructions to anyone else. If you want to run as script as a command (with menu item), you can use this:; ```groovy; getQuPath().installGroovyCommand(""Objects>Select children"", ; """"""; def children = getSelectedObject().getChildObjects(); selectObjects(children); """"""; ); ```. To make it always available without the hassle of creating an extension, you can include it in a startup script file - basically any Groovy file, which can be set in the preferences under 'Startup script path'. This should allow you to add multiple custom commands in menus of your choosing, to run any short scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777:503,avail,available,503,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777,1,['avail'],['available']
Availability,"Hmm, not sure but it might have been collateral damage from the other recent ROI/Geometry fixes, eg https://github.com/qupath/qupath/issues/429. I'll look out for it, but I haven't seen the problem myself and would probably need an example of a broken ROI/way to reproduce the error to be able to do anything about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619377874:277,error,error,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619377874,1,['error'],['error']
Availability,"Hmmm, I still fail to see any evidence of a QuPath bug here. Your reference to 'the true image dimensions' is hard to interpret since I don't know where you're getting the 'true' dimensions from, or what is the source of your files. Without actual specifics (e.g. an example file), I don't see why you should assume the 'bug' is in QuPath and not elsewhere. OpenSlide only sets the bounds for a subset of file formats, so most shouldn't be affected anyway. I've only seen it for scn and mrxs, which are the two formats mentioned in the commit that makes the bounds available: https://github.com/openslide/openslide/commit/421cb647acdc8fe35e33c2683949f5098925c8ac. Note my comment above about 'cropping' being arguably the same as 'not padding'... one could argue that QuPath simply removes the padding that OpenSlide has added, because [the bounds define where there is pixel data](https://github.com/openslide/openslide/issues/424#issuecomment-1382416341). QuPath aims to read the pixels from an image consistently, regardless of whether OpenSlide is used or not. As a specific example from my side, see the image `Leica-1.scn` from the OpenSlide freely-distributable data:; https://openslide.cs.cmu.edu/download/openslide-testdata/Leica/. Screenshots below show the image with a full image annotation within QuPath. ## Bio-Formats; <img width=""939"" alt=""SCN-Bio-Formats"" src=""https://github.com/qupath/qupath/assets/4690904/039b2449-5c20-4b93-a4af-d65928324a50"">. ## OpenSlide (default, cropped to bounds); <img width=""941"" alt=""SCN-OpenSlide"" src=""https://github.com/qupath/qupath/assets/4690904/771af2d0-2dcb-44ee-95e6-31ff62f0f7e2"">. ## OpenSlide (with `--no-crop` arg); <img width=""941"" alt=""SCN-OpenSlide-no-crop"" src=""https://github.com/qupath/qupath/assets/4690904/3cf52a48-ca91-4dff-8eb4-7e299d851b3e"">. The size is identical when read using QuPath v0.4.3 when using either OpenSlide or Bio-Formats by default (no extra arguments passed to either). Explicitly passing the `--no-crop` arg cau",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660:565,avail,available,565,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660,2,['avail'],['available']
Availability,"Hmmm, for the min/max error do you see similar behavior to the previous problem *after* the exception has been thrown once? It sounds like a bug that can be fixed on the QuPath side with better thread handling. If QuPath recovers and can handle later radius adjustments then I think it's unconnected. The OpenCV thing is very weird indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874056600:22,error,error,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874056600,2,"['error', 'recover']","['error', 'recovers']"
Availability,"Hmmm, so the rising memory is to be expected - but it should decrease again any time the garbage collector/Reclaim memory is called. I've just tried it several times with a moderately large region (> 50,000 nuclei) on my moderately old computer and can find no sign of a memory leak. You'll certainly have more threads on your better computer than my meagre 8, but I found it worked fine... sometimes rising > 10 GB, but regularly dropping down to ~1.5 GB when the garbage collector was triggered (either automatically or manually). And after everything was done, if I cleaned up the objects the memory use for QuPath as a whole went down to < 400 MB... so nothing was lingering too long. However I've just made a change that will try to make memory available again sooner: https://github.com/petebankhead/qupath/commit/9d2150ae1d2b08e6eefd2d9800baf6eecf6336cc; This may or may not help. You could also try the `nThreads()` option. Your bug report indicates you've 20 cores... not sure if that means 20 threads are working with stardist, or 40. Either way, it's probably worth reducing that number, e.g. by inserting `nThreads(10)` to your script in the place where the stardist model is being customized. Finally, from the look of your profiling, QuPath never gets close to its personal maximum of 32 GB -- but your 64 GB is pretty much full. Could something else be stealing memory that QuPath really wants?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630892684:440,down,down,440,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630892684,3,"['avail', 'down']","['available', 'down']"
Availability,"Hmmm... I've never tried this kind of setup, and have no idea if it can work. It would be very interesting if you can find a way... Those dramatic errors tend to involve native libraries (rather that code within Java). From the log, it appears to go wrong at the the earliest stage - so I'd try to launch it from ```QuPathApp.jar``` directly. There might be some clues in [Issue 27](https://github.com/qupath/qupath/issues/27#issuecomment-264693922). Otherwise, would it be of any benefit if you could run scripts on the server - having developed the scripts locally, on the less powerful machine? There are some links regarding that at #94 . Even if this isn't what you want to do, it might be worth trying to run such a script from the command line just to see if it works, or if the same error occurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/109#issuecomment-336031954:147,error,errors,147,https://qupath.github.io,https://github.com/qupath/qupath/issues/109#issuecomment-336031954,2,['error'],"['error', 'errors']"
Availability,"Hmmm... the plot thickens. That error has a completely different source, and occurs after `getBrushDiameter()` has been constrained to be >= 1. https://github.com/qupath/qupath/blob/cece52bff55965b72577e413be67d9a91df8b55e/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/BrushTool.java#L481-L489. You could try resetting your preferences and testing on another computer. I will need to be able to replicate it to find a fix but currently I can't (on Windows) and it has not been reported before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561076442:32,error,error,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561076442,1,['error'],['error']
Availability,"Humnn, I have tested your suggestion and it doesn't seem to throw any error. I have yet to wrap my head around the whole TMA Data Viewer logic. Thank you for the quick review. Now does that mean, this also needs fixing ?; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1444-L1446. Because I looked at the above code when correcting the following:; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1463-L1465",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1290993508:70,error,error,70,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1290993508,1,['error'],['error']
Availability,"I actually didn't know that TMAs had a UniqueID property. I recently used TMAs with multiple cores from the same patient and I had to write my own work around for this. It seems it's not available in right click menu GUI, where it would be most natural (for me) to input them?. That being said, I think the changes you made are useful. I would prioritize clean code into the future over the ability for older versions to read new projects. If I have a project with TMAs in 0.3.2, will this change leave me unable to open in in 0.4?. Also, I vote that ID is capitalized in set and get functions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1304333085:187,avail,available,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1304333085,1,['avail'],['available']
Availability,"I added the command line flags and removed the `mergedJavadocs` task. About the error, I wasn't able to reproduce it but I added a duplicate handling strategy that should fix it. Opening the results of the new task with the [javadoc viewer](https://github.com/qupath/javadoc-viewer) seems to work correctly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2092892346:80,error,error,80,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2092892346,1,['error'],['error']
Availability,"I also can't close QuPath *without* interacting with the script editor, because I get an exception; ```; 15:17:30.307	[JavaFX Application Thread]	ERROR	qupath.lib.gui.QuPathUncaughtExceptionHandler	Cannot invoke ""javafx.stage.Stage.close()"" because ""this.dialog"" is null	java.lang.NullPointerException: Cannot invoke ""javafx.stage.Stage.close()"" because ""this.dialog"" is null; 	at qupath.lib.gui.scripting.DefaultScriptEditor.promptToClose(DefaultScriptEditor.java:518); 	at qupath.lib.gui.QuPathGUI.handleCloseMainStageRequest(QuPathGUI.java:1018); 	at javafx.base@22.0.1/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); 	at javafx.base@22.0.1/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232); 	at javafx.base@22.0.1/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189); 	at javafx.base@22.0.1/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); 	at javafx.base@22.0.1/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); 	at javafx.base@22.0.1/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); 	at javafx.base@22.0.1/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); 	at javafx.base@22.0.1/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); 	at javafx.base@22.0.1/javafx.event.Event.fireEvent(Event.java:198); 	at javafx.graphics@22.0.1/com.sun.javafx.stage.WindowPeerListener.closing(WindowPeerListener.java:100); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.GlassStage.lambda$requestClosingAllWindows$3(GlassStage.java:204); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.GlassStage.requestClosingAllWindows(GlassStage.java:203); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.QuantumToolkit$2.handleQuitAct",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1524#issuecomment-2133581152:146,ERROR,ERROR,146,https://qupath.github.io,https://github.com/qupath/qupath/pull/1524#issuecomment-2133581152,1,['ERROR'],['ERROR']
Availability,"I also had some problems using the bioformats package and scn files. After installing the plugin, when I try to open my images on qupath, qupath tries to open my scn files using the bioformats server (not openslide) and it cannot determine the magnification metadata I tried manually editing the metadata into the qpproj file, but this had no effect. Turning off the bioformats plugin in edit>preferences resolved my error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-400023655:417,error,error,417,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-400023655,1,['error'],['error']
Availability,"I also noticed that if you just do the first two steps (loading image and objects) that you won't be able to undo loading the objects anyway. The undo action gets available after doing something else, even selecting and deleting an object. Pretty weird to me, where is that undo action coming from? It is unrelated to actions later. I think it is storing a state with no objects at all somewhere.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1487#issuecomment-2010988726:163,avail,available,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/1487#issuecomment-2010988726,2,['avail'],['available']
Availability,"I am actually just getting into this from the other side, learning how to set up a deep learning model to take in images generated by QuPath. Part of the question is what kinds of images do you want to send out, and do you want to classify them ahead of time? For example, I am probably going to be looking at cells, so I intend to export the cell object (in this case each cell is ""polygon"" as an image:; ```; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, polygon.getROI())). ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); ```; although I will need to edit the write name to both increment so that it does not overwrite, edit the name so it includes the class (for anything in the training set), and edit the ""polygon.getROI()"" so that it is the correct size. . Also, once you have your 256 by 256 tile size in micrometers (multiply out by the pixel width in the Image tab), you can also use the _Analyze-> Region identification-> Tiles and superpixels -> Create tiles_ to see what a grid export could look like for your Simple tissue detection annotation. And Pete beat me to it anyway! So I won't include my much more terrible box drawing script!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/137#issuecomment-357349047:477,down,downsample,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/137#issuecomment-357349047,2,['down'],['downsample']
Availability,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461575920:806,down,down,806,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920,2,['down'],['down']
Availability,"I am glad I checked completely. Despite appearing to read in correctly, there is still some issue that saving using the LabeledImageServer does not resolve. I am not sure what the problem is, but my model, despite showing the mask correctly, trains as if the entire image is background. I am not happy to report ""something does not work somewhere"" since that will not help fix the problem, but that is where I am at. Running it through Fiji to convert to 8bit still works, however. ; Exporting the images both ways results in, as far as I can tell, identical images.; ![image](https://user-images.githubusercontent.com/85200392/174497099-16e24bec-c6db-442c-abe3-03e26d1d408a.png). However the one on the right was exported directly by the LabeledImageServer, and fails to work during training.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159796100:226,mask,mask,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159796100,1,['mask'],['mask']
Availability,"I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. ""No primary object is selected and you have attempted to select a single object when multiple objects are selected. Please add more logic to your statement to determine which object you want, if you only want one object."". That could probably be phrased better, but maybe it gets the idea across?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869212957:120,error,error,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869212957,1,['error'],['error']
Availability,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:38,fault,fault,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['fault'],['fault']
Availability,"I can replicate the issue with CMU-1-JP2K from https://openslide.cs.cmu.edu/download/openslide-testdata/DICOM/. In a QuPath script, calling ; ```groovy; getCurrentServer().dumpMetadata(); ```; indicates that the magnification is not present in the OME metadata from Bio-Formats, therefore I don't think this is a QuPath bug. ; ```xml; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <OME xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:schemaLocation=""http://www.openmicroscopy.org/Schemas/OME/2016-06 http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd""; xmlns=""http://www.openmicroscopy.org/Schemas/OME/2016-06"">; <Image ID=""Image:0"" Name=""VOLUME"">; <Description>DERIVED\PRIMARY\VOLUME\NONE</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:0"" Interleaved=""true""; PhysicalSizeX=""4.99E-4"" PhysicalSizeXUnit=""mm"" PhysicalSizeY=""4.99E-4""; PhysicalSizeYUnit=""mm"" SignificantBits=""8"" SizeC=""3"" SizeT=""1"" SizeX=""46000""; SizeY=""32893"" SizeZ=""1"" Type=""uint8"">; <Channel ID=""Channel:0:0"" SamplesPerPixel=""3"">; <LightPath />; </Channel>; <MetadataOnly />; <Plane TheC=""0"" TheT=""0"" TheZ=""0"" />; </Pixels>; </Image>; <Image ID=""Image:1"" Name=""THUMBNAIL"">; <Description>DERIVED\PRIMARY\THUMBNAIL\RESAMPLED</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:1"" Interleaved=""true""; PhysicalSizeX=""0.022416015625"" PhysicalSizeXUnit=""mm"" PhysicalSizeY=""0.022416015625""; PhysicalSizeYUnit=""mm"" SignificantBits=""8"" SizeC=""3"" SizeT=""1"" SizeX=""1024"" SizeY=""732""; SizeZ=""1"" Type=""uint8"">; <Channel ID=""Channel:1:0"" SamplesPerPixel=""3"">; <LightPath />; </Channel>; <MetadataOnly />; <Plane TheC=""0"" TheT=""0"" TheZ=""0"" />; </Pixels>; </Image>; <Image ID=""Image:2"" Name=""OVERVIEW"">; <Description>DERIVED\PRIMARY\OVERVIEW\NONE</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:2"" Interleaved=""true""; PhysicalSizeX=""0.058932714617169"" PhysicalSizeXUnit=""mm""; PhysicalSizeY=""0.058932714617169"" PhysicalSizeYUnit=""mm"" SignificantB",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1445#issuecomment-1881296347:76,down,download,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/1445#issuecomment-1881296347,1,['down'],['download']
Availability,"I can run the m11 download, but not build it (same errors). Will try the minimal approach",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630429685:18,down,download,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630429685,2,"['down', 'error']","['download', 'errors']"
Availability,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['error'],['error']
Availability,"I can't replicate this issue. @GiuseppeAntoniazzi can you provide more detailed step-by-step instructions see the error?. It helps if the error can be reproduced using a publicly-available image, e.g. one from https://qupath.readthedocs.io/en/0.4/docs/intro/acknowledgements.html. If this isn't possible, then it would help to provide the actual objects you are using. These can be exported using *File &rarr; Export objects as GeoJSON*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1290#issuecomment-1685767165:114,error,error,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/1290#issuecomment-1685767165,3,"['avail', 'error']","['available', 'error']"
Availability,"I could not replicate the problem. I opened the common sample image `CMU-1.svs` and used QuPath to write a pyramidal OME-TIFF with tile size 1024x1024 and default compression option (here, uses JPEG). After relaunching QuPath v0.3.2 (to ensure a clean start), It works properly with tile reading, caching and viewing across resolutions. * Have you tested this with multiple OME-TIFF files?; * Which software was used to write the pyramidal OME-TIFF files that are misbehaving?; * Are there any clues / errors reported in QuPath under *View &rarr; Show log*?; * Can you share any example images exhibiting this issue?. Note that v0.3.1 temporarily used a different version of Bio-Formats (6.8.0), but v0.3.0 and v0.3.2 use the same version of Bio-Formats (6.7.0). If you could compare behavior across all three versions, this may help identify when any problem could have been introduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117:502,error,errors,502,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117,1,['error'],['errors']
Availability,"I definitely agree that the current limit is bad. But the fix could result in more out-of-memory errors. I think it would be good to good to give some protection from these (or a more informative error if they occur), and aim for a more substantial fix. Two changes could help:; * Choose a pixel count threshold based upon both the maximum pixel count that ImageJ could conceivably support, i.e. 2<sup>31</sup>-1 (or a little more than 1) *and* also a memory threshold based on estimating the image size and memory available; * Add a scaling factor as a static field to control what proportion of the available memory is permitted for use. It could be something like this:; ```java; static double MEMORY_THRESHOLD = 0.5;; ...; long remainingMemory = ... // With the help of Runtime.getRuntime(), after request for garbage collection; long approxMemory = ... // Calculation based on pixel count, bit-depth & number of channels; if (approxPixelCount > 2147480000L || approxMemory > remainingMemory * MEMORY_THRESHOLD) {; // Show the size error; } else {; // Have a go at extracting the region; }; ```; By making the scaling factor a static field, there is at least the option of overriding it in a Groovy script if absolutely necessary. The details around the pixel count get a bit fiddly, considering that ImageJ1 will use a packed int array in a `ColorProcessor` for RGB images, while in other cases a new array will be allocated for every channel. Furthermore, it might be prudent to take parallelization into account, and the result returned by `PathPrefs.getNumCommandThreads()`. I'm dubious about sending the whole image if no selection exists, because it's really easy to accidentally run the command without an area selected... and then everything can grind to a halt while QuPath tries (and possibly fails) to extract a massive region. Currently you can use *Objects &rarr; Create full image annotation*, its shortcut `Ctrl + Shift + A` or the scripting command `createSelectAllObject(true);` t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356714438:97,error,errors,97,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356714438,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"I deleted the snapshots from my gradle cache, and built QuPath again just now. I'm afraid I still see the same behavior, it still gives the error. In case I was still somehow using an out-of-date jar, I checked the JavaCPP manifest and see; ### JavaCPP; ```; Bundle-Version: 1.5.7.202201240730; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614:140,error,error,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614,1,['error'],['error']
Availability,"I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that *might* affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the `.qpclassifier` file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the [QuPath user forum on Google Groups](https://groups.google.com/forum/#!forum/qupath-users) I can contact you directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375339965:255,avail,available,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375339965,1,['avail'],['available']
Availability,"I don't think QuPath directly modifies any of the images. You can create new files with a ""burned in"" mask at whatever size/downsample as long as they are within the allowable size for that file type, but modifying pyramidal files might be rough. Similar question here perhaps: https://github.com/qupath/qupath/issues/166. Side note, the square images should have XY coordinates as part of their name so that they can be reconstructed from the file names. You may also be able to create the binary mask as Pete posted above, but as a single image with a known downsample, then expand it back to normal size within the program you are using to merge it into your (I assume) tiff. If you want essentially an extra channel with the mask in it, I think you want a file of a size that FIJI/ImageJ can handle, and merge the extra channel in there after exporting the mask from QuPath. That still leaves stitching all of the files together using another plugin or program, if you exported as many tiles. https://imagej.net/Stitch_and_Align_a_sequence_of_grid_images_Tutorial",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388386859:102,mask,mask,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388386859,6,"['down', 'mask']","['downsample', 'mask']"
Availability,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484643330:60,error,error,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330,8,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'ErrorCollector', 'error']"
Availability,I encountered the same error using generic tiled pyramidal tifs generated with ImageMagick or libvips. ; Here is an example file:; [Image](https://vanderbilt.box.com/s/s833k4t61ntwmrxu37p4edxpimqzzndm),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472104490:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472104490,1,['error'],['error']
Availability,"I expect it starts from the underlying Geometry becoming somehow invalid. However I don't know for sure if this is the case, haven't experienced it myself and have no idea how to reproduce it. If you _do_ press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'. Apart from that, I would likely need one or all of the following:; * the contents of _View &rarr; Show log_ (if any errors are reported); * a .qpdata file with a misbehaving annotation; * steps or a script that enable me to reproduce it. Oh yes, and as @Svidro says - the version number is essential. If it only happens before v0.2.0-m7 then it may already have been fixed (as I have made many changes in this area).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/381#issuecomment-561272296:466,error,errors,466,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561272296,2,['error'],['errors']
Availability,"I feel that is likely to cause more confusing and maintenance headaches as the software develops, mostly for the reasons I outlined above. Commands will change and improve. The same command (e.g. *Load object classifier*) might meaningfully only work for detections now, but handle other object types in the future (I think that, in principle, it already *does* support other object types, if you can somehow create and save a classifier that applies to annotations). There had been a *Train detection classifier* in earlier versions, so the renaming in that case was to reduce confusion because there was a transition period during which both commands were maintained in parallel. If we move things, we need to update the documentation - and some of the docs are in the form of videos, so that's not straightforward. And if we push the term 'detection classifier' it will likely confuse *someone* who thinks it isn't relevant to them because they have cells, not detections. I don't think the current arrangement is ideal, but we are always trying to balance the current software with the past, the future, the docs, and a large number of users with very different needs and expectations... and a very small number of developers. Added to that are the people who write extensions, for whom changing menu structures can cause trouble. It is not an easy project to manage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506:50,mainten,maintenance,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506,1,['mainten'],['maintenance']
Availability,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633287941:38,down,down,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941,3,['down'],"['down', 'downloading']"
Availability,I got a fresh Windows 10 vm from https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ java 14 from https://jdk.java.net/14/ and I get the exact two test failures when building m12.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633258192:164,failure,failures,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633258192,1,['failure'],['failures']
Availability,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409140774:266,error,error,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I had 730 slides with 10 different stains, so I ran them in batches of 73 slides and each of them had the same issue of slowing down significantly after the first few slides. I think I faced an OutOfMemoryError once or twice which led me into finding and using that script, which resolved at least running out of memory (or just ""fixed"" it that it never happened with my batch size anymore) and might have sped up the process marginally but not to the same speed as running the script without batching. Below hopefully are the relevant parts of the script and classifiers. ```java; createAnnotationsFromPixelClassifier(""ASMA Classifier"", 100000.0, 200000.0, ""DELETE_EXISTING""); ```. ```json; ""pixel_classifier_type"": ""OpenCVPixelClassifier"",; ...; ""pixelWidth"": {; ""value"": 8.048,; ""unit"": ""µm""; },; ""pixelHeight"": {; ""value"": 8.048,; ""unit"": ""µm""; }; ...; ""inputWidth"": 512,; ""inputHeight"": 512,; ```. I can try running the analysis sometime and see if I can reproduce the OutOfMemoryError or see any patterns with and without the snippet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1716011063:128,down,down,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1716011063,1,['down'],['down']
Availability,"I had wanted to play with something like this for a while now, and this post finally got me going! It took some time as I am not great with Java, but I have put together a two part system that is independent of the .qpdata file, though you could certainly enhance it's usefulness with annotations. To start (assuming you have a project with an image), you would create an ""Explore"" (capitalized) folder within your project folder, at the same level as the ""data"" folder. Then run the ""Location file creator"" and select the views that you would want the student to cycle through, in order, while writing a text file referencing each location (which will be labeled 1,2,3, etc.).; Once you have both the text file and the object file saved to your Explore folder, anyone currently looking at an image should be able to run the Slide Explore script which takes the text file and the object file with the views, and allows the user to read and cycle through the various views that were set up. I created a sample for JP2K-33003-1 if anyone wants to try it out and give some feedback. Once I am a little better with Java, I would like to change the Next/Previous buttons into hyperlinks in the text, but I am not quite there yet :). Scripts at: https://gist.github.com/Svidro/86fb224d69484ae5955631ce68d27054. The test image can be accessed at: http://openslide.cs.cmu.edu/download/openslide-testdata/Aperio/JP2K-33003-1.svs; The "".log"" file needs to be renamed to "".obj"" as I cannot post that file directly otherwise. I am sure there are a lot of improvements that could be made, and any feedback is welcome. [JP2K-33003-1.txt](https://github.com/qupath/qupath/files/1715587/JP2K-33003-1.txt). [JP2K-33003-1.log](https://github.com/qupath/qupath/files/1715588/JP2K-33003-1.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144#issuecomment-364849591:1368,down,download,1368,https://qupath.github.io,https://github.com/qupath/qupath/issues/144#issuecomment-364849591,2,['down'],['download']
Availability,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-529201022:245,avail,available,245,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022,2,['avail'],['available']
Availability,"I happened to me again today and your explanation is sound. It occurs somewhat randomly, and eventually would work after repetitive attempts to put the files in the project... not ideal! For example I had 7 images and it would only load 5 the first time, and then I'd have to add the 2 others subsequently. ; Also, for some reason it seems to never load any file if I do the following steps:; - create directory outside of QuPath (which will become the project directory); - open qupath, create a project and select the directory just created; - drag and drop the files to the project in qupath . But if I dont ""pre-create"" the folder and only create it while creating the project, and use the ""add images"" button, then it seems to accept the files (or more files at a time at least). I didn't get the chance to try the script you posted sorry (forgot really), but will definitely try m4 when it's available!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-520551709:898,avail,available,898,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-520551709,1,['avail'],['available']
Availability,"I have a very strong suspicion that it's a Linux issue with the system dragboard, but I've not managed to narrow it down. When I said . > come from the same source. I think I was maybe wrong - I tried dragging the same URL from a text editor, and it still didn't work as expected. I did get a `file://` link to overwrite a `https://` link, but I couldn't do the reverse...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1415#issuecomment-1798055787:116,down,down,116,https://qupath.github.io,https://github.com/qupath/qupath/pull/1415#issuecomment-1798055787,1,['down'],['down']
Availability,"I have an issue with certain ome.tiff images not opening in QuPath. In the command line console, Im receiving the Java error: NegativeArraySizeException and when I try to edit in the command line, it will not allow me to and I dont know how to access that. If you have any help or advice to get these images open, please let me know",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242:119,error,error,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242,1,['error'],['error']
Availability,"I have installed the new extension with the same results. I tried to exclude the .scn file from bioformats so that OpenSlide opens it to no avail it comes up with file can't open, however, I downloaded a sample of the .scn file from openslide it opens OK ; It could well be the issue @Svidro illuded to.; Its seems like this is an ongoing issue https://github.com/openslide/openslide/issues/189, The files I have here are produced by Leica Versa while our older .scn from SCN400 work OK",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358745153:140,avail,avail,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358745153,2,"['avail', 'down']","['avail', 'downloaded']"
Availability,"I have kept meaning to try the Weka plugin, but never seemed to get around to it! This sounds like an excellent chance to test it out.; Somewhat related, I am not sure I understand exactly what you are measuring, but if you are measuring ""the amount of white space"" in your tissue, I have a couple of suggestions.; 1. Create a macro that sends your annotation areas to ImageJ, which can then create detection objects from a mask created to detect below/above a certain ""white"" threshold.; 2a. Built in, create a smallish annotation that includes significant whitespace and your tissue of interest. Next use the Analyze->Preprocessing->Estimate stain vectors to both set your background to the mode (first popup), and secondly set one stain vector as best you can to line up with your detections, and the other you can pretty much ignore.; ![step1](https://cloud.githubusercontent.com/assets/23145209/23876638/b0997bee-07fb-11e7-9c2a-434dacaddead.JPG); 2b. Use the Analyze->Region Identification->Positive Pixel Count (experimental) with very a very low threshold for the stain vector you used in the previous step, and an absurdly high threshold for your second vector which we will ignore. I would iterate a few times on a VERY small area, as this is very computationally intensive, and the program tends to respond very slowly for me after running it on a large area.; 2c. Once you have your settings and run the pixel count on your annotation, you can use your pixel area and the total area to get a percentage of total pixels that are below threshold. In the case of my image, I used the hematoxylin vector, so I multiplied the negative pixel count times the area of my pixels (seen under the image tab, Pixel Width and Pixel Height) and used that to obtain a percentage of non-tissue area within my annotation. You can see that in the Excel window, and that it roughly matches up with what you can see in the annotation.; ![step2](https://cloud.githubusercontent.com/assets/23145209/23877031/93cf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286257042:424,mask,mask,424,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286257042,1,['mask'],['mask']
Availability,"I have lots of QuPath's installed, and for me and `QuPath` (presumably v0.1.2) and `QuPath-0.3.0.app` are the only ones that show up in launchpad. v0.4.3 doesn't. To be honest, I forgot launchpad exists. I suspect the issue is related to the macOS version stored in the app. For v0.1.2 this is 0.1.2, but for all subsequent releases it is 1.0.0. The issue has come up a couple of times:; * https://github.com/qupath/qupath/issues/1250; * https://github.com/qupath/qupath/issues/1337. I spent several days trying to address it, but ultimately trying to embed the 'true' version number caused subtle, release-destroying issues: ; * https://github.com/qupath/qupath/pull/1379; Most annoyingly, the failure only emerged at the very end when *downloading* QuPath - local builds were ok, which meant that it's possible to believe it's fixed when it isn't. Therefore unless anyone else can spot a fix and confirm it works with downloaded versions, I'm afraid it's not something we can address. If my theory is correct, it will hopefully go away for QuPath >1.0.0, when we get there. For now, it's a restriction imposed by `jpackage` and macOS.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102:695,failure,failure,695,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102,3,"['down', 'failure']","['downloaded', 'downloading', 'failure']"
Availability,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612953950:21,error,error,21,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950,4,['error'],['error']
Availability,"I have seen the tiny rectangle appear whenever I use the brush tool in 'subtract' mode (with the ```Alt``` key down), and remove the entire area. However, in that case it is just a display thing - and the rectangle quickly disappears. But based on your post I've just checked and I can reproduce it using *Subtract selected annotations*... in which case the rectangle can hang around for longer. It still *does* disappear (sometimes...) if I select it, then start drawing a new annotation - but not entirely consistently. What I think is happening is this:; * Whenever a ROI is effectively removed (either with the brush tool or subtraction), it results in a rectangle at location (0, 0) with zero width and zero height - this is nevertheless still drawn on screen; * When removing with the brush tool, a sanity check is applied to see if the resulting ROI has no area - and if so, the object is removed (e.g. [see here](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/AbstractPathDraggingROITool.java#L100)); * This sanity check isn't applied with the *Subtract selected annotations* command... so the 'empty' ROI does not result in the object being automatically removed; * Sometimes the sanity check can be triggered later... but it entirely clear when and why. I've flagged this as a bug, since something here is definitely not right and should be fixed. I do think that there is a broader issue with the usefulness of the commands for combining annotations; these can and should behave more predictably. It may not be helped by the fact that for a long time (before release) QuPath didn't support multiple objects being selected simultaneously, and much of the original code was written back in those days; as you can imagine, this was quite limiting. You're completely right about support for subtracting multiple annotations being tricky from a how-to-present-this-to-the-user point of view. I will give thi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-302926092:111,down,down,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-302926092,2,['down'],['down']
Availability,"I have the same problem with CZI files. . Pete answered with this - i didnt try to find if my settings were FL instead of brightfield yet, but most of the suggestions i tested already. It did not help. Here the suggestions: . This happens whenever QuPath is unable to detect any cores. There are a few reasons why this may occur:. The Image type is wrong (e.g. set to fluorescence rather than brightfield) - this can be seen after clicking on the Image tab on the left. There is a screenshot here.; The specified TMA core diameter is either too large or too small. QuPath determines the expected TMA grid from 'complete' cores, which have a diameter within a small tolerance of the value set in the dialog box. If no cores fall within this tolerance, the grid cannot be found.; The intensity threshold is either too high or too low (but it is automatically determined from the data, and I don't see any reason in your image why it would be determined wrongly). If the image type is set correctly, then I would try increasing and decreasing the TMA core diameter to see if this gives any improvements. If not, then there may be some issue happening internally when trying to read from the CZI file - although I have not seen such a problem before. The contents of View → Show log may be helpful to track down the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282308795:665,toler,tolerance,665,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282308795,3,"['down', 'toler']","['down', 'tolerance']"
Availability,"I haven't been able to reproduce the issue either in m8. I can now add a duplicate image and look at one image with the masks on while looking at a second image with no objects. Miniviewer for masks! Except not mini. I guess. I used to be able to do some other stuff like turn the masks off or on or color them differently per viewer, but that no longer seems to be possible. Not a big deal though, not not really relevant to this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284#issuecomment-562880040:120,mask,masks,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562880040,3,['mask'],['masks']
Availability,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-631451060:119,error,error,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060,2,['error'],['error']
Availability,"I know there are some updates to how OpenCV operates with the newest version of QuPath. Are you running that one or the older 1.2? (I don't know that it is entirely official yet, but you can find it here https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). I don't have anything immediately useful, just wanting to check which version the error is happening in!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375334835:357,error,error,357,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375334835,1,['error'],['error']
Availability,"I mean polygons that might have multiple separate regions and yet are still treated as the same shape, or contain holes inside them - and so can't be represented simply by a list of vertices. You can create such shapes using the brush or wand tool - hold down 'Alt' to turn on 'subtract mode', and this lets you remove areas from inside an existing shape. You can also hold down shift when using the brush to create multiple polygons but which are treated as the same object (which you can see by the fact they are all selected together... using the default colors this means all shown as yellow). Given that your plan is to create a binary mask, definitely check out the blog. It should be much easier to do this directly from within QuPath and not need to handle another way to handle the shapes. From memory, there are a few posts where I described this kind of thing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388286086:255,down,down,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388286086,6,"['down', 'mask']","['down', 'mask']"
Availability,"I mean the memory limit - does it show an error, or just ignore your request? How are you setting the request for increased memory?; Is 64 GB the total amount for the system, or the total amount you want QuPath to use?; Is the behavior any different in v0.2.0-m11?. I do not recall any intentional change that would make this any different from m11, but I don't have so much RAM myself...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630761406:42,error,error,42,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630761406,1,['error'],['error']
Availability,I noticed when running object / pixel classifiers in batches that QuPath would not always clear up the tile cache properly (or that's at least what I thought?) and would occasionally end up running out of memory / being sluggish due to limited available memory. . I added something similar to the snippet below to my scripts and it partially resolved my problems if I recall correctly -- probably worth investigating if nothing else comes up (although my issues were possibly different than the issues brought on image.sc). ```java; Thread.sleep(100). javafx.application.Platform.runLater {; getCurrentViewer().getImageRegionStore().cache.clear(); System.gc(); }. Thread.sleep(100); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715891250:244,avail,available,244,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715891250,2,['avail'],['available']
Availability,"I only mentioned the Wand tool because, if this works, it means that OpenCV is working. The test errors occur when OpenCV Mats are being created, so it sounds like - in these cases - OpenCV is not being loaded correctly. I do not know why this is happening for you but not for me.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631584620:97,error,errors,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631584620,1,['error'],['errors']
Availability,"I originally saved the classifier in a shared folder on our work network.. my colleague and I both copied and pasted the file from there onto our desktops (to make it faster to locate when loading it through QuPath). I've had no problems with it at all prior to this week! My colleague has now left but I'll ask her to try it from the shared folder tomorrow and see if that fixes the issue. I've just tried loading it from the original folder but having the same issue fixable by closing and reopening. . The error message that pops up says: 'QuPath has encountered a problem, sorry. If you can replicate it, please notify a developer. java.security.PrivelegedActionException: java.lang.Exception: std::exception: bad allocation'. Thanks both for your help! Pete I will email you the qpclassifier file now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375345642:509,error,error,509,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375345642,1,['error'],['error']
Availability,"I ramp the ""backgroundRadiusMicrons"" up to 50; this is much higher than the preset so I will play with this a bit more. . The error seems to only affect tiles that are along the periphery (i.e., tiles that are only partially complete).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/80#issuecomment-305266246:126,error,error,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/80#issuecomment-305266246,1,['error'],['error']
Availability,"I ran [this script](https://gist.github.com/petebankhead/40520366791ef8fe0ab0ca3403812d8d) to print more memory info from Java and JavaCPP. ### MacBook Pro M1; After the errors above:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4082 MB; freeMemory() 	2657.05673980712890625 MB; Memory used 	1424.94326019287109375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.0015869140625 MB; physicalBytes() 	19015.328125 MB. Total count: 	32. Operating system:; Total: 	16384 MB; Available: 	14.92578125 MB; ```. ### 2013 iMac Intel; After the same processing steps, running without problems:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4096 MB; freeMemory() 	2742.839874267578125 MB; Memory used 	1353.160125732421875 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00140380859375 MB; physicalBytes() 	5464.46875 MB. Total count: 	30. Operating system:; Total: 	32768 MB; Available: 	194.671875 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477:170,error,errors,170,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477,3,"['Avail', 'error']","['Available', 'errors']"
Availability,"I really like your draft. It seems the most beautiful, design-wise. The `ImageServerStub` solution in the end may just work as a helper for writing ""good"" fast scripts, exposing exactly where the image files are absolutely needed. I made a small comment on your draft PR about the metadata, as i feel that is an important info to access *offline*. But in the end, if that was sorted out, that solution would be a drop-in replacement to mine. As you said, at last it will come down to which one is the most maintainable. I see pros and cons in both: `ImageServerStub` offers a solution that is segregated in one file, but then requires to punch multiple small holes in QP interface in order to use it; `lazy-server` distributes the code responsibility to multiple classes and requires to be careful in future development of QuPath so that it does not end up requesting for the server when it is not really useful. In the latter case it is due to the solution having a silent behaviour. However, since everything is managed internally in the lazy approach, in the future it may create less problems surging from punching holes in QuPath's interface. Ultimately, I think your solution is better maintainable-wise, granted that a few things are managed:; * have the retrieval of the image server be loud in logs. Perhaps even with some traceback to what portion of code triggered it?; * expose a `getCurrentMetadata()` function to avoid having to do `getServer().getMetadata()`; * check qupath code that requested for the server but may not need it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2032062846:476,down,down,476,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2032062846,1,['down'],['down']
Availability,I recently found resources like this:. Release hash:; https://github.com/MCJack123/ghaction-Generate-Release-Hashes. Release signing:; https://wiki.debian.org/Creating%20signed%20GitHub%20releases (which equally allows one to verify a given download),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309:241,down,download,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309,1,['down'],['download']
Availability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor). ; Now my QuPath program doesn't work at all. ; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail. ; Any advice?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686:222,down,downloading,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686,3,"['avail', 'down']","['avail', 'downloading']"
Availability,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409247462:628,avail,available,628,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462,2,['avail'],['available']
Availability,"I see your point and agree - maybe you can add a warning in case a user chooses to save a project in a folder with a special character in its path?; Same goes for the error message when trying to open from a ""dangerous"" path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320#issuecomment-496139825:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-496139825,1,['error'],['error']
Availability,"I should probably admit that I didn't know anything about shapefiles - I'll look out for them from now on! If you happen to know of other pathology software that can export/import them (can Definiens do both?) that would be very good to know. I actually made a half-hearted attempt to incorporate Jython support in the early days, before I went all-in for Groovy because trying to be multilingual took extra effort that (at the time) didn't seem worth it. _However_, this means that if you download the Jython standalone jar and drag it onto QuPath then a new 'Jython' option will appear as an available scripting language. Now the half-hearted bit: there's a tiny error in the default import statement for Jython in v0.1.2 - so until that's fixed you'll need to *uncheck* the option *Run &rarr; Include default bindings*. This means that the normal [`QPEx` things](https://github.com/qupath/qupath/wiki/Writing-custom-scripts#default-methods--imports) will not be available in the script, and you'll need to import these separately... and possibly remember to turn the default imports back on if your Groovy scripts require them. The following works for me, after installing the jar and setting the script language to `Jython`:; ```python; from qupath.lib.scripting.QPEx import *; annotations = getAnnotationObjects(); print annotations; ```. The fix to address this in the code appears trivial (switching `+` to `,` in the code), so potentially this won't be necessary in later versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945546:490,down,download,490,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945546,4,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,"I should say that I also did try setting the CLASSPATH to include the jep-3.6.1.jar and also the LD_LIBRARY_PATH to include the two .so library files. But so far, still stuck at the java.lang.UnsatisfiedLinkError. Actually, when I run it again, the error changes to:. INFO: java.lang.NoClassDefFoundError: Could not initialize class jep.Jep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262791032:249,error,error,249,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262791032,1,['error'],['error']
Availability,"I solve the import error by this way:; ```; def IJTools,ImagePlusServer,ImagePlusServerBuilder; try {; //import qupath.imagej.helpers.IJTools; IJTools = ""qupath.imagej.helpers.IJTools"" as Class; } catch(Exception ex) {; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; ImagePlusServer = ""qupath.imagej.images.servers.ImagePlusServer"" as Class; ImagePlusServerBuilder = ""qupath.imagej.images.servers.ImagePlusServerBuilder"" as Class; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473505073:19,error,error,19,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473505073,1,['error'],['error']
Availability,"I suspect it is running into a similar error as https://github.com/qupath/qupath/issues/67; Try setting your hematoxylin threshold lower, or adjusting your color vector.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/111#issuecomment-342659964:39,error,error,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/111#issuecomment-342659964,1,['error'],['error']
Availability,"I tested performance using CMU-1.svs.; I used a very basic thresholder and simple classifier trained for 3 classes, saved for both classification and probability output - then ran the script at the bottom. Using a Mac Studio (2022) with M1 Max and 32 GB RAM the processing time was:. | v0.3.0 | v0.4.0-SNAPSHOT |; | ------------- | ------------- |; | 593.9 s | 60.1 s |. Results identical as far as I can tell. So... quite a substantial difference :). Cell detection took close to 30s, with 326 498 cells detected,. ```groovy; def checkpoints = [:]. setImageType('BRIGHTFIELD_H_E'); setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 255 255 255""}'). clearAllObjects(). checkpoints << ['Tissue detection': System.currentTimeMillis()]. createAnnotationsFromPixelClassifier(""Tissue detection"", 10000.0, 0.0, ""INCLUDE_IGNORED""). checkpoints << ['Cell detection': System.currentTimeMillis()]. selectAnnotations(); runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 1.0, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}'). for (classifier in ['Some probability', 'Some classification']) {. // Create annotation measurements; checkpoints << [""Annotation measurements for $classifier"": System.currentTimeMillis()]; selectAnnotations(); addPixelClassifierMeasurements(classifier, classifier); ; // Create cell measurements; checkpoints << [""Cell measurements for $classifier"": System.currentTimeMillis()]; selectCells(); addPixelClassifierMeasurements(classifier, classifier); }; checkpoints << [""Done"": System.currentT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584:531,checkpoint,checkpoints,531,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584,6,['checkpoint'],['checkpoints']
Availability,"I think I do get the point, but want to ensure it's clear what exactly should be solved here, as I suspect there are alternative approached to consider. For example, I quickly drafted a rough alternative at https://github.com/qupath/qupath/pull/1489. This simply delays loading images until the `ImageServer` is requested. It has the advantages of being simpler (no need for different 'Run' actions), doesn't introduce any new `ImageServerStub` class, and avoids failure if pixels are requested. It probably has disadvantages too, as calling code needs to be more careful not to request the server at all (even for metadata), to avoid triggering the image to be loaded. I'm not sure which is best, but we should go with the most maintainable solution that solves the main problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2025049875:463,failure,failure,463,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2025049875,2,['failure'],['failure']
Availability,"I think I got it. The point was to give each Polygon an individual name so that each Polygon can be saved as individual image file. This works for me:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (Polygon in getDetectionObjects()){; roi = Polygon.getROI(); print(roi); area = roi.getArea(); print(area); name = (""Polygon_"" + area); print(name); // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); }; print('Done!'). ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346830301:279,down,downsample,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346830301,2,['down'],['downsample']
Availability,"I think I ran into the same issue, but somehow couldn't narrow down the steps to reproduce it (so didn't open an issue). I think I set the maximum memory to `-1` (default), restarted QuPath, then tried again and it ""fixed"" it?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/582#issuecomment-668847956:63,down,down,63,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-668847956,1,['down'],['down']
Availability,"I think that since this is not an issue/bug/error, it should be posted on the forum, as indicated during the process of creating the issue :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/409#issuecomment-595586902:44,error,error,44,https://qupath.github.io,https://github.com/qupath/qupath/issues/409#issuecomment-595586902,1,['error'],['error']
Availability,I think the 'points' it is referring to is completely separate from the points (vertices) that make up the shape - because the error seems to occur _before_ the input reaches QuPath. Although in saying that I'm not entirely sure what it _is_ referring to.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549576562:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549576562,1,['error'],['error']
Availability,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-581003877:29,error,errors,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877,6,['error'],['errors']
Availability,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:1090,error,error,1090,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906,1,['error'],['error']
Availability,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424744221:569,robust,robust,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221,1,['robust'],['robust']
Availability,"I think this is a good & elegant way to fix the problem. I haven't merged it yet as I'm trying to think if it could have any other implications that mean we should target v0.6.0 rather than v0.5.1. Were you able to reproduce the original error? I've tried creating some training images with empty regions, but haven't managed to cause the problem yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-1971249723:238,error,error,238,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-1971249723,1,['error'],['error']
Availability,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407441080:218,down,downloading,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080,1,['down'],['downloading']
Availability,"I think this looks good and could be merged any time. I have a few wishlist requests, which would be added here or in a later PR:; * The popover doesn't match the css, which looks especially strange in dark mode.; * Using [`WebViews`](https://github.com/qupath/qupath/blob/f12b38a32906e0257a34ea380e9a66d67e58ae75/qupath-gui-fx/src/main/java/qupath/lib/gui/tools/WebViews.java#L38) to create the `WebView` and bind the stylesheet may help, (although I think `PopOver` is generally hard to style in a well-behaved way); * ~~The `i` info button has different styling when highlighted in the sub-popup window (it basically just ignores whether the row is selected - whichever logic is in the main table might be useful here too)~~ *(edit: I was wrong)*; * The `Owner` and `Repository` fields shouldn't be automatically reset whenever a download is requested or fails with an error; * I don't think `Download extension from GitHub` should be collapsible (it doesn't take up much space); * It feels convoluted to me that the user *must* fill in two fields, whenever they might just want to copy and paste one GitHub url. Could/should the `Owner` and `Repository` be able to identify when a full URL has been pasted, and then automatically split it?; * e.g. Pasting `https://github.com/qupath/qupath-extension-py4j` would result in `Owner=qupath` and `Repository=qupath-extension-py4j`. Pinging @Rylern and @finglis for their opinions as well, and include a screenshot to illustrate some of what I'm referring to. <img width=""879"" alt=""extension-manager"" src=""https://github.com/user-attachments/assets/f0fc272d-3b1c-4a09-9f6e-6cecf6e1d5b7"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2256038253:833,down,download,833,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2256038253,4,"['Down', 'Ping', 'down', 'error']","['Download', 'Pinging', 'download', 'error']"
Availability,"I think you also need to consume the event, to ensure it doesn't filter down somewhere else.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/472#issuecomment-625399963:72,down,down,72,https://qupath.github.io,https://github.com/qupath/qupath/pull/472#issuecomment-625399963,1,['down'],['down']
Availability,"I think you have a couple of options depending on how easy it is to determine stroma vs tumor in your samples, and positive vs negative. If the differentiation is clear, and easy for the classifier to make, I would start with using one of the built in classifiers to sort all of the cells in the TMA into Stroma and Tumor classes. ; Then, by right clicking on the right hand side of the annotation tab, I would ""Add Class"" and make ""Tumor CD3 Positive"" and ""Stroma CD3 Positive"" classes. After you have those made, use the Classify->Classify By Specific Feature. This will take two steps, but it will let you select first ""Stroma"" class cells as the input and ""Stroma CD3 Positive""/""Stroma"" classes as the outputs. A second pass lets you do the same for the ""Tumor"" cells.; The downside to this is the Classify by specific feature command does not show up in the workflow and can be annoying to use on multiple images since you have to type it out each time. There is also a script that I can hunt down, if you want, that lets you automate the process, I forget if Peter posted it somewhere on the Wiki. You do need to rewrite the script somewhat for what you specifically want, however. ; The other option , if you cannot use the classifier to determine Stroma vs Tumor, and want to draw annotations in each core by hand, you can use a simple script that is currently the most recently discussed topic on the Gitter page, seen here [https://gitter.im/qupath-users/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link](url); After you use the annotations to assign the initial classes, proceed the same way. Of course, I am sure there are other ways to do it as well, this is quite versatile software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/52#issuecomment-281009359:778,down,downside,778,https://qupath.github.io,https://github.com/qupath/qupath/issues/52#issuecomment-281009359,4,['down'],"['down', 'downside']"
Availability,"I tried `defaults` first, but quickly ran into the permissions problem - so switched to `PlistBuddy` as suggested at https://github.com/qupath/qupath/issues/1250. That *seemed* to work, but it turned out to still fail in confusing and subtle ways after downloading & installing. After very many hours spent trying to sort it out, I had to admit defeat because it was blocking the release - details are at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372:253,down,downloading,253,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372,1,['down'],['downloading']
Availability,"I tried reproducing the error a few times with that classifier with 4 GB of RAM and I wasn't able to reproduce it. I bumped up the resolution to `1,01 µm/px` and two `OutOfMemoryError` came up with only one stacktrace (this happened without any GC or cache clearing; didn't try with it enabled either). **This was running on 0.3.2**, I can give it a try on newer versions if any relevant parts have changed in the code. I've attached the whole classifier below (it's just a simple thersholder to filter out the background). I think the original analysis was done with 6 GB or 8 GB of RAM but I also had other scripts with `qupath.imagej.detect.cells.WatershedCellDetection` running and I can't say for 100% certainty whether it was the Pixel Classifier, Cell Counting or both which caused OutOfMemoryErrors. ```; ERROR: OutOfMemoryError: Java heap space. ERROR: qupath.opencv.tools.OpenCVTools.matToBufferedImage(OpenCVTools.java:765); qupath.opencv.ml.pixel.OpenCVPixelClassifier.applyClassification(OpenCVPixelClassifier.java:115); qupath.lib.classifiers.pixel.PixelClassificationImageServer.readTile(PixelClassificationImageServer.java:299); qupath.lib.images.servers.AbstractTileableImageServer.lambda$getTile$0(AbstractTileableImageServer.java:213); qupath.lib.images.servers.AbstractTileableImageServer$$Lambda$1691/0x0000000800796740.call(Unknown Source); java.base/java.util.concurrent.FutureTask.run(Unknown Source); qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:217); qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:287); qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); qupath.lib.analysis.images.ContourTracing.traceGeometriesImpl(ContourTracing.java:1157); qupath.lib.analysis.images.ContourTracing.traceGeometries(ContourTracing.java:1143); qupath.lib.analysis.images.ContourTracing.lambda$traceGeometriesImpl$9(ContourT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1719699500:24,error,error,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1719699500,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I tried to delete extensions, but the error remains.; It does not matter, the program works and seems to suit the user.; Thank you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-370794394:38,error,error,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-370794394,1,['error'],['error']
Availability,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996246433:145,down,download,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433,2,['down'],['download']
Availability,"I tried to modify the script proposed in #97 for the case demonstrated in the following figure:. ![02](https://user-images.githubusercontent.com/20478730/33174622-18c2a36e-d059-11e7-9972-ee1a58d4fe01.PNG). Script:; ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/TESTFOLDER""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (Polygon in selectDetections()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, Polygon.getName() + '.png')); }; print('Done!'); ```; I substituted _core_ from the original script with _Polygon_ and `getTMACoreList()` with `selectDetections()` to make it working for detections. . There is no error message in the script but it doesn´t work. Does anyone have an advice? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346617281:342,down,downsample,342,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346617281,3,"['down', 'error']","['downsample', 'error']"
Availability,"I used the jars from your links (in case I was getting old SNAPSHOTs), deleted the JavaCPP cache and I'm afraid that I'm still getting the same errors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668:144,error,errors,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668,1,['error'],['errors']
Availability,"I was able to find your example script located here. https://groups.google.com/forum/#!searchin/qupath-users/macro%7Csort:date/qupath-users/C3GRBF614N8/iewaOLGDAgAJ. ```; import qupath.imagej.plugins.ImageJMacroRunner; import qupath.lib.plugins.parameters.ParameterList. // Create a macro runner so we can check what the parameter list contains; def params = new ImageJMacroRunner(getQuPath()).getParameterList(); print ParameterList.getParameterListJSON(params, ' '). // Change the value of a parameter, using the JSON to identify the key; params.getParameters().get('downsampleFactor').setValue(4.0 as double); print ParameterList.getParameterListJSON(params, ' '). // Get the macro text and other required variables; def macro = 'print(""Overlay size: "" + Overlay.size)'; def imageData = getCurrentImageData(); def annotations = getAnnotationObjects(). // Loop through the annotations and run the macro; for (annotation in annotations) {; ImageJMacroRunner.runMacro(params, imageData, null, annotation, macro); }; print 'Done!'. ```; and replaced the ; `def macro = 'print(""Overlay size: "" + Overlay.size)'` ; with ; `def macro = new File(""myMacroPath/MacroName.ijm"").text`. and it worked!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/176#issuecomment-394919066:569,down,downsampleFactor,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/176#issuecomment-394919066,1,['down'],['downsampleFactor']
Availability,"I was seeing a bigger difference (`Files.exist(path)` taking about 1/3 the time). Here's my awful test, run through QuPath:. ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 10000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=0) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=0) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691548799:600,checkpoint,checkpointAndRun,600,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691548799,2,['checkpoint'],['checkpointAndRun']
Availability,"I we can define the start of the line, left and right could be defined from; the perspective of the starting point looking down the line towards the; end. Inner/outer will be confusing as this will change according to where; your object of interest is (unless there is some kind of way to manually; decide inner/outer). The latter approach seems interesting. However, I have problems envisioning; its. Perhaps it has to be tested. I has the potential to create a lot of; annotations fast. Den tir. 16. okt. 2018 kl. 10:38 skrev Pete <notifications@github.com>:. > Thinking about it some more... the polygon/polygon could be expanded, and; > then the *original* polygon/polyline could be subtracted from the result; > (this would require that it has some thickness; perhaps one pixel). This; > would result in multiple annotations being created - at least two (one for; > each side), but possibly more if the shape is self-intersecting. Then it; > becomes a matter of deleting the annotations that you didn't want.; >; > What do you think? Currently it's only an idea, I haven't tried; > implementing it...; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/228#issuecomment-430151424>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL9P1XkGW49Da7gop_J0ur51Mvddeks5ulZsGgaJpZM4Xdx7z>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430154093:123,down,down,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430154093,1,['down'],['down']
Availability,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-966046117:113,down,downloads,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117,1,['down'],['downloads']
Availability,"I would definitely recommend doing the export with ImageJ if you can, using the [ImageJ macro runner](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#running-macros) and a very simple ImageJ macro like this one. ```; saveAs(""tif"", ""/Users/peteb/Desktop/export/"" + getTitle()); ```. You'll need to make sure that the export directory exists before running it. Still, if you do it this way then if you open the resulting TIFF within ImageJ you should find that the pixel sizes are preserved - and even the information regarding where in the image the region was taken (look under *Image &rarr; Properties* in ImageJ). This isn't stored if you export in any other format (e.g. PNG, JPEG). Even if you don't need it currently, this at least gives the possibility that you could relate any detected regions etc. that come from processing the TIFF back to where they came from in the original, whole slide image. You can also modify the export resolution by changing the 'Downsample factor' in the macro runner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-317354440:976,Down,Downsample,976,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-317354440,1,['Down'],['Downsample']
Availability,"I would try using SLICs rather than tiles, but either way, it looks like you have the classification down. If you want a picture, do you mean something like the File->Export->Export Viewer Snapshot (but scripted)? Just trying to verify because there are a lot of image export options, though none of them will create a whole slide image. This issue has a bunch of links to various options: https://github.com/qupath/qupath/issues/216",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/251#issuecomment-449676448:101,down,down,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/251#issuecomment-449676448,1,['down'],['down']
Availability,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635240041:447,down,down,447,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041,2,['down'],['down']
Availability,"I'd say 3.3 GB is a perfectly respectable amount of RAM for QuPath (I assume your computer has 8 GB or 12 GB...?). Personally, I have never had a powerful enough computer to be able to give anywhere close to 64 GB when either developing or using QuPath... and I don't think I ever needed 16 GB either. Maybe my needs have been modest than @Svidro's but I think that it's not typical to need such huge amounts of memory for most people :). However, I note that you are using a CZI image. There are still some lingering issues around QuPath's ability to handle CZI images; depending on the type of image (e.g. TMA/non-TMA, stitched...), I've heard that sometimes it works very well and sometimes there are problems. It's on my to-do list to investigate why this happens... currently it is a little mysterious for me, and it's not clear if it's something I can resolve within QuPath or which requires more outside help. Anyway, I don't know if that is the source of your memory woes, but it could be. Out of curiosity,; * is your image brightfield or fluorescence? (the error suggests brightfield); * is it a 2D whole slide scan, or an image from a microscope?; * is it a TMA image, large tissue section, or something else?; * does QuPath operate reasonably smoothly, or horribly slowly before the crash? If you need a comparison, there are some [links on the wiki](https://github.com/qupath/qupath/wiki/Counting-cells) to test data that you might use for comparison.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343309138:1067,error,error,1067,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343309138,2,['error'],['error']
Availability,I'll close this as the proposed fix is available in v0.2.0-m10 - please reopen if the problem persists.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/403#issuecomment-618000560:39,avail,available,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-618000560,1,['avail'],['available']
Availability,I'll close this because https://github.com/qupath/qupath/pull/951 should now display a sensible error notification when attempting to use more features than OpenCV can merge.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1098276166:96,error,error,96,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1098276166,1,['error'],['error']
Availability,"I'll close this issue as part of my Saturday repo-cleaning, since support for overlays in SVG exports has now been merged and will be available in the next release (v0.5.0).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239:134,avail,available,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239,1,['avail'],['available']
Availability,I'll close this issue because v0.2.0-m9 is now available - please reopen if you find it doesn't solve the problem.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-586470278:47,avail,available,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-586470278,1,['avail'],['available']
Availability,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777#issuecomment-878087749:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749,7,"['Down', 'down', 'error']","['Downsample', 'downsample', 'error']"
Availability,"I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-641435861:40,avail,available,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641435861,2,['avail'],['available']
Availability,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:66,outage,outage,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434,1,['outage'],['outage']
Availability,I'll leave this issue open until either a more informative error is displayed (but that's a little awkward because of where in the code it occurs) and/or the limitation is added to the documentation.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092149041:59,error,error,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092149041,1,['error'],['error']
Availability,"I'm afraid I don't have much experience of handling dependencies on Linux. There is a little more information the binaries were created at https://github.com/qupath/qupath/issues/2. Basically I compiled it on Ubuntu 16.04 and have not tested it on 14.04. The possibilities that I can think of that might help would be:; * Try a newer version of Ubuntu if possible.; * Make sure Java is installed in Ubuntu. I don't think this should be necessary (since it is included in the QuPath download)... but perhaps.; * Try removing any ```.jar``` files connected to OpenSlide / OpenCV / JInput / JPen from within QuPath (the libraries should be mentioned in the ```qupath-***.jar``` file name). Apart from the Java Runtime Environment (JRE) itself, these are the parts that depend on native libraries. QuPath should still work without them, but will miss some features - such as whole slide image handling and classification. If the JRE is not the problem then hopefully this would enable QuPath to start, and you can recover some of the missing functionality by downloading [extensions](https://github.com/qupath/qupath/wiki/Extensions) that don't require native libraries.; * Try compiling QuPath from source from within Eclipse. You may find this easier to set up using Oracle's Java Development Kit than OpenJDK... but both should work.; * Try launching QuPath from the command line, setting the ```java.library.path``` variable and possibly using a different JRE if required... figuring out how to do this could be tricky, although [this](https://github.com/qupath/qupath/issues/27) may help a little bit. I hope something in there might be useful. If you are able to find a solution, it would be great if you could post it here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280861844:482,down,download,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280861844,3,"['down', 'recover']","['download', 'downloading', 'recover']"
Availability,"I'm afraid I don't know of any way to open at 16-bit .mrxs files within QuPath... and I don't know of any current developments that will change that situation. Basically, there are two libraries that can be used to read whole slide images into QuPath: OpenSlide and Bio-Formats. However, OpenSlide only supports a subset of 8-bit RGB .mrxs files (16-bit multichannel would require a very substantial redesign), and is [not officially supported](https://lists.andrew.cmu.edu/pipermail/openslide-users/2012-July/000377.html).; [This blog post](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/) explains why there is no support for .mrxs files within Bio-Formats. If another library became freely available that could read .mrxs files, then potentially this could be used to add support within QuPath. But I'm not personally aware of any such library, and the blog post above suggests that creation one would be a difficult task. I've tagged this post as 'help wanted', in case anyone sees a possibility to help by creating such a library/integration.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333917237:726,avail,available,726,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333917237,1,['avail'],['available']
Availability,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534118216:74,error,error,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216,1,['error'],['error']
Availability,"I'm afraid it looks like the ```.qpdata``` file is incomplete for some reason, effectively making the data corrupt/unreadable for QuPath. See [this thread](https://groups.google.com/forum/#!topic/qupath-users/sYzchFq-Y60) for some more information - and for some details about ```.backup``` files, which might (possibly) be able to help. This appears to happen very rarely, and I don't know why (since I don't recall the last time it happened to me). Do you happen to remember did anything strange happen / did QuPath crash when saving the data the first time around? Or can you figure out any way to reproduce the problem?. It's particularly hard to debug, since I presume that the problem happens when saving but the error log only shows what happens when trying to reload the data. I haven't found a way to reproduce it myself, so any insights you could have on what could have caused it would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/58#issuecomment-289494801:719,error,error,719,https://qupath.github.io,https://github.com/qupath/qupath/issues/58#issuecomment-289494801,1,['error'],['error']
Availability,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630152060:264,error,errors,264,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060,1,['error'],['errors']
Availability,"I'm afraid that some of the commands flagged 'experimental' are more experimental than others... and that's one that is more experimental than most. It was added as a very simple counting method, but I only used it myself for some TMAs to have a quick comparison of the results against 'full' cell-by-cell analysis. It turns out to have some troubles that need to be fixed, especially when used in other contexts. The problem @Svidro mentions is that it requires at least one 'hematoxylin' pixel to be able to return anything.; Another strange feature is that, if you look at the hierarchy, the 'Positive' region is _inside_ the 'Negative' one.; And a third is that the 'Num pixels' value is a count of the pixels at the downsample level used. This isn't necessarily 'wrong', but it is not ideal because the measurement name doesn't say what downsample was used. It would be preferable to have a value converted to µm. > Some of these problems arose because the command was initially designed to generate 'Any staining' and 'DAB' regions; at that time, it was logical to return nothing if 'Any staining' was 0. It was also logical to put the 'DAB' region inside 'Any staining' in the hierarchy. Unfortunately, these aspects weren't updated when 'Any staining' was switched to become 'Hematoxylin'. Added to all that, the command doesn't handle fluorescence or other stain types. For all these reasons, I expect that this command will be replaced or substantially changed at some point. Therefore, while you could maybe work around the limitations of the positive pixel command, I'd suggest trying to use other commands for now if possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-297915004:721,down,downsample,721,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-297915004,4,['down'],['downsample']
Availability,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/236#issuecomment-433483920:368,mask,mask,368,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920,1,['mask'],['mask']
Availability,"I'm afraid that, as an open-source project, we don't have the time or resources to provide code signing certificates at this time. We'd potentially need certificates for all operating systems, and it's not something we can work on right now. We provide full instructions to build QuPath from the source code, so if it helps your IT department could build a version themselves, rather than relying on the downloads here: https://qupath.readthedocs.io/en/stable/docs/reference/building.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1605#issuecomment-2312201023:404,down,downloads,404,https://qupath.github.io,https://github.com/qupath/qupath/issues/1605#issuecomment-2312201023,1,['down'],['downloads']
Availability,"I'm afraid this isn't working for me - the externalized strings seem to be missing. If I enter; ```; qupath/qupath-extension-jpen; ```; and agree to the prompts for a download, I end up with an exception. The important part seems to be:; ```; Caused by: java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key ExtensionControlPane.tag; 	at java.base/java.util.ResourceBundle.getObject(ResourceBundle.java:567); 	at java.base/java.util.ResourceBundle.getObject(ResourceBundle.java:561); 	at java.base/java.util.ResourceBundle.getString(ResourceBundle.java:523); ```. I also have the feeling the text field is too small, and it should expand (filling all available space would be ok):. <img width=""1154"" alt=""short"" src=""https://github.com/user-attachments/assets/3ffad225-9867-4f62-91ea-afbd60762928"">. If being really picky, I'd also ask for a tiny bit of horizontal space between the label and text field (possibly 5 or so pixels of padding). Lastly, the tooltip is also misleading - it implies that `qupath-extension-stardist` is a valid repository on its own (although maybe just because I have the old strings).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2258818054:167,down,download,167,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2258818054,2,"['avail', 'down']","['available', 'download']"
Availability,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631377861:30,failure,failures,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861,3,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'failures']"
Availability,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/636#issuecomment-724191551:69,error,error,69,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551,6,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I'm not sure about this. It has been a long time, but I think the reason I excluded sum from non-nucleus measurements is because it is common for people to train classifiers using all features. Because cell expansion is only distance-based, I felt that sum measurements outside the nucleus could be extremely unreliable. Also, the sum depends upon the resolution at which the measurement is calculated; for the default cell detection, this is the detection resolution, but that might not be what the user expects. The need for a nucleus sum, however, seemed sufficiently common that it should be included - and the nucleus ROI is likely to be more reliable, which reduces the problems slightly. I realise it's a judgement call and people may disagree. I'm reluctant to change the built-in cell detection, since the current behavior hasn't changed across releases and any modifications can impact classifiers. I'd rather we focus on moving away to alternative cell detection methods, and decouple measurement from detection to improve flexibility.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883:648,reliab,reliable,648,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883,1,['reliab'],['reliable']
Availability,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570329327:174,down,download,174,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327,1,['down'],['download']
Availability,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:289,failure,failures,289,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670,2,['failure'],['failures']
Availability,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/328#issuecomment-499254844:118,error,error,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844,1,['error'],['error']
Availability,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:416,error,error,416,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,I'm unable to reproduce this on Windows 10; using _Automate &rarr; Shared scripts &rarr; ..._ my script opens without an error.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518238493:121,error,error,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518238493,1,['error'],['error']
Availability,"I've added a PR that is intended to address this... although its main focus is on another related bug: https://github.com/qupath/qupath/pull/1070. > Visualizing objects overlaid onto images shouldn't result in substantial lag. Ideally it shouldn't, but if it does I wouldn't say it's necessarily a bug... since QuPath is already needing to do a *lot* of stuff to get acceptable performance across a wide range of scenarios. Specifically here:; * For a downsample >= 1, repainting detections caches tiles and multiple resolution levels for performance - this is why QuPath can handle millions of objects.; * For downsample < 1, repainting happens for all detections in the field of view (like for annotations) for improved appearance without nasty bitmap-upsampling artefacts. This is inevitably laggier than using cached tiles, but caching itself has considerable overhead in terms of memory and worse appearance. I think this tradeoff makes sense, since details really matter when viewing the image at high magnification but the number of objects visible should be limited (possibly thousands, but not millions). However it does mean that if you have a large enough monitor, many detections, and a downsample value slightly less than 1, performance there certainly can be a noticeable lag... and object connections make this worse by meaning that thousands more lines need to be rendered. However, investigating this revealed that QuPath was painting all the connections twice, which certainly wasn't helping things :). So the PR fixes the double-painting bug. Along the way, it adds a spatial cache that enables QuPath to be a bit smarter about which connections it paints. The main reason for this change is to overcome an issue with long connections sometimes being broken at some resolutions:. ### Old behavior:; ![connection_bug-1](https://user-images.githubusercontent.com/4690904/194024037-795fceaa-e542-4c67-8fa2-84e6a8aca691.png). ### New behavior:; ![connection_fix-1](https://user-images.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189:452,down,downsample,452,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189,2,['down'],['downsample']
Availability,"I've attempted a fix at https://github.com/qupath/qupath/pull/1344 - it seems to be working on my computer, so if no new problems arise the correct version should be available in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244:166,avail,available,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244,1,['avail'],['available']
Availability,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-558638519:5,down,downloaded,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519,1,['down'],['downloaded']
Availability,"I've flagged this as ready for review now. It definitely needs more testing. As described by @carlocastoldi the server is loaded whenever *any* change to the metadata is made. The server can be loaded more often might be expected, sometimes for subtle, hard-to-address reasons. Some relevant facts:; * `ImageServerMetadata` *isn't usually saved with an image when it is first added to a project*. This only happens the first time the data file is saved.; * The `ImageServerMetadata` is updated as soon as an image is opened in a project to ensure that the name specified in the project matches that in the server metadata. This triggers the server to be loaded if; * The `ImageServerMetadata` isn't available, or; * The `ImageServerMetadata` is available, but contains the wrong name (e.g. the name was changed in a project, but then the data file wasn't saved afterwards); * *Run for project* will always force the `ImageServer` to be loaded, because it will always save the data - and this act of saving requires the `ImageServer`. So you can only get advantages if you avoid *Run for project*, e.g. by using *Run for project (without save)* instead.; * We can't rely on not saving if there have been no changes, because the script editor now automatically fires a hierarchy change after completion. This means QuPath *always* thinks that the script may have changed the `ImageData`, so `ImageData.isChanged()` returns true. We didn't used to do this, but then we had to keep telling users to add `fireHierarchyUpdate()` at the end of many otherwise simple-looking scripts, and that was a pain for everyone. This basically means that lazy-loading only works if the data for an image has been saved at least once, and the user hasn't messed around too much with image names within their project. The 'easy' way to trigger an image to be saved once is to do a 'Run for project' script - even if the script doesn't do anything. This should be enough to prompt the `ImageServerMetadata` to become embedd",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037:699,avail,available,699,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037,4,['avail'],['available']
Availability,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925125755:58,down,downloading,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755,2,['down'],"['download', 'downloading']"
Availability,"I've just compiled QuPath from main and can confirm that this bug has now been fixed (in 0.4.1, setting a point annotation class causes a ""bidirectional binding failed error""). Thanks Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1381853809:168,error,error,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1381853809,1,['error'],['error']
Availability,"I've made an update that will be included in v0.1.2 so that QuPath can recover more gracefully if it finds that OpenSlide cannot be loaded. Previously, it recovered only the first time... but subsequent attempts to open images were thwarted by a particularly nasty error - which caused the trouble you found. Therefore while it still remains a mystery why OpenSlide cannot be used on one of your computers, at least there should be no need to manually disable OpenSlide through renaming from now on. (Note: I'd recommend uninstalling QuPath before installing the update, since otherwise it is likely that the current files, renamed and not, will hang around within Windows... they shouldn't cause trouble, but uninstalling manually can help make sure.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268797552:71,recover,recover,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268797552,3,"['error', 'recover']","['error', 'recover', 'recovered']"
Availability,"I've made some changes in the recent commits that should help. This should automatically result in the .bkp file being used if the 'proper' data file cannot be found. I was unable to find any general problem with closing from the task manager, but it would make sense if the software hangs because of a problem writing the data file and it is force quit for that reason. In this case, restoring from the backup is probably the best QuPath can offer anyway. I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-641434675:497,avail,available,497,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-641434675,1,['avail'],['available']
Availability,"I've now updated the documentation on using ImageJ with QuPath at https://github.com/qupath/qupath/wiki/Working-with-ImageJ. I'll close this issue now, but please reopen it if things aren't working as described. The use of visibility status to influence what is sent to ImageJ should be available in the v0.0.4 release of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253767302:287,avail,available,287,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253767302,1,['avail'],['available']
Availability,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518022687:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687,1,['error'],['error']
Availability,"I've run it several times with different JDKs, both x86_64 and aarch64. Tests have passed every time... except once, using AdoptOpenJDK 16 with Rosetta. ![Screenshot 2022-01-28 at 11 40 01](https://user-images.githubusercontent.com/4690904/151541015-d439dd98-5411-4115-ad08-c91cab4f620c.png). However I haven't managed to repeat the failure despite repeatedly trying with the same JDK. I am confused...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572:333,failure,failure,333,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572,1,['failure'],['failure']
Availability,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-634101819:314,error,error,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819,3,['error'],['error']
Availability,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:378,error,error,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828,1,['error'],['error']
Availability,"INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB),",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1815,ERROR,ERROR,1815,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,"If it is an image or BioFormats based issue, I doubt there is much that can be done on the QuPath end. **Have you tried opening the file in FIJI using the BioFormats importer?** If it works there and doesn't in QuPath, it might be a QuPath interpretation error, otherwise it would need to be handled on the BioFormats issues page/Image.sc forum. Also, thank you for taking the time to fill out the whole form :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509283482:255,error,error,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509283482,1,['error'],['error']
Availability,"If it's TIFF you want, then it's best to send it to ImageJ and save from there. There's still a size limit, so if you want to export especially large regions and that still doesn't work then let me know... in the short term you might need a script to work around that limit. Two extra notes:; * QuPath can't export regions that are approaching the size of a whole slide yet at all; i.e. it can handle thousands of pixels along each dimension, but not tens of thousands.; * If the *Downsample factor* is 1 and the image is RGB, then *Export image region* should give you the same pixels in the PNG as you'd get in the TIFF, at the full resolution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/143#issuecomment-361588582:481,Down,Downsample,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/143#issuecomment-361588582,1,['Down'],['Downsample']
Availability,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/294#issuecomment-475407873:34,error,error,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873,3,"['avail', 'error']","['available', 'error']"
Availability,"If you can provide more information about when it does/doesn't happen that would be helpful. Also if you have seen it across different versions of the software and different methods of generating detections (e.g. using the built-in cell detection instead). And also if it persists after restarting QuPath. Since you mention pixel classification, I wonder if it is still active in the background. (When v0.2.0-m10 becomes available you will be able to use VisualVM to profile it and see what might be causing slowdowns... but it doesn't work easily with v0.2.0-m9)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614159617:421,avail,available,421,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614159617,1,['avail'],['available']
Availability,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418390877:238,error,errors,238,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877,1,['error'],['errors']
Availability,"If you do not want to or are not able to rescan those images, one option is using the free Pannoramic Viewer from 3DHISTECH to export the images in 8bit format. It can be obtained at: ; http://www.3dhistech.com/downloads. I recommend maximizing the tile size for speed and your own sanity :) Especially as you would need some kind of external Python script or something in order to convert the images, as Pannoramic viewer only handles one at a time, manually. I recommend multiple logins on a server, or multiple computers!. Last I checked, the newer CaseViewer did not have as many options for exporting and could not be used for this purpose.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333959855:211,down,downloads,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333959855,1,['down'],['downloads']
Availability,"If you don't have a huge number of cores, and could tolerate just manually annotating and deleting certain regions, that might be the easiest way... draw around the region you don't want (*after* detecting cells/superpixels or whatever your previous step was) and press *Backspace* to delete the annotation - and then choose *No* when asked about keeping descendent objects. Based on the description, my guess is you're using *Positive cell detection*. You might also try to create a classifier (as described [here](https://github.com/qupath/qupath/wiki/Classifying-objects)) and leave it up to the classifier to find the areas of carbon based on whatever features have been calculated; for example, you could assign classifications for *Carbon* and *Valid* (or whatever other category names you want to use). Then delete the carbon areas and reapply the positive/negative classifications using something like the following script:. ```groovy; carbon = getDetectionObjects().findAll {it.getPathClass() == getPathClass('Carbon')}; removeObjects(carbon, true); setCellIntensityClassifications('Nucleus: DAB OD mean', 0.2); ```. If this doesn't work well enough, then you can tell QuPath to calculate new features for each cell using *Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)*; I'd suggest adding the mean values for red, green and blue as a starting point and see if that's enough. Otherwise, if you're able to provide an example image and say a bit more about what steps are involved in your analysis then maybe we can think of other ways.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/172#issuecomment-388539146:52,toler,tolerate,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/172#issuecomment-388539146,1,['toler'],['tolerate']
Availability,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-587001656:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656,1,['error'],['error']
Availability,"If you use VisualVM then you should be able to find exactly what takes time. Thumbnail generation can't safely be done in parallel because there's no guarantee the images will be pyramidal, so there is a high risk of out of memory errors. That being said, I'm not certain thumbnail generation is the problem. If it's once per day, there could be some issue associated with update checking... but I can't see why that would be a problem and it wouldn't happen with the project is requested. VisualVM should resolve it one way or another in any case. One other thing: is there anything conventional about where the project/images are stored? The need for a reboot makes me think there could be an operating system component. I've never seen it myself and don't recall anyone having reported it before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611:231,error,errors,231,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611,2,"['error', 'reboot']","['errors', 'reboot']"
Availability,"If you've already got everything set up in _GitHub Desktop_, there should be a _Fetch origin_ button towards the top right - click that, and then again if the text changes to _Pull origin_. Then, with the latest code successfully pulled down, in the _History_ tab on the left the top entry should be _Fixed point painting bug_. If you follow the rest of the instructions to build QuPath, you should end up with a version that works. I've tested it on Windows and Mac and it is working here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409486427:237,down,down,237,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409486427,1,['down'],['down']
Availability,"ImageDisplay`. Eventually I think this kind of color transform approach should completely replace the (currently GUI-only) color transforms for better consistency and more maintainable code. More generally, I need to be thinking broadly about existing users as well as how the software will need to look a year from now, or two years from now, to meet a host of new applications. And I need to think about how much of those years will go into maintaining existing things where it is *already* clear they are not using the right approach. Often, there are lots of considerations that I haven't articulated anywhere (there just isn't time), but which are impacted by the choices. For example: finding a better approach to handle brightness/contrast perhaps could/should also support serializing the image histograms (since `ImageDisplay` uses them). Storing these histograms would make opening images a great deal faster as well. But then, having histograms separated from the GUI (and JavaFX) would also make intensity distribution information instantly available in general. This might open up new and faster processing and analysis options - including the use of automated thresholds based on such histograms. If something is not public, it can be freely changed without breaking other extensions (and also well-behaved scripts). If it is public, other extensions and scripts that use it will definitely break. Each breaking change costs a) user annoyance, and b) developer time. Making fewer things public reduces that. Time is incredibly precious... there are now (finally) two of us working on it, but there are quite some demands on us. And in academia, a lot of what we are judged on isn't software anyway. So I think it is important we follow our beliefs about what will protect our time and be better in the long run - trying to be helpful, but not caving to pressure :). So why the scripting approach?. In general, when something is used internally by QuPath, we have a much better idea of wh",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:3776,avail,available,3776,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['avail'],['available']
Availability,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479821853:615,down,down,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853,1,['down'],['down']
Availability,"In a way. I think once you get the first TMA core, you can keep Adding Row and Adding Column until you get the correct number. I suppose if those commands show up in the workflow and/or are scriptable, you might be able to craft something through scripting. Pete also might know something more elegant. ; I tend to just cheat though. If you rename the file I attached (TMA.txt) to a .qpdata file, then give it the same name as your image, for example, MyImageName.qpdata, you get to start off with a fairly large TMA, which you can then shave down or add columns to as necessary. You may need to do a fair bit of re-aligning though. Plus if you are using a standard TMA size for all of your images, once you have your TMA the way you want it, just save the data file make a spare copy of it somewhere. You can then use that file and rename copies of it to YourNextTMA.qpdata as many times as you need. All of the .qpdata files should be in the ""data"" folder in your project directory. [TMA.txt](https://github.com/qupath/qupath/files/998431/TMA.txt)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-301233047:543,down,down,543,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-301233047,1,['down'],['down']
Availability,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411576889:217,down,down,217,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889,2,"['down', 'error']","['down', 'error']"
Availability,Intriguing - if you download the x86 build does it have the same behavior? I guess you may have to rename any Apple silicon installation beforehand (I'm not sure if/how the general package installer deals with multiple installations with the same name).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309:20,down,download,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309,1,['down'],['download']
Availability,Is an sha256 hash available for the current Qupath (0.3.2) release? (specifically the windows distribution?),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738,1,['avail'],['available']
Availability,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956259133:26,avail,available,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133,2,"['avail', 'error']","['available', 'error-that-caused-the-installation-to-fa']"
Availability,"It all depends on different factors such as the `downsample` used and the size of your image (which might be more helpful if it is in terms of pixels, rather than microns) amongst other things. Also, the `Positive pixel count` is a deprecated command, and was replaced in most recent versions of QuPath, to which we strongly recommend updating. The pixel classifier might just do what you need!. I will close this issue with your permission as it is not a bug. Is that ok?; For questions and help, you can ask on the community forum, where you'll find answers and more guiding: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/611#issuecomment-701504695:49,down,downsample,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701504695,2,['down'],['downsample']
Availability,"It already came up on the forum, I created an Issue for it, and @melvingelbard fixed it :); https://github.com/qupath/qupath/issues/557. Fix will be available in v0.2.2 (planned to be available in the next day or two, if nothing else comes up before then...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/572#issuecomment-664006280:149,avail,available,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/572#issuecomment-664006280,2,['avail'],['available']
Availability,"It appears that raising the min area fixes this issue, at least on the example image. The error goes away with `minArea` set to `5.0`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620642254:90,error,error,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620642254,1,['error'],['error']
Availability,"It could be I was thinking of the pre-tiling days for cell detection, or maybe SLICs and subcellular detections on large images? And yes, I'm probably not typical :) Never used CZI images, so I have no idea about the effect of those. Anyway, giving a few things a shot. One thing I already noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.ut",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:349,avail,available,349,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,8,"['avail', 'down', 'error']","['available', 'down', 'errors']"
Availability,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:171,error,error,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822,2,['error'],['error']
Availability,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619374801:15,error,error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"It has been a while, but I do not think you should have to install anything for Bioformats. All you need is the JAR file off of their website, and the JAR file from Pete, both at: https://github.com/qupath/qupath-bioformats-extension; And as it says, just drag them into the open QuPath window to add them to QuPath. I am not sure why you are having issues with a visual C++ redistributable; I am not entirely sure if that is related. At least, I do not recall having to install anything else when adding bioformats to QuPath, even when it was one of the first things I put on my computer. Is the error a QuPath error? It would probably be best to include a picture or at least the text of the error, and exactly when the error pops up (when you drag the bioformats extension into the QuPath window? when you try to open the CZI file?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-356998068:597,error,error,597,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-356998068,4,['error'],['error']
Availability,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631493326:53,error,errors,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326,6,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"It is a complete guess without seeing your image, but I'd try:; * Send the image to ImageJ: https://github.com/qupath/qupath/wiki/Working-with-ImageJ; * _Process &rarr; Find Maxima_ and preview the point selection. Experiment with the noise tolerance, with the goal of _detecting_ the white center.; * If the count looks basically ok, make sure the output type is 'Point Selection' and click 'OK'; * Use _Plugins &rarr; Send ROI to QuPath_ to initialize the point selection; * Edit the points in QuPath as necessary",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461197765:241,toler,tolerance,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461197765,1,['toler'],['tolerance']
Availability,"It looks good, got a few bugs/points (sorry ignore if any are repeats from what's already been discussed) ; 1. The extension text is black in dark mode; 2. For the order, should ""Core Extensions"" be first since this will be relevant for all users? Then filters down to those wanting to explore extensions further? I do like the idea of combining the ""Manage Extension"" section into a bar at the top of the ""User Extensions"" section.; 3. Also the ""Core Extensions"" section could have a max height defined since we know the number of extensions?; 4. Width of window on opening squishes the ""Manage Extension"" section, increase width or change ""download"" to the symbol also used in WSInfer?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748510267:261,down,down,261,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748510267,2,['down'],"['down', 'download']"
Availability,It looks like the error occurs rather deep in the JavaFX code [here](https://github.com/javafxports/openjdk-jfx/blob/4f0addff16de7182752bc60541f44baeb0e99d2a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuButtonSkinBase.java#L188).; Does it happen consistently? At first glance it doesn't look like it's something that can be resolved within QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518300141:18,error,error,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518300141,1,['error'],['error']
Availability,"It looks like you have things down pretty well on the scripting side, hopefully this gives you the extra nudge to get everything working in a TMA:; https://gist.github.com/Svidro/68dd668af64ad91b2f76022015dd8a45#file-class-percentages-to-tma-measurements-groovy; You will want to rewrite each of your cell lists for the current core's ""total"" (using another findAll), which is the total number of cellsObjects in that core. In this case the measurements are placed into the TMA measurement list, but you could also print them out if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/255#issuecomment-454414897:30,down,down,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454414897,1,['down'],['down']
Availability,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414650057:262,down,download,262,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057,3,"['down', 'error']","['download', 'error']"
Availability,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382#issuecomment-561707434:260,error,error,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434,1,['error'],['error']
Availability,"It seems to work, not a single failure reported. Some stats:. ```; Converted 47303 regions.; 43 regions had ""warnings"" on conversion.; The warnings affected 64 ""problematic but small"" subregions.; Area changes stats (original_pixel_sq - fixed_pixel_sq):; mean 0.903476; std 1.829168; min -0.032314; 25% -0.003454; 50% -0.000293; 75% 0.732723; max 7.054605; ```; ![area_changes](https://user-images.githubusercontent.com/642252/78652097-8f837600-78c1-11ea-9345-c8e58fcf69b8.png). We are missing some visual inspection that I hope will happen soon, but I would tentatively declare this case closed. Thank you so much for your prompt help, this is the classiest support I have seen in quite a long time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434#issuecomment-610277278:31,failure,failure,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610277278,1,['failure'],['failure']
Availability,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520237540:381,down,downsample,381,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540,4,"['avail', 'down']","['availableChannels', 'down', 'downsample']"
Availability,"It shouldn't be file size. Under *Help &rarr; Show setup options* I can restrict the RAM available to QUPath to 1GB and can still open the image without problems. You can also try the memory monitor from https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. The log says `Not a file that OpenSlide can recognize`. It's not clear to me if *any* images are working for you using OpenSlide. I asked above: under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? If you see that for any images, then we can conclude that OpenSlide is (at least partially) working. But if you always see *ImageJ server* or *Bio-Formats server*, then it probably isn't and that's the problem that needs to be solved. In that case, it would help to know if a separate installation of OpenSlide on your machine can read the image at all through any means.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371850256:89,avail,available,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371850256,2,['avail'],['available']
Availability,"It sounds like ```jep-3.6.1jar``` is not a problem any more, and it is instead related to the native libraries. I've just had a look on Ubuntu, and there's a ```jep.so``` and ```libjep.so```. Do you have both, and did you copy them both in?. When I do that in Ubuntu I don't get any library or class def errors. It still doesn't work though, due to an ```attr not found``` problem...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262797014:304,error,errors,304,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262797014,1,['error'],['errors']
Availability,"It sounds like a memory issue to me too, although I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:; ```groovy; // Print the current memory situation; def runtime = Runtime.getRuntime(); double scale = 1.0/1024.0/1024.0; print 'Max memory (MB): ' + (runtime.maxMemory() * scale); print 'Total memory (MB): ' + (runtime.totalMemory() * scale); print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache; javafx.application.Platform.runLater {; getCurrentViewer().getImageRegionStore().cache.clear(); System.gc(); }; ```. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally be lower the second time, assuming you had previously been browsing around the image (and therefore filling up the tile cache). Running this script before running the cell detection might increase the chances of it ending successfully. If it still sometimes fails, but it looks like a memory problem, then either increasing the memory limit or decreasing the number of parallel threads could help - see https://github.com/qupath/qupath/wiki/Troubleshooting for more info.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355845333:1106,down,down,1106,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355845333,2,['down'],['down']
Availability,"It sounds like this might be better addressed on the forum, preferably with an example file hosted and shared, the bio-formats tag added, and the error message from the log (question mark, upper right) included. ; There are some Versa related posts as well, at least one as recently as this year - https://forum.image.sc/t/qupath-cant-open-svs-images-from-aperio-versa-slide-scanner/93502/10",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1580#issuecomment-2276493467:146,error,error,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/1580#issuecomment-2276493467,1,['error'],['error']
Availability,"It sounds like you need a simple, one-line script that contains your settings. QuPath should already record these settings for you under the 'Workflow' tab. Double-clicking an entry there should open/run the corresponding command with the appropriate settings... but this is only available for commands you've already run for the current image. To transfer settings across an image, press *Create script*. The automatically-generated script will probably contain too many lines, but you can simply delete the ones you don't want; for example, just keep the last line if the last thing you did was run the cell counting algorithm. The script you end up with probably looks something like this:; ```groovy; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```. You can then save this as a file with the extension ```.groovy``` and drag it onto QuPath again to open it. Press *Run &rarr; Run* from the top menubar to apply it. There is some more information under https://github.com/qupath/qupath/wiki/From-workflows-to-scripts",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/105#issuecomment-333905568:280,avail,available,280,https://qupath.github.io,https://github.com/qupath/qupath/issues/105#issuecomment-333905568,2,['avail'],['available']
Availability,"It will only show up when your pixels have a size. Your previous post showed that your images were missing metadata indicating what size each pixel was, so that option would not have been useful. Also, it is essentially a downsampling option, to make the cell detection run more smoothly.; https://www.youtube.com/watch?v=Hh-53Uqik-Y; Another description:; https://forum.image.sc/t/qupath-intro-choose-your-own-analysis-adventure/27906/12. Finally, questions like this should be directed to the forum, not the issues page.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/357#issuecomment-527537199:222,down,downsampling,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/357#issuecomment-527537199,1,['down'],['downsampling']
Availability,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-633901008:714,avail,available,714,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008,4,"['avail', 'error']","['available', 'error']"
Availability,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420294416:142,down,downsampled,142,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416,8,['down'],"['downsample', 'downsampled']"
Availability,"It works now if I use explicit strings:. String serverName = server.getShortServerName(); String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"",serverName,downsample, xi, yi, wi, hi, z, ext); IJ.save(imp, ""D:\\QMDownload\\5\\Leica\\Leica-Fluorescence-1_tif\\"" + name). INFO: Written tile 5 to D:\QMDownload\5\Leica\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif; INFO: X =4000.0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472942759:176,down,downsample,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472942759,1,['down'],['downsample']
Availability,"It would also be good if you could copy and paste the full long error message, in case that helps identify exactly which library is failing to load (OpenSlide links to several).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265488012:64,error,error,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265488012,1,['error'],['error']
Availability,"It would help to see your Workflow script, as I am not really sure what you mean in your first paragraph. Perhaps you were using the Points Tool?. It also sounds like you might be running into a lack of memory error, but I don't have enough information about your computer to help there either. QuPath requires significant resources (RAM) to run large scale cell detections and the program is failing to run Positive cell detection might indicate a problem there. Another possibility is that by default it only runs the cell detection on the ROIs that you have selected. If you want to run Positive cell detection on everything, you would need to make sure you have either nothing or everything selected.; I'm not sure I can be much more help without your [Workflow](https://github.com/qupath/qupath/wiki/Workflows) or more exact information about the steps you took.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342841570:210,error,error,210,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342841570,1,['error'],['error']
Availability,"It's definitely possible, as long as each annotation is of some manageable size (which it is here). A couple of blog posts are relevant:; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/07/script-extracting-image-regions-to-imagej.html. For the first one, you can remove the `ImageIO.write(imgMask, 'PNG', fileMask)` bit if you don't need a binary image (which wouldn't be very meaningful here...). For the second you'd need to uncomment the `//IJ.save(imp, '/path/to/save.tif')` part, choose a sensible output name, and avoid showing the image through ImageJ. It should be possible to _Run &rarr; Run for project_ in both cases, so long as your image files all have distinct names. A recent script from Sara might help too: https://groups.google.com/d/msg/qupath-users/aHcikTZF9HE/dkcn0BoFBwAJ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/233#issuecomment-431887783:227,mask,masks,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/233#issuecomment-431887783,1,['mask'],['masks']
Availability,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461569891:187,down,down,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891,2,['down'],['down']
Availability,"It's intended behavior, albeit with room for improvement. You can adjust the settings beyond what the slider permits by double-clicking on the label displaying the min/max display value: https://github.com/qupath/qupath/issues/26. For 8-bit it is straightforward and the range should be 0-255. For 16-bit and 32-bit it is not so straightforward; the actual range of the data can be much less than the range permitted by the bit-depth, and a slider from 0-65,535 would be extremely difficult to adjust with any level of accuracy. Also, for 16-bit images the actual camera may well be 12 or 14-bit - but that information isn't necessarily available in the image metadata. When an image is being opened, QuPath generates a histogram per channel and the default min/max values are taken from this. For large images, this must be calculated from a lower-resolution image. Because decreasing resolution likely involves smoothing, the maximum of the low-resolution image may well be less than the maximum of the full-resolution image.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/352#issuecomment-520907454:637,avail,available,637,https://qupath.github.io,https://github.com/qupath/qupath/issues/352#issuecomment-520907454,1,['avail'],['available']
Availability,Its running with no OpenSlide errors in the logs,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748522020:30,error,errors,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748522020,1,['error'],['errors']
Availability,Ive just downloaded and re-installed on my mac and its working now! What a pallava! I think I was tried to add extensions on the mac where they weren't needed and it seems to be working now. Ive just had a look at some tissue detections and it seems to be functional! I will continue using the software and would you mind if I checked in again if I continue having problems?. Thank you again,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357061650:9,down,downloaded,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357061650,1,['down'],['downloaded']
Availability,"Just as another suggestion:. In our pathology dataset library we implemented functionality that allows you to retrieve a tile at a location with a certain size and at a **specific MPP** (see [here](https://github.com/Bayer-Group/pado/blob/738ed0f814297f22ba005d5b30d254244e23ef82/pado/images/image.py#L506-L508)). Because after talking to a few researchers, they usually don't want to think about the downsample values of levels in the file. They want tiles at a specific magnification / mpp / resolution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1279321821:401,down,downsample,401,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1279321821,1,['down'],['downsample']
Availability,"Just linked this in the forums as well, but if you can define how you want to draw the annotation within a text file (groovy script) you might be able to use:; https://groups.google.com/forum/#!searchin/qupath-users/command$20line$20|sort:date/qupath-users/lE5AJDcxA28/JR0UouPLAAAJ; to get started. The following positions the viewer (although you need to create the viewer first, see the whole file in the link below):; ```; viewer.setDownsampleFactor(downsample); viewer.setCenterPixelLocation(xCoordinate, yCoordinate);; ```; from: https://gist.github.com/Svidro/86fb224d69484ae5955631ce68d27054#file-slide-explore-groovy; which was modified from who knows where... I think Pete's memory monitor. Exporting simple annotations as coordinate arrays is fairly straightforward (and definitely on the forums somewhere), but I am not as sure about XML formatting...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/173#issuecomment-389972084:453,down,downsample,453,https://qupath.github.io,https://github.com/qupath/qupath/issues/173#issuecomment-389972084,2,['down'],['downsample']
Availability,"Labels don't seem to be stored in a consistently identifiable away across scanners and file formats, and I'm afraid I don't think there is any reliable way for QuPath to identify automatically if a 'small image' within a larger file really is a slide label or something else. This would all be much easier if QuPath only needed to support a few scanners, and especially if it was written with file format specifications available, but unfortunately we don't have that much information :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/40#issuecomment-622246686:143,reliab,reliable,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/40#issuecomment-622246686,2,"['avail', 'reliab']","['available', 'reliable']"
Availability,"Latest commit adds more options to restrict where live pixel classifier prediction is calculated. Previously, it could be restricted to annotations - but using their full bounding box. This could sometimes still result in very large regions being processed. ![annotations_bounds](https://user-images.githubusercontent.com/4690904/195979231-ee656727-83dd-4569-80d7-318beb8c4c6f.png). Now it's also possible to restrict using the annotation ROI directly (i.e. the ROI shape intersects the tiled region that may be processed). This can reduce the amount of processing required substantially in some cases. ![annotations_only](https://user-images.githubusercontent.com/4690904/195979232-ef0c6862-d715-47b9-a022-0f4267f1c47c.png). Both options still exist, since the more complex calculations to restrict the predicted regions could *potentially* slow things down in some cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970:854,down,down,854,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970,1,['down'],['down']
Availability,"Library(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:748); 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 13:20:08.256 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 13:20:17.509 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Calling Platform.exit();; ```. In Centos 6, I found some information about the error message ""j java.lang.Object.<clinit>()V+0"" : this may be a stack problem. I tried to change the thread stack size with -Xss in QuPath.cfg [JVMOptions], but I can not do it : . ```; 13:11:03.460 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; QuPath Error invoking method.; QuPath Failed to launch JVM; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:2856,error,error,2856,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,2,"['Error', 'error']","['Error', 'error']"
Availability,Linux binaries are only available for the very first release (v0.0.1). There hasn't yet been any audible demand for updated binaries... but they should at least be provided for v0.1. Ideally these would use OpenJDK and OpenJFX... although so far it has proven easier to create them using Oracle's JDK. Any Linux users who would like to see Linux binaries are invited to comment here...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-258683889:24,avail,available,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-258683889,1,['avail'],['available']
Availability,"Looks good! I won't get a chance to try the code for a few days, but I will soon - sorry for the delay... Since you mention adding it to the preferences, this is how it works:; ```java; import javafx.beans.property.DoubleProperty;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.prefs.PathPrefs;. DoubleProperty preference = PathPrefs.createPersistentPreference(""ijFreeMemory"", 0.5);; QuPathGUI.getInstance().getPreferencePanel().addPropertyPreference(; preference, Double.class, ""Extract region memory limit"", ""ImageJ"",; ""The proportion free memory that ImageJ is allowed to use when extracting regions (set > 1 to use as much memory as possible)"");; ```. And your reference to using it elsewhere reminds me of the command to extract regions [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-extension-ij/src/main/java/qupath/imagej/gui/commands/ExtractRegionCommand.java#L120). Looking back at that code, it seems to contain an error in using totalMemory rather than the proper combination of max/total/free that you used. That is probably another candidate for improvement, and for calling your new method...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-357533150:948,error,error,948,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-357533150,1,['error'],['error']
Availability,"Looks like I need to also get my head around `includeBuild`, though the gradle documentation is as abstract as ever. I don't really see a huge difference either way. Would we be pushing updates to the openslide (or other ""core"" extensions) without making a new QuPath release?. I guess it would make issue tracking (and responsibilities) more granular if we can gradually slim down the qupath repo, though if that has the side-effect of making issues harder to find, then it's not really great. It is straightforward to extract the git history: https://docs.github.com/en/get-started/using-git/splitting-a-subfolder-out-into-a-new-repository",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343:377,down,down,377,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343,1,['down'],['down']
Availability,"Mmmm, I find I have no way to hide the unclassified TMA cores. And sorting my ascending/descending seems to only impact the two that I gave classes to - the rest remain stubbornly as they were (both before and after the classified core) - so I initially didn't think sorting was implemented. Since we aren't dealing with NaNs, I have the feeling that string sorting would make sense here... even if that means 'Unclassified' being sorted as a string. And actually... what do you think about having 'Name' as another potential 'Measurement'... which we could relabel 'Sort by'? Then we could change 'Show measurement' to 'Show value' - both to save space, and because we're no longer limited to measurements. The name is especially informative for TMA cores, but it looks like we don't currently have a way to display it. Minor thing: when I assign a classification to a core _after_ displaying the grid, this becomes available in the 'Classes' drop-down - which is nice. The less nice thing is that all the classes there appear deselected.... but aren't necessarily not visible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2321529903:917,avail,available,917,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2321529903,2,"['avail', 'down']","['available', 'down']"
Availability,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/513#issuecomment-639520268:254,error,error,254,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268,1,['error'],['error']
Availability,"My thought was that with the addition of merging the data set (links below), you can still end up with a final sheet that represents the data points from your cores. It would be one project per TMA, but at least you could fairly easily get the results right now, rather than waiting for m3. Or I guess you could continue to use 1.3, that works as well :); https://forum.image.sc/t/h-score-by-object-class/27490/2?u=research_associate; If you want the visualization of your cores, that wouldn't help at all, of course. If you are in Zen (not sure which all versions), you can uncheck ""show scenes individually"" (I might not be remembering the exact wording, it is just below the image area, slightly to the left) to get an overview image. We have used that to create downsampled overviews of multiple wells on a 6 well plate, for example.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509669310:766,down,downsampled,766,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509669310,1,['down'],['downsampled']
Availability,"Neat idea, would love to see the script if you get this working! I wonder how easily you could add the mask as an extra channel in the .tiff image and keep the original for reference as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/166#issuecomment-381163241:103,mask,mask,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/166#issuecomment-381163241,1,['mask'],['mask']
Availability,"Nice, I can confirm that does appear to be working through fast.ai - ; ![image](https://user-images.githubusercontent.com/85200392/174496575-f5f147d1-855f-4ccb-81a5-d87fb78c5aa9.png); The masks are loading the correct number of channels in the right places now, at least!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159793793:188,mask,masks,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159793793,1,['mask'],['masks']
Availability,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956171629:155,error,error,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629,2,['error'],['error']
Availability,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494029538:83,down,downsample,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538,1,['down'],['downsample']
Availability,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650188152:647,down,downloads,647,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152,1,['down'],['downloads']
Availability,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612965106:136,error,errors,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106,1,['error'],['errors']
Availability,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630760110:69,error,error,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110,1,['error'],['error']
Availability,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/271#issuecomment-467942230:100,down,downloaded,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230,1,['down'],['downloaded']
Availability,"Note that there's a `requestedPixelSize` used to control the resolution - it's set for a whole slide image (with some pretty aggressive downsampling...). You can either change the `requestedPixelSize` or `downsample`, where it is used later in the script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411347979:136,down,downsampling,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347979,2,['down'],"['downsample', 'downsampling']"
Availability,"OK, it turns out that adding `MOUSE_RELEASED` to `ignoreTypes` is not needed (any more). At some point, I made the logic of the middle button [robust to fast clicks](https://github.com/qupath/qupath/blob/ca41a4d033eb65c5f9ee1c12a64bf1e96f60276d/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1108-L1112). I suspect that consuming the extra events generated by subsequent middle click events (`e.getClickCount() > 1`) is enough. Then all I do is check is `e.isMiddleButtonDown()` and I don't see anything weird happening whether I do rapid middle button clicks or if I press the left button or use the mouse wheel while the middle button is pressed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1313554395:143,robust,robust,143,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1313554395,1,['robust'],['robust']
Availability,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:472,ERROR,ERROR,472,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"Oh dear, that does look suspiciously similar to the picture in @Svidro's link. As it happens, I've just been working on a pretty major revision of the QuPath Bio-Formats extension this morning. It should solve a lot of issues, but I don't know if it will solve this one. However, it will at least give some extra entries in the preference pane that would allow you to selectively enable/disable Bio-Formats for specific image extensions, so that you could ensure that OpenSlide is used for scn if you wanted. If nothing too bad appears in the next couple of hours I'll merge the changes with the main branch and then the extension will be available for testing. Or see [here](https://github.com/petebankhead/qupath-bioformats-extension) if you're happy to compile it yourself while it's still a work-in-progress.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358633899:639,avail,available,639,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358633899,1,['avail'],['available']
Availability,"Oh dear, that sounds worse - I am using a Mac, and no extra extensions should be needed. Does the software start ok? I have seen a problem on some older Macs where it wasn't possible to start QuPath because of an incompatibility with OpenCV... but if the window opens at all then that shouldn't be the issue. You should be able to open a JPEG just by dragging it onto the main QuPath window. Could you try with the image *CMU-1.svs* that is suggested at https://github.com/qupath/qupath/wiki/First-steps ?; If there are problems, could you also choose *View &rarr; Show log* and report back if you see any error messages?. The CZI problem sounds like the one I met before, and will try to resolve next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357055699:606,error,error,606,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357055699,1,['error'],['error']
Availability,"Oh, definitely not too complicated, as we don't really know what the rest of the slides look like. Your method is far more robust, and if there are other dark blotches or other unwanted clumps of cell pellets/detritus on the images, a classifier would be able to pick that up, while simple tissue detection will simply look for ""anything"" that is ""dark."" . It does go to show how QuPath has multiple ways to accomplish the same task though, depending on your needs!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/121#issuecomment-349101867:123,robust,robust,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/121#issuecomment-349101867,2,['robust'],['robust']
Availability,"Ok, I tested the ""Offline TMA Data Viewer"" (not sure what to call this method!). I exported TMA data (qptma) for all 6 TMA slides. I loaded one file in the TMA Data Viewer in a new QuPath instance which seem to load data for all the qptma files present in the folder ! is that expected behavior ?. With this method the table is very smooth. It makes sense to work offline if I want to look at the combined data from multiple TMAs after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:839,error,error,839,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630858222:139,error,error,139,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222,2,['error'],['error']
Availability,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-872890572:912,error,error,912,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Ok, good. Can you provide more information about what exactly is printed when running the build (including before the error)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630746162:118,error,error,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630746162,1,['error'],['error']
Availability,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:252,error,error,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418,2,['error'],['error']
Availability,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-641438041:461,avail,available,461,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041,2,"['avail', 'error']","['available', 'error']"
Availability,"One idea may be to forego cell detection (at least as a first step), and instead create square tiles or superpixels, add intensity/texture features to them, and then classify these. There is then a *Tile classification to annotations* command to merge the classified tiles. Cells could optionally be detected inside the annotations at the end, if still required. Alternatively, you could use *Extensions &rarr; ImageJ &rarr; Send region to ImageJ* to get a (possibly heavily downsampled) version of the image into ImageJ. The cells will be passed along too on an ImageJ overlay, with colors and names set according to their original classification. Then it becomes an ImageJ scripting/macro problem to combine these into regions - maybe using distance or voronoi transforms. *Plugins &rarr; Send ROI to QuPath* can be use to send back annotations to QuPath, if they are needed. In the event that you don't really care about the cell boundaries, you can open up the *Point* tool (three circles) and choose *Convert detections to points* first to get centroids only before sending them to ImageJ. I'm not sure if either of these do what you need, and the second may be a bit overly complicated. Could you say a bit more about the aim?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/70#issuecomment-298747073:475,down,downsampled,475,https://qupath.github.io,https://github.com/qupath/qupath/issues/70#issuecomment-298747073,1,['down'],['downsampled']
Availability,"One more thing: should we expose the builders in `qupath.lib.images.servers.ImageServers.*` so that you can test what kind of `ImageServer` is being used, if the builder is available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2278093823:173,avail,available,173,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2278093823,1,['avail'],['available']
Availability,"One problem I have occasionally seen with CZI is that a request for the *entire* image is made whenever only a small part is needed. This inevitably causes memory problems, but I have not yet been able to investigate when and why this might happen only for specific images. In the meantime I'd rather avoid suggesting that a huge amount of memory is required to use QuPath; it shouldn't be. Certainly with less memory available there may be problems if running something especially intensive (e.g. cell detection, even subcellular detection) across very large regions, but in that case the easiest solution is simply to restrict the analysis to smaller regions. But yes, if you can spare a few more GB it would be very good to increase what is available to QuPath. For what it's worth, my laptop has 16 GB RAM and I give about 8 GB to QuPath, although I've also used 4 GB for analysis (or less for just browsing and annotation). There are also some more memory-related tips at https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits. It would be good to confirm whether the trouble only occurs when working with cell detection on large regions (at least hundreds of thousands of cells). My suspicion is that this isn't the case, and it is more likely to be related to the current patchy support for CZI - which is something I hope can be improved within the next few months. But I could be wrong on this if the behavior is fine whenever only small regions are considered.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343393030:418,avail,available,418,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343393030,4,['avail'],['available']
Availability,"Only other thought I have regarding intermittent errors is that some people storing image files, especially large ones, on network locations have run into trouble at times. And with active directory, your desktop might be a network location. If all of your files are on your hard drive, I'm out of ideas, good luck!. *and I see that the error log images are on the C drive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518033169:49,error,errors,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518033169,2,['error'],"['error', 'errors']"
Availability,"Oops, I take that back, Pete's script does not work for me when I use the Ellipse, I was selecting something else at the time, but now I have closed it and forgot what I was playing with. . The following does not work on Windows however, reducing the problem down a little.; ```; selectObjects {it.isAnnotation() && it.getROI().getROIType() == 'Rectangle'}; mergeSelectedAnnotations(); selectAnnotations(); ```; It still gives the same warning as above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354860945:259,down,down,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354860945,1,['down'],['down']
Availability,"Oops, my mistake. That's what I get for always posting as I wake up!. I have found them useful in SLIC classifications to automatically detect different types of tissue... and that is about it. Which ones are useful and why, I don't really know as I tend to feed them into classifiers and have not yet found a way to extract information from the classifier regarding which measurements were most useful. It was mostly trial and error based on what worked. Edit: The top discriminating features sounds like... a fantastic feature!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424748214:428,error,error,428,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424748214,1,['error'],['error']
Availability,"Path-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8033,error,error,8033,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"Path/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; Caused by: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); 	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.gro",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:4001,ERROR,ERROR,4001,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2021,avail,available,2021,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,2,"['Down', 'avail']","['Downloads', 'available']"
Availability,"Perhaps I'm misremembering, but I think the extensions directory was *always* configured on a per-user basis? As in... it was stored in the user preferences, alongside all the other preferences. This has not changed. It is also true for all persistent preferences, since in the end they depend upon `Preferences.userRoot();` ([here](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L312)). With that in mind, I expect that in your case the 'user directory' is basically equivalent to the old extensions directory (except that the extensions themselves are stored 'one level down'). Of course, you may need to tell individual users not to mess with it, because it is kept for facility use... but I presume this was always the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632622328:634,down,down,634,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632622328,1,['down'],['down']
Availability,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:270,error,error,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,2,['error'],['error']
Availability,"Pinging @petebankhead about the change in the interface as it'll possibly break stuff, if not merge away",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1524#issuecomment-2117897280:0,Ping,Pinging,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1524#issuecomment-2117897280,1,['Ping'],['Pinging']
Availability,"Pixel snapping is turned on, but I'm not sure if it applies to script generated annotations. And these are script generated annotations, and generated using a downsampled imageprocessor, I should have included that. . Would it work to try and round all of the annotation points prior to using addObjects(), and if so do you have any recommendations on how to do that (the annotations could, theoretically, have holes)? Or is it possible to snap objects to the grid with a function similar to resolveHierarchy?. As a note, I would probably do this at the ROI stage, where I use IJTools.convertToROI(). Looking into options to edit the point values within those ROI objects now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-587058614:159,down,downsampled,159,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587058614,1,['down'],['downsampled']
Availability,"PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:23",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3685,Down,Downloads,3685,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,Please make sure you followed the instructions [here](https://github.com/qupath/qupath-bioformats-extension) and downloaded _both_ `.jar` files - it looks like `bioformats_package.jar` is missing. You can find it at http://www.openmicroscopy.org/bio-formats/downloads/. I can replicate the error if I remove `bioformats_package.jar` from my extensions folder.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409153464:113,down,downloaded,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409153464,3,"['down', 'error']","['downloaded', 'downloads', 'error']"
Availability,"Potentially, although I'm not seeing any difference on my Mac. . Made a small guess and something that would help - can you pull down the latest code and try it out please?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1316#issuecomment-1708431678:129,down,down,129,https://qupath.github.io,https://github.com/qupath/qupath/pull/1316#issuecomment-1708431678,1,['down'],['down']
Availability,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715571233:790,reliab,reliably,790,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233,1,['reliab'],['reliably']
Availability,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-579362758:290,repair,repair-projects-by-finding-missingmoved-images,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758,1,['repair'],['repair-projects-by-finding-missingmoved-images']
Availability,"QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =40",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13260,error,error,13260,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"QuPath does not include any code that directly relates to the GPU - everything happens through OpenCV/JavaCPP (and sometimes also PyTorch/TensorFlow/DJL). If you search for `the provided PTX was compiled with an unsupported toolchain` you should find lots of discussions separately from QuPath; it seems that the issue is normally related to the driver. I tried to replicate the issue with the only Windows computer I have access to (including a GeForce 1060) and could not - it runs without errors, and `DnnTools.isCudaAvailable()` returns true. > Given that issue https://github.com/qupath/qupath/issues/841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?. I don't think that can be relevant here. I'm not sure that there is any bug here that can be fixed within QuPath. I have seen such error messages before, but the solution was always to update my graphics card driver. Have you tried this?. Note that QuPath v0.4.0 gives a range of options for deep learning, but CUDA incompatibilities will mean that probably not all can work at once (e.g. I could get PyTorch with GPU acceleration today by installing CUDA 11.7, but TensorFlow seems to require 11.3... I'm not sure there's a combination that gets both working together). I don't see that there's really anything much more we can do apart from simply removing the option of GPU acceleration altogether and not documenting it as an option - but that seems a shame when often it does work. > I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Because QuPath doesn't directly access the GPU, please check the .jar files within each installation. I don't know what the problem could be, unless it is somehow related to the inclusion of some Deep Java Library dependencies - or if you have other extensions installed that are",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127:492,error,errors,492,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127,4,['error'],"['error', 'errors']"
Availability,"QuPath is a Java application, and the memory behavior is complicated and implementation-dependent: https://www.baeldung.com/gc-release-memory. The memory monitor uses the `Runtime` class, and makes calls to `System.gc()` for garbage collection.; The [javadocs](https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Runtime.html#freeMemory()) contain statements like `""Calling the gc method may result in increasing the value returned by freeMemory`""... where that 'may' is interesting. In some cases (such as the tile cache), QuPath retains a (soft or weak) reference to objects for 'as long as it can' to help performance, but will release them before any out-of-memory error is produced. In short, this doesn't sound like a bug to me. Unless there can be shown to be a memory leak within QuPath itself, there are too many other possible reasons beyond our control why memory use reported by the JVM might increase.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105:688,error,error,688,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105,1,['error'],['error']
Availability,"Quick addition. Defining an area using a polygon no longer works for the in-built detection, just when running a stardist script:. ![image](https://github.com/qupath/qupath/assets/154437026/9e4ba23a-f54a-4742-8a5c-ec10b063f7f2). ```; ERROR: Error processing Polygon (7616, 10604, 2099, 1863); java.io.IOException: java.lang.InterruptedException; at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:911); at qupath.lib.images.servers.AbstractTileableImageServer.lambda$prerequestTiles$2(AbstractTileableImageServer.java:462); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.prerequestTiles(AbstractTileableImageServer.java:464); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:295); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:60); at qupath.lib.images.servers.CroppedImageServer.readRegion(CroppedImageServer.java:90); at qupath.lib.images.servers.CroppedImageServer.readRegion(CroppedImageServer.java:39); at qupath.lib.images.servers.SparseImageServer.readTile(SparseImageServer.java:265); at qupath.lib.images.servers.AbstractTileableImageServer.lambda$prerequestTiles$2(AbstractTileableImageServer.java:462); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.prerequestTiles(AbstractTileableImageServer.java:464); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:295); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:60); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:863); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:902); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:216); at qupath.lib.p",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443#issuecomment-1864490583:234,ERROR,ERROR,234,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443#issuecomment-1864490583,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-762152617:278,echo,echo,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617,1,['echo'],['echo']
Availability,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-757141337:167,avail,available,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337,1,['avail'],['available']
Availability,"Refreshing slightly more than necessary is probably ok, it's only a problem if you notice it slowing things down. Certainly better than missing a necessary `refresh()` call :). There's no .tif support because then that brings in channel colors/brightness & contrast and so on, so I guess that would require a more core change to export with those settings. But that gets even more awkward if the visualization settings might not be available if calling the export by batch processing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292322424:108,down,down,108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292322424,2,"['avail', 'down']","['available', 'down']"
Availability,"Regarding the script, are you merging two different annotation classes two different ways? Or merging the same annotation twice? Are you running the cell detection command in the script immediately after the second merge? That could be a big problem if so. You have two merge statements, each done a different way. If you are actually running the script as is, you are probably running into the same problem as before, where one merge has not completed when the second starts running, and everything is getting ""bugged out."" If that is the case (and you are running your cell detection in the script right after the second merge), you may want the thread sleep command from https://github.com/qupath/qupath/issues/129. I am not certain, but I have a feeling that this has more to do with the shape of your annotation causing cell detection a problem than the merge statement. . When I have had something like this happen (cell detection starts running, but no cells show up in the annotation tab), it does not always show an error in the log, but the first thing to do would be to check the View->Show log to see if there is an error message there. If there is, great, that might be useful. On the other hand, if there is nothing, it may just be the cell detection not completing, but without causing any errors. . If none of the above helps, could you paste your .qpdata file as a .log file (rename the file extension), with ONLY the annotations saved. It should be quite small. I would like to try importing it onto another dummy whole slide image just to try running cell detection to see if the shape of the annotation is causing problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/147#issuecomment-365346916:1025,error,error,1025,https://qupath.github.io,https://github.com/qupath/qupath/issues/147#issuecomment-365346916,3,['error'],"['error', 'errors']"
Availability,"See also https://github.com/openslide/openslide/issues/353 and the quote. > You can get the bounding box of the actual pixel data from the `openslide.bounds-{x,y,width,height}` properties. This is what the VIPS `autocrop` option uses to trim the slide to the available pixels. While OpenSlide's approach is internally consistent and may be justifiable, it doesn't seem to me that it is more 'correct' than using the 'bounding box of the actual pixel data'... and failing to crop by default to the actual pixel data seems at least as likely to make the problem you describe *worse* rather than better:. > Any change to the OpenSlide, the library, failure to derive these coordinates etc. breaks everything. As it currently stands, I think QuPath is more internally consistent by cropping - and this reduces rather than increases the dependency on OpenSlide, by making its use interchangeable with Bio-Formats. If there are cases where QuPath crops* and Bio-Formats or other popular libraries don't, then we might need to look at it again, but I don't know of any. *-From the description above, it sounds more like QuPath/Bio-Formats *don't pad* than that they crop...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200:259,avail,available,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200,2,"['avail', 'failure']","['available', 'failure']"
Availability,"Sensible. That would be a downside of the deb/rpm approach on Linux, unless we do some similar shenanigans with application names",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732357842:26,down,downside,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732357842,1,['down'],['downside']
Availability,Should revisit this and print the counts (I need to reboot to switch OS). On Ubuntu:. ```; INFO: Starting script at Thu Aug 24 14:00:58 BST 2023; INFO: Same: true; INFO: Paths 	4.703 s; Files 	3.655 s; Total duration	8.358 s; Average per checkpoint: 4.179 s; INFO: Total run time: 10.93 seconds; ```. On windows:. ```; INFO: Same: true; INFO: Paths 	37.279 s; Files 	17.887 s; Total duration	55.166 s; Average per checkpoint: 27.583 s; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691595026:52,reboot,reboot,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691595026,3,"['checkpoint', 'reboot']","['checkpoint', 'reboot']"
Availability,"Slightly updated script showing there is indeed some badness going on (note the counts don't match!). ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 1000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))); println(""Count files: "" + countFilesExist(files)); println(""Count paths: "" + countPathsExist(paths)). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }; ```. Windows:; ```; INFO: Same: false; INFO: Count files: 51; INFO: Count paths: 38; INFO: Paths 	4.273 s; Files 	1.838 s; Total duration	6.111 s; Average per checkpoint: 3.055 s; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125:678,checkpoint,checkpointAndRun,678,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125,3,['checkpoint'],"['checkpoint', 'checkpointAndRun']"
Availability,"So I took a quick run at it, and came up with a few options.; First off, due to your somewhat off-white background, I would definitely use something like:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.69602 0.66056 0.28145 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.47625 0.62539 0.61811 "", ""Background"" : "" 224 224 224 ""}');; ```. Next I drew a square that had some DAB and non DAB stained areas and tested the following **with the annotation selected**:; ```; runPlugin('qupath.imagej.detect.tissue.PositivePixelCounterIJ', '{""downsampleFactor"": 1, ""gaussianSigmaMicrons"": 0.5, ""thresholdStain1"": 0.1, ""thresholdStain2"": 0.2, ""addSummaryMeasurements"": true}');; ```. Alternatively you could try superpixels, which I like, but would also require a classification step. For now you can use the Measure->Show measurment maps command to look at what values you could use for a classifier. Again **with the annotation selected**:; ```; runPlugin('qupath.imagej.superpixels.SLICSuperpixelsPlugin', '{""sigmaMicrons"": 1.0, ""spacingMicrons"": 10.0, ""maxIterations"": 10, ""regularization"": 0.25, ""adaptRegularization"": false, ""useDeconvolved"": false}');; selectDetections();; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 0.25, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": true, ""colorStain3"": false, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": true, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickDistance"": 1, ""haralickBins"": 32}');; ```. You can also choose a larger size for your SLICs if you want to do more of a tissue structure analysis. Smaller is usually better if you are looking for color differences though. Another options is just using the cell detection mentioned above:; ```; selectAn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372875465:619,down,downsampleFactor,619,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372875465,1,['down'],['downsampleFactor']
Availability,"So long as 'arbitrarily large' is still small enough to work as a single image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently. One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger. Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; ```groovy; // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20; ...; // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); ```. You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; ```groovy; // Calculate downsample factor depending on the requested pixel size; double downsample = 1.0; def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); ```. Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch. > Note: I've tagged this as *enhancement* because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-354475050:827,down,downsample,827,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-354475050,6,['down'],['downsample']
Availability,"So the lack of a buffered stream is probably unimportant, since digging down deeper I see that a `PrintWriter` is used... which involves some buffering (as far as I can tell). Which may explain why I didn't really spot any clear improvement when using a `BufferedOutputStream`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1045#issuecomment-1230386652:72,down,down,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/1045#issuecomment-1230386652,2,['down'],['down']
Availability,"Some assorted responses:. * You say 'QuPath did it again', but it’s not clear if QuPath is actually doing what it is supposed to in deleting objects. I already described that you should not do automated counts in the same region after manual counting. Did you read my explanation above? If it does not describe your situation, please be more specific. https://github.com/qupath/qupath/issues/112#issuecomment-342941759. * QuPath is written in Java, and is therefore limited by the amount of memory assigned to it on first startup, or under *Help &rarr; Show setup options*. Additional memory being available on the computer doesn’t change this; QuPath won't use it. * My best guess remains that the memory problems are related to the handling of CZI images - which is something I will investigate, but I have very little free time currently and it may take a while. It is not a format I have used much myself, and I have very little relevant data that I can use to test it properly. * If you want to investigate this yourself, try doing simple processing steps using images in another file format (e.g. Aperio or Hamamatsu - maybe from http://openslide.cs.cmu.edu/download/openslide-testdata/). If the problem persists then my guess is wrong, and it is not reliant on file format. But then if you describe your exact steps I may be able to reproduce the issue. * If you are optimizing positive classification settings, re-running the cell detection would be a horribly slow way to do it. Running this one-line script and adjusting the values should be *much* faster:; ```groovy; setCellIntensityClassifications('Nucleus: DAB OD mean', 0.2); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-344522051:598,avail,available,598,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-344522051,4,"['avail', 'down']","['available', 'download']"
Availability,"Some undo support is now available in v0.2.0-m1 (and beyond), and explained [on my blog](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#new-limited-support-for-undo).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-518580699:25,avail,available,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-518580699,2,['avail'],['available']
Availability,Sorry Peter. I missed your reply-I will give the multiple projects a try. But I am also keen to script it. I have a c# background but have downloaded the java source to see if I can get my head around it. I can supply the ndpis files if you would like to do any testing. Basically it's just a text file that links multiple ndpi files that came from the same scan run (i.e. different filter per ndpi file),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/113#issuecomment-343225491:139,down,downloaded,139,https://qupath.github.io,https://github.com/qupath/qupath/issues/113#issuecomment-343225491,1,['down'],['downloaded']
Availability,"Sorry about the wait. **In response to your questions**. - I have tested zooming into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:765,error,errors,765,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['error'],['errors']
Availability,"Sorry for your frustrations. I am also unclear on what exact process you used. To help, I would need exact steps that I can use to reproduce the problems you are seeing, and any errors messages you see. I would also suggest:. * Make sure you are working with images in a project.; * Save regularly, and use *File &rarr; Revert* (Ctrl + R) to return to the last saved version.; * Whenever you have performed any lengthy manual steps consider duplicating your entire project folder (or creating a zip file of it) so that you may return to it later.; * If something goes wrong, check out *View &rarr; Show log* for any error messages, and post them here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342939465:178,error,errors,178,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342939465,2,['error'],"['error', 'errors']"
Availability,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:578,down,downsample,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,3,"['Down', 'down', 'error']","['Downsampling', 'downsample', 'errors']"
Availability,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484671442:433,error,error,433,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442,1,['error'],['error']
Availability,"Sorry, I just saw that the bug was marked close and didn't think deeper about it. Yes, the bug was gone in version 0.1.3 on the same computer (Windows 10) and with the same tablet and drivers.; So to specify what was working in 0.1.3:. - Pan (using e.g. spacebar or move tool) would correctly move the viewport in the desired direction. Moving up or down would not result in pan AND zoom; - Pen pressure would change the brush size to mimic the brush strokes of a paint brush and thus making it much more flexible when doing precise annotation at different zoom levels. By the way, it would be a neat feature if it was possible to rotate images more than +-90 degrees and perhaps even flip them (for when you want to align images in two viewports).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479515958:350,down,down,350,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479515958,1,['down'],['down']
Availability,"Sorry, I should have said I tested it only with v0.2.0-m3 - where it works for brightfield only if I disable the brightness/contrast thing (which is where I'm only guessing it should work for fluorescence...). My guess/hope is that that is the source of the error if you were using v0.2.0-m2. I've been working towards adding javadocs for all the public methods in QuPath and have written many hundreds so far, but still have many more to go... I'm afraid it will take a while. I try to answer questions about the milestones as they change, but I'm afraid I can't really support the older ones (not least because it's hard to keep all the changes in my head, and set up a scripting environment for each). I'd really advise to switch from m2 as soon as feasible:; https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/15",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520238887:258,error,error,258,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238887,1,['error'],['error']
Availability,"Sounds good, but I have been a bit busy here, just started the download now, and probably won't be back to take a look at it for ~12 hrs. Should be able to have a look at it then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372679831:63,down,download,63,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372679831,1,['down'],['download']
Availability,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932368906:119,avail,available,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906,2,['avail'],['available']
Availability,"Sounds like that could work. I will play with the script and will also try running the cell analysis only one level down. It appears that Qupath currently applies the TMA name one level down but maybe not two.; Within my TMA cores, I run the tissue identification and then run the cell and membrane analysis within the annotated areas. Under Name the core identifier is present for the annotated tissue but not for the cells inside the annotated tissue.; Thanks, I'll get back to you tomorrow.; H",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/59#issuecomment-289513743:116,down,down,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/59#issuecomment-289513743,2,['down'],['down']
Availability,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411636630:215,down,downloaded,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630,1,['down'],['downloaded']
Availability,"Switching to apply the syntax highlighting asynchronously appears to address this issue... or at least make the error less obtrusive. This will be in v0.2.0-m4. Replacing the script editor is still preferable in the longer term, for performance, features and maintainability.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-518353876:112,error,error,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-518353876,1,['error'],['error']
Availability,"Thank you !; With Gradle the build ends properly despite some warnings and It ran in a CentOS 7, with some errors, but it ran :. ```; $ QuPath; 13:20:05.914 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; Prism-ES2 Error : GL_VERSION (major.minor) = 1.4; 13:20:06.362 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_FR; 13:20:06.366 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 13:20:06.396 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 3568,00 MB; 13:20:07.893 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /soft/c7/qupath/0.1.3/app/libopencv_java310.so: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by /soft/c7/qupath/0.1.3/app/libopencv_java310.so); 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Na",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:107,error,errors,107,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407444374:335,down,down,335,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374,1,['down'],['down']
Availability,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640759146:1410,error,error,1410,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146,2,['error'],['error']
Availability,"Thank you both for answering! @Svidro and @petebankhead ; I started all over again, so I don't have the workflow anymore. Nevertheless, what I meant was that I used indeed the pointing tool. I had two populations, one negative and one positive. After I ran the positive cell detection, the negative population was gone. And unfortunately, there is no undo button. My goal was indeed compare the manual counting and the automated counting. For optimization. I don't know whether the error is the lack of RAM, I checked and i have 3,3GB available. And I only have 4 ROI's in one image. When I run the analysis, I make sure nothing is selected and choose the option 'all annotation'. It might be, but it might be not, because sometimes it also does not analyse only 1 ROI, but other times it does. However, the log it says 'memory error'. the programs that are running on my computer besides Qupaht are google chrome (1tab), one note with an excel file, and file explorer. ![capture](https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG); ![capture2](https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG); ![capture3](https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG). I really don't know why sometimes it works or not, but i'll be more careful in what I'll do.; Unfortunately, there was also no backup file in the folder after the failure of saving.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343227944:482,error,error,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343227944,8,"['avail', 'error', 'failure']","['available', 'error', 'failure']"
Availability,"Thank you both for answering!. > This makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https:/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869217737:249,avail,available,249,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737,2,['avail'],['available']
Availability,"Thank you both for your response. I would preferably like to run the software on the mac but have access to PC too if this is more suitable . The original files I wanted to work with were TMAs with multiple scenes but I cannot even open a jpg file. I am at home now and I am on my mac and it is still not opening the jpg files. . Thank you for looking into addressing the qupath bio-formats extension. In the meantime, should I need to download any extensions to run the software on the mac? I know in your tutorial for start ups you suggest you do but I have had no joy with this . Thank you again",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357053806:436,down,download,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357053806,1,['down'],['download']
Availability,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423805036:337,ERROR,ERROR,337,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036,7,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-580236559:79,error,error,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559,4,['error'],['error']
Availability,"Thank you so much for answering. Is that information that you asked about my memory?. -------------- S Y S T E M ---------------. OS:; Windows 10 , 64 bit Build 19041 (10.0.19041.3570); OS uptime: 5 days 10:23 hours. CPU: total 6 (initial active 6) (6 cores per cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WF",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:708,Avail,AvailPageFile,708,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['Avail'],['AvailPageFile']
Availability,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494027815:59,down,downsampling,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815,3,['down'],"['downsample', 'downsampling']"
Availability,"Thank you very much for your help, but I have a new problem. How can I save the results to my local disk? ; ------------------------------------------script---------------------------------------; import static qupath.lib.scripting.QP.*; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ---------------------------------------------error---------------------------------------; 04:25:18.186 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; Script result: false; ------------------------------------------------------------------------------------------; thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213#issuecomment-419363485:887,error,error,887,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-419363485,1,['error'],['error']
Availability,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620601601:351,error,error,351,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601,2,"['error', 'recover']","['error', 'recover']"
Availability,"Thanks @Edwinterb yes, we used to provide a dmg but recent macOS releases thwarted that - they were particularly unhappy if this was downloaded, and seemed to work extra hard to make it non-runnable. The pkg has proven the 'least painful' distribution method, and the right-click trick is documented [here](https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos). I do most of my development on a Mac, so suffer the pain directly. `jpackage` integrates well with our build tools, and seems to be the 'official' way to make installers for Java applications. I'm not good enough with XCode, build tools or GitHub Actions to figure out a way to piece together an alternative that gives an opportunity to squeeze in a proper version number. @alanocallaghan would have a better chance of figuring it out than I do, but I don't see how I can possibly mention it to him when he's already [embroiled in other macOS-related woes](https://github.com/qupath/qupath/issues/629#issuecomment-1723504495) - without actually being a Mac user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329:133,down,downloaded,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329,1,['down'],['downloaded']
Availability,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-579836335:40,error,error,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335,5,"['down', 'error']","['down', 'error', 'errors']"
Availability,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472470374:656,avail,available,656,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374,2,['avail'],['available']
Availability,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:129,error,error,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['error'],['error']
Availability,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:640,avail,available,640,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877,3,['avail'],['available']
Availability,"Thanks @Svidro, I have lost track of which scripts I've written and where :); But yes, that would give a way to handle areas... and shows the trouble involved (separate list of external polygons and holes). It's also possible to get `java.awt.Shape` objects for any QuPath `ROI` and have the task of exporting them; still a job to do, but at least there is likely to be more documentation available. It would be worthwhile to have a general export function within QuPath; but my question is about which format should be used for export. Ideally it would be a standard, open format of general usefulness in the digital pathology community. Ideas welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388118309:389,avail,available,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388118309,1,['avail'],['available']
Availability,"Thanks @ap-- and @j-hudecek :). The acceptance of this API change has me now thinking about going a step further... I am missing a method like; ```java; public T readLevel(int level, ImageRegion region);; ```; where the `level` is a specific level of the pyramid (0 for full-resolution). Currently, if I want to get a rectangle of pixels from level 2, I need to figure out the coordinates in the full-resolution image (i.e. multiply by the downsample value). Then QuPath should find them again after dividing by the downsample. However, the coordinates need to be integers - which makes me uneasy about what happens if the downsample is something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T r",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:440,down,downsample,440,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,10,"['down', 'error']","['down', 'downsample', 'errors']"
Availability,"Thanks @ap-- it's tempting since QuPath generally µm/px values where it can, but the trouble is that we can't count on them always being available. When I know it's there, I end up doing a lot of; ```groovy; double downsample = requestedPixelSizeMicrons / server.getPixelCalibration().getAveragedPixelSizeMicrons();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1279724824:137,avail,available,137,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1279724824,2,"['avail', 'down']","['available', 'downsample']"
Availability,"Thanks @bgilbert - that sounds really promising. If I can help at all with maintaining OpenSlide Java just let me know. @cpwardell thanks, but this is a bit off-topic & would be better [discussed this on the forum](https://forum.image.sc/tag/qupath). There are other files and formats where OpenSlide reading is more reliable and/or more performant than using Bio-Formats. That's why QuPath attempts to use sensible defaults, while also [giving you the option to override them](https://qupath.readthedocs.io/en/0.4/docs/tutorials/projects.html#add-images).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785:317,reliab,reliable,317,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785,1,['reliab'],['reliable']
Availability,"Thanks @finglis the more I think about this, the more I think we **really** need this. Relatedly, I wonder if we could build on the idea to make auto-estimating the image type smarter?. My first (and entirely untested) idea would be to . * loop through all the known stain vector combinations; * apply the stain vectors to an image; * and calculate the mean absolute value (for example) of the residual; * select the vectors where the error is minimized. This would only be suitable for 2 stains and might not handle artifacts very well, so I imagine it would need some refinement. But perhaps we can incorporate more prior knowledge (e.g. that stains should be negative) while still keeping the method simple and fast to compute. The goal would be to enable a user to have the (probably small) number of stain vectors that are relevant for their images based upon their image sources/scanners, and have QuPath make more intelligent suggestions which to use - rather than relying upon scripting or using *Estimate stain vectors* on every image. But I guess any auto-estimate is likely to be wrong sometimes. So some other related ideas:. * We could incorporate stain selection into the ""Project import"" dialog (alongside where we set the image type) to give another way of ensuring an image batch has consistent stain vectors set.; * We could add a 'Run for project'-like command that specifically exists to transfer the image type and stain vectors from the current image to all images in the project. This can already be scripted easily, but isn't very approachable for people who really don't want to handle scripts. Logging the ideas here for consideration when we come to tackle the original enhancement, and in case any are worth discussing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1247#issuecomment-1452171437:435,error,error,435,https://qupath.github.io,https://github.com/qupath/qupath/issues/1247#issuecomment-1452171437,2,['error'],['error']
Availability,"Thanks @franfcunha !. I recently opened a (very small, single-channel) .jp2 image in QuPath with the help of Bio-Formats, but I do not have a whole slide image in that format to test. JPEG2000 *does* currently appear on the [Bio-Formats list of supported formats](https://www.openmicroscopy.org/site/support/bio-formats5.4/supported-formats.html) with a tick in the 'pyramid' column... but I am not sure whether that should be interpreted as meaning pyramidal .jp2 whole slide images are supported, or if it is simply a comment on the capabilities of the format. I would suggest asking the OME team about this through their [mailing list](http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/) - they are the experts. Apart from that, in QuPath under *View &rarr; Show log* you may get more useful information to help track down the source of any error. Where Bio-Formats is involved, I would also recommend trying to open a cropped/lower resolution part of any problematic image with [Fiji](http://fiji.sc) as well, since the Bio-Formats plugin for Fiji is much more established. This can helps to track down whether the problem is most likely to be with the file itself, the file reader, or the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/72#issuecomment-299391470:833,down,down,833,https://qupath.github.io,https://github.com/qupath/qupath/issues/72#issuecomment-299391470,6,"['down', 'error']","['down', 'error']"
Availability,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554910235:59,error,error,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235,2,"['error', 'robust']","['error', 'robust']"
Availability,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620641833:112,down,downloading,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833,2,"['down', 'error']","['downloading', 'error']"
Availability,"Thanks @saudet I've just tried this with the latest `javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar` on my M1 MacBook Pro. I do still see the error, but it seems to take longer to reach (I had to train 3 classifiers rather than 2). ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4088 MB; freeMemory() 	2722.48044586181640625 MB; Memory used 	1365.51955413818359375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00213623046875 MB; physicalBytes() 	17062.1875 MB. Total count: 	38. Operating system:; Total: 	16384 MB; Available: 	26.12109375 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775:136,error,error,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775,2,"['Avail', 'error']","['Available', 'error']"
Availability,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:195,error,error,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980,1,['error'],['error']
Availability,"Thanks Benjamin! That's really good to know, I had not realised that installing the redistributable was necessary. I have added the link to https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi. On the topic of CZI support, I have recently learned there may be some memory issues connected to reading CZI files that have been 'prestitched' using QuPath + Bio-Formats... is this something you have encountered / solved at all?. In the example I looked at, reading a single tile at the highest resolution would require preallocating an array that is the size of the entire full-resolution image whenever JPEG-XR compression was used... which would lead to out-of-memory errors in most cases. However I am not clear on the exact cause of this, and any insights would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43#issuecomment-272952005:686,error,errors,686,https://qupath.github.io,https://github.com/qupath/qupath/issues/43#issuecomment-272952005,2,['error'],['errors']
Availability,"Thanks Pete 😄! I will try to replicate the error without the extension to see if that might be the issue. . Miniconda should not be bringing any error since that is only use to create the virtual environment to install Cellpose. What is shown in the extensions window is just the path to the location of that python environment that contains the installation of Cellpose. I just used those settings to show how paths set from the first installation were being drag to the second one. . I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. . From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. The solution from my end was to proceed and install the zip version and uninstall the .msi version. Sorry for not being able to explain this more straight forward",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161:43,error,error,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161,2,['error'],['error']
Availability,"Thanks Pete, it works, although it generate a multiple times the following error message:. `; ERROR: QuPath exception; at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236); at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423); at javafx.scene.Parent$2.onProposedChange(Parent.java:367); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:113); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:108); at com.sun.javafx.scene.control.skin.LabeledSkinBase.updateChildren(LabeledSkinBase.java:575); at com.sun.javafx.scene.control.skin.TreeCellSkin.updateChildren(TreeCellSkin.java:197); at com.sun.javafx.scene.control.skin.LabeledSkinBase.handleControlPropertyChanged(LabeledSkinBase.java:204); at com.sun.javafx.scene.control.skin.TreeCellSkin.handleControlPropertyChanged(TreeCellSkin.java:125); at com.sun.javafx.scene.control.skin.BehaviorSkinBase.lambda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:75,error,error,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Thanks Pete,. For the time being I've dealt with the multiple subtractions simply by adding all of the areas that need to be subtracted first. When things are passed in the right order things seem to work OK. I haven't looked through the code enough to understand if it's spurious or not yet, but locking also seems to make it more reliable. If it becomes an issue I'll dive a little deeper as you suggest. Besides occasionally having to learn some java-specific construction, I seem to be meandering through the code OK. . Colin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-303464822:332,reliab,reliable,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-303464822,2,['reliab'],['reliable']
Availability,"Thanks Peter. Quick and clear as usual. ; I'm getting the feeling that the latter will be a bit longer but more reliable. I assume the same approach could be taken with IntelliJ, no? ; It might be a bit of work but I think this would be an interesting feature for QuPath to have, and there might be a way to get several different user groups to collaborate and contribute images for training.; Thanks again for the direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-301125628:112,reliab,reliable,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-301125628,2,['reliab'],['reliable']
Availability,"Thanks a lot ! It really works! I download the VIPS , use it convert my TIFF to pyramidal TIFF, and then the Qupath can open it with no problem. Thanks again for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409849565:34,down,download,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409849565,1,['down'],['download']
Availability,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-468670846:797,error,error,797,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846,1,['error'],['error']
Availability,"Thanks a lot. I downloaded tif from camelyon16 datasets. A single one is over 1GB. I have installed bioformats extension, but it seems cannot help. Should I need some format transformed? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371740975:16,down,downloaded,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371740975,1,['down'],['downloaded']
Availability,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:302,error,error,302,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['error'],['error']
Availability,"Thanks for reporting this. I have not been working with CZI images myself, but I recently received one example image with this problem. Unfortunately, I have not yet been able to identify the exact cause, beyond the fact that too much memory is used. Because the image is not being read by QuPath directly (but rather Bio-Formats) it is a bit harder for me to track down where exactly the problem lies. However, I will continue to investigate, and add an update here when I learn more. In the meantime, I have been told that the Zeiss ZEN software is able to export the different scenes as separate images, which can then be read into a [QuPath project](https://github.com/qupath/qupath/wiki/Projects). Therefore this may be a workaround that enables you to work with the images in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274611030:366,down,down,366,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274611030,2,['down'],['down']
Availability,"Thanks for the detailed response Peter. That's a great starting point. ; As a follow up, is there a good place to learn about how to access QuPath data from the groovy scripting interface? Perhaps a list of the available data stored in various objects and the methods that can be used to access them? The examples are a great start, and have been very good at interpreting the kinds of things we're hoping to do, but it can be hard to go beyond them (short of diving deeper into the QuPath code itself).; The software has been very impressive so far - great interface and the scripting capability makes it feel quite extensible. Best,; Colin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273939189:211,avail,available,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273939189,2,['avail'],['available']
Availability,"Thanks for the fast replies @all!. What I eventually want to do with the extracted polygon vertices, is to convert them to a binary mask, i.e. all the pixels inside the polygon will be marked as one class and the pixels of the polygon will be marked as another class. @andanis ; This approach isn't going to work out for drawing a binary mask, I think. The polygon vertices must be seperated, otherwise I will probably have all the stuff that is between each polygon also marked as the same class in the binary mask. @petebankhead ; Thanks for the code, Pete. But when I execute it, I get a blank text file. I changed `for (pathObject in getAllObjects())` to `for (pathObject in getAnnotationObjects())` which is giving the desired coordinates of all the polygons. Could you explain a little bit more about what you mean by complex polygons in discontinous regions? What do you mean by regions and when can they be discontinous?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388285040:132,mask,mask,132,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388285040,3,['mask'],['mask']
Availability,"Thanks for the feedback - I much prefer the look of this. Remaining issues:. - Probably lots I've not noticed; - When you make the height large, it drags out into empty unused space at the bottom (pictured). Have tried various VBox.vgrow settings, but no avail. ![Screenshot from 2023-10-05 16-16-21](https://github.com/qupath/qupath/assets/10779688/547cea53-f03c-4f01-9ec1-ca5828082f61)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1749116788:255,avail,avail,255,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1749116788,2,['avail'],['avail']
Availability,"Thanks for the feedback!. > The main question (maybe to discuss with @alanocallaghan and @finglis) is whether we should use Optional instead of just returning null. I am slightly in favor of using it sometimes - especially when the return really is optional - but here it seems to be used where throwing an exception would be preferable.; > ; > Returning null can be informative, inasmuch as it suggests we have a sparse image without pixels for every location - and shouldn't happen whenever there has been an exception. You're right, I was overusing `Optional`. Now, each time an error occurs, an exception is thrown. I kept `Optional` only when a function is not guaranteed to return a result AND no error occurred during its execution. > ReaderWrapper looks very tied to the 'OME' way of doing things (Bio-Formats and OMERO); I'd expect a general image reader to return something more informative than a byte[][], which can only be interpreted with a lot of other return values and Bio-Formats logic. So it isn't very easy to use in a standalone way.; > ; > That isn't in itself a problem, but if writing a general image reader for use with the OMERO web API or [IIIPImage Server](https://iipimage.sourceforge.io/documentation/server) (for example) I imagine it would be far harder to return a byte[][] than a BufferedImage.; > ; > So I think it should either 1) embrace being Bio-Formats/OMERO-specific, and prioritise simplicity, or 2) incorporate more of the processing logic that converts the byte[][] into a BufferedImage, and prioritise reusability. If the goal is for ReaderWrapper and ReaderPool to be reusable, it needs to be easy to generate and work with their return values. I changed `ReaderWrapper` to be as generic as possible (its read function now returns a `BufferedImage`). However, I wanted a `ReaderWrapper` class common to Bio-Formats and OMERO (because they have a lot of code in common), so I created the `OMEReaderWrapper` class (not sure of the name) that is a child of `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1709836979:582,error,error,582,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1709836979,4,['error'],['error']
Availability,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/254#issuecomment-452897098:670,reliab,reliable,670,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098,2,['reliab'],['reliable']
Availability,"Thanks for the replies. The easiest method seemed to be exporting to imagej however when I try to use the macro in batch mode, I get an error if I try to export the full size core (without downsampling). Images over 5000x5000 px don't seem to export well to imagej. Workarounds?. Thanks. Sent from my iPhone. > On Sep 1, 2017, at 00:01, Pete <notifications@github.com> wrote:; > ; > There are a few options, depending upon what exactly you want / how much effort can be involved.; > ; > Under Edit → Preferences you can change the TMA export downsample factor to be 1 to get the highest resolution. However, this will still write JPEGs. There isn't an easy way to change that; the relevant part of the code is here and it doesn't give a place to specify a different format.; > ; > If it is the image of the TMA core only that you need, then I would suggest the one-line ImageJ macro at #85. You should be able to modify this to export PNGs. The main reason for (possibly) preferring to export as TIFF instead is that this would include the pixel size information in microns, in a way that ImageJ can understand; this might be useful if you want to do some analysis on the exported cores. The main disadvantage is that the TIFF files are likely to be extremely big (while the PNGs will probably just be 'big').; > ; > It is also possible to do the QuPath export in a Groovy script. In this case, you could also export the overlay (showing the QuPath objects) as well. But this would take a bit more effort and I'm not sure if this is something you need or not.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-326631504:136,error,error,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-326631504,3,"['down', 'error']","['downsample', 'downsampling', 'error']"
Availability,Thanks for the reply. I think I actually figured out why it wasn't working before. The refresh method's accessibility was changed in javafx from Java 8u60 and onwards. I didn't realize but I was running an older JRE on Eclipse and thus the compilation error.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/87#issuecomment-316820068:252,error,error,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/87#issuecomment-316820068,1,['error'],['error']
Availability,"Thanks for the tip. ; ![Skjermbilde (205)](https://user-images.githubusercontent.com/43611111/82345329-6e9c5d80-99f5-11ea-9534-a5303ee739bf.png); Seems like the 64 GB system memory fills up quite quickly, while the Qupath program itself in the windows systems monitor actually reads out as using much less memory (down below 1 GB at times) after a while (while 99 percent of the system memory still used).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630894744:314,down,down,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630894744,1,['down'],['down']
Availability,"Thanks for your answer.; I tried to follow your tips, but I am a bit lost with the different steps and how to perform them. 1/ Detect tissue using : `Analyze>Preprocessing>Simple Tissue Detection` ✓ ; 2/ Split it into multiple tiles : `Analyze>Region Identification>Tiles & Super Pixels` then select `Make annotation tiles` and `Remove parents annotation` ✓ ; 3/ Sending each tile to ImageJ for thresholding : `Extensions->ImageJ->ImageJ Macro runner`; So at this step, I am not sure how to perform that. As an example, I set the following into the Image Macro runner:; ```; run(""8-bit"");; setAutoThreshold(""Huang dark"");; //setThreshold(187, 255);; setOption(""BlackBackground"", false);; run(""Convert to Mask"");; run(""Analyze Particles..."", "" show=Overlay display clear"");; ```; Then I selected `Send ROI to ImageJ`, `Clear Current child Object` and `Create detection object from ImageJ overlay`. ![image](https://cloud.githubusercontent.com/assets/1775952/23943366/7c26ced2-096f-11e7-9cb9-f8ca32c9e1eb.png). To run it on the wholde slide, I selected all the annotation and pressed `Run`. Is that the correct way ?. And after running, indeed it worked:; ![image](https://cloud.githubusercontent.com/assets/1775952/23943815/fe38edd2-0970-11e7-9b84-b3cf189a51b3.png). For some reason, the background has also been selected, although it was outside of the tile.; -My first question is how to avoid that?. -Second question, all detected objects are by tile, is there a way to merge the connected one?. And finally, it works tile by tile, but in case I would like to perform the Weka segmentation (which could be done easily thanks to the bridge you made via an ImageJ Macro), since the weka segmentation perform filtering (gqussian, hessian etc...), ideally, I would like to process the tile with a little bit of extra border so for example a gaussian filter with a kernel of 4 will take into account the pixel outside of the tile. But right now, it will only take into account the pixels inside the tile.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286702227:704,Mask,Mask,704,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286702227,1,['Mask'],['Mask']
Availability,"Thanks for your help. Exactly, the .mds file is a kind of mirror file. The statistics I got from my teacher are all of this kind which can only be open with a special software . Otherwise some errors might occur. I agree with your guess because Qupath can open the .tif files which are pyramidal TIFF I got from camelyon challenge. But is there any method of expanding the memory or is there an alternative to solve the problem?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409831047:193,error,errors,193,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409831047,1,['error'],['errors']
Availability,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:93,error,error,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,1,['error'],['error']
Availability,"Thanks for your report and tracking down the problem. We definitely should close any new image tile store that is being created here, although we shouldn't have to if the 'main' tile store used by QuPath is used instead. Could you try modifying your rendered server builder as shown below please?; ```java; def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .store(viewer.getImageRegionStore()) // The new line!; .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(); ```; I haven't tried it, but from reading the description I think it might help work around the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561#issuecomment-2235714291:36,down,down,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561#issuecomment-2235714291,3,['down'],"['down', 'downsample', 'downsamples']"
Availability,"Thanks! And yes, I found the previous reports hard to find as well, even though I remembered writing them :) I've just reopened; * #894 . and changed the wording to make it easier to find until v0.4.0 is available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186393557:204,avail,available,204,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186393557,1,['avail'],['available']
Availability,"Thanks! Now it partially works using this code:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest; // Define resolution - 1.0 means full size; double downsample = 1.0; // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput); // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); getDetectionObjects().parallelStream().forEach({Polygon ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, Polygon.getName() + '.jpg')); }); print('Done!'); ```. **However it only saves one Polygon** (more or less randomly, out of ca. 20). I guess its because the Polygons do not have unique names. . Is there a way to include a command in the above mentioned script that gives each Polygon an unique name?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346793633:176,down,downsample,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346793633,2,['down'],['downsample']
Availability,"Thanks!. > Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing gradlew when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later. Hmmm, that can happen if you've installed the latest JDK and it's now the system default, but you haven't built QuPath in a while. I tend to update gradlew as soon as I see there's a new stable release, although that tends to come a bit after the JDK. If that's the issue that got you, the 'solution' can be to set an older JDK to be the system default (e.g. Java 11) and run gradlew using that... or find some other way to run gradle with a different, older JDK. It's able to download separately the JDK it actually needs to build QuPath, separately from the JDK used to run gradle itself - if that makes any sense. More info about [toolchains here](https://docs.gradle.org/current/userguide/toolchains.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161:713,down,download,713,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161,1,['down'],['download']
Availability,"Thanks!. And generally, thank you a lot for taking the time and the chance to do such a core change to QuPath's architecture. I am certain it will have big impacts on the users, however i hope it won't weight too much on the maintenance burdening.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1579#issuecomment-2277444939:225,mainten,maintenance,225,https://qupath.github.io,https://github.com/qupath/qupath/pull/1579#issuecomment-2277444939,1,['mainten'],['maintenance']
Availability,"Thanks, I made minor edits to ensure `super.close()` is called as well, and made some variables final. One worry, possibly obscure: it looks like `dedicatedStore` is being set as a side-effect or calling `getStore()`. That's fine if the builder is only used once, but if it is reused and passed a different `store` (or `findViewer()` gives a non-null result) before the second use then I think we could still end up closing a store that is being used elsewhere. Possible workarounds:; 1. Move the `getStore()` logic into `build()` so that `dedicatedStore` doesn't need to be a field of the builder; 2. Reset the value of `dedicatedStore` whenever its value may change (e.g. `findViewer(imageData)` doesn't return `null`, or `store` is updated); 3. Build the store inside the `RenderedImageServer` if the store it is given is `null` - and then set `dedicatedStore` only within `RenderedImageServer` (which knows whether or not it created a store). I tend to think Option 3. might be the easiest to code, and most robust.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612:1012,robust,robust,1012,https://qupath.github.io,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612,1,['robust'],['robust']
Availability,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834#issuecomment-955743430:373,error,error,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430,1,['error'],['error']
Availability,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:801,error,errors,801,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282,1,['error'],['errors']
Availability,"Thanks, can you describe a bit more how to replicate the original bug and check it is fixed?. We need something we can link to in https://github.com/qupath/qupath/blob/main/CHANGELOG.md to describe the fix (either an issue or a PR). Also, I think that `settings.gradle` was included here in error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1039#issuecomment-1219552207:291,error,error,291,https://qupath.github.io,https://github.com/qupath/qupath/pull/1039#issuecomment-1219552207,1,['error'],['error']
Availability,"Thanks, closing this now since it's 'fixed' as far as it's likely to be within QuPath, and it's now available in v0.2.2.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-665048258:100,avail,available,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-665048258,1,['avail'],['available']
Availability,"Thanks, have you been able to try this on any other operating system? I can't replicate it on my laptop but will try to test it on Ubuntu soon. Also, do you have a graphics tablet / pressure-sensitive pen?. The error takes me to https://github.com/qupath/qupath/blob/5ddf2cdf8b2b7eb689d70240878887af78de43cb/qupath-extension-processing/src/main/java/qupath/opencv/tools/WandToolCV.java#L420-L424; so my best guess is that the radius is somehow less than 0. I don't see why that would be the case, but you could try the following script; ```groovy; println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager(); println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager().getPressure(); ```; to investigate. If there can be an scenario when the pressure is < 0 then the fix might just require checking is `radius <= 0` at line 421... but I'm guessing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561064260:211,error,error,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561064260,1,['error'],['error']
Availability,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:60,reliab,reliably,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119,3,"['alive', 'avail', 'reliab']","['alive', 'available', 'reliably']"
Availability,"Thanks, that would be good - it sounds like it would be difficult and time-consuming for anyone else to replicate the problem, and might not be possible if it turns out to be something more specific to your system. So solving this will likely require any any info you can get from VisualVM's CPU sampling. I'll try to write up info about VisualVM + QuPath at some point, but there are brief instructions at https://forum.image.sc/t/designing-a-qupath-workstation/54849/14. QuPath shouldn't be regenerating thumbnails when a project is opened, and it shouldn't be remembering anything (other than the preferences) across relaunches. v0.4.0 should generating missing thumbnails only, and do so in a background thread that doesn't block. Both v0.3 and v0.4 will try to access the thumbnail images in the project when it is opened; this *could* potentially block the UI, because it needs to be done in the UI thread (and there can only be one). However these should generally be small JPEGs so I've never known that to be a problem. Therefore I'd only expect this to be troublesome if there is some other reason why access to the disk is exceptionally slow. I couldn't really tell what was going on in the video, partly because the analysis pane was closed - and when the image was opened I couldn't really see how or when that happened. For slightly more info in the log, you can switch the log level in the preferences from `INFO` to `DEBUG`. Not sure if that will help narrow things down or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1326026753:1482,down,down,1482,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1326026753,1,['down'],['down']
Availability,"Thanks, that's quite strange... I've just downloaded it again, and it is working here on two different Macs. Are you running macOS Sierra, or some other version?. If QuPath can't load OpenSlide, then I expect it can't load any other whole slide formats (unless you have the Bio-Formats extension installed). In that case, I would expect it to fall back to using ImageJ for MRXS images to read only the low-resolution data. If you right-click on QuPath.app and select 'Show package contents', you should be able to see something like what is shown below:. ![libopenslide](https://cloud.githubusercontent.com/assets/4690904/20973479/a23ad306-bc90-11e6-9863-e9281c2c9110.jpg). I suspect the issue may be connected to differences in the many ```lib*``` files. One way to test this is to copy all the ```lib.*``` files from a QuPath version that works (i.e. anything before v0.1.1?) and paste it into the QuPath that doesn't. This may cause v0.1.1 to function. If these instructions make any sense, could you try this?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265486923:42,down,downloaded,42,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265486923,1,['down'],['downloaded']
Availability,"Thanks, the command is unfinished & needs more attention at some point, but the fact it works for 'below threshold' is probably why I've never seen the issue (and it seemed to work for me when I tried it). > Side note: Classify Detections, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`. Does it fail or is it just wordy? Because warnings aren't errors, this alone does not necessarily mean it fails.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/403#issuecomment-588528261:479,error,errors,479,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588528261,1,['error'],['errors']
Availability,"Thanks, the screenshot suggests it's the `Files.exists()` check that is so slow. QuPath is probably calling this quite a lot, because it's usually really inexpensive - and *not* calling it leaves open the (admittedly small) possibility that the file has been deleted between calls. I could try to cut down on this, but I'm skeptical that it will help because it sounds a lot like it's only the first call that is slow. In fact, I'd be curious as to whether accessing each file is slow or just the first one on the disk. That should be relatively easy to test by creating a much smaller project and comparing the speed. Either way, it sounds like the problem lurks in the realm of Java, the operating system, and the hard drive. I'm not sure if there's much can be done about it in QuPath. I'd suggest:. * try accessing the images some other way before opening them in QuPath (e.g. through Windows Explorer), in case 'pre-warning' the OS is somehow useful; * try copying the images to a local drive (if possible); * try timing a simple script with a file on the same disk, e.g. ```groovy; import java.nio.file.*; var path = '/path/to/some/file'; println ""Exists: ${Files.exists(Paths.get(path))}""; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1327044045:301,down,down,301,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1327044045,2,['down'],['down']
Availability,"Thanks, this looks like a bug in the Bio-Formats extension. I can replicate the problem with the attached image. I've tracked it down to one line [here](https://github.com/qupath/qupath-bioformats-extension/blob/master/src/main/java/qupath/lib/images/servers/BioFormatsImageServer.java#L670) - presumably `mergeChannels` contains some logic to treat 4-channel 8-bit images are ARGB. If I open the image in ImageJ and save it as a multichannel image then all 4 channels are measured, as they should be. So it's not an inherent limitation in the cell detection. If I'm correct, most other combinations of channel numbers and bit-depths should be fine... It should be a fairly straightforward fix. I'm travelling at the moment, but will have a look soon.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/164#issuecomment-380835137:129,down,down,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/164#issuecomment-380835137,1,['down'],['down']
Availability,"Thanks. There isn't a pixel classifier here, only on an experimental bit of a branch on my fork... but indeed I get the same error. Fixed now, good to catch it early :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/170#issuecomment-383882612:125,error,error,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/170#issuecomment-383882612,1,['error'],['error']
Availability,"That *might* be normal behavior with Java... I'm not 100% sure but I think that, by default, once Java has grabbed some memory, it is reluctant to give it back until shutting down. But it shouldn't go beyond the maximum of 32 GB. Since it is calling TensorFlow and OpenCV, which are outside Java's normal world, normal rules might not apply entirely. The last changes I made are my current best guess for something that might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630898801:175,down,down,175,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630898801,1,['down'],['down']
Availability,That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1091970309:53,error,error,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1091970309,1,['error'],['error']
Availability,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/248#issuecomment-441513852:375,down,downsampling,375,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852,2,['down'],['downsampling']
Availability,"That is usually Gatekeeper (since the app is not signed and notarized). You can either turn off Gatekeeper or right-click on the program and choose Open (only needs to be done once). Sent from my iPhone. On Jul 19, 2023, at 12:10 PM, ReganFulton ***@***.***> wrote:. ﻿. I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail.; Any advice?. —; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABMJCNSIL52UXHDWZGSRNS3XRABFXANCNFSM6AAAAAA2QBRGYY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536:490,down,downloading,490,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536,3,"['avail', 'down']","['avail', 'downloading']"
Availability,"That looks eerily similar to an error I think @Svidro mentioned once. It's related to painting the cell overlay on top of the image. Painting errors are annoying, but shouldn't generally be really critical. I believe it occurs because a change in selected objects happens to occur at the same time that the objects are being painted. I have made a change in the code that should address this. If you can find a way to reproduce the error consistently I will check it... otherwise if you find it continues to happen in the next milestone please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484602478:32,error,error,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484602478,3,['error'],"['error', 'errors']"
Availability,"That sounds much easier, once integrated, than my method of downsampling the whole image to a size where I could submit it to ImageJ, greyscaling a merged image of the channels, and then sending back the annotation region! I haven't tested it yet, but can it work on multiple channels at once?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323493294:60,down,downsampling,60,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323493294,1,['down'],['downsampling']
Availability,"That usually happens when the path is broken to the image. 0.2.0 is not as.. mobile as the earlier versions. If you check ""View->show log,"" I suspect you will find an error showing that it cannot find the image. You would need to move the project or images back to the original location.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/322#issuecomment-497035914:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/322#issuecomment-497035914,1,['error'],['error']
Availability,"That's good to know, thanks. Poking deeper into the error I see; ```; qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; ```; which is definitely a new line connected with how tiles are paralleled in QuPath's Bio-Formats reading since v0.3.1. However, the bigger context is very mysterious:; ```; # Problematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:52,error,error,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302,1,['error'],['error']
Availability,"The `.pkg` wraps up the `.app` in an installer. I think `jpackage` will create the `.app` first, then the `.pkg` if required - but I don't think it gives space in between to do anything useful. I've never used `defaults` (didn't know it existed...) so don't know if it requires the `.app`. We use `package=installer` to get the `.pkg` because otherwise I think the `.app` has all sorts of scary quarantine flags set that mean it can't be launched without recursively removing them all (at least that's my vague memory of what happened, I may well be misremembering). The flags only occurred when downloading - so on my local build I thought all was fine...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157:596,down,downloading,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157,1,['down'],['downloading']
Availability,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1512,down,down,1512,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951,2,['down'],['down']
Availability,"The bug was in the base class, therefore affected all OpenCV classifiers (see [here](https://stackoverflow.com/questions/42484908/error-while-saving-trained-svm-in-opencv-3-2-0-java) for a mention). Do you actually find cases where classifiers are different upon reloading, or only expect that would be the case?. This is something I considered at the time and to the best of my knowledge all random number generators involved are seeded when necessary (within QuPath and OpenCV) and the classifiers _are_ reproducible. I have memories of running end-to-end analysis of TMAs via scripts, including reloading classifiers, and obtaining identical results. If this is not the case that would of course be a more serious issue, but I am not aware of any instances where your expectation as a user would not be met for this reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/343#issuecomment-515309402:130,error,error-while-saving-trained-svm-in-opencv-,130,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515309402,1,['error'],['error-while-saving-trained-svm-in-opencv-']
Availability,"The changes in https://github.com/petebankhead/qupath/commit/deea6c7d71baee558701f9ae1e5c85434c00384c have hopefully resolved the issue, and will be available in v0.3.; Please do reopen this if you find that it hasn't been fixed after all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/646#issuecomment-816053915:149,avail,available,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-816053915,1,['avail'],['available']
Availability,"The commit [f37dcfc](https://github.com/qupath/qupath/pull/1096/commits/f37dcfc63cc65a43b8a0eba76e7b7db86c3d75bc) assumes both the ```columnImage``` & ```columnOverlay``` are available and works well when it is true. Table does not seem to refresh when only one of them is available. ; Hence the table may need to be refreshed outside the ```if``` statement. Does this mean that the table may refresh twice when both column are available ? ; This one is trickier that I had initially thought.; ; ```java; 		// Add columns to show images, if we have them; 		if (hasImages || hasOverlay) {; 			TreeTableColumn<TMAEntry, TMAEntry> columnImage = hasImages ? new TreeTableColumn<>(""Thumbnail"") : null;; 			TreeTableColumn<TMAEntry, TMAEntry> columnOverlay = hasOverlay ? new TreeTableColumn<>(""Overlay"") : null;. 			if (hasImages) {; 				columnImage.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnImage.setCellFactory(c -> new ImageTableCell(imageCache, false));; 				columnImage.maxWidthProperty().bind(maxSmallWidth);; 				columnImage.widthProperty().addListener((v, o, n) -> {; 					if (n.doubleValue() == columnImage.getPrefWidth()); 						return;; 					if (hasOverlay); 						columnOverlay.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnImage);; 			}. 			if (hasOverlay) {; 				columnOverlay.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnOverlay.setCellFactory(c -> new ImageTableCell(imageCache, true));; 				columnOverlay.maxWidthProperty().bind(maxSmallWidth);; 				columnOverlay.widthProperty().addL",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472:175,avail,available,175,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472,3,['avail'],['available']
Availability,"The core images are loaded in a background thread, and there is a 5 second timeout associated with this - see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L254). One possibility is that the timeout isn't generous enough in your case, and the cores are not being loaded fast enough. I don't know why that would be the case... it might be to do with the computer specifications, where the image is located (a network share?), or the access time required for the specific file format. Another option is that there are just too many cores. That is my best guess, since the scrollbar thumb on the right in your screenshot looks very small. There is a limit to the size of the cache used to store the TMA cores to reduce the risk of memory errors, see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L133) for the location in the code. Currently there is no way to increase the size of the cache through the user interface to support more cores in the grid view. Although, as is often the case, there is a way through a script. You could try running this to double the cache size to see if it helps.; ```groovy; qupath.lib.gui.commands.TMAGridView.MAX_CACHE_SIZE = 500; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/96#issuecomment-326105429:810,error,errors,810,https://qupath.github.io,https://github.com/qupath/qupath/issues/96#issuecomment-326105429,1,['error'],['errors']
Availability,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-467853740:531,error,error,531,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740,1,['error'],['error']
Availability,"The error includes `image size too large (2453.678853034973 MB)`. My guess is that the exported TIFF isn't a pyramidal TIFF, and this may be why QuPath + Bio-Formats needs to resort to reading it in one go - and too much memory is required for that to be possible. I'm not familiar with `.mds` - I don't suppose it works directly, or do you have any alternative options to export the image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409798891:4,error,error,4,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409798891,1,['error'],['error']
Availability,The error still exist even if I add a folder by hand:; D:\QMDownload\5\[failed_handOK]Leica_scn\Leica-Fluorescence-1_tif,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472889869:4,error,error,4,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472889869,1,['error'],['error']
Availability,"The example script is running fine except it is not writing the image, showing error : **No compatible writer found.**",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411343228:79,error,error,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411343228,1,['error'],['error']
Availability,The fix for this has been merged and will be available in v0.3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/701#issuecomment-816127793:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/701#issuecomment-816127793,1,['avail'],['available']
Availability,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-541389834:410,avail,available,410,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834,2,['avail'],['available']
Availability,"The last commit adds a toolbar button to show detection 'connections' (neighbors based on a Delaunay triangulation):. ![image](https://github.com/user-attachments/assets/90878352-9335-4163-aa36-9f1517225b31). This was previously available under the *View* command, but only actively did anything if the *Delaunay cluster features 2D* command had been run. Now, it can be used at any time and will show connecting lines for cells (if available), or detections (if there are no cells). Currently, it is only a visual tool - using the new features require scripts such as those described above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1597#issuecomment-2305236713:229,avail,available,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/1597#issuecomment-2305236713,2,['avail'],['available']
Availability,The last commit should avoid showing an error message unnecessarily.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/503#issuecomment-633205314:40,error,error,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/503#issuecomment-633205314,1,['error'],['error']
Availability,The lazy code further down where I loop through properties and make them persistent there. Using the name makes it easier to assign them a sensible persistent key.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1601#issuecomment-2312160962:22,down,down,22,https://qupath.github.io,https://github.com/qupath/qupath/pull/1601#issuecomment-2312160962,1,['down'],['down']
Availability,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184#issuecomment-403369967:21,error,error,21,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967,1,['error'],['error']
Availability,"The milestone versions aren't really intended to be completely inter-compatible. See the very beginning of the linked blog post on the download site:; https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html; ""Warning! It’s generally not a good idea to switch between different QuPath versions. You should be able to read older data files within v0.2.0-m6, but the reverse might not be true. Backup often!"". I would recommend creating a new project and importing any scripts or classifiers you might have had into the new project, rather than trying to resuse it. Especially if you are using images without any objects. That mostly consists of copying the folders named things like ""classifiers"" and ""scripts"" into the new project folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554792060:135,down,download,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554792060,1,['down'],['download']
Availability,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640799956:1494,error,error,1494,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956,1,['error'],['error']
Availability,"The most useful bits of information there are probably the version, OS, and any information on what you have attempted so far.; And yep, it's probably what Pete is suggesting :) Though you said you followed the instructions at the site, I wasn't sure which site you meant.; `ERROR: java.lang.UnsatisfiedLinkError: ome.jxrlib.JXRJNI.new_DecodeContext()J`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330#issuecomment-501890102:275,ERROR,ERROR,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501890102,1,['ERROR'],['ERROR']
Availability,"The problematic TIFF appears not to be pyramidal, which means that QuPath + Bio-Formats try to read an very large image that is 23422 x 30978 pixels in size all in one go... which is doomed to failure. QuPath can handle much larger images, but they do need to by pyramidal so that QuPath can quickly extract lower resolution versions of the image when appropriate (which is presumably the case with your SVS file). You might be able to convert the TIFF to a pyramidal format, e.g. see https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423728088:193,failure,failure,193,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423728088,1,['failure'],['failure']
Availability,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925051403:372,error,error,372,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403,1,['error'],['error']
Availability,"The third option listed above is now integrated, and locale information is added to `.qpdata` files. This has been done in a way that should not break compatibility with any existing saved files. Testing involved varying the locale using commands such as those below (one at a time):. ``` groovy; Locale.setDefault(Locale.UK);; Locale.setDefault(Locale.GERMAN);; Locale.setDefault(Locale.JAPAN);; Locale.setDefault(Locale.CHINA);; ```. ...and then testing whether files written with one locale could then be read using another. This appears to be working, but further insights and bug-reports relating to location-specific issues would be welcome. The fix will be included in `v0.0.5`. (Note: I could conceive of trouble with `ClassNotFoundExceptions` in the event of attempting to deserialize a `.qpdata` file where the saved `Locale` is not available... however it's not clear to me whether this could or would ever actually happen. In the even that it does, QuPath should default to not changing the locale at all - and so would still have a reasonable chance of succeeding.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/18#issuecomment-258824636:843,avail,available,843,https://qupath.github.io,https://github.com/qupath/qupath/issues/18#issuecomment-258824636,2,['avail'],['available']
Availability,"The title of this issue is issue looks quite dramatic, but I don't understand what the error is at all. Can you explain further? Was cell detection applied to a brightfield image with the image type set to 'Fluorescence'?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370398858:87,error,error,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370398858,1,['error'],['error']
Availability,"The warning; ```; WARN: Cannot assign class unambiguously - 0 classes represented in selection; ```; should be ok - QuPath is checking if there is one and only one classification that it can use to assign to the merged annotation. Unfortunately it's not smart enough to recognize that no classifications is fine as well, and doesn't really require a warning. But the latest script from @Svidro lets me experience the trouble described in the original question (albeit not an error message). I'm not entirely sure where it is going wrong, but I assume that it is somehow connected to multithreading, and things not being done in quite the right order. I suspect it's also connected to the selection changing while other processing is happening. This will be triggering some activity in the thread responsible for the user interface. Here are three ways to try to work around this - hopefully at least one of them will work. ### Method 1 - Do everything in the application thread; As the *very* first line of your script (with no spaces above it), add; ```; guiscript=true; ```; to force the script to run in the same thread as the user interface. This can often help work around troublesome multithreading issues for scripts that run very quickly. It's probably not a good idea here because the processing is likely to take a while, and the GUI will be totally blocked. ### Method 2 - Pause briefly; Adding `Thread.sleep(time)` pauses the script for a specified number of milliseconds, which can be enough to get things on track.; ```groovy; selectObjects {it.isAnnotation() && it.getROI().getROIType() == 'Rectangle'}; mergeSelectedAnnotations(); Thread.sleep(100); selectObjects {it.isAnnotation() && it.getPathClass() == getPathClass(""Tumor"")}; ```. ### Method 3 - Avoid depending on selections; If possible, it's usually good to avoid depending on objects being selected if you don't have to. Sometimes it's necessary (e.g. if you're running a command like cell detection, the annotations/TMA cores",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354864318:475,error,error,475,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354864318,2,['error'],['error']
Availability,"There are a few options, depending upon what exactly you want / how much effort can be involved. Under *Edit &rarr; Preferences* you can change the *TMA export downsample factor* to be 1 to get the highest resolution. However, this will still write JPEGs. There isn't an easy way to change that; the relevant part of the code is [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/io/PathAwtIO.java#L326) and it doesn't give a place to specify a different format. If it is the image of the TMA core only that you need, then I would suggest the one-line ImageJ macro at [#85](https://github.com/qupath/qupath/issues/85#issuecomment-317354440). You should be able to modify this to export PNGs. The main reason for (possibly) preferring to export as TIFF instead is that this would include the pixel size information in microns, in a way that ImageJ can understand; this might be useful if you want to do some analysis on the exported cores. The main disadvantage is that the TIFF files are likely to be *extremely* big (while the PNGs will probably just be 'big'). It is also possible to do the QuPath export in a Groovy script. In this case, you could also export the overlay (showing the QuPath objects) as well. But this would take a bit more effort and I'm not sure if this is something you need or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-326506002:160,down,downsample,160,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-326506002,1,['down'],['downsample']
Availability,"There are a few options:; * Get the measurements from *Measure &rarr; Show annotation measurements*, copy them into a spreadsheet and add them up there; * When you're drawing with the *Brush* tool (or the *Wand* might be nicer, if you have good contrast between the purple stain and surroundings), hold down *Shift* to append to an existing annotation - if you're pressing *Shift*, different regions can be discontinuous but still counted as one (similarly, you can hold down *Alt* to use the *Brush* or *Wand* and subtract regions); * Select all the annotations (either in the *Annotations* pane on the left, or by alt-clicking on them with the *Move* tool selected in the main image), right-click on the image and choose *Annotations &rarr; Merge selected annotations*. Hopefully one of those helps!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399142573:303,down,down,303,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399142573,2,['down'],['down']
Availability,"There are lots of possible export options and discussions, but I'm not sure if they match exactly what you want. Here are some:; * https://groups.google.com/d/msg/qupath-users/Anci7FBEHQg/XcGFJcfGAQAJ; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html; * https://groups.google.com/forum/#!topic/qupath-users/ub6TC9IMmZ8. None of them are quite the same as the _Viewer snapshot_, but then the output of this would depend on the current magnification, window size etc. and so you would lose some control in the script concerning what is actually exported (unless you also programmatically modify the viewer...). Therefore in scripts I tend to export overview images using a different approach from the viewer snapshot directly. If the above links don't help, could you describe more what exactly you want to export, and how it should look?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420215988:291,mask,masks,291,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420215988,1,['mask'],['masks']
Availability,"There is no error message. Just ""No Slide label available"" in the slide label viewer. I know there is a slide label in the file as I can see it in version 0.1.2. I am doing this within a project indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731375500:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731375500,2,"['avail', 'error']","['available', 'error']"
Availability,"There is no version with precisely the name v0.0.2-alpha. I see the error log mentions files that are not part of QuPath (e.g. `qupath.lib.GenowisAPI`), and refers indeed to 'celery_qupath_1'. Therefore it appears you are using a completely different distribution of QuPath modified by someone else and of which I know nothing. I am closing this issue because it is not related to the 'official' QuPath distribution and source code hosted here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389#issuecomment-567871641:68,error,error,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567871641,1,['error'],['error']
Availability,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567854079:360,error,error,360,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079,1,['error'],['error']
Availability,"This approach is much more elegant than #1488, i like it!; However I feel it doesn't exploit all the possible info that can be gathered without reading the image files. Specifically images' metadata for info such as the number of channels and their names or even as well as pixel calibration.; If available, they're available in the `.qpproj` and they're already read when opening the project. Perhaps this could be done by exposing a `getCurrentMetadata()` method, so that it does not require to pass through calling `getServer()`?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2031984755:297,avail,available,297,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2031984755,2,['avail'],['available']
Availability,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:5,error,error,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797,1,['error'],['error']
Availability,"This happens whenever QuPath is unable to detect any cores. There are a few reasons why this may occur:. * The *Image type* is wrong (e.g. set to fluorescence rather than brightfield) - this can be seen after clicking on the *Image* tab on the left. There is a screenshot [here](https://github.com/qupath/qupath/wiki/Preprocessing#viewing-the-default-stain-vectors).; * The specified TMA core diameter is either too large or too small. QuPath determines the expected TMA grid from 'complete' cores, which have a diameter within a small tolerance of the value set in the dialog box. If no cores fall within this tolerance, the grid cannot be found.; * The intensity threshold is either too high or too low (but it is automatically determined from the data, and I don't see any reason in your image why it would be determined wrongly). If the image type is set correctly, then I would try increasing and decreasing the *TMA core diameter* to see if this gives any improvements. If not, then there may be some issue happening internally when trying to read from the CZI file - although I have not seen such a problem before. The contents of *View &rarr; Show log* may be helpful to track down the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/48#issuecomment-276482533:536,toler,tolerance,536,https://qupath.github.io,https://github.com/qupath/qupath/issues/48#issuecomment-276482533,3,"['down', 'toler']","['down', 'tolerance']"
Availability,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495874974:759,avail,available,759,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974,1,['avail'],['available']
Availability,"This is how it looks like one of the offending AreaROIs. Just a hypothesis, but zooming in one can spot tiny spurious subregions that might be the cause of the error. ![Screenshot 2020-04-01 at 20 53 08](https://user-images.githubusercontent.com/642252/78175265-dfde7c00-745a-11ea-98be-62f14f087079.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607431796:160,error,error,160,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607431796,1,['error'],['error']
Availability,"This is now a duplicate of https://github.com/qupath/qupath/issues/217 and it would be better to continue there. On Linux, it appears that image hasn't been opened and therefore there is no `imageData` (both here and in the other discussion). I don't know why this is the case; it could be a bug in QuPath, or it could be an error in the way you call it from the command line (I don't know what you type at the command line or where your image is located). Can you say what exactly solved the problem above? https://github.com/qupath/qupath/issues/216#issuecomment-420296209; This would be helpful in case a similar question comes up in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420533550:325,error,error,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420533550,1,['error'],['error']
Availability,"This is one way to do the export:; ```groovy; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. This won't give any existing overlay, but I assume this isn't needed. Perhaps more importantly, it can be rather slow - and the resulting files may be large (often > 50 MB per PNG in my test). Exporting to JPEG would give much smaller manageable file sizes (~2 MB).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-327534509:168,down,downsample,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-327534509,2,['down'],['downsample']
Availability,"This looks good and very useful! Nice touches with auto-updating the image name based on the delimiter, and auto-disabling the column include/exclude as needed :). Some small things:; * Beware invalid characters in the fields... if the filename contains commas, the entire table becomes shifted if exporting as .csv. It appears to work properly (at least in MS Excel) if the name is enclosed in ""inverted commas"". There are rules for this [here](https://en.wikipedia.org/wiki/Comma-separated_values#Basic_rules).; * Avoid including spaces when before/after the delimiter.; * Try to get the controls to align at the right, and fill the entire space at the bottom of the dialog. For example, for the combo boxes you'll need to set the max width to Double.MAX_VALUE and (assuming you're using a GridPane) some other grow/fill properties (I forget which).; * Rename 'Choose path' to 'Choose...' and 'Output File' to 'Output file' (for capitalization consistency), and add tooltip text to this row.; * Change 'Apply on' to 'Export type' or similar. Try adding 'Image' as an option, i.e. the root object, and perhaps also TMA cores. 'Image' should probably be the default.; * Add tooltip to the 'Output File' option (and rename to 'Output file' for consistency); * Fix the tooltip for 'Columns to exclude' (says 'include'); * Revise the javadocs for 'ProjectDialogs'; add for getSourceItems, and standardize for createImageChoicePane (i.e. use the `@param` tags). Not essential at this point, but after playing with it a bit I think there would be a way to improve the control even further: the choice of columns could be a CheckComboBox, which is populated *if* the user presses a *Populate* button. This needs to be an explicit choice, because it would require opening all the currently-selected images to figure out which column headings are available... and this may be slow. Perhaps not worth the effort for now, having this at all will be a major improvement!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/425#issuecomment-606125263:1839,avail,available,1839,https://qupath.github.io,https://github.com/qupath/qupath/pull/425#issuecomment-606125263,1,['avail'],['available']
Availability,"This relates to https://github.com/qupath/qupath/issues/1634. Because CUDA detection and PyTorch downloading is all performed by DeepJavaLibrary, we are very limited in what we can do on the QuPath side. Then there is the issue of how Java loads native library dependencies - and especially the platform-specific fun of how *sub*-dependencies are handled. And the potential interference of environment variables or other things that could be installed. It is, in short, hard. The page on the docs is currently our best 'general' approach to help with this, based on many hours trying to find something workable across computers: https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#gpu-support. We will continue to try to improve this, but I'll close the issue because I don't think there is any clearly-defined QuPath bug here that we can address. To try to avoid fragmenting the discussion in multiple places, I suggest posting on the forum. There are more users active on the forum who might potentially be able to help from their own experience, and there are already some related discussions, e.g. https://forum.image.sc/search?q=qupath%20gpu%20order%3Alatest",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057:97,down,downloading,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057,2,['down'],['downloading']
Availability,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/386#issuecomment-566096742:711,error,error,711,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742,1,['error'],['error']
Availability,"This situation is hopefully much improved in v0.0.7. OpenSlide and OpenCV were both recompiled, and I attempted to ensure all non-standard, required dependencies are now included - with an appropriate ```rpath``` setting so that they may find one another. Most of the steps taken are documented under the ['Maven' directory](https://github.com/qupath/qupath/tree/master/maven). The Linux version 0.0.7 was created using Ubuntu 16.04 running through VirtualBox on an iMac. I also tested the compiled QuPath on a clean installation of Fedora 25, also through VirtualBox. Both were able to run QuPath, including commands depending on OpenSlide and OpenCV - although things did run a bit more smoothly on Ubuntu (e.g. the *Brush* tool misbehaved on Fedora). Additionally, the Linux version is created using [OpenJDK](http://openjdk.java.net) and [OpenJFX](http://openjdk.java.net/projects/openjfx/) - as opposed to the [Oracle JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) used for Windows and Mac.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-263157251:974,down,downloads,974,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-263157251,2,['down'],"['downloads', 'downloads-']"
Availability,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:687,avail,available,687,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['avail'],['available']
Availability,"This update does allow the export to run as expected when saving as ""ome.tif"". It might be useful to have a check/warning prior to attempting to write a file that is too large to a basic .tif. If I attempt the same export to .tif, after a long pause I get:. `WARN: Unable to write image; ERROR: IOException at line 22: Unable to write F:\filepath\Sox2 region_0_annotationLabels.tif! No compatible writer found.`. Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing `gradlew ` when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515:288,ERROR,ERROR,288,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515,1,['ERROR'],['ERROR']
Availability,"Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1745,avail,available,1745,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['avail'],['available']
Availability,"To begin, I disable the two lines:; ```; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder. ```; Then I replace the two lines below:. ```; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(); // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```. to:. ```; // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(); ```. Then I run the acript again in QuPath 0.2.0. When import error was removed, the modified ""server"" now can give correct information:. ```; // get size of whole image; int H = server.getHeight(); int W = server.getWidth(); int Z = server.nZSlices() //usually 1; int C = server.nChannels(); int T = server.nTimepoints(); String TU = server.getTimeUnit(); int Magnification = server.getMagnification(); boolean HasPixelSizeMicrons = server.hasPixelSizeMicrons(); int BitsPerPixel = server.getBitsPerPixel(). print(""Height:"" + H) ; print(""Width:"" + W); print(""ZSlices:"" + Z); print(""nChannels:"" + C); print(""nTimepoints:"" + T); print(""TimeUnit:"" + TU); print(""Magnification:"" + Magnification); print(""HasPixelSizeMicrons:"" + HasPixelSizeMicrons). double PixelHeightMicrons; double PixelWidthMicrons; double PixelZSpacingMicrons. if (HasPixelSizeMicrons){; PixelHeightMicrons = server.getPixelHeightMicrons(); print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = server.getPixelWidthMicrons(); print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:609,error,error,609,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,2,['error'],['error']
Availability,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426#issuecomment-606410721:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721,1,['error'],['error']
Availability,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430150335:125,down,down,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335,2,['down'],['down']
Availability,"True, but there are multiple places where text could be generated in QuPath that is copied to the clipboard. I don't really fancy trying to track down all of them... Are you able to share a file that includes the problem? I currently have no way to replicate it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664523997:146,down,down,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664523997,1,['down'],['down']
Availability,"Ubuntu/PopOS results, pretty much what I expected, more files less time, no inconsistency:. ```; INFO: Starting script at Thu Aug 24 14:47:27 BST 2023; INFO: Same: true; INFO: Count files: 208; INFO: Count paths: 208; INFO: Paths 	598 ms; Files 	319 ms; Total duration	917 ms; Average per checkpoint: 458 ms; INFO: Total run time: 2.68 seconds; ```. > Also... why do they not match?!?. The unholy combination that is Windows and Java, I guess",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691717326:289,checkpoint,checkpoint,289,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691717326,1,['checkpoint'],['checkpoint']
Availability,"Under *Edit &rarr; Preferences...* check if *Mask image names in projects* is selected. This is a feature that helps with analysis based on manual evaluation, where seeing the file name could bias the interpretation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/655#issuecomment-743789788:45,Mask,Mask,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/655#issuecomment-743789788,1,['Mask'],['Mask']
Availability,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436386267:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267,1,['error'],['error']
Availability,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-631299162:378,avail,available,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162,1,['avail'],['available']
Availability,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482720:123,error,error,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Upon further exploration, removing 'Original RGB' as the 'first' available channel could be more problematic/confusing whenever image types are changed. However, I think there's no justification for `Normalized OD colors` being available. Therefore proposed 'fix' is just to remove that as an option when using RGB fluorescence images. Channel toggling is still possible, it just involves adding one (i.e. 2 for red, 3 for green, 4 for blue). This doesn't feel optimal, but does feel less scary in the short term at least. ### Before; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 32 08"" src=""https://user-images.githubusercontent.com/4690904/178557437-e19f71c1-f733-4483-9fbb-3ef04943bfb4.png"">. ### After; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 31 48"" src=""https://user-images.githubusercontent.com/4690904/178557465-7937107a-bc8c-43c2-a658-cc5572536ddd.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909:65,avail,available,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909,2,['avail'],['available']
Availability,Using only the smoothed featurs for the classifier I do see now that the classifier works:. INFO: Number of reclassified objects: 40 of 4375; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Classifier already trained with the same samples - existing classifier will be used; INFO: Classifier training time: 0.01 seconds; INFO: Main classifier unchanged...; INFO: Classification time: 0.00 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 100.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 138	 0; Tumor	 0	 165. But still it doesn't apply this to the rest of the picture. Sanne,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418648914:197,avail,available,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418648914,1,['avail'],['available']
Availability,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:617,avail,available,617,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272,2,['avail'],['available']
Availability,"We don't have a code signature step... release candidate must be available within the next couple of hours, ahead of a workshop next week, so won't have time to make any more changes ahead of that. The easiest way to explore would be to build for source with gradle: https://qupath.readthedocs.io/en/0.4/docs/reference/building.html. The PR should point towards the parts that needed to be reverted to get things working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267:65,avail,available,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267,1,['avail'],['available']
Availability,"We'd need more information to be able to help, including:. * what errors do you see under *View -> Show log*?; * how precisely did the abnormal shutdown occur?; * can you give precise steps to replicate the issue?; * do the other images in the project work?. QuPath tries to offer the user some protection by creating a backup data file while writing the new one, in case this does not succeed - see https://github.com/qupath/qupath/blob/85700bbb026e1e72425e266ee3105b2f39c4f4fd/qupath-core/src/main/java/qupath/lib/projects/DefaultProject.java#L730-L779. Therefore I think that this bug report is not correct in general (i.e. any abnormal termination will cause data to be lost) - rather, the specific steps are essential to understand the problem. Note that you can right-click on the image under the 'Project' tab and go to the directory that contains the problematic `.qpdata` file. If your see a file ended with `.bkp` you could try renaming it to replace the corrupt/incomplete `.qpdata` and see if that restores the last saved data for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-639525487:66,error,errors,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-639525487,1,['error'],['errors']
Availability,"Weirdly I can't get it to open. MacOS says '""QuPath.app"" is damaged and can't be opened. You should move it to the bin'. Even when I go into the package and manually run the QuPath script from the terminal I get the same error. I'll maybe try installing Java JDK 17 x86 and see if I can compile it, unless you have another suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799:221,error,error,221,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799,1,['error'],['error']
Availability,"Well, clearly I didn't actually read the error message, sorry... looks like it's OpenCV and not OpenSlide that seems to be triggering the trouble.; Could you replace `openslide` with `opencv` in those last instructions...?. Or if you are feeling particularly bold you could also try switching to the `java9` branch on my fork, where I am trying out a different version of OpenCV - which might possibly avoid the problem entirely.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368861735:41,error,error,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368861735,2,['error'],['error']
Availability,"Well, that definitely did something - I managed to crash QuPath. One thing - I am trying to run a 64 bit installation, perhaps that is causing some kind of conflict? I checked just to be sure and my python is 64 bit and the error message below discusses a 64-bit Open-JDK server, so this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExt",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:224,error,error,224,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,3,"['down', 'error']","['down', 'error']"
Availability,"What is really interesting with the interaction with Cellprofiler is that we could use already developed and validated pipelines without starting from scratch. We have delopped a few extra CP python modules to handle specific analytical problems. The new version of CP is entirely python based. They do not support ImageJ anymore (no need to deal with javabridge which was a headache for us for while) and very attractive to deploy on a cluster environment. But what you suggest is a good idea, i.e. add it as a new feature request and see how it goes from there. But to my opinion the really interesting aspect with CP and the underlying python+addition libraries (so far) is the computational one, i.e. memory consumption and parallelisation. It would be very efficient to handle a very granular analysis (down to cell/organelle level) in python. We are running with up to 1*10^6 #objects per slide and you quickly go up to 12GB of RAM consumption for a single process in QuPath. The tiling of the slide before analysis is something I'm exploring with QuPath. The streamlining of QuPath and python is an excellent idea. It would allow interaction with CellProfiler modules and other python packages. . Great work. It's being very helpful to us. The interface is great and the other technical problems you can always find a solutions in one way or another even if it is not optimal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350242806:808,down,down,808,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350242806,1,['down'],['down']
Availability,"When I build QuPath with `./gradlew jpackage` I'm only getting the *non-core* QuPath jars (`qupath-bioimageio-spec` and `qupath-fxtras`). I also don't see any javadocs if I call `./gradlew run`; it would be nice if they could be available, but it isn't crucial since the normal use will be via `jpackage` builds. Lastly, when I open the Javadoc viewer, I see this:; <img width=""659"" alt=""javadoc-screen"" src=""https://github.com/qupath/qupath/assets/4690904/062bcb1e-5604-41c5-b8a3-3901549cf8f2"">; It resolves if I click on the link: the expected page loads at that point. I'm not sure if these can/should be addressed within the current PR - happy to merge this one now if you like, so that we can switch to the new Javadoc viewer and resolve anything that remains at that point.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2095553840:229,avail,available,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2095553840,1,['avail'],['available']
Availability,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473503394:27,error,error,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479816228:138,error,error,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228,2,['error'],['error']
Availability,When is the error generated?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482912:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482912,1,['error'],['error']
Availability,"When splitting annotations by lines, my expectation is that the thickness will usually be 0. Supporting different units risks increasing the code complexity considerably, because the command must also be scriptable and then somehow the units need to incorporated into any script. Additionally, QuPath is moving towards greater generality. It is increasingly used for images where µm is an inappropriate unit, so I'm reluctant to add additional code that assumes µm as the only alternative to pixels. And a properly generic system will take a lot more effort to develop (not helped by the fact that Java has no built-in support for converting units... it's a recurring theme, e.g. [here](https://jcp.org/en/jsr/detail?id=385), but as far as I'm aware there are a multiple implementations and it's not clear which, if any, we should use). This also affects the sparse image server: at the point the dialog is shown, we don't know if the pixel size is available in µm for the regions that will be required to generate the server. Furthermore, the dialog itself is [auto-generated from a `ParameterList`](https://github.com/qupath/qupath/blob/main/qupath-extension-processing/src/main/java/qupath/process/gui/commands/CreateTrainingImageCommand.java#L90), which limits the ability to toggle between units. Added to that, I'm not terribly happy with the generation of 'dynamic' training images generally; the code is really complex (since the images can be quite heterogeneous), and performance can be poor whenever many images need to be accessed to create the final result. Therefore I wonder if creating a new command that defaults to writing the image as a new file would be preferable anyway. I'll leave this open for a while in case there are further comments, but my feeling is that the development-and-maintainence-time-to-benefit ratio isn't favorable enough to work on this in the core QuPath software; there are too many higher priorities, and if I'd rather focus efforts on simplicity, maintain",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932:949,avail,available,949,https://qupath.github.io,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932,2,['avail'],['available']
Availability,"When trying to run this I get; ```; qupath.fx.dialogs.Dialogs - QuPath exception: Exception in Application start method; java.lang.RuntimeException: Exception in Application start method; 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:893); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195); 	at java.base/java.lang.Thread.run(Thread.java:833); Caused by: java.lang.NullPointerException: Cannot invoke ""qupath.lib.gui.viewer.QuPathViewer.downsampleFactor()"" because ""this.viewer"" is null; ```. But even if this is fixed, would it have any visible impact? The label text should already be updated. I agree that downsample factor should be exposed as a property, but I think it will require a cautious approach; if it's not a `ReadOnlyDoubleProperty` then the user should be able to assume that they can also *set* the downsample via the property, but I expect that would require a bigger refactoring of `QuPathViewer`. It's old-fashioned and suboptimal, but for now adding a [`QuPathViewerListener`](https://github.com/qupath/qupath/blob/007b18108b9f43954279403cb1f796d7ada4b521/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/QuPathViewerListener.java) is the expected way to identify any kind of viewer change. Definitely a move towards a more property-based approach would be welcome, but then so would a viewer that uses JavaFX more natively (rather than lots of legacy Graphics2D stuff)... so I think the question is whether to invest time in refactoring the current viewer, or take on the task of writing an entirely new viewer?. I definitely think a new viewer would be nice at some point - would be good to discuss what to do along the way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283:516,down,downsampleFactor,516,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283,3,['down'],"['downsample', 'downsampleFactor']"
Availability,"When you run the *Estimate stain vectors*, it is good to have the smallest region selected that contains 'a bit of everything' (red staining, nuclei, background - although probably not the yellow pigment here). If the region selected is large, then QuPath will need to scale it down and then may give a less good estimate. You can also set individual stains manually by drawing very small rectangles around an area containing the stain, and then double-clicking the name of the stain under the *Image* tab. Ideally, a really good estimate would allow you to set a higher intensity threshold and still detect what you want - but not what you don't. However it is quite possible that no settings really achieve this. Since I understand you are looking at counts - and not intensity values - you *could* set the image type to be *Brightfield (other)* and then this activates the 'third' stain color. You could then set that based upon a small rectangle drawn in a yellow area. QuPath will then try to separate this as an extra stain. This will certainly negatively impact intensity measurements, and I'm not sure if it's a good idea. Nevertheless, the meaningfulness of intensity measurements in this kind of image is probably pretty limited anyway, so it is perhaps worth a try to see if it results in much better detection of what you can see by eye really should be detected. In the future, I'm wondering if it would be better to create a machine learning approach in QuPath for tasks like this, i.e. something more 'learn-by-example' (like with training the tumor/stroma cell distinction), rather than relying on color deconvolution. I think the current approach may be too simple, because there are always little anomalies or artefacts that can play havoc with trying to set a threshold for detection. What do you think? Are there any other changes/additions that would help here?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368339801:278,down,down,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368339801,2,['down'],['down']
Availability,"When you save the classifier, QuPath really just saves what it needs to apply the classification - but it doesn't store all the information about where exactly the training information came from. That's why you aren't able to load the classifier again and update it... not enough information has been saved in the ```.qpclassifier``` file to make that possible. The ```.qpclassifier``` file should therefore be considered 'locked-down', since you can't really change that classifier again directly. Fortunately, so long as you've saved the data for each image as you went along (including your annotations), you can work around this. To do so, you start by creating a new detection classifier and starting to train it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:430,down,down,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['down'],['down']
Availability,"While viewers are unsynced, this should get you started. Maybe Pete will have a way to sync based on the current center of one viewer, but this will temporarily lock them together. Use your own X Y coordinates for pixel location and your desired downsample. Just click into each one of the viewers in turn and run:. ```; def viewer = getQuPath().getViewer(); viewer.setCenterPixelLocation(10000, 10000);; viewer.setDownsampleFactor(2); ```; Then check the sync box.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/138#issuecomment-357477993:246,down,downsample,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/138#issuecomment-357477993,1,['down'],['downsample']
Availability,"With the *Point* tool selected, click on an existing point while holding down the ```Alt``` key, as described under [Tips for more effective counting](https://github.com/qupath/qupath/wiki/Counting-cells#tips-for-more-effective-counting).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-300553027:73,down,down,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-300553027,1,['down'],['down']
Availability,"With the latest commit I also added an option in the CLI interface to run the script for the whole project without accessing the image files.; ```bash; ./gradlew run --args=""script -p '/home/castoldi/426FC/project.qpproj' -n -c 'import qupath.imagej.tools.IJTools; println IJTools.convertToImagePlus(getCurrentServer(), RegionRequest.createInstance(getCurrentServer(), 16))'""; ````; output:; ```; > Task :qupath-app:run; 14:08:12.506 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting default Locale to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for FORMAT to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for DISPLAY to en_US; 14:08:12.513 [main] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 31; 14:08:12.513 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8000.00 MB (25.0% max memory); 14:08:12.525 [main] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:opencv:4.6.0-1.5.8 do not match.; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:openblas:0.3.21-1.5.8 do not match.; 14:08:12.860 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.1 FC.czi - Scene #1 (0/48); 14:08:13.205 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files.; [...]; 14:08:24.832 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.6 FC.czi - Scene #8 (48/48); 14:08:25.124 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files. BUILD SUCCESSFUL in 18s; 34 actionable tasks: 10 executed, 24 up-to-date. ~/Projects/qupath light-script-runner* 19s; ❯ ; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385:1318,ERROR,ERROR,1318,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385,2,['ERROR'],['ERROR']
Availability,"Working like a charm now! ; Just for the sake of completeness. Openslide still reports some ""Errors"":; ERROR: Openslide: Property not available: openslide.level[0].tile-width; ERROR: Openslide: Property not available: openslide.level[0].tile-height. But they are the same across all versions of QuPath I've tested and don't hinder ; image analysis on MRXS slides. Thank again for fixing this issue so fast! ; Have a great day,; Mario",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265674934:93,Error,Errors,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265674934,5,"['ERROR', 'Error', 'avail']","['ERROR', 'Errors', 'available']"
Availability,"Yeah, I was over-enthusiastic in converting `Collectors.toList()` to simply use `toList()` when updating to Java 17 - this problem has emerged a few times. See https://github.com/qupath/qupath/commit/1710f51e7846b9b85367da2a716a8b67c8805e92 for more info. The reason I didn't just undo it is that `Collectors.toList()` *also* seems to be wrong - at least inasmuch as it makes no guarantees of mutability: https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/stream/Collectors.html#toList(); So the fact it worked previously was kind of incidental or accidental. Therefore my thinking was that we could stick with `Stream.toList()` where that works, and then where mutability is required we use instead; ```java; stream.collect(Collectors.toCollection(ArrayList::new)); ```. I hadn't spotted this as a failure case, so we certainly should change it - but I think better to make the change that explicitly generates an `ArrayList` to avoid relying upon the happenstance of `Collectors.toList()` being mutable.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1282#issuecomment-1648260545:819,failure,failure,819,https://qupath.github.io,https://github.com/qupath/qupath/pull/1282#issuecomment-1648260545,2,['failure'],['failure']
Availability,"Yep, I was hoping that might narrow down the cause for Pete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1065#issuecomment-1261176857:36,down,down,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1065#issuecomment-1261176857,1,['down'],['down']
Availability,"Yes - if QuPath was able to read the label from the file, it can display it. To find it:. * Select the *Image* tab on the left.; * Below the image properties, click on *Associated images* (or, if there aren't any associated images, you could try *Image list*).; * All other images from the file should be listed there, including the label if it is available. You can double-click on any image to view it. ![qupath_label](https://cloud.githubusercontent.com/assets/4690904/21422884/fa411414-c831-11e6-93b5-f05b1a81d99c.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/36#issuecomment-268772402:348,avail,available,348,https://qupath.github.io,https://github.com/qupath/qupath/issues/36#issuecomment-268772402,1,['avail'],['available']
Availability,Yes I originally thought that could be the reason then I moved all images to the hard drive and got similar behaviours... I realise this is not very helpful as I cannot reliably reproduce it myself 100% of the time.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518040729:169,reliab,reliably,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518040729,1,['reliab'],['reliably']
Availability,"Yes and no... not in any publicly available way, and it remains on my todo list before the next release. This is taking longer than I'd hope as I find more and more to do, but some talks and workshops in March give me a pretty hard deadline.... However, amidst all the changes I'm making for the next release I've introduced an option to 'retain the display settings' when opening a new image. This means that if you have an image open with certain brightness/contrast settings (and color channels turned on/off), then if you open another image in the project it will (optionally) keep the settings constant:; https://github.com/petebankhead/qupath/commit/5750e42574cf34f9c868c9d2b133da3daaecf5e1. My hope is that it reduces the need to apply settings across all images in a project through a script, because the min/max settings (optionally) don't automatically change per image. How does that sounds to you?. Alongside that, I've added the ability to turn on/off multiple channels at once (by selecting them and right-clicking), and given a bit more control on what the 'Auto' button does when adjusting brightness/contrast per channel. I think these changes make the Brightness/Contrast dialog considerably easier to use; at least, I find it less annoying now than it previously was. (I still do need to revisit saving settings though, because it needs to be possible to set channel names if these are wrong or missing. And if it's possible to save channel names, it may as well be possible to save display settings per channel as well...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453637134:34,avail,available,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453637134,1,['avail'],['available']
Availability,"Yes, I did run into some of the same problems with the external measurements since the ImageJ macro runner takes squares, not the actual annotation. The advantage here is QuPath's heriarchy system, where everything ""outside"" of the annotation will show up separately (not underneath in the tree), and can be selected and deleted. Probably easier to do this after you go to the annotations tab, CTRL-A (or whatever to select all) and then go to the Objects menu and ""Merge annotations."" Then you get only one annotation and all of the external detections in the Hierarchy tab. This makes it easy to once again select all, deselect your annotation, and delete all of the ""outside"" detection areas. Downside, merging all of the tiles does NOT actually do what you might hope, and mesh them all into one contiguous annotation. It does add them all together, however, which lets you use the show annotation measurements to see the sum totals of all of your annotation tiles. You will see better after you do it once.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286849866:696,Down,Downside,696,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286849866,1,['Down'],['Downside']
Availability,"Yes, I explicitly coded the startup message to respond to a double-click because it was so annoying to need to click more precisely. In any case, the link I posted suggests it should be fixed in JavaFX 13, which QuPath will switch to whenever it's available in September. I wouldn't _really_ fancy trying to track down all modal dialogs in QuPath to add shortcuts to close them if a fix is imminent anyway. In the meantime, I'd suggest trying v0.1.2. This might have other issues, but at least it uses JavaFX with JDK 8 and therefore may not suffer this specific problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-507274428:248,avail,available,248,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507274428,2,"['avail', 'down']","['available', 'down']"
Availability,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484610786:229,error,error,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786,2,['error'],['error']
Availability,"Yes, `ImageIO` can't write the images you need. You can try this, which will use ImageJ instead:; ```groovy; import ij.IJ; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); IJ.save(imp, new File(dirOutput, core.getName() + '.tif').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-411749897:275,down,downsample,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-411749897,2,['down'],['downsample']
Availability,"Yes, at the time the build scripts were written it seemed to be impossible to have a version number starting with 0.x on macOS - at least when building using `jpackage`. Attempting to do this would result in a ""first number in a CFBundleVersion cannot be zero or negative"" exception, as described at https://forum.image.sc/t/error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative/48713. The build script explicitly sets the wrong version number in an attempt to get builds working at all, see https://github.com/qupath/qupath/blob/v0.4.3/qupath-app/build.gradle#L40. I'll check if the situation has changed with more recent `jpackage` releases. If not, I'm afraid we're probably stuck with it until there's eventually a QuPath 1.x release, unless someone can come up with a solution that doesn't overly complicate the build/release process.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136:325,error,error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136,1,['error'],['error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative']
Availability,"Yes, in a project, start from LuCa-7color_[17572,60173]_3x3component_data.tif, define two annotations with the Region class like this:; ![Screenshot from 2024-02-29 15-14-35](https://github.com/qupath/qupath/assets/60394504/b5c78607-282b-403f-9296-ace2af0a91ad). Then Classify, Training Images, Create Training images, default parameters, and it creates this image:; ![image](https://github.com/qupath/qupath/assets/60394504/1741642f-d89b-4790-bc4f-0fe5130a80c9). Then this script throws the error:. ```groovy; setImageType('FLUORESCENCE');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImage"":""DAPI"",""requestedPixelSizeMicrons"":0.1,""backgroundRadiusMicrons"":4.0,""backgroundByReconstruction"":true,""medianRadiusMicrons"":1.0,""sigmaMicrons"":2.5,""minAreaMicrons"":11.0,""maxAreaMicrons"":400.0,""threshold"":1000.0,""watershedPostProcess"":true,""cellExpansionMicrons"":5.0,""includeNuclei"":true,""smoothBoundaries"":true,""makeMeasurements"":true}'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-1971362682:492,error,error,492,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-1971362682,1,['error'],['error']
Availability,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591#issuecomment-673132914:728,down,downsamples,728,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914,3,['down'],"['downsample', 'downsamples']"
Availability,"Yes, it will try to select the object you already have created. If you want to draw within the annotation object (square) you have created, right click on it, drop down to Annotations, and select ""Lock."" Otherwise, it thinks you are trying to fill in the annotation you already have created. One way to see this is, with the annotation unlocked, hold down Alt and draw with the brush tool. You will see you are creating holes in your annotation now. One important thing to note when creating annotations within annotations, is that if your second brush tool annotation exits the first annotation, none of the detections within will be considered part of the brush tool annotation. This is probably most important when dealing with TMAs, because if the region you draw leaves the TMA circle, it is treated as being entirely outside!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/50#issuecomment-278506606:164,down,down,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/50#issuecomment-278506606,2,['down'],['down']
Availability,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/466#issuecomment-622346953:68,down,down,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953,1,['down'],['down']
Availability,"Yes, that should certainly be possible. This could help give some ideas, both for exporting regions and then generating objects from binary images created elsewhere: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. I generally prefer to create contours with ImageJ (as in the script above), rather than OpenCV - the explanation why is at https://petebankhead.github.io/qupath/technical/2018/03/13/note-on-contours.html; But certainly the main processing can be done with OpenCV, with ImageJ only getting involved at the very final, contour-generating step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/222#issuecomment-424737895:253,mask,masks,253,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424737895,1,['mask'],['masks']
Availability,"Yes, the i - method:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); i = 0; for (Polygon in getDetectionObjects()){; roi = Polygon.getROI(); print(roi); area = roi.getArea(); print(area); CentroidX = roi.getCentroidX(); print(CentroidX); name = (""Polygon_"" + i); print(name); // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); i = i + 1; }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346842870:149,down,downsample,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346842870,2,['down'],['downsample']
Availability,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:92,error,error,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,3,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"Yes, there are a few ways to do that, depending on what exactly you want. https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d may help to give a starting point, since it shows how to do the export of a (very) downsampled version of the image as a single tile. But it still involves using a ```RegionRequest``` object to define the part of an image and downsampling factor to use, and then writing that out... so the idea is the same. Therefore you could use that to modify the original tiling script. After importing ```ImageWriterTools``` at the top, the main thing to do is to change the contents of the ```try``` block, e.g. something like the following:. ```groovy. ...; import qupath.lib.gui.ImageWriterTools. ...; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```; This should include all detections and annotations. If you need TMA cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The follo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:227,down,downsampled,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,2,['down'],"['downsampled', 'downsampling']"
Availability,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493950996:570,avail,available,570,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996,1,['avail'],['available']
Availability,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640783525:1546,error,error,1546,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525,1,['error'],['error']
Availability,"You are both correct. It’s a multi channel image, and some of the channels; are noisy. Secondly, in dev debug mode I can see that the initial threshold; fails. What should I do so that it just uses the red channel to find cores (I need; other colors downstream)?. On Mon, Aug 6, 2018 at 01:34 Pete <notifications@github.com> wrote:. > The Brightness/Contrast dialog shows there are 4 channels, but 3 are; > turned off; the TMA dearrayer won't be affected by which channels are; > turned on/off there though. For such images, it uses an average; > projection of all the channels; > <https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237>; > .; >; > It will most likely have correctly auto-set the image type as; > 'Fluorescence', but it's always worth checking under the 'Image' tab (in; > case this was changed / the auto detection of image type was turned off).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/196#issuecomment-410631215>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAcFTCZOP0VOb--7eOugusLtmVZlM1HUks5uN_-xgaJpZM4VvdxT>; > .; >; -- ; Rishi Rawat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/196#issuecomment-410763976:250,down,downstream,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410763976,1,['down'],['downstream']
Availability,"You can also try this one, which aims to bring over the brightness/contrast settings and channel colors from the current image viewer:. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def display = QPEx.getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.getAvailableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-415312268:439,down,downsample,439,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415312268,2,['down'],['downsample']
Availability,"You can drag a .jar onto QuPath to add it to the extensions directory, and then it should be available on the classpath for any scripts. Although I'm curious about what syntax isn't supported?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450835981:93,avail,available,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450835981,1,['avail'],['available']
Availability,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527729451:470,avail,available,470,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451,1,['avail'],['available']
Availability,You can try these. Just download and unzip. https://openslide.cs.cmu.edu/download/openslide-testdata/DICOM/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1772871935:24,down,download,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1772871935,2,['down'],['download']
Availability,"You can try this to bring across the original colors from QuPath, and use them to set the lookup tables for each channel of the image in ImageJ. But I'm afraid it doesn't bring over any customizations you might have made with the Brightness/Contrast tool. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++); composite.setChannelLut(; LUT.createLutFromColor(; ColorToolsAwt.getCachedColor(server.getDefaultChannelColor(c))), c+1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-415310669:525,down,downsample,525,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415310669,2,['down'],['downsample']
Availability,"You could try the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; (Or [here's](https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy) a direct link to the script only.). It should export the annotated regions, along with a corresponding binary image... so if you're not interested in the binary image you can just delete it. It needs to be run inside a project, and the images are exported to a subdirectory inside the project called 'masks'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/212#issuecomment-418987438:124,mask,masks,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/212#issuecomment-418987438,2,['mask'],['masks']
Availability,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411333092:231,mask,masks,231,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092,2,"['down', 'mask']","['downsampled', 'masks']"
Availability,"You might like to look at my fork https://github.com/juliangilbey/qupath/tree/main+tileexporterregion where I've addressed all of the above points when writing a new class `TileExporterRegion` (`TileExporterRegion.java`) that is based on TileExporter but allows a sub-region to be specified. You can therefore say:. ```groovy; new TileExporterRegion(imageData); .downsample(downsample) // Define export resolution; // .requestedPixelSize(requestedPixelSize) // Alternative for defining export resolution; .regionLimits(x, y, width, height) // Define region to be tiled; .imageExtension('.tif') // Define file extension for original pixels; // (often .tif, .jpg, '.png' or '.ome.tif'); .tileSize(512) // Define size of each tile, in pixels; .annotatedTilesOnly(false) // If true, only export tiles if there is a; // (classified) annotation present; .overlap(64) // Define overlap, in pixel units at the; // export resolution; .includePartialTiles(false) // don't include tiles that overlap the boundary; .writeTiles(pathOutput) // Write tiles to the specified directory; ```; It can be used as a drop-in replacement for the current `TileExporter.java` file (obviously replacing every `TileExporterRegion` with `TileExporter`), as the default behaviour is to tile the entire image. Note that the `regionLimits` method only specifies the x and y limits; it does not limit t or z. That could be performed with separate methods, say `tLimits` and `zLimits`, if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/649#issuecomment-740703930:363,down,downsample,363,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740703930,2,['down'],['downsample']
Availability,"You need an instance of [`PathClass`](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core/src/main/java/qupath/lib/objects/classes/PathClass.java). *But*, you should never call the construction for `PathClass` directly. There is some explanation [here](https://groups.google.com/d/msg/qupath-users/44HBd-5nbaQ/VHbENs9TBAAJ). Something like this should work:; ```groovy; def tumor = getPathClass('Tumor'); def stroma = getPathClass('Stroma'); getAnnotationObjects().eachWithIndex { annotation , i ->; if (i % 2 == 0); annotation.setPathClass(tumor); else; annotation.setPathClass(stroma); }; fireHierarchyUpdate(); ```; But you can change the text to be whatever you want, rather than `Tumor` and `Stroma` (although probably best to avoid colons`:` in any name, since these are typically used to separate *sub*-classifications). Regarding finding available methods, I've just added a [blog post](https://petebankhead.github.io/qupath/scripting/2018/03/16/script-print-methods-and-fields.html) with a bit more info. If you are happy to use IntelliJ, that's probably easiest.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/158#issuecomment-373683258:851,avail,available,851,https://qupath.github.io,https://github.com/qupath/qupath/issues/158#issuecomment-373683258,1,['avail'],['available']
Availability,You need to fill out the issue template for us to be able to diagnose the issue. You could also try to download a more recent version of qupath (eg v0.5.1) which may resolve your issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1691#issuecomment-2448565070:103,down,download,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/1691#issuecomment-2448565070,1,['down'],['download']
Availability,"You probably already know this and maybe it's not even relevant any longer, but anyway: It appears the RichTextFX team has been replaced and is now actively maintained. Also, [this](https://www.mirkosertic.de/blog/2015/04/a-javafx-based-lua-editor/) might be a simple way to implement a robust script editor. I hope this is useful 😄",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-481208920:287,robust,robust,287,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-481208920,2,['robust'],['robust']
Availability,"You should be able to double-click anywhere on the welcome message to close it (as it suggests... slightly non-obviously, as a reward for people who read it :). Apart from that, I agree that QuPath probably ought to have _File &rarr; Quit_ option as well but the main issue seems to be more JavaFX than QuPath - see https://github.com/javafxports/openjdk-jfx/issues/222. General availability of OpenJDK 13 is currently listed for 17 September. Current plans are to use this for v0.2.0 and hopefully the issue will be addressed then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-507201659:379,avail,availability,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507201659,1,['avail'],['availability']
Availability,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-487908711:58,down,download,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711,1,['down'],['download']
Availability,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:815,mainten,maintenance,815,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436,2,['mainten'],['maintenance']
Availability,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8556,error,error,8556,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9072,error,error,9072,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1953,ERROR,ERROR,1953,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:2998,down,downloads,2998,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"`.ndpis` should work on Windows and Linux, and with an Intel build on Mac - but not the Apple Silicon build. But the extra files should have the extension `.ndpi` - if you downloaded them on a Mac, the OS might automatically have added `.tiff` to the name and this needs to be removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1620#issuecomment-2328789141:172,down,downloaded,172,https://qupath.github.io,https://github.com/qupath/qupath/pull/1620#issuecomment-2328789141,1,['down'],['downloaded']
Availability,"a lot of badly-classified data that you then need to remember to ignore later. However, it does then require being able to estimate in advance which cores should be classified together. 4. If you want to use a separate classifier for every core, you could try a more drastic approach of exporting every core as a separate image. To do this, first dearray your slide. Then, you can use [Extension &rarr; ImageJ &rarr; ImageJ macro runner](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#running-macros) to export each image. You need a very simple macro, like the one below:; ```; saveAs(""tif"", ""/Users/peteb/Desktop/export/"" + getTitle()); ```; where you’ll need to change the path to be something more suitable for your computer. It takes advantage of the fact that the ‘title’ of the image sent to ImageJ is the same as the TMA core, so using this as the filename can help you identify the core afterwards. > This may give you individual core images that are a bit big... you can change ""tif” to “jpg” to decrease the file size, or you can set the ""Downsample factor” value to 2 to export a lower-resolution image. The advantage of using “tif” is that the micron information is preserved, while if you use “jpg” then this is lost. After doing this export you can then import all your core images into a new project. You’ll almost certainly want to use scripting for batch processing in this case, and there will be another couple of things to do (e.g. apply dearraying to detect a single core in each image, or use *Objects &rarr; Create full image annotation* to give you a region in which to detect cells). ---. Personally, I think Option 1 is the ‘cleanest’ solution, but may be very time-consuming. All the others would give some kind of data management headache - but maybe it is worth it. Of course, there may also be more creative solutions that I haven’t considered. I would be interested to know what you choose in the end. Good luck!. Pete. PS. Thanks for the positive feedback!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:3576,Down,Downsample,3576,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,1,['Down'],['Downsample']
Availability,"a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:2416,down,downsample,2416,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,2,['down'],['downsample']
Availability,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4808,error,error,4808,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,4,['error'],['error']
Availability,"adn't seen the problem where some lines require multiple corrections, but from your explanation I think I understand what has happened. The issue should be predictable and reproducible; here's the background:. * When a line is drawn, it is represented inside QuPath by the coordinates of its end points, ```(x1,y1)``` and ```(x2,y2)```; * When the line is saved, these coordinates are written (correctly) into the ```.qpdata``` file; * When the ```.qpdata``` file is loaded again later, the first thing QuPath does is read the coordinates and convert them into ```(x1, y1)``` and ```(x2-x1, y2-y1)```. This last step is a bug; there is no need to subtract the first coordinates from the second. It happens because, long ago (and before being released), QuPath stored its lines differently (with the first coordinate and then displacement).... and this bit of the code was not updated when it should have been, and lines were used rarely enough for it to go unnoticed. With that in mind, the error can be cumulative; if you open a ```.qpdata``` file and the lines display wrongly, and then you save it again, QuPath will now save the wrong coordinates... and, when reading them, make them even more wrong, i.e. ```(x2-x1-x1, y2-y1-y1)```. You'd have to run the script twice to fix such lines. Therefore it is important to have all your lines corrected before you save, and then run the script to fix them immediately after opening the image. This avoids having a combination of correct and incorrect lines on the image at the same time. The purpose of the script is to go through and fix the second coordinate for all your lines by adding the first coordinate. It does this for all lines, regardless of whether or not they are correct. If you want to change only some of the lines then @Svidro's idea is great - select the lines you want to change (e.g. in the list at the top of the *Annotations* tab on the left of the screen) and run this script instead:. ```groovy; getSelectedObjects().each {; roi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-299623260:994,error,error,994,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-299623260,1,['error'],['error']
Availability,"app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12730,error,error,12730,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,as(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10684,ERROR,ERROR,10684,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"aseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API direc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1448,avail,available,1448,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['avail'],['available']
Availability,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6106,FAILURE,FAILURE,6106,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356,1,['FAILURE'],['FAILURE']
Availability,"ass to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. If you open the image in QuPath, this Groovy script shows that the `isInterleaved()` status changes for different series, which I think is the explanation:. ```groovy; def wrapper = getCurrentServer().readerPool.getDedicatedReaderWrapper(). println ""Original interleaved: "" + wrapper.isInterleaved(); wrapper.getReader().setSeries(0); println ""Series 0 interleaved: "" + wrapper.isInterleaved(); wrap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4949,error,error-with-large-images,4949,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['error'],['error-with-large-images']
Availability,"assify ; > <https://cloud.githubusercontent.com/assets/23145209/22407407/a1b3e02c-e61a-11e6-8ab8-8929d9b98c32.JPG>; >; > It may not be exactly what you wanted, but it is not too many steps ; > and should give similar results, I believe. Note that the Classify By ; > Specific Feature does not show up in the workflow at this time, but I ; > seem to remember it being scriptable manually.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/46#issuecomment-275941788>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEcJu_dREsL0cqgibZHAb2Vy12MWjks5rXPDdgaJpZM4Lw1_o>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/46#issuecomment-276000050:2626,error,error,2626,https://qupath.github.io,https://github.com/qupath/qupath/issues/46#issuecomment-276000050,1,['error'],['error']
Availability,"atchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops updating sometimes (not sure how to exactly reproduce this though).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-872890572:5562,error,error,5562,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572,1,['error'],['error']
Availability,"ath, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes it easier to use different IDEs. The combination of Java 8, JavaFX, Maven, Ant and native libraries makes it more difficult than a project using Java alone, and there wasn't previously a critical need. Still, the portability is something that I hope will be improved in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2903,down,downloading,2903,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['down'],['downloading']
Availability,"ath-gui-fx/src/main/java/qupath/lib/gui/scripting/QPEx.java#L336).... but no absolute promises that won't be broken in the future either :). Ok, I will explain some more and hope it will be sufficient. QuPath is divided into modules. This modular design is a work-in-progress, but it is essential to keep the design coherent/improve it where possible. `ImageDisplay` requires JavaFX. That means that using it in *any* module will bring in a (quite huge) JavaFX dependency to that module. That means the core modules (which are currently completely ignorant of JavaFX) cannot use `ImageDisplay`... or they suddenly become dependent upon a whole host of other stuff. This is problematic if wanting to use some QuPath jars in other contexts in the future. Of course, `ImageData` exists in a core module. Currently, these means that if serializing the `ImageDisplay` inside the `ImageData`, the `ImageData` ends up storing a JSON version of something that it cannot possibly de-json-ify. This is tolerable, but not ideal. More critically, it also means that nothing in core modules can really work with the current display or channel settings. Perhaps they would like to, e.g. to export RGB image regions. Ideally this would not be restricted to modules that have JavaFX access. It also complicates things like the ImageJ macro runner... currently, this can either be free from JavaFX or capable of incorporating color transforms/channel info - but not both. There are good reasons to want both https://github.com/qupath/qupath/issues/68. Also, it means that changing the brightness and contrast ultimately requires deserializing/serializing the whole data file - which might be large. There are likely far better/more efficient/faster ways to store these settings in a project, not the data file. This would not only be arguably a a better design, but it would also make updating this information for 10,000 images almost instantaneous. I have made some progress in parts of this, because I needed a way",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:1144,toler,tolerable,1144,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['toler'],['tolerable']
Availability,"ath/qupath; qupath/qupath; Cc : Author; Objet : RE: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). Hi Pete,. That's very helpful, thanks a lot ! It will make my analysis way faster. Sincerely,. GOEPP Julie; Manager of the Primary Airway Cell Biobank (PACB); Cystic Fibrosis Translational Research Center (CFTRc)<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>; McGill University - Department of Physiology; McIntyre Building, Room 1012; 3655 Promenade Sir William Osler; Montreal – Qc – Canada – H3G 1Y6; (514) 398-4323 (ext #2 or 3); PACB Website<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>. ________________________________; De : Pete <notifications@github.com>; Envoyé : 21 juin 2018 11:23:17; À : qupath/qupath; Cc : Julie Goepp, Ms; Author; Objet : Re: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). There are a few options:. * Get the measurements from Measure → Show annotation measurements, copy them into a spreadsheet and add them up there; * When you're drawing with the Brush tool (or the Wand might be nicer, if you have good contrast between the purple stain and surroundings), hold down Shift to append to an existing annotation - if you're pressing Shift, different regions can be discontinuous but still counted as one (similarly, you can hold down Alt to use the Brush or Wand and subtract regions); * Select all the annotations (either in the Annotations pane on the left, or by alt-clicking on them with the Move tool selected in the main image), right-click on the image and choose Annotations → Merge selected annotations. Hopefully one of those helps!. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/179#issuecomment-399142573>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AmmAR_KTr2VFQD77eEVrU9ppSThbe9tKks5t-7pkgaJpZM4UyRk4>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399192393:2085,down,down,2085,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399192393,2,['down'],['down']
Availability,"avaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB stainin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1677,ERROR,ERROR,1677,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,"bad. But the fix could result in more out-of-memory errors. I think it would be good to good to give some protection from these (or a more informative error if they occur), and aim for a more substantial fix. Two changes could help:; * Choose a pixel count threshold based upon both the maximum pixel count that ImageJ could conceivably support, i.e. 2<sup>31</sup>-1 (or a little more than 1) *and* also a memory threshold based on estimating the image size and memory available; * Add a scaling factor as a static field to control what proportion of the available memory is permitted for use. It could be something like this:; ```java; static double MEMORY_THRESHOLD = 0.5;; ...; long remainingMemory = ... // With the help of Runtime.getRuntime(), after request for garbage collection; long approxMemory = ... // Calculation based on pixel count, bit-depth & number of channels; if (approxPixelCount > 2147480000L || approxMemory > remainingMemory * MEMORY_THRESHOLD) {; // Show the size error; } else {; // Have a go at extracting the region; }; ```; By making the scaling factor a static field, there is at least the option of overriding it in a Groovy script if absolutely necessary. The details around the pixel count get a bit fiddly, considering that ImageJ1 will use a packed int array in a `ColorProcessor` for RGB images, while in other cases a new array will be allocated for every channel. Furthermore, it might be prudent to take parallelization into account, and the result returned by `PathPrefs.getNumCommandThreads()`. I'm dubious about sending the whole image if no selection exists, because it's really easy to accidentally run the command without an area selected... and then everything can grind to a halt while QuPath tries (and possibly fails) to extract a massive region. Currently you can use *Objects &rarr; Create full image annotation*, its shortcut `Ctrl + Shift + A` or the scripting command `createSelectAllObject(true);` to create an annotation representing the full ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356714438:1036,error,error,1036,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356714438,1,['error'],['error']
Availability,"cessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuP",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3612,Down,Downloads,3612,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"ck trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1761); at qupath.lib.gui.viewer.QuPathVi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1732,ERROR,ERROR,1732,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,1,['ERROR'],['ERROR']
Availability,"cluded by default); - ImageJ (included by default); - Bio-Formats (if it's installed). The _Server type_ entry in the table that appears under the _Image_ tab on the right of QuPath shows you which reader was used for whichever image is currently open - in the screenshot below, OpenSlide was used. ![mirax](https://cloud.githubusercontent.com/assets/4690904/19970686/a81eaf8a-a1d4-11e6-810e-491db8fb6612.jpg). Unfortunately, to the best of my knowledge Bio-Formats cannot handle MIRAX files - there is some information [here](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/). Bio-Formats also cannot handle CZI files with JPEG-XR compression (which seems to be the default for whole slide scanners) - although the good news is that [this is being worked on](https://www.openmicroscopy.org/community/viewtopic.php?f=13&t=8138). OpenSlide also cannot handle CZI files (possibly for [license reasons](https://github.com/openslide/openslide/issues/144)), although this is discussed on the mailing list sometimes. However, OpenSlide should be able to handle [MIRAX](http://openslide.org/formats/mirax/) (at least 2D RGB images), and I've tried QuPath successfully with several MIRAX files that I [downloaded from the OpenSlide website](http://openslide.cs.cmu.edu/download/openslide-testdata/Mirax/). From the examples I've seen, the MIRAX images consist of two parts: a `*.mrxs` file and a separate directory containing a lot of other data files. These need to:; - have the same name (except the `*.mrxs` extension); - be located side-by-side in the same folder; - not be inside a compressed folder (e.g. a zipped folder). If any of these aren't true, then only the coarsest resolution will open. Could you check the files you have and see if any of these could explain the issue, or perhaps compare with the OpenSlide examples to see where any difference lies? I'm also happy to have a look here, if you can somehow transfer one of your images to me. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258165973:1708,down,downloaded,1708,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258165973,4,['down'],"['download', 'downloaded']"
Availability,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5898,ERROR,ERROR,5898,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['ERROR'],['ERROR']
Availability,"ctly you want. https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d may help to give a starting point, since it shows how to do the export of a (very) downsampled version of the image as a single tile. But it still involves using a ```RegionRequest``` object to define the part of an image and downsampling factor to use, and then writing that out... so the idea is the same. Therefore you could use that to modify the original tiling script. After importing ```ImageWriterTools``` at the top, the main thing to do is to change the contents of the ```try``` block, e.g. something like the following:. ```groovy. ...; import qupath.lib.gui.ImageWriterTools. ...; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```; This should include all detections and annotations. If you need TMA cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The following should work (at least for RGB images):. ```groovy; ..",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:1021,down,downsample,1021,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,1,['down'],['downsample']
Availability,"d cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1320,ERROR,ERROR,1320,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:1127,ERROR,ERROR,1127,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['ERROR'],['ERROR']
Availability,"detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3982,error,error,3982,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['error'],['error']
Availability,"dthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1422,error,error,1422,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['error'],['error']
Availability,"dy noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1271,error,error,1271,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,2,['error'],['error']
Availability,"e diameter depending upon how widely you want QuPath to look around each tile for calculating textures. Press *Run* and then choose *Process all: Detections*.; * Train a classifier as described [in the Wiki](https://github.com/qupath/qupath/wiki/Classifying-objects). Check out [this issue](https://github.com/qupath/qupath/issues/50) if you find the *Brush tool* isn't working for you.; * Optionally run *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Tile classifications to annotations*.... if you find it helpful. It's always best to save your data before doing this, since all the options have some kind of logic behind them... but it's often not entirely clear which are the options you want on a first go. There is no *Undo*, but if you save before running the command, *File &rarr; Revert* can get you back to where you were. The end result is a rather 'blocky' classification, where the size of the blocks depends upon how large the tiles are that you created. But if you need to downsample your image 8 times to get good enough performance with the Weka plugin, then using tiles that are 8x8 pixels gives you just as good a resolution in the end. Furthermore, with QuPath you can add some other kinds of features, particularly Haralick texture features on color-deconvolved images, which can be a better fit for pathology applications compared to some of the Weka features (which may be better for other applications). And you can do other things in QuPath to help with efficiency, such as create a script to find all pixels with high intensity values (background?) and remove them - thereby allowing you to avoid the memory and computational requirements of storing and classifying them. Therefore while there is some overhead involved in QuPath using objects rather than pixels in the way that *ilastik* and *Trainable Weka segmentation* do, QuPath's use of objects is sufficiently efficient and optimized that I think it offers a viable alternative in many cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-288506877:3021,down,downsample,3021,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-288506877,2,['down'],['downsample']
Availability,"e same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like to try viewing them on QuPath: http://gofile.me/6VSoS/CNJndmlCr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:2025,down,download,2025,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['down'],['download']
Availability,"e!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2364,down,downsample,2364,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability,"e; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only distinction I could dig out was those that implement GitHubProject (or ImageServerProvider). I ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1800,down,download,1800,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['down'],['download']
Availability,"ed from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. If you open the image in QuPath, this Groovy script shows that the `isInterleaved()` status changes for different series, which I think is the explanation:. ```groovy; def wrapper = ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4861,reliab,reliably,4861,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['reliab'],['reliably']
Availability,"ed in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401546472:1910,avail,available,1910,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472,2,['avail'],['available']
Availability,"elrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1883,avail,available,1883,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['avail'],['available']
Availability,"ent version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3381,Down,Downloads,3381,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,"er each. On Nov 9, 2017 9:23 AM, ""Eline8"" <notifications@github.com> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there was also no backup file in the folder after the; > failure of saving.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/112#issuecomment-343227944>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:1386,error,error,1386,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,2,['error'],['error']
Availability,"er.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3868,Down,Downloads,3868,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"eral\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at; com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at; com.sun.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:2048,ERROR,ERROR,2048,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['ERROR'],['ERROR']
Availability,"esult in substantial lag. Ideally it shouldn't, but if it does I wouldn't say it's necessarily a bug... since QuPath is already needing to do a *lot* of stuff to get acceptable performance across a wide range of scenarios. Specifically here:; * For a downsample >= 1, repainting detections caches tiles and multiple resolution levels for performance - this is why QuPath can handle millions of objects.; * For downsample < 1, repainting happens for all detections in the field of view (like for annotations) for improved appearance without nasty bitmap-upsampling artefacts. This is inevitably laggier than using cached tiles, but caching itself has considerable overhead in terms of memory and worse appearance. I think this tradeoff makes sense, since details really matter when viewing the image at high magnification but the number of objects visible should be limited (possibly thousands, but not millions). However it does mean that if you have a large enough monitor, many detections, and a downsample value slightly less than 1, performance there certainly can be a noticeable lag... and object connections make this worse by meaning that thousands more lines need to be rendered. However, investigating this revealed that QuPath was painting all the connections twice, which certainly wasn't helping things :). So the PR fixes the double-painting bug. Along the way, it adds a spatial cache that enables QuPath to be a bit smarter about which connections it paints. The main reason for this change is to overcome an issue with long connections sometimes being broken at some resolutions:. ### Old behavior:; ![connection_bug-1](https://user-images.githubusercontent.com/4690904/194024037-795fceaa-e542-4c67-8fa2-84e6a8aca691.png). ### New behavior:; ![connection_fix-1](https://user-images.githubusercontent.com/4690904/194024122-00080b78-b59b-4b8f-bf0d-aa990683268c.png). Together, I'm not certain whether or not you'll see a substantial improvement in performance - but these changes addres",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189:1199,down,downsample,1199,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189,1,['down'],['downsample']
Availability,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409021767:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downlo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16375,down,downloads,16375,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7517,error,error,7517,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"gePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at l",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8447,ERROR,ERROR,8447,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['ERROR'],['ERROR']
Availability,"ger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1285,down,downsample,1285,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],['downsample']
Availability,"github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1528,avail,available,1528,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['avail'],['available']
Availability,"gle image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently.; > ; > One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1067,down,downsample,1067,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,1,['down'],['downsample']
Availability,"ground"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.cont",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1810,ERROR,ERROR,1810,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['ERROR'],['ERROR']
Availability,"h.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seco",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5218,avail,available,5218,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,1,['avail'],['available']
Availability,"h/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neithe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1766,error,errore,1766,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['errore']
Availability,"hed the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened the project again after a few hours, verifying that the thumbnails exist in Windows Explorer. I'm now getting a long project load time (although anecdotally, it feels a bit faster), which means the above fix might not work as it could be tied to something other than thumbnails generated in Explorer. Currently, the project is located on the OS-installed drive (NVMe SSD), but the images are located on a separate local NVMe SSD. I'll see if moving both the project and images onto the OS drive changes anything",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:1711,reboot,rebooting,1711,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,2,['reboot'],['rebooting']
Availability,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725509556:31,error,error,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgM",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2275,error,error,2275,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['error'],['error']
Availability,"ication.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3354,Down,Downloads,3354,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"icult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.05, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; ERROR: Error reading image region; at loci.formats.tiff.IFD.getIFDLongArray(IFD.java:411); at loci.formats.tiff.IFD.getStripByteCounts(IFD.java:805); at loci.formats.tiff.TiffParser.getTile(TiffParser.java:682)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:2223,error,error,2223,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"igDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy suppor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1251,ERROR,ERROR,1251,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,ijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16135,down,downloads,16135,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"ile:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10639,error,error,10639,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"iling days for cell detection, or maybe SLICs and subcellular detections on large images? And yes, I'm probably not typical :) Never used CZI images, so I have no idea about the effect of those. Anyway, giving a few things a shot. One thing I already noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeq",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1089,error,errors,1089,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,2,['error'],['errors']
Availability,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5740,avail,available,5740,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,2,['avail'],['available']
Availability,"in that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu classification system.; ```. import qupath.lib.objects.classes.PathClass; import qupath.lib.objects.classes.PathClassFactory. def Positive = PathClassFactory.getPathClass(""Positive""); def Negative = PathClassFactory.getPathClass(""Negative""). //I honestly forget the exact text for the given fluorescence features; //but feature would be one of those; def feature = ""Channel 2: Mean intensity""; def threshold = 0.1; def threshold2 = 1.5. // Loop through all detections *** Change this to getCellObjects() or getTileObjects() if you have a mix of both and only want to classify one type; resetDetection",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:1576,down,down,1576,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,2,['down'],['down']
Availability,"ing into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:1105,error,error,1105,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['error'],['error']
Availability,"installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2200,down,download,2200,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['down'],['download']
Availability,"into using it; def classList = new ClassList<>(IFormatReader.class); classList.addClass(LeicaSCNReaderRGB); def reader2 = new ImageReader(classList); reader2.setFlattenedResolutions(false); def factory = new ServiceFactory(); def service = factory.getInstance(OMEXMLService.class); def meta = service.createOMEXMLMetadata(); reader2.setMetadataStore(meta); reader2.setId(server.filePath); server.manager.mapPrimary.put(server.filePath, BufferedImageReader.makeBufferedImageReader(reader2)). // Clear the tile cache; def viewer = QPEx.getCurrentViewer(); def imageData = viewer.getImageData(); Platform.runLater {; viewer.setImageData(null); viewer.getImageRegionStore().clearCacheForServer(server); viewer.setImageData(imageData); }. // See https://github.com/openmicroscopy/bioformats/blob/master/components/formats-bsd/src/loci/formats/in/MinimalTiffReader.java; class LeicaSCNReaderRGB extends LeicaSCNReader {. /** Reinitialize the underlying TiffParser. */; protected void initTiffParser() {; QuPathGUI.getInstance().logger.info('INITIALIZING TIFF PARSER'); if (this.in == null) {; try {; this.in = new RandomAccessInputStream(getCurrentFile(), 16);; }; catch (IOException e) {; LOGGER.error(""Could not initialize stream"", e);; }; }; tiffParser = new TiffParserRGB(this.in);; tiffParser.setDoCaching(false);; tiffParser.setUse64BitOffsets(use64Bit);; }. }. class TiffParserRGB extends TiffParser {. public TiffParserRGB(RandomAccessInputStream stream) {; super(stream); }. public byte[] getTile(IFD ifd, byte[] buf, int row, int col) throws FormatException, IOException {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getTile(ifd, buf, row, col); }. public byte[] getSamples(IFD ifd, byte[] buf, int x, int y,; long width, long height, int overlapX, int overlapY); throws FormatException, IOException; {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getSamples(ifd, buf, x, y, width, height, overlapX, overlapY). }. }",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435208389:3002,error,error,3002,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435208389,2,['error'],['error']
Availability,"inue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:2788,error,error,2788,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,2,['error'],['error']
Availability,"ion (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:1649,ERROR,ERROR,1649,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['ERROR'],['ERROR']
Availability,"ion.getROI(). tw = (int) roi.getBoundsWidth(); th = (int) roi.getBoundsHeight(). if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; //if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500)){; //print result; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");; //IJ.run(imp, ""Median..."", ""radius=5"");; IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; // python code for normalisation and structure convolution; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");; //getHistogram(values, counts, 256); IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");; ; rm = RoiManager;; rm = RoiManager.getInstance(); ; ; if((rm==null) || (rm.getCount()<1)){; print(""No objects found""); }else{; //print rm.getCount(); //RoiManager.roiManager(""count""); //rm.runCommand(imp,""Measure"");; //rm.runCommand(imp,""Update"");; IJ.run(imp, ""Send Overlay to QuPath"", ""choose_object_type=Detection include_measurements"");. // Get a suitable file name; //String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; //File file = new File(dirOutput, name); // Save the image; //IJ.save(imp, file.getAbsolutePath()); // Print progress; //imp.show() ; rm.reset() ; ; }; ; //counter++; imp2 = IJ.getImage();; imp2.close();; }; ; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357429324:2484,down,downsample,2484,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357429324,2,['down'],['downsample']
Availability,"irs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1866,down,downsample,1866,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,2,['down'],['downsample']
Availability,"is makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https://github.com/qupath/qupath/pull/759",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869217737:1571,error,error,1571,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737,2,['error'],['error']
Availability,"is there a solution for batch processing with qupath script?; below code partly work and export the original picture with detected cells overlay but it does not export the created density map overlay (which is showing in the content view). import qupath.imagej.tools.IJTools; import qupath.lib.gui.images.servers.RenderedImageServer; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.regions.RegionRequest; import qupath.lib.analysis.heatmaps.ColorModels; import qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; import qupath.lib.analysis.heatmaps.DensityMaps; import qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder; import qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters ; import qupath.lib.analysis.heatmaps.DensityMaps;; import qupath.lib.objects.classes.PathClass;; import qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder; import static qupath.lib.gui.scripting.QPEx.*. double downsample = 1; String path = buildFilePath(PROJECT_BASE_DIR, 'rendered', getProjectEntry().getImageName() +'-smc'+ '.png'); def viewer = getCurrentViewer(); def imageData = getCurrentImageData(); def options = viewer.getOverlayOptions(). def display = new qupath.lib.display.ImageDisplay(imageData); def params = new DensityMaps.DensityMapParameters(); def map = new DensityMaps.DensityMapBuilder(params); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(); .build(); ; // Write or display the rendered image; if (path != null) {; mkdirs(new File(path).getParent()); writeImage(server, path); } else; IJTools.convertToImagePlus(server, RegionRequest.createInstance(server)).getImage().show()",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1636869774:945,down,downsample,945,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1636869774,3,['down'],"['downsample', 'downsamples']"
Availability,"ith consolidating the last portion of the code into a parallel stream, but it is not much faster than the original code for one parentROI. In my case, I want to calculate the intersections for multiple ROIs with the tile, so it was easier for me to write the code similar to the snippet below:. ```; //		have to make all these ""final"" temp variables.... probably a better way; 		double finalYMin = yMin;; 		double finalXMin = xMin;; 		boolean finalByColumn = byColumn;; 		Map<Integer, Geometry> finalColumnParents = columnParents;; 		boolean finalByRow = byRow;; 		Map<Integer, Geometry> finalRowParents = rowParents;; 		List<ROI> tileROIs = Collections.synchronizedList(new ArrayList<>());; 		var plane = parentROI.getImagePlane();; 		AtomicInteger nullInterExcepetions = new AtomicInteger(0);; 		IntStream.range(0, nx).parallel().forEach(xi -> {; 			double x = finalXMin + xi * w - overlap;; //			A very hacky way to consolidate the code into 1 loop.; //			Atomic Reference doesn't behave when getting hit by multiple streams setting potentially different values for each stream...; 			Geometry outerGeometryLocal = finalByColumn ? finalColumnParents.getOrDefault(xi, geometry) : geometry;; 			IntStream.range(0, ny).parallel().forEach(yi -> {; 				double y = finalYMin + yi * h - overlap;; 				Geometry geometryLocal = finalByRow ? finalRowParents.getOrDefault(yi, geometry) : outerGeometryLocal;. 				// Create the tile; 				var rect = GeometryTools.createRectangle(x, y, w + overlap * 2, h + overlap * 2);; 				Geometry inter = intersect(rect, geometryLocal);; 				if(inter==null) {; 					nullInterExcepetions.incrementAndGet();; 					return;; 				}; 				ROI roi = GeometryTools.geometryToROI(inter, plane);; 				tileROIs.add(roi);; 			});; 		});. 		if (nullInterExcepetions.get() > 0) {; 			logger.warn(""Tiles lost during tiling: {}"", nullInterExcepetions.get());; 			logger.warn(""You may be able to avoid tiling errors by calling 'Simplify shape' on any complex annotations first."");; 		}; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1043#issuecomment-1219923298:1986,error,errors,1986,https://qupath.github.io,https://github.com/qupath/qupath/pull/1043#issuecomment-1219923298,1,['error'],['errors']
Availability,"ject in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1438,avail,available,1438,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['avail'],['available']
Availability,"l, ImageRegion region);; ```; where the `level` is a specific level of the pyramid (0 for full-resolution). Currently, if I want to get a rectangle of pixels from level 2, I need to figure out the coordinates in the full-resolution image (i.e. multiply by the downsample value). Then QuPath should find them again after dividing by the downsample. However, the coordinates need to be integers - which makes me uneasy about what happens if the downsample is something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:1159,down,down,1159,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,2,['down'],['down']
Availability,"l.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2230,error,errors,2230,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['error'],['errors']
Availability,"le:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12207,error,error,12207,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1914,down,down,1914,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,['down'],['down']
Availability,lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4164,down,downloads,4164,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,3,['down'],['downloads']
Availability,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715899157:597,reliab,reliable,597,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157,2,['reliab'],['reliable']
Availability,"lication.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2037,down,down,2037,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['down'],['down']
Availability,"licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre; /public/home/yangzhzh/tools/jdk-14/bin/jpackage: symbol lookup error: /public/home/yangzhzh/tools/jdk-14/bin/jpackage: undefined symbol: JLI_InitArgProcessing. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > Process 'command '/public/home/yangzhzh/tools/jdk-14/bin/jpackage'' finished with non-zero exit value 127. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 8s; 41 actionable tasks: 5 executed, 36 up-to-date",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:2344,error,error,2344,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,"llExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5355,down,downsample,5355,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['down'],['downsample']
Availability,made in error,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/619#issuecomment-713631209:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/619#issuecomment-713631209,1,['error'],['error']
Availability,"mage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1831,error,error,1831,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['error']
Availability,"n 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/li",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3267,Down,Downloads,3267,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,n(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at or,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8924,ERROR,ERROR,8924,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"n.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logb",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9702,ERROR,ERROR,9702,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1834,Error,Error,1834,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['Error'],['Error']
Availability,"nt(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2802,ERROR,ERROR,2802,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"ntHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.jar:jars/packager.jar:jars/reactfx-2.0-M4u1.jar:jars/richtextfx-0.6.10.jar:jars/slf4j-api-1.7.20.jar:jars/undofx-1.2.jar:jars/wellbehavedfx-0.1.1.jar:QuPathApp.jar; ERROR: Open image: Sorry, I can't open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif. Thank you for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:10954,ERROR,ERROR,10954,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability,"null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 	at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3541,ERROR,ERROR,3541,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['ERROR'],['ERROR']
Availability,"oad\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; Fil",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7007,error,error,7007,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:1966,FAILURE,FAILURE,1966,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,1,['FAILURE'],['FAILURE']
Availability,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10467,Down,Downloads,10467,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:8879,Down,Downloads,8879,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"om/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1630,Down,Downloads,1630,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,"om> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there was also no backup file in the folder after the; > failure of saving.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/112#issuecomment-343227944>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-ZA0lAraRRrf3AumFsqB5fJAaSl1ks5s0zUngaJpZM4QWPEm>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:2094,failure,failure,2094,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,2,['failure'],['failure']
Availability,ome/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/download,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15667,down,downloads,15667,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"on-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradlew createPackage -Ppackager=/full/path/to/jpackage; Current value of -Ppackager is /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/jdk-13/bin/jpackage; Note: You can also specify this in a gradle.properties file; -------. FAILURE: Build failed with an exception. * Where:; Build file '/Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/build.gradle' line: 622. * What went wrong:; Execution failed for task ':createPackage'.; > Please specify where I can find a suitable jpackage!. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 9s; 41 actionable tasks: 16 executed, 25 up-to-date. Looking forward fro your response ; Brijeshwar,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:2229,FAILURE,FAILURE,2229,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,1,['FAILURE'],['FAILURE']
Availability,"oop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2871,down,downsample,2871,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:3873,error,error,3873,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['error'],['error']
Availability,"p\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif ; ...........Written tile 15 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13775,error,error,13775,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,2,['error'],['error']
Availability,"pl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3537,Down,Downloads,3537,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"ps://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1.214654e+224); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 3f8eb851eb851eb9 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-642557843:737,error,error,737,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843,1,['error'],['error']
Availability,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389#issuecomment-567863564:94,ERROR,ERROR,94,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564,2,['ERROR'],['ERROR']
Availability,"qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > A problem occurred starting process 'command '/public/home/yangzhzh/tools/jdk-14/bin''. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 11s; 41 actionable tasks: 3 executed, 38 up-to-date. Any idea of why?; Thanks,; Zhenzhen",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:2311,FAILURE,FAILURE,2311,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['FAILURE'],['FAILURE']
Availability,"rage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1599,error,errors,1599,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['errors']
Availability,"read] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: ImageJ server for /home/bl/Documents/IMG_5_11_sq.png; 02:40:14.153 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Fluorescence, IMG_5_11_sq; 02:40:22.852 [JavaFX Application Thread] [INFO ] q.lib.scripting.DefaultScriptEditor - Loading script file /home/bl/ip/QuPath/app/TestJep.groovy; 02:40:28.109 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean red (from Java): 86.81525; 02:40:28.121 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean green (from Java): 72.492275; 02:40:28.124 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean blue (from Java): 68.141675; 02:40:28.624 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Started JEP: jep.Jep@6bc4b2e2; ImportError: numpy.core.multiarray failed to import; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f930536d03f, pid=27357, tid=0x00007f932091e700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [jep.so+0x1a03f] convert_jndarray_pyndarray+0x5bf; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/bl/ip/QuPath/app/hs_err_pid27357.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. [1]+ Aborted (core dumped) ./QuPath; ```. I am thinking that this might be worth bringing up with the JEP developers. I am going to spend a little more time playing with J",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:9412,error,error,9412,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['error'],['error']
Availability,recreated - unrotated. Same error again: ; ![grafik](https://user-images.githubusercontent.com/16352785/51772368-1ea4d380-20ec-11e9-9bea-87a6acf1fdd6.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/259#issuecomment-457725262:28,error,error,28,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457725262,1,['error'],['error']
Availability,"red me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to u",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1123,error,errors,1123,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,['error'],['errors']
Availability,"rentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:2914,down,downsample,2914,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['down'],['downsample']
Availability,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:12059,error,error,12059,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['error'],['error']
Availability,rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17469,down,downloads,17469,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2647,avail,available,2647,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159,2,['avail'],['available']
Availability,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2442,error,error,2442,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819,4,['error'],['error']
Availability,scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16255,down,downloads,16255,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); } catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceede",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:3323,down,downsample,3323,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['down'],['downsample']
Availability,"situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1421,error,error,1421,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,['error'],['error']
Availability,so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3273,down,downloads,3273,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image, but the downsample isn't fixed to *have* to be a pyramidal level. Thinking about it, that could potentially be implemented more simply with another default method added to the interface that ultimately just called `readRegion`. The main trouble is that I don't know what to call the method. I'll keep thinking and try to add something to this PR.... *- I think that QuPath is doing the right thing in most places (based on [this](https://github.com/qupat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:1630,down,downsample,1630,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,2,['down'],['downsample']
Availability,"spatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/396#issuecomment-826532977>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATAT3NBZJC2UITEIJLWE66DTKT7LRANCNFSM4KPPDA2Q>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:6217,error,error,6217,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,2,['error'],['error']
Availability,"st intuitive thing that should happen, and is not a bug. If this didn’t happen, then you if ran the cell detection command twice with the same parent selected, you would end up having every cell counted twice - not to mention the strange things that might happen with overlapping objects if you were to run other tiling/superpixel commands. It's not clear to me what was the purpose of doing manual counts followed by automated counts within the exact same region, but (as you've found) it is something that is not supported. You *could* do it the opposite way (i.e. automated counts followed by manual counts). However, if it was my goal to compare manual and automated cell counting then I would do the automatic counts in duplicate project and keep the data separated. Furthermore, you can do automated counts and then select 'Convert detections to points' within the 'Points tool' to initialize the (manually-editable) points that can subsequently be modified to generate 'semi-automated counts'. With regard to being unable to reopen a data file, this is something that has been reported some months ago (e.g. #58), but I'm not aware of it being an ongoing problem - or at least not one I have ever been able to reproduce. If QuPath fails to write a complete data file, then you should find that a '.qpdata.backup' file exits somewhere inside your project/data folder. If you strip the '.backup' data part from the file name, then it should be possible to recover the last saved version. > *-Information about the object hierarchy is at https://github.com/qupath/qupath/wiki/Object-hierarchies But from a quick look it seems that 'point' objects do not behave in the way you might expect, in that it appears that a point object is the child of a region if the *first* point is inside that region - and adding subsequent points (inside or outside the region) doesn't change this relationship. This is potentially a bug... or at least unintuitive behavior that may well change in a future release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342941759:1895,recover,recover,1895,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342941759,2,['recover'],['recover']
Availability,"t created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1628,avail,available,1628,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['avail'],['available']
Availability,"t qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8625,down,downsample,8625,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['down'],['downsample']
Availability,"t. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your answer here adjust the script and it gave me sort of a blank image with some lines in it(I was doing regular image before just starting to deal with bioimage recently). Can you give me some instructions about how to export the whole image as jpg, png, or regular ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1441,down,downsample,1441,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,1,['down'],['downsample']
Availability,"tImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1619,down,downsample,1619,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,2,['down'],['downsample']
Availability,teSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7773,ERROR,ERROR,7773,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,tem.java:465); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.ba,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6718,ERROR,ERROR,6718,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10656,Down,Downloads,10656,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.securi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9068,Down,Downloads,9068,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1535,avail,available,1535,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,4,"['avail', 'down']","['available', 'download']"
Availability,"the output images; *; * The significance of using ImageJ to write TIFF images (rather than, say, ImageIO to write PNGs or JPEGs); * is that this enables the storage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.ge",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1330,error,errors,1330,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['errors']
Availability,"tion.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3890,ERROR,ERROR,3890,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"tps://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your answer here adjust the script and it gave me sort of a blank image with some lines in it(I was doing regular image before just starting to deal with bioimage recently). Can you give me some instructions about how to export the whole image as jpg, png, or regular tif, so I can convert them to ndarray. Thank you in advance!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:2050,down,downloaded,2050,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],"['downloaded', 'downsampled']"
Availability,uPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9177,ERROR,ERROR,9177,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,2,['ERROR'],['ERROR']
Availability,"ugh I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:. // Print the current memory situation. def runtime = Runtime.getRuntime(). double scale = 1.0/1024.0/1024.0. print 'Max memory (MB): ' + (runtime.maxMemory() * scale). print 'Total memory (MB): ' + (runtime.totalMemory() * scale). print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache. javafx.application.Platform.runLater {. getCurrentViewer().getImageRegionStore().cache.clear(). System.gc(). }. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally be lower the second time, assuming you had previously been browsing around the image (and therefore filling up the tile cache). Running this script before running the cell detection might increase the chances of it ending successfully. If it still sometimes fails, but it looks like a memory problem, then either increasing the memory limit or decreasing the number of parallel threads could help - see https://github.com/qupath/qupath/wiki/Troubleshooting for more info. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/130#issuecomment-355845333>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AhgDyN_FkkG6m9PVrCtutL6J2PYQHVfHks5tIRihgaJpZM4RUCsS>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355877016:1816,down,down,1816,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355877016,2,['down'],['down']
Availability,un(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.Exp,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5462,ERROR,ERROR,5462,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['ERROR'],['ERROR']
Availability,unLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplicati,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9306,ERROR,ERROR,9306,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,2,['ERROR'],['ERROR']
Availability,"use you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neither the sender identity nor the data integrity",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:2311,error,error,2311,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['error']
Availability,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761857622:474,avail,available,474,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622,2,['avail'],['available']
Availability,"using it; def classList = new ClassList<>(IFormatReader.class); classList.addClass(LeicaSCNReaderRGB); def reader2 = new ImageReader(classList); reader2.setFlattenedResolutions(false); def factory = new ServiceFactory(); def service = factory.getInstance(OMEXMLService.class); def meta = service.createOMEXMLMetadata(); reader2.setMetadataStore(meta); reader2.setId(server.filePath); server.manager.mapPrimary.put(server.filePath, BufferedImageReader.makeBufferedImageReader(reader2)). // Clear the tile cache; def viewer = QPEx.getCurrentViewer(); def imageData = viewer.getImageData(); Platform.runLater {; viewer.setImageData(null); viewer.getImageRegionStore().clearCacheForServer(server); viewer.setImageData(imageData); }. // See https://github.com/openmicroscopy/bioformats/blob/master/components/formats-bsd/src/loci/formats/in/MinimalTiffReader.java; class LeicaSCNReaderRGB extends LeicaSCNReader {. /** Reinitialize the underlying TiffParser. */; protected void initTiffParser() {; QuPathGUI.getInstance().logger.info('INITIALIZING TIFF PARSER'); if (this.in == null) {; try {; this.in = new RandomAccessInputStream(getCurrentFile(), 16);; }; catch (IOException e) {; LOGGER.error(""Could not initialize stream"", e);; }; }; tiffParser = new TiffParserRGB(this.in);; tiffParser.setDoCaching(false);; tiffParser.setUse64BitOffsets(use64Bit);; }. }. class TiffParserRGB extends TiffParser {. public TiffParserRGB(RandomAccessInputStream stream) {; super(stream); }. public byte[] getTile(IFD ifd, byte[] buf, int row, int col) throws FormatException, IOException {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getTile(ifd, buf, row, col); }. public byte[] getSamples(IFD ifd, byte[] buf, int x, int y,; long width, long height, int overlapX, int overlapY); throws FormatException, IOException; {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getSamples(ifd, buf, x, y, width, height, overlapX, overlapY). }. }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358985847:2708,error,error,2708,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358985847,2,['error'],['error']
Availability,"ut the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.Platform",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484610786:1046,ERROR,ERROR,1046,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786,1,['ERROR'],['ERROR']
Availability,"v0.0.7 of the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) is available now... doesn't solve this, but gives a meaningful error if `bioformats_package.jar` is missing - and has a lot of other improvements. Regarding the label, here's an inelegant script that works for me with your images:; ```groovy; /**; * Extract the label from an .scn image.; * Assumes it matches with the specified IFD (6) - I've no idea if this is always the case!; * ; * Shows the extracted label using ImageJ.; */. import ij.ImagePlus; import loci.formats.gui.AWTImageTools; import loci.formats.in.LeicaSCNReader; import qupath.lib.scripting.QPEx. def path = QPEx.getCurrentImageData().getServerPath(); if (path.contains('::')); path = path.substring(0, path.lastIndexOf('::')). def reader = new LeicaSCNReader(); try {; reader.setId(path); def ifd = reader.getIFDs().get(6); int h = ifd.getImageLength(); int w = ifd.getImageWidth(); def samples = new byte[w * h * 3]; samples = reader.tiffParser.getSamples(ifd, samples, 0, 0, w, h); def img = AWTImageTools.openImage(samples, reader, w, h); new ImagePlus(""Label"", img).show(); } finally {; reader.close(); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409938514:103,avail,available,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409938514,2,"['avail', 'error']","['available', 'error']"
Availability,"v0.2.0-m10 is now available, which contains an updated version of OpenCV that I think/hope should have fixed the issue. But since I couldn't reproduce it in the first place, I'm not certain. I'll close this issue, but if you find the problem remains - or you can confirm it's resolved in m10 - please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-617734172:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-617734172,1,['avail'],['available']
Availability,"v0.2.0-m10 is now available. Please let me know if is has the same problem, or if the issue can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-617733292:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-617733292,1,['avail'],['available']
Availability,"v0.2.0-m11 now tries to recover more gracefully when this happens. It can't resolve the problematic overlap, but at least it doesn't lose the other cells. I'll close this issue because I think it is now as fixed as it is going to be (the whole overlapping code may be revised before v1.0.0), but feel free to reopen if you find it reoccurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-621609187:24,recover,recover,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-621609187,1,['recover'],['recover']
Availability,v0.4.2 is now available so I'll close this,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1397430434:14,avail,available,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1397430434,1,['avail'],['available']
Availability,"ver: ImageJ server for /home/bl/Documents/IMG_5_11_sq.png; 02:40:14.153 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Fluorescence, IMG_5_11_sq; 02:40:22.852 [JavaFX Application Thread] [INFO ] q.lib.scripting.DefaultScriptEditor - Loading script file /home/bl/ip/QuPath/app/TestJep.groovy; 02:40:28.109 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean red (from Java): 86.81525; 02:40:28.121 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean green (from Java): 72.492275; 02:40:28.124 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean blue (from Java): 68.141675; 02:40:28.624 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Started JEP: jep.Jep@6bc4b2e2; ImportError: numpy.core.multiarray failed to import; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f930536d03f, pid=27357, tid=0x00007f932091e700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [jep.so+0x1a03f] convert_jndarray_pyndarray+0x5bf; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/bl/ip/QuPath/app/hs_err_pid27357.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. [1]+ Aborted (core dumped) ./QuPath; ```. I am thinking that this might be worth bringing up with the JEP developers. I am going to spend a little more time playing with JEP by itself in order to see if I run into any similar issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:9975,error,error,9975,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['error'],['error']
Availability,"writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1784,error,error,1784,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536,2,['error'],['error']
Availability,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:6919,avail,available,6919,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,8,"['avail', 'down']","['available', 'downsample']"
Availability,yes it is a Fluorescence image. . I am getting **Error at line 51: Width (0) and height (0) cannot be <= 0**. I checked the width and height with getWidth() and getHeight() functions and its not 0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411347394:49,Error,Error,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347394,1,['Error'],['Error']
Availability,"yes, the wand tool in the download works fine",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630736057:26,down,download,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630736057,1,['down'],['download']
Availability,"you have successfully saved the; file at least once. It isn't an autosave feature. Regarding the memory, 3.3 GB is quite low. For small scale testing I; usually got away with 16GB, and for larger projects 64+. I am not sure,; but you may be able to circumvent this somewhat by running each of your 4; ROIs in turn, and saving after each. On Nov 9, 2017 9:23 AM, ""Eline8"" <notifications@github.com> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:1025,error,error,1025,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,4,"['avail', 'error']","['available', 'error']"
Deployability," 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:59); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$106(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(Ope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3182,update,update,3182,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['update'],['update']
Deployability," - this is nevertheless still drawn on screen; * When removing with the brush tool, a sanity check is applied to see if the resulting ROI has no area - and if so, the object is removed (e.g. [see here](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/AbstractPathDraggingROITool.java#L100)); * This sanity check isn't applied with the *Subtract selected annotations* command... so the 'empty' ROI does not result in the object being automatically removed; * Sometimes the sanity check can be triggered later... but it entirely clear when and why. I've flagged this as a bug, since something here is definitely not right and should be fixed. I do think that there is a broader issue with the usefulness of the commands for combining annotations; these can and should behave more predictably. It may not be helped by the fact that for a long time (before release) QuPath didn't support multiple objects being selected simultaneously, and much of the original code was written back in those days; as you can imagine, this was quite limiting. You're completely right about support for subtracting multiple annotations being tricky from a how-to-present-this-to-the-user point of view. I will give this some more thought. My preference would be to replace the existing commands to combine annotations with entirely new ones that have more clearly defined purposes and limitations. In the meantime, since you're already coding, it might be helpful to create your own script/extension to handle your specific needs. To do this, I'd suggest looking into [PathROIToolsAwt.java](https://github.com/qupath/qupath/blob/a3e9246640f9819701d57c513bb21a0546cff130/qupath-core-awt/src/main/java/qupath/lib/roi/PathROIToolsAwt.java) - specifically ```getArea(ROI roi)``` and ```getShapeROI(...)```. The first of these can convert a QuPath ROI into a [```java.awt.geom.Area```](https://docs.oracle.com/javase/8/docs/api/java/awt/geom",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-302926092:1658,release,release,1658,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-302926092,2,['release'],['release']
Deployability," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1152,release,release,1152,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['release'],['release']
Deployability, INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchE,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:4359,update,updateHistogramMap,4359,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateHistogramMap']
Deployability," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1706,update,updateDensityServer,1706,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,2,['update'],['updateDensityServer']
Deployability," Zoom from MicroDimensions is Windows-only, I suspect it may be using the Windows-only software libraries provided by [Zeiss](http://www.zeiss.com/microscopy/int/products/microscope-software/zen/czi.html) and [3D Histech](http://www.3dhistech.com/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically concatenate the multiple channels of a TIFF, assuming that they are stored in the same directory with a standard naming scheme (e",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:1222,integrat,integrating,1222,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,1,['integrat'],['integrating']
Deployability," agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the benefits that this PR brings. > > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. > Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. Basically All you the above. It accesses ~50 `.czi` images, weighting ~10GiB each. Leaving the the big size aside, it's also known that BioFormats themselves (required by `.czi`) are slow to work with.; Adding up to this scenario, images are often stored on a remote server (be it OMERO or just a sftp/samba server). This is due to the fact that it is hard for every member of a laboratory to have them stored on their own computer, as they all need to collaborate and, even if they wanted, they would soon fill up their local storage. in this scenario, the fact that QuPath offer an highly-scriptable interface is many laboratories' luck. It means that a pipeline of scripts can be applied one after the other, resulting in a full analysis of the whole project. Sometimes, you may even want to tweak some parameters, and for this you have to re-run the whole pipeline in batch again. In the end, I really get you are wary of quickly merging this. I'm sure reducing code is a top priority in order to offer the best bug-free experience to QuPath's wide user-base. A base experience that can be extended by plug-ins and scripts _outside_ of QuPath's code/responsibility. However, I feel like the ability to run scripts in QuPath is at the **core** of its streghts. It allows to offer an extensible basis on which downstream developers can then build upon.; For this reason I ask you to please also consider future scenarios that this small PR opens up in batch script execution, and not only its implications with the object classifier. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:2946,pipeline,pipeline,2946,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,4,['pipeline'],['pipeline']
Deployability," at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1751,install,install,1751,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['install'],['install']
Deployability," be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things for anyone else. We can even move it up into `QP` so that it works without knowing anything about the viewer at all. I think that as a compromise this is more than fair. It means you get the outcome you want, and we did not have to compromise to do something that I strongly believe will end up wasting a lot of time in the future (be that mine or someone else's). QuPath remains a 0.x.x release and so the API shouldn't be interpreted as stable. I don't encourage writing extensions for that reason. But I do recognise that extensions are important, and so if someone wants to do it (aware of the risks) then it is supported. I hope that more clearly explains my logic. Since it feels like we've discussed this subject many times, I thought I should be thorough in this answer. Now I've no time to shorten it.... I hope it is useful. v0.2.0 has been a rather... intense experience. Pretty much the entire software has been rewritten, while still trying to keep it basically functional and respond to the ever-increasing questions and requests from users. Sometimes it gets exhausting. QuPath is by no means finished, but I do think it is substantially better and more coherent than it previously was. The goal of v0.2.0 was to get decent foundations as quickly as possible - but the task turned out to be huge. The importance of many of the new features will only become clear in future releases. v0.3.0 won't have so many milestones, and I hope will mark the start of a more sustainable development approach...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:6611,release,releases,6611,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['release'],['releases']
Deployability," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3834,update,updates,3834,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,1,['update'],['updates']
Deployability, run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1037,deploy,deploy,1037,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability," server & cells; def server = getCurrentServer(); def cells = getCellObjects(). // Reset our classifications; cells.each { cell -> cell.resetPathClass() }. // Loop through channels; for (def channel in server.getMetadata().getChannels()) {; // Extract the channel name; def channelName = channel.name; ; // Skip some channels; if ('DAPI' in channelName || 'Autofluorescence' in channelName); continue; ; // Create a classification name from the channel; // Here, I take the first bit up until any whitespace; def classificationName = channelName.split()[0]. // Define the measurement we want; def measurementName = ""Cell: $channelName mean""; ; // Calculate some threshold from the measurement; // Here, just the mean; double threshold = cells.measurements[measurementName].average(); ; // Append a classification to all the cells above the threshold; cells.each { cell ->; if (cell.measurements[measurementName] > threshold); cell.classifications += [classificationName]; }; }. // Figure update (could do this automatically...); fireHierarchyUpdate(); ```. Closer inspection reveals a few Groovy tricks at work:. * `List.each { }` as a shorter alternative to for loops; * Avoid explicitly calling getters (e.g. `channel.name` rather than `channel.getName()`, `cell.measurements` rather than `cell.getMeasurements()` or - previously in QuPath - `cell.getMeasurementList()`; * Getting from a map using `map[key]` syntax (rather than `map.get(key)`; * Calling a method on a list to get it applied to all elements... so `cells.measurements[measurementName].average()` first extracts all the measurements, then averages them; * Sneakily applying a `setClassifications()` again by accessing it like a property - and using collection concatenation with `=+` to join the old classifications to the new ones; * this works in the opposite direction, with `-=` to remove one or more classifications. The changes have been made without introducing any changes to QuPath's data files, since `PathClass` and `Measur",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1094#issuecomment-1289456235:1718,update,update,1718,https://qupath.github.io,https://github.com/qupath/qupath/pull/1094#issuecomment-1289456235,2,['update'],['update']
Deployability," that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1018,update,update,1018,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,8,"['install', 'update']","['install', 'update', 'updates']"
Deployability," the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1047,integrat,integrate,1047,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828,2,['integrat'],['integrate']
Deployability, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHub\qupath>,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:2205,configurat,configuration,2205,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,1,['configurat'],['configuration']
Deployability," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1931,update,updated,1931,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684,2,['update'],['updated']
Deployability,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/381#issuecomment-561275095:450,install,installing,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095,4,"['install', 'release']","['installing', 'released']"
Deployability,"* My display is the M1 Macbook Pro 16"", so 3456x2234. However, after your suggestion I switched my main display to a 24"" 1920x1080 display I have and was still able to replicate the problem (after adding the appropriate number of buttons).; * Yes, there needs to be precisely one too many buttons. If the buttons only just fit in the toolbar, no problem. If I have two buttons in the overflow, also no problem.; * Yes, nothing should be done to update the state before opening the project. If, before opening the project, I (slowly) mouse over the red border it will then work, likewise clicking a toolbar button or resizing the window (actually, just clicking when the resize cursor appears is enough - I don't actually have to change the size).; * Yes, it happens on every project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1353187206:445,update,update,445,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1353187206,1,['update'],['update']
Deployability,"* convenience as I don't scroll the image side to side (I use the move tool) and prefer using the mouse wheel for zooming. > I think (but haven't thoroughly checked) that the middle button should be less troublesome, partly because Mac mice don't have middle buttons. Of the two proposed changes (side to side tool selection, middle button to come back to the previously selected tool), the middle button is the one I would say is the more useful one. > But I remain a bit apprehensive about needing a debounce delay, and worry about adding even more complexity to the various event filters and handlers that are active when interacting with the viewer. I agree that debounce should really be part of the OS. QuPath shouldn't be blamed for not working quite right with a broken mouse. > Can you say a bit more about how useful you've found this, and when?. * First the one I found most useful: For me, this feature really shines when I need to draw lots of small regions for a pixel classifier. I draw either rectangles or use the polygon tool and yes, I could just try and remember that ""m"" is for move, ""r"" is for rectangle and ""p"" is for polygon. From my testing, I just find using the middle button more practical.; * Side-to-side selection: That came as an afterthought after implementing the middle button. I then use it because it's there, but honestly, the keyboard shortcuts *do* make sense.; * Debounce: Like I said, it helps with worn out buttons, but this isn't normally something anyone will have issues with. I'll keep it at the back of my mind and let you know if there is a real test case for including it in QuPath. > The option remains to add the functionality through an extension or startup script, to give it a bit more time before possibly integrating it into the core software later. I'm all for this. What I can do now is scale back the PR to ""middle button functionality"" (no side-to-side or debounce), and also remove any logging that isn't strictly necessary. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565:2664,integrat,integrating,2664,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565,1,['integrat'],['integrating']
Deployability,"**Extra:** CUDA 11.8 suggests to me you were following the instructions for [QuPath v0.5.x here](https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#pytorch). These need to be updated for v0.6.0.; We will do this when we've time, but my guess is that you'll need a different CUDA version (possibly [12.1](https://publish.djl.ai/pytorch/2.3.1/files.txt)). For reference, QuPath v0.6.0-rc1 uses DJL v0.29.0 - which defaults to PyTorch 2.3.1 according to [this link](http://djl.ai/engines/pytorch/pytorch-engine/). QuPath v0.6.0-rc2 is likely to use DJL v0.30.0, which has only just been released... and may require [CUDA 12.4](https://publish.djl.ai/pytorch/2.4.0/files.txt). We've been incredibly busy trying to make all these releases, and I'd ask for patience as we update the docs and try to stabilize all the final versions. The CUDA question in particular is further complicated by our dependencies updating, and none of us routinely using Windows.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598:183,update,updated,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598,4,"['release', 'update']","['released', 'releases', 'update', 'updated']"
Deployability,*Edit &rarr; Reset preferences* should fix it (preferences aren't impacted by a new installation).; I notice you're using v0.1.2 - I think this bug should already have been fixed since then.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422#issuecomment-604962678:84,install,installation,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-604962678,1,['install'],['installation']
Deployability,"- [x] 'Owner' is higher than 'Repository'; - [x] The gap before 'Cancel' seems to be using space that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:919,update,update,919,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['update'],['update']
Deployability,--------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1111,deploy,deploy,1111,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2673,deploy,deploy,2673,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 3,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2668,deploy,deploy,2668,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslid,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2047,deploy,deploy,2047,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,". This might have some small improvements in performance (especially if initializing a reader is slow), but could be brittle and easy to get wrong. > * The `T getImage(int series);` function should be removed, and the `T getImage(TileRequest tileRequest, int[] channels, boolean isRGB, ColorModel colorModel, int series)` function should be used instead. Ideally yes. As the `HnE_3_1x1component_data.tif` example, shows, we don't know what kind of image will be returned by `getImage(int series)`, and so having a separate API that assumes a single-resolution, non-pyramidal, 2D image seems to add (rather than reduce) complexity. > However I didn't understand where the `OMEPixelParser` class would be in all of this. As seen with the `HnE_3_1x1component_data.tif` example, we don't know for sure what. I think we should go back to thinking about the *ideal* design here, based upon what needs to be reusable - and also what are the simplest and safest changes that can be made before the v0.5.0 release. My understanding of the original requirements is. 1. **Essential** The OMERO `Gateway` returns byte arrays in a format very similar to Bio-Formats, and the logic convert these into a `BufferedImage` (with suitable `ColorModel` etc.) is complex. This should be extracted from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsIm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:3458,release,release,3458,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['release'],['release']
Deployability,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-912009706:1990,update,update,1990,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706,2,['update'],['update']
Deployability,".0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2624,update,updateDefaultSelection,2624,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateDefaultSelection']
Deployability,.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2133,deploy,deploy,2133,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1894,deploy,deploy,1894,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2594,deploy,deploy,2594,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,".2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3502,deploy,deploy,3502,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1116,deploy,deploy,1116,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-n,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2289,deploy,deploy,2289,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6086,update,updateDefaultSelection,6086,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateDefaultSelection']
Deployability,".java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3243,update,update,3243,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['update']
Deployability,.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7836,update,updateSuggestedOverlayColorFromThumbnail,7836,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2447,deploy,deploy,2447,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1822,deploy,deploy,1822,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.mai",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3277,deploy,deploy,3277,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupat,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1349,deploy,deploy,1349,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2529,deploy,deploy,2529,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3571,deploy,deploy,3571,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1420,deploy,deploy,1420,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1552,deploy,deploy,1552,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"1 is clearly wrong to me; should probably be equivalent to selecting the outer rectangle, and definitely not throw a concurrent exception (whether or not it throws another exception, or a warning about undefined behaviour is another question). I think as much as it may not be intuitive, using the object hierarchy here is more flexible (ie, there may be situations where this is what people want to do, and as long as it's possible to toggle between, I tend to prefer flexibility). For 4, I can't decide if I should expect connections between disjoint annotations when both are selected. I think.... no...?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1590#issuecomment-2312272850:436,toggle,toggle,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/1590#issuecomment-2312272850,2,['toggle'],['toggle']
Deployability,"1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codeha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3432,deploy,deploy,3432,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3195,deploy,deploy,3195,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1748,deploy,deploy,1748,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-os,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2223,deploy,deploy,2223,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2883,deploy,deploy,2883,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qu,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1192,deploy,deploy,1192,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,":) I'd like to advise against it, but I can't think of a sufficiently good reason why not... and I imagine the extra pixel-setting step is pretty time-consuming. So you might want to try something like this...; ```groovy; // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. // If you want to trigger the 'Image' tab on the left to update, try setting a property to something different (and perhaps back again); type = getCurrentImageData().getImageType(); setImageType(null); setImageType(type); ```; If this is performed at an early stage (before any measurements/analysis), I can't think of a reason why it would go wrong... although if you find one, please do let me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424844216:507,update,update,507,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424844216,1,['update'],['update']
Deployability,:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2736,update,updateItemsObserver,2736,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateItemsObserver']
Deployability,"<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/20",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1798,install,install,1798,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['install'],['install']
Deployability,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-932797893:370,install,install,370,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893,1,['install'],['install']
Deployability,"> > > Yes, looks good to me!; > > > The pull request was updated; > ; > How should I set the min width / height now on the QuPath side?. `logviewer.getWidth()` and `logviewer.getHeight()` should work",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731204742:57,update,updated,57,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731204742,1,['update'],['updated']
Deployability,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1247,update,update,1247,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724,1,['update'],['update']
Deployability,"> > Yes, looks good to me!; > The pull request was updated. How should I set the min width / height now on the QuPath side?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731192852:51,update,updated,51,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731192852,1,['update'],['updated']
Deployability,"> @One-sixth this sounds like a duplicate of #904; > ; > The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them. Thanks a lot, problem solved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-1072298270:115,release,release,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072298270,1,['release'],['release']
Deployability,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732318132:146,install,installed,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132,1,['install'],['installed']
Deployability,"> As you've likely seen, the values should persist when the image is closed/reopened within the same QuPath session, but not when QuPath is reopened. Hi! @petebankhead I was just wondering if there's been any updates to this thread? Is there a way to save the max/min values to be used once QuPath is reopened - for example to apply these settings to an entire project?. Thank you,. belliveau13",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453632278:209,update,updates,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453632278,1,['update'],['updates']
Deployability,"> By 'true dimensions' I mean the pixel dimensions stored in the raw file. I'm curious where you get these from, because I can't find them in the `.ini` file associated with .mrxs. `tiffinfo` isn't really relevant here, since it can only get from a tiff what was written there during the conversion process... and if OpenSlide was used to help convert the file without cropping, then the tiff dimensions will inevitably agree. `tiffinfo` is meaningful for .scn because the original format itself is tiff-based, so no conversion is needed. As shown in that example, it's possible that the true dimensions stored in the original file are the ones you get *after* cropping with OpenSlide's bounds, not before. I can't check the dimensions of any .mrxs image with other software as I don't have any viewer for mrxs files that isn't using OpenSlide (and ImageScope failed to open it). There is supposedly a free viewer from the company behind the .mrxs format, but it requires too much personal info to install so I don't want to use it. There are some [links here](https://qupath.readthedocs.io/en/0.4/docs/intro/formats.html#mrxs-3d-histech) that may help give some idea what it's not exactly my favorite file format for whole slide scans. I have seen examples of mrxs images where failing to crop results in very excessive padding (and the associated computational problems), so I still thing cropping / avoiding padding is the more appropriate choice for QuPath to make as a default... and the .scn example demonstrates that it's the right choice there. In conclusion, it sounds like:; * QuPath isn't doing anything weird or buggy - it's behaving as it should here; * You can use QuPath with your pyramidal tiffs, no matter how they are generated (as long as they can be opened by either OpenSlide and Bio-Formats); * You can use QuPath with the mrxs images used to generate tiffs if you do **one** of the following; * generate the tiffs to give the cropped/unpadded region, e.g.; * using [`libvips` an",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136:998,install,install,998,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136,2,['install'],['install']
Deployability,"> Converting to composite works. Is it an option to let QuPath do this automatically when the image type is set to Fluorescence? . I'm afraid not, QuPath doesn't really allow you to modify the image in any way, so changes like this are difficult. Batch conversion in ImageJ is the easiest 'fix' I can think of. The code used to make measurements with StarDist is a lot more generic than the code for the built-in cell detection... but I overlooked the RGB problem since I didn't have any images quite like that. Good to know about it now so we can fix it before the next release. > Thanks for the great program. We like QuPath a lot!. I'm glad! If you haven't already, it would be great if you could fill in the [user survey](https://edinburgh.onlinesurveys.ac.uk/qupath-user-survey-2021) - and please share it with anyone else you know uses the software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/686#issuecomment-804259530:571,release,release,571,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804259530,1,['release'],['release']
Deployability,"> Could you provide an example script showing how it should be used please?. You can find a script using it [here](https://forum.image.sc/t/add-additional-channel-in-fluorescence-image-after-scanning/99174/16). I think it's simple enough not to change `TransformedServerBuilder`. > Including the example as a comment here is fine - and we should link to this issue in the CHANGELOG for anyone who wishes to read more. Updated in last commit. > Also: did anything change in the JSON serialization that could have compatibility concerns, i.e. if someone has stored an image in a project using ColorTransform in v0.5.1, can we expect it to work here?. No, the behaviour of the existing classes didn't change.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1566#issuecomment-2260011491:418,Update,Updated,418,https://qupath.github.io,https://github.com/qupath/qupath/pull/1566#issuecomment-2260011491,1,['Update'],['Updated']
Deployability,"> Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2. Yes I just realized a few minutes ago that it was the Weka extention that might have been causing the problem, which it was.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632432142:74,update,updated,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632432142,1,['update'],['updated']
Deployability,"> Hmmm, is this something we should address through JNA?. Not sure honestly, in retrospect maybe respecting people's installed OpenSlide version is good, only falling back on the version we bundle if we have to? But at the moment it's a bit backwards, with the apt version behind ours. > In any case, it seems to be working fine here (just tried running from Gradle on M1, and both the x86_64 and aarch64 builds were working) - so I think that's good news for making the native release, or we can stick with the versioned snapshot for now if you prefer. Great, I want to make sure the main artifact (without qualifiers) includes everything, and to include the sources on maven, will do that before the main release. > My guess is that taking the licenses from the Windows build should be sufficient, or is anything radically different / missing if we do that?. I *think* the licenses should be the same across versions now for the most part - the extra windows libraries are removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764471338:117,install,installed,117,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764471338,3,"['install', 'release']","['installed', 'release']"
Deployability,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431978:203,UPDATE,UPDATE,203,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978,2,"['UPDATE', 'install']","['UPDATE', 'installed']"
Deployability,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410954902:752,update,updates,752,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902,4,"['install', 'update']","['install', 'updates']"
Deployability,"> I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. I agree, this feels a bit aggressive to me. If the existing copy may not be atomic, I'd rather try to implement an atomic version than to switch to a ""definitely not atomic"" version. > If atomicity of the operation is what worries you, i could implement a method that does it safely, very similarly to what you do with .qpproj files. This sounds good to me, it's important for obvious reasons that user data operations are done as safely as possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126:285,release,releases,285,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126,1,['release'],['releases']
Deployability,"> I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. Hmmm, but I don't think it does? At least there's nothing in QuPath to intentionally do that. The only thing I can think of is that the 'user' is somehow remembered with the .msi from the installation... but I don't know if that makes sense. The Windows packages are created using `jpackage`, which in turn uses Wix toolset - so any surprising behavior may originate there. I remain confused and unconvinced that QuPath is doing anything odd, since it seems to me there *must* be other steps involved that aren't included in your PDF (because it doesn't talk about installing CellPose) *and/or* the path is coming from some the preferences from some prior installation. There won't be an extensions folder set if you have a completely clean QuPath installation with no lingering preferences*. And if you've set anything in the preferences, then that should affect the .msi and .zip in exactly the same way. *-I guess optionally removing the preferences when uninstalling QuPath might be handy, but I don't think `jpackage` offers that. > From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. Sounds possible. In case it helps investigate, the preferences should be found in the Windows registry under; ```; HKEY_CURRENT_USER/SOFTWARE/JavaSoft/Prefs/io.github.qupath/0.3/; ```. Again, this should be the same regardless of whether the .msi or .zip is used.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302544432:74,install,installation,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302544432,8,['install'],"['installation', 'installed', 'installing']"
Deployability,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527239383:76,install,installation,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383,3,"['Update', 'install', 'integrat']","['Update', 'installation', 'integrated']"
Deployability,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633285245:888,install,installWand,888,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245,1,['install'],['installWand']
Deployability,"> Is this a feature anyone really wants?. The answer to that is almost always ""yes""; the better question is whether it is worthwhile to implement given the refactoring/maintenance burden it entails. > Is it likely to be more helpful or confusing for new users?. It seems like the sort of thing that would be confusing if done accidentally, so we should try to make that difficult if possible, but as Leo says in imaging software it's common to have multiple images open. > Detaching one viewer (and leaving the rest of the 'viewer grid' intact). Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. > Breaking up the UI entirely, so that there is no longer a grid and instead we have separate windows (including for the toolbar and analysis pane, more like ImageJ). It seems to me like at least some UI elements should be broken up across windows. For example I'd want to be able to view/edit the object hierarchy in each image separately (e.g. for training classifiers). If we wanted to emulate the other mode you described, then being able to hide UI elements would be a good start. > Is there a need to have the same image open in multiple viewers? . Probably a natural behaviour, as long as we lock the imageData when a viewer is interacting with it. There's a related issue in here to improve support for QuPath windows in tiling window managers, but I suspect I'm the only person who cares about that right now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939:598,toggle,toggles,598,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939,1,['toggle'],['toggles']
Deployability,"> It is a slightly scary change to make since it is so core. Yes, i get it. It's better being cautious here!. > When ImageServer metadata is written in a project and when it isn't (I see it missing sometimes, which has previously been irrelevant since it's generated when the ImageServer is built... but becomes much more important if the server isn't necessarily built). what I would say that in that case it would load the server, read the metadata and write them in the `.qpproj` file for future accesses. I wouldn't assure that `ImageData.getServerMetadata()` never loads the image server. It avoids it as long as it is possible, otherwise it will. > What happens when a script changes the metadata, but the server itself hasn't been read (e.g. setting channel names or pixel size). Again, if `ImageData.updateServerMetadata()` i would actually load the server()+update `qpproj` file. Avoid doing it lazily, as that would easily lead to unexpected states for the users. > How exceptions are handled when lazy loading fails. What's wrong in behaving the same as when an exception occurs while creating an `ImageServer`?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2271091629:808,update,updateServerMetadata,808,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2271091629,2,['update'],"['update', 'updateServerMetadata']"
Deployability,"> It would be interesting to compare it with applyColorTransforms() where you pass all the ColorTransform objects and avoid concatChannels(). Using `concatChannels`, the JSON entry makes 430 lines, while with only `applyColorTransforms` the JSON entry makes 195 lines. I'll update the Image.sc script with only `applyColorTransforms`. > I suggest providing both TransformedServerBuilder.applyColorTransforms(ColorTransform... transforms) and TransformedServerBuilder.applyColorTransforms(Collection<? extends ColorTransform> transforms) for convenience. Added in last commit. > What is the name given to any new channel generated in this way?. * If the channel names are provided with the coefficients, it's the linear combination with the channel names, for example `""-0.25*PDL1 + -0.15*FoxP3 + 1.0*CD8""`; * If only the coefficients are provided, it's the linear combination with `""channel"" + channelIndex` as channel names, for example `""-0.25*channel1 + -0.15*channel3 + 1.0*channel4""`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1566#issuecomment-2260446815:274,update,update,274,https://qupath.github.io,https://github.com/qupath/qupath/pull/1566#issuecomment-2260446815,1,['update'],['update']
Deployability,"> Looks great - is there any way to run it before merging? I think it's possible if it's on a branch of this repo, but not a fork. Here's what it makes on my fork: https://github.com/alanocallaghan/qupath/releases/tag/v0.5.1-SNAPSHOT. If I dispatch it again without making any changes, it just makes another release. There's no issue with tag collision until you try to publish both. I did update the release code so it points at the specific commit SHA that the builds correspond to, though, rather than a moving target (eg `main`). > Is it also possible to separate out the draft of the release - or check what happens if running twice without a change of version?. Yes, I rearranged the workflows so that jpackage and draft release are separate workflows (though ofc draft release does jpackage first). So you can just build binaries, or build and draft a release. Any other wishlist ideas for CI while I'm at it?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943694811:205,release,releases,205,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943694811,8,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"> My best guess is that it's related to user permissions. But I really don't know - I haven't seen this either.; > ; > There's also one obscure tip that might be relevant at the very bottom of [this page](https://github.com/qupath/qupath/wiki/Paths-&-configuration). Basically, inside the QuPath installation there should be a file `QuPath.cfg`. You could try opening that in a plain text editor and on a line below [JVMOptions] adding `-Xmx8G` for 8 GB (for example).; > ; > I haven't tested this to check it works, but then my memory settings are being read from my preferences so I can't replicate the exact problem. I had a look in the QuPath.cfg file and reallocated the memory from 50% to 100%. ; This worked. Thanks for the help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-644769313:251,configurat,configuration,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-644769313,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"> No, it just picks up my system libopenslide.so before the Jar version, which I think is not ideal. Hmmm, is this something we should address through JNA?. In any case, it seems to be working fine here (just tried running from Gradle on M1, and both the x86_64 and aarch64 builds were working) - so I think that's good news for making the native release, or we can stick with the versioned snapshot for now if you prefer. The aim is to get rc2 out shortly, but the final v0.5.0 won't be until next week at least. We'll also need to update the info at https://github.com/qupath/qupath/tree/main/qupath-extension-openslide/src/main/resources/licenses/OpenSlide. My guess is that taking the licenses from the Windows build should be sufficient, or is anything radically different / missing if we do that?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764462455:347,release,release,347,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764462455,2,"['release', 'update']","['release', 'update']"
Deployability,"> One easy way. Do you have any advice on how to streamline that, while using GitHub releases?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1198350412:85,release,releases,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1198350412,1,['release'],['releases']
Deployability,"> So solving this will likely require any any info you can get from VisualVM's CPU sampling. Since I wasn't sure which outputs to provide you with from VisualVM, I made a quick recording of the profiling as it ran while QuPath was loading the project: https://youtu.be/_GHn556qEAk. I wasn't able to get the profiler to work, despite installing a 64 bit version of Java 17, but the sampler and all other tools seemed to work. I've uploaded the thread and heap dumps to: https://drive.google.com/drive/folders/1akRolrnUwbryc3YMSRR_aXhJ5H6AgBWO?usp=sharing. > QuPath shouldn't be regenerating thumbnails when a project is opened, and it shouldn't be remembering anything (other than the preferences) across relaunches.; v0.4.0 should generating missing thumbnails only, and do so in a background thread that doesn't block. Both v0.3 and v0.4 will try to access the thumbnail images in the project when it is opened; this could potentially block the UI, because it needs to be done in the UI thread (and there can only be one). However these should generally be small JPEGs so I've never known that to be a problem. Therefore I'd only expect this to be troublesome if there is some other reason why access to the disk is exceptionally slow. Based on my limited interpretation of the VisualVM results, I'd say that you're right. The lowest-level QuPath method I could find which was responsible for the ~4 minute load time is `qupath.lib.io.UriUpdater$SingleUriItem.getStatus()` which invokes `java.nio.file.File.exists()`. ![image](https://user-images.githubusercontent.com/52012166/203870112-0ecd0822-7efd-4360-af2e-0858b8a03df7.png). My guess is that there is some kind of checking going on, comparing the URI listed in the project, with the file path, to verify that each project entry is pointing to the correct image, and that's what's taking up CPU time. > I couldn't really tell what was going on in the video, partly because the analysis pane was closed - and when the image was opened I couldn't ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1326872166:333,install,installing,333,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1326872166,1,['install'],['installing']
Deployability,"> Sounds good, as long as it doesn't enforce any tag until we actually release. Yeah, was used to software where version bumps are much more liberal. > Also, if you want to take it on... I think this PR fails because the two mac builds become 'pkg' and only one survives. Will have a look now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935866859:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935866859,1,['release'],['release']
Deployability,"> The stardist extension hasn't been updated for QuPath 0.6 yet. I'd suggest one of these three options:; > ; > 1. Test stardist using QuPath 0.5.1; > 2. Build the latest stardist extension from source, ideally this branch: [Update for QuPath v0.6 qupath-extension-stardist#36](https://github.com/qupath/qupath-extension-stardist/pull/36); > 3. Use the Jar file attached below in QuPath 0.6.0-rc1.; > ; > [qupath-extension-stardist-0.6.0-SNAPSHOT.zip](https://github.com/user-attachments/files/16977870/qupath-extension-stardist-0.6.0-SNAPSHOT.zip). Thanks @alanocallaghan . The new jar solved the issue. ; (QP 0.5.1 is working well with Stardist extension 0.5.0). best; Ofra",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2346029465:37,update,updated,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2346029465,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623989433:16,update,update,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433,2,['update'],['update']
Deployability,"> Would it be possible to avoid duplicating the shortcuts in the properties files, and instead extract them directly from the Action accelerator property?. Yes, it's now the case. > A complication I see is that making the tooltip text auto-update if the accelerator or action 'long description' is changed - but this is not an essential feature (since it should be rare). Right now I have the impression that the tooltip text will auto-update if the language changes. Is that enough?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1463#issuecomment-1941752636:240,update,update,240,https://qupath.github.io,https://github.com/qupath/qupath/pull/1463#issuecomment-1941752636,2,['update'],['update']
Deployability,"> Yes, looks good to me!. The pull request was updated",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731182428:47,update,updated,47,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731182428,1,['update'],['updated']
Deployability,"> is there anything conventional about where the project/images are stored?. The project is stored on the C drive, same physical SSD as the OS. The images are stored on the E drive, a separate 2TB SSD. Both have at least 300Gb of free space. The update check is printed in the log and occurs prior to loading any project, so I don't suspect it's affecting project loading. Will check out VisualVM and see if I can use it to monitor the initial project creation step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212:246,update,update,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212,1,['update'],['update']
Deployability,"> the same first user credentials were used to install both QuPath's. I guess maybe that's the issue. . QuPath is using Java's `Preferences` class: https://docs.oracle.com/en/java/javase/11/docs/api/java.prefs/java/util/prefs/Preferences.html. Specifically, it's going through `Preferences.userRoot()`, which according to Java's docs should be *'the root preference node for the calling user'*: https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L475. I think the Cellpose extension is doing the same. I've no idea what miniconda does, or if it's relevant here. I'm not sure what happens when the credentials used for installation are different from those used to run the software - but providing an .exe in addition to an .msi is intended to help in scenarios when one isn't suitable (usually a lack of admin access for installation). Based on all that, do you still think QuPath should be doing something differently?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302330711:47,install,install,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302330711,3,['install'],"['install', 'installation']"
Deployability,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-476258374:839,update,updated,839,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374,2,['update'],['updated']
Deployability,">I think this implies that the bug only occurs when deserializing a PathClass written using the 'earlier' syntax, and doesn't affect a PathClass that was written by v0.4 itself.; Does that sound correct?. Yeah, I think that is a correct deduction!. > In the meantime I'm keen to understand when the bug strikes. This bug occurs when I open an image in a project with annotations with derived `PathClass`. These sort of project/images are made with [ABBA's extension](https://github.com/BIOP/qupath-extension-abba), however the bug occurs when opening such images in a QuPath v0.4.3 installation without installed extensions, too.; I am not a developer of ABBA extension, but I'm willing to investigate if you think it's necessary. I just need to understand where the serialized `PathClass`es of a project are saved to file!. > I'm on leave at the moment, but will explore the PR in more detail in a couple of weeks, and before the next QuPath release. Thanks a ton!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1670347461:582,install,installation,582,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1670347461,3,"['install', 'release']","['installation', 'installed', 'release']"
Deployability,">it seems that the issue is normally related to the driver. You're absolutely correct, after updating my GeForce Game Ready driver to 527.37, which is the latest release at the time of posting this comment, I no longer have the issue, and I'm able to segment cells, confirming that the GPU is being used based on VRAM. Unless anyone else is still having this issue after updating their drivers, I'll close this as resolved. Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341741875:162,release,release,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341741875,1,['release'],['release']
Deployability,@AnesthesiaNeurotoxicity did you install the _Visual Studio 2015 C++ Redistributable_ as specified in the [link I posted above](https://github.com/qupath/qupath/issues/330#issuecomment-501853968)?. The Bio-Formats website mentions the need for this to handle CZI files with JPEG-XR compression: https://docs.openmicroscopy.org/bio-formats/6.1.0/formats/zeiss-czi.html,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330#issuecomment-501900222:33,install,install,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501900222,1,['install'],['install']
Deployability,"@DavidMHaumann Sorry I wasn't clear on the colour deconv subject. I was generally speaking on the color space, RGB, HSV, LUV but I was also thinking about standart HE and immunostains. Your case might be difficult. . I was sure SimpleTissueDetection2 was not using ColourDeconv but after looking at #93 I know a bit more what is using. For me it is working fine but I'm working with very standard stains. . However, I'm working also on some special stains where deconvolution is necessary and of added value, especially with regard to the cell-object segmentation that would follow. The link to ImageJ is very useful because you can send the region to ImageJ , deconvolve, normalize, analyse and return the objects ROI back to qupath interface for further visual inspection/analysis. There is a plugin on the embedded ImageJ installation with QuPath that allows the integration of regions from ImageJ to QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/124#issuecomment-352399785:825,install,installation,825,https://qupath.github.io,https://github.com/qupath/qupath/issues/124#issuecomment-352399785,4,"['install', 'integrat']","['installation', 'integration']"
Deployability,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472857161:286,release,release,286,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161,1,['release'],['release']
Deployability,"@One-sixth this sounds like a duplicate of https://github.com/qupath/qupath/issues/904. The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-1072251008:146,release,release,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072251008,1,['release'],['release']
Deployability,"@ajaysingh096 thanks, I've identified the source of the problem as being the same as https://github.com/qupath/qupath/issues/894 - although it appears in a slightly different way (just opening a low-res image rather than freezing). It was also discussed [here](https://forum.image.sc/t/problem-about-opening-ndpis-files-in-qupath-v0-3-1/62184). The good news it that this means the bug has already been fixed, and the fix will be included in the next QuPath release. In the meantime, it should be possible to open the images in QuPath as long as you [add them to a project first](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065833035:458,release,release,458,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065833035,1,['release'],['release']
Deployability,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620375806:64,install,installed,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806,1,['install'],['installed']
Deployability,"@alanocallaghan @Rylern @finglis can anyone think of a reason not to do this...?. The main goal is to be able to set awkward DJL/CUDA options from a command line (e.g. .bat file or shell script), rather than needing configuration later. May or may not be successful; if it works, it may make https://github.com/qupath/qupath/pull/1429 unnecessary (but probably worth keeping anyway).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1430#issuecomment-1833531086:216,configurat,configuration,216,https://qupath.github.io,https://github.com/qupath/qupath/pull/1430#issuecomment-1833531086,1,['configurat'],['configuration']
Deployability,"@alanocallaghan @Rylern @finglis shall we merge this for now, then remember to make non-SNAPSHOT releases before v0.6.0?. Otherwise we need to test things by using `includeBuild` for `qupath-fxtras` and `log-viewer`, or else commit to new releases for them now (but there may be more changes to come).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1509#issuecomment-2086262683:97,release,releases,97,https://qupath.github.io,https://github.com/qupath/qupath/pull/1509#issuecomment-2086262683,2,['release'],['releases']
Deployability,@andrewjUTSW the right click + open did eventually help for me. I actually installed qupath once more and then I had to do the right click + open twice to get it to open. The first time using right click+open I got the same message about the sw being damaged. The second time I got the same message but it had the option to open the app this time. I am currently running Ventura 13.1 and today I worked with Qupath 0.4.2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307:75,install,installed,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307,1,['install'],['installed']
Deployability,"@balazs-endresz looking again at your exception, I see a reference to `J9Generic_Signal_Number`. This causes me to guess that you're using OpenJ9 rather than Hotspot (you can get either from AdoptOpenJDK): https://www.eclipse.org/openj9/oj9_faq.html. I've only tested things using Hotspot (the default with OpenJDK); conceivably there might be some OpenJ9-related problem I've not seen before.. In any case, v0.2.1 is also now released - I'd be interested to know if you experience the same exceptions there. It would be great if you or @gawells could confirm if there remains any fixable issue here, or if it can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-648053127:427,release,released,427,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648053127,1,['release'],['released']
Deployability,"@bpmed12 can you be more specific regarding what exactly you have tried, what does/does not work and any error messages you see?. Note that the 'image list' (under the 'Image' tab) does not exist in m3. So your issue may be different. Also not that the Bio-Formats extension must *not* be installed with m3 - it is included by default. You may still need to install the visual studio redistributable as specified at https://docs.openmicroscopy.org/bio-formats/6.1.1/formats/zeiss-czi.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-517719018:289,install,installed,289,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-517719018,2,['install'],"['install', 'installed']"
Deployability,"@brijeshwar2002 you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606409716:164,release,release,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606409716,1,['release'],['release']
Deployability,"@erexhepa good that the conversion is working!. Regarding CellProfiler, is interaction between it and QuPath something you'd need/want? If so, it would be good to add a new feature request here to draw attention to it, and maybe try to spark some discussion on how it should look. I personally never managed to get Javabridge set up successfully, and I didn't have any sufficiently important CellProfiler pipelines to work further on the integration myself. But it should be manageable in a few ways. The easiest might be to write out temporary image files (with Groovy) and then launch CellProfiler from the command line, before reading back in the results. However, early next year I plan to work more on streamlining the interaction between QuPath and Python, in which case the use of [CellProfiler as a Python package](https://github.com/CellProfiler/CellProfiler/wiki/CellProfiler-as-a-Python-package) could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350202064:405,pipeline,pipelines,405,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350202064,2,"['integrat', 'pipeline']","['integration', 'pipelines']"
Deployability,"@finglis on tenterhooks here, any updates? I've tried it on two different Macs (Intel & Apple Silicon) and it worked on both. What is not positive, and could it be permissions or OS-related?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748617650:34,update,updates,34,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748617650,1,['update'],['updates']
Deployability,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761851656:321,release,release,321,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656,1,['release'],['release']
Deployability,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-577108438:465,install,installed,465,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438,1,['install'],['installed']
Deployability,"@mezwick Hashes aren't currently generated or made available. Making a release remains a fairly laborious and manual process. Although the builds themselves are now generated automatically using GitHub Actions, I have to download and check these run on each platform and then upload again. And write all the release notes, tag the version etc. There can also be some extra renaming required, since `jpackage` (used for the build) has some awkwardness connected to artefact naming and 0.x.x versions that affects some platforms but not others (e.g. I think macOS forbids 0.x.x versions, so this needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,5,"['Release', 'install', 'release']","['Release', 'installed', 'release']"
Deployability,"@mmfalco I've just checked out the [JavaFX 17 release note](https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md) and saw this fix: https://bugs.openjdk.java.net/browse/JDK-8248126. Currently QuPath is using JavaFX 16, although if you'd like to try it with 17 you'd probably only need to change one line [here](https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.common-conventions.gradle#L70), then build from source as described [here](https://qupath.readthedocs.io/en/stable/docs/reference/building.html). QuPath v0.4.x will use Java/JavaFX 17. I'm a little tempted to introduce JavaFX 17 already in v0.3.1, especially if it resolves this problem (and doesn't [break our own versioning rules](https://qupath.readthedocs.io/en/stable/docs/intro/versions.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/833#issuecomment-962152233:46,release,release,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-962152233,2,['release'],"['release', 'release-notes-']"
Deployability,"@oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs). You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images. Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to *know* in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes. Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution. If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732091427:144,install,installed,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732091427,1,['install'],['installed']
Deployability,"@petebankhead : I can certainly understand you need to carefully balance workload. As our organization is somewhat rigorous regarding this topic I have looked into things further and it seems you mercifully use an accessible installer solution and as such I have been able to build it from source in full. This way, we can perform static code review and use an internally built binary, currently removing the need to obtain the hash from you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208463614:225,install,installer,225,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208463614,1,['install'],['installer']
Deployability,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-805880198:90,install,install,90,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198,22,"['install', 'release', 'upgrade']","['install', 'installation', 'installed', 'installer', 'release', 'upgrades']"
Deployability,"@petebankhead thank you for tagging me on these changes. . > Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I agree. > My proposal is to change **Unique ID** to become **Case ID**. You have my upvote for this. Not necessarily better but the alternative I could think of is **Subject ID** but it has a similar vibe to **Patient ID**. > Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it, but it means that IDs saved in QuPath v0.4.0 won't be recognized in older versions. If these changes mean less confusing and clear APIs in the future, then, the sooner we address them, the fewer projects will be affected. . I personally do not have a reason to go back to 0.3.X once I create a project in 0.4.0X - because I believe all the commands that were present in 0.3.0X will be available in 0.4.0X. Please correct me if I am wrong - Are there any methods/workflows that will be dropped in 0.4.0? It would be easy to make a decision if we could identify potential reasons for someone to want to go back to 0.3.X - besides the fact that not everyone is running the most up-to-date version of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568:713,update,update,713,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568,2,['update'],['update']
Deployability,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-919283605:446,Update,Update,446,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605,1,['Update'],['Update']
Deployability,"@petebankhead, many thanks for such great progress and letting me know! I'll definitely take a look on current structure and update the proposal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-913405484:125,update,update,125,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-913405484,1,['update'],['update']
Deployability,@saudet could you please let me know how to do this in CentOS 7? ; gradle is installed in /opt/gradle,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095727131:77,install,installed,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095727131,1,['install'],['installed']
Deployability,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1022,release,release,1022,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['release'],['release']
Deployability,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-617732952:14,update,updates,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952,1,['update'],['updates']
Deployability,"@yli-hallila did you spot any patterns when it happened?. Like, was it a high-resolution pixel classifier, and did the memory use accumulate over time?; Would it happen after 3 images, 30 images, or 300 images...?. I'm hoping that there is some place where I'm just failing to release memory used by OpenCV / JavaCPP, but I thought I'd tracked down where that was the case. The script does two things: clears the cache, and calls the garbage collector. If the thing that helps is clearing the cache, then that suggests to me that it is delaying (rather than solving) the problem - and there is probably still a leak somewhere. If the thing that helps is running the garbage collector then... I guess I'm confused, because I think that should happen before an out-of-memory error occurs anyway. I quite like hunting for leaks (as long as they are in code I can control), but here I'm not sure where exactly I should start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498:277,release,release,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498,2,['release'],['release']
Deployability,@zindy Do you mind if I close this and merge https://github.com/qupath/qupath/pull/676 in preparation for v0.3?; That would give time for anyone trying the dev branch to test it a bit before release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-797278645:191,release,release,191,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-797278645,1,['release'],['release']
Deployability,According to this - https://github.com/qupath/qupath/issues/270 - the issue may already be resolved in the latest milestone release. See https://qupath.github.io/QuPath-v0.2.0. Also potential duplicate of the (somewhat vague...) https://github.com/qupath/qupath/issues/273,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471602054:124,release,release,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471602054,1,['release'],['release']
Deployability,"Agree, think it's better to show things with missing class/measurement, imo showing them last is better but that could be a toggle",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2317256340:124,toggle,toggle,124,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2317256340,1,['toggle'],['toggle']
Deployability,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/640#issuecomment-727052962:756,release,release,756,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962,3,"['install', 'release', 'update']","['install-a-java-development-kit-jdk', 'release', 'updated']"
Deployability,"Ah ok, the prompt _should_ appear but it should be pre-populated with the correct URIs. However agreeing to the changes will result in the absolute paths being overwritten. Consequently, one might wish to copy the '.qpproj' file first if it's desirable to have a project file with both sets of absolute URIs - updating one and leaving the other untouched. This does however become more complicated if images are later added or removed for one project. This is the intended behavior, although would be good to discuss if there is a better choice. My concern with depending upon relative paths _only_ is that if the project moves - but images remain in the same place - then the project will also break. It becomes essential to move both together. Also, if the absolute paths are _not_ updated whenever relative paths 'work' then this means that QuPath needs to silently make adjustments to URIs - and _potentially_ could end up selecting a wrong image that happens to have the same name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346#issuecomment-518200990:784,update,updated,784,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518200990,1,['update'],['updated']
Deployability,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925047351:145,install,installed,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351,2,"['install', 'update']","['installed', 'updated']"
Deployability,"Ah ok, you might find shifting any native libraries (in the same way as the cfg file) can also do the job. The underlying problem is that the Java library path needs to be set to find `openslide-jni`. Usually this 'just works' because the necessary library is found within the 'current' directory at the time QuPath is launched (through whatever magic jpackage has applied to set the current directory). You can also specify the library path in the `.cfg` file... but that may be more complicated. You might need to install OpenSlide through a package manager too, thanks to a separate Linux-related problem regarding how sub-dependencies are found.... https://github.com/qupath/qupath/issues/629. Not sure how much sense that makes, and I haven't looked into what has changed in Linux - but the summary is that moving things around may well be the solution to get things going with Java 15.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725534079:516,install,install,516,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725534079,1,['install'],['install']
Deployability,"Ah you're right, sorry. I was mixing it up with the appearance whenever the buttons are inactive (because the extension can't be updated). When that is the case, the selection color impacts the button color... but it doesn't if the buttons are active. So the displays are consistent after all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2258172093:129,update,updated,129,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2258172093,1,['update'],['updated']
Deployability,"Ah! Bleaching and rescanning changes things; what I'm currently working on *might* be exactly what you need. This is some related discussion on [Google Groups](https://groups.google.com/d/msg/qupath-users/XNdaWK_9Ex4/VKHAbBGDBAAJ). If you'd be interested in collaborating on this, and perhaps sharing some images to help me develop the tool to do what you need, please send me a message. I'm quite find-able on Twitter, ResearchGate or LinkedIn... or if you sign up to the QuPath Google Group I'll get a notification and can write to you directly. Otherwise I'll post a reply back here once I have something worth testing, but I haven't got an expected timeframe yet. . The CellProfiler bit is also interesting. If we can achieve the alignment then maybe this step wouldn't be necessary and everything could be done in QuPath. But if you do need more CellProfiler-specific functionality then it would be good to discuss if there's a way to help streamline that bit of the process too - since better integration with CellProfiler is something that has already come up (e.g. #123).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377167248:999,integrat,integration,999,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377167248,1,['integrat'],['integration']
Deployability,"Ah, I didn't realize there are two different kinds of java distributions! **It does work with Hotspot**, thank you!. For the record, on ubuntu, and similar distros the following should be enough to install java. Not having used java on linux before the adoptopenjdk site was a bit confusing to me. ```; wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -; sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/; # sudo apt remove adoptopenjdk-*; sudo apt install adoptopenjdk-14-hotspot; export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/ # add to ~/.bashrc; ```. Before:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); Eclipse OpenJ9 VM AdoptOpenJDK (build openj9-0.20.0, JRE 14 Linux amd64-64-Bit 20200416_45 (JIT enabled, AOT enabled); OpenJ9 - 05fa2d361; OMR - d4365f371; JCL - 5757187cae based on jdk-14.0.1+7); ```. After:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); OpenJDK 64-Bit Server VM AdoptOpenJDK (build 14.0.1+7, mixed mode, sharing); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-648114847:198,install,install,198,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648114847,2,['install'],['install']
Deployability,"Ah, no, you are absolutely correct. I normally would handle this by exporting the detections file and processing it in R. But if you want to visualize the ratio (with view measurements etc) you will need to update the cell measurements once you have determined the nuclear/cytoplasmic localization. Roughly speaking, you need to either cycle through all cells, and sum/average their stats for that cell, or cycle through all subcellular detections, and update the parent cell as each one is processed. I only know how to do the latter. You already have the loop for all cells from the previous example, and a loop for all clusters from the first. I will start with the loop for all clusters since I have some idea how that would work. Note that this does not summarize stain OD or actual spot area, just estimated spot count. It also only works if the second stain is labeled as DAB! After that, you should have the two values you need to get your ratio. ```; import qupath.lib.scripting.QP; def NuclearSum = ""Nuclear Spot Sum""; def CytoSum = ""Cytoplasmic Spot Sum"". //Probably not necessary when using putMeasurement, but I liked to have this loop for completeness, plus it will reset all values to zero when rerunning the script.; for (def cell : QP.getDetectionObjects()) {; def ml = cell.getMeasurementList(); ml.putMeasurement(NuclearSum, 0); ml.putMeasurement(CytoSum, 0); ml.closeList(); }; def clusters = getObjects({p -> p.class == qupath.imagej.detect.cells.SubcellularDetection.SubcellularObject.class}). // Loop through clusters; for (c in clusters) {; // Each subcellular detection can have one parent; def cell = c.getParent(). def ml = cell.getMeasurementList(); ; //Important note: This value (Num Spots) will be heavily influenced by the Estimated Spot Size when running the; //subcellular detection command. you may instead want to use the Area measurement which you can find; //by clicking on a subcellular detection; double thisCluster = c.getMeasurementList().getMeasurementValue(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/119#issuecomment-347208202:207,update,update,207,https://qupath.github.io,https://github.com/qupath/qupath/issues/119#issuecomment-347208202,2,['update'],['update']
Deployability,"Ah, thank you for investigating this!. The hierarchy event system is horrible, and traces back to the early versions of QuPath where the hierarchy was much more important, undo/redo didn't exist, and we didn't have a good spatial cache from JTS. Then, it was a continual fight to avoid very expensive processing every time an object changed - because `resolveHierarchy()` was effectively being called automatically, and lots of things needed to update. I thinks this shows event system is *very* overdue a major revision. > I'm sure there is reason behind it, but here a hierarchy changed event is emitted, instead of an object added event. From your post and my failing memory, I suspect that the idea was that the 'object added' event would just handle a single object, but if multiple objects were added then we fired a more general structure change event. I guess this was because, when adding a single object, we knew that it could only affect ancestor and descendent objects in QuPath v0.1.2 and earlier. But if we changed multiple objects, then all the *potential* auto-resolved parent/child relationships between objects would be too complex to decipher. Instead, it was easier and safer to fire an event that basically said: _'something big changed, don't try to figure out exactly what, but just update to handle the hierarchy as it now is'_. I'm reluctant to switch to `addObjects` firing an event that doesn't include all the objects that were added, in case there is any legacy code that might be sensitive to the change. Which leads to... > So, [this condition](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L474) is true, the event is ignored, and the UndoRedoManager doesn't update its state. It looks like I failed to recognize that ; ```java; event.getChangedObjects().stream().allMatch(p -> p instanceof ParallelTileObject); ```; would return true when `getChangedObjects().isEmpty()`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306:445,update,update,445,https://qupath.github.io,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306,2,['update'],['update']
Deployability,"Ah, that's a bit of a shame... but thanks for testing - there might be some other [platform preferences](https://openjfx.io/javadoc/23/javafx.graphics/javafx/application/Platform.Preferences.html) that help, although I'd be tempted to just leave is a bug that may magically get fixed by dependency updates. We still have the option to choose light or dark explicitly, so as long as that still works no one should be stuck.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625:298,update,updates,298,https://qupath.github.io,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625,1,['update'],['updates']
Deployability,"Ah, yes I was trying to update the javadocs site/action to host multiple versions (a la https://qupath.github.io/qupath-fxtras/stable/qupath.fx/module-summary.html) but without mergedJavadocs, I couldn't get my head around gradle well enough to recreate it from the component pieces",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1604#issuecomment-2310704919:24,update,update,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/1604#issuecomment-2310704919,1,['update'],['update']
Deployability,"Alas, in the end I had to revert these changes as they ended up causing much bigger problems, which only emerged when preparing the next release candidate. More details at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750315940:137,release,release,137,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750315940,1,['release'],['release']
Deployability,"Also, I have an invalid extension installed (the [OMERO one currently isn't compatible](https://github.com/qupath/qupath-extension-omero)). If that could be captured here to easily remove that it would be great; currently, it isn't displayed at all. That might require more refactoring, since it is identified as invalid at the point when there is an attempt to install it... and so isn't added to the extensions list. Finally, could / should there be a way to list additional jars that are in the extensions directory but not actual extensions? Even just a count would be informative. I'm thinking of the scenario when a user deletes an extension, but doesn't have any knowledge of the fact that its dependencies are lingering. I know we don't have proper management of the dependencies, but some indication it's an issue would be good.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250:34,install,installed,34,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250,2,['install'],"['install', 'installed']"
Deployability,"Also, since these files are being read with the Bio-Formats extension, I looked that up quickly and at:; https://docs.openmicroscopy.org/bio-formats/5.7.2/formats/nikon-nis-elements-nd2.html; You can read that there are two versions of .nd2 files. It may be that previously you were saving as the older version (jpeg2000 compressed) versus the new version which may be ZIP compressed. I am unsure if the updates you mentioned might have transitioned you between versions, but there may be some file settings you could change regarding how it compresses your data.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/163#issuecomment-379566248:404,update,updates,404,https://qupath.github.io,https://github.com/qupath/qupath/issues/163#issuecomment-379566248,1,['update'],['updates']
Deployability,"An extra detail: this is less important if a project is used, since then the image path is stored in two places:; 1. The `.qpdata` file; 2. The `.qpproj` file. The path stored in the `.qpproj` file is used first. Fortunately, this is also the easiest to change: since the `.qpproj` file is text ([JSON](https://en.wikipedia.org/wiki/JSON)), this file can simply be opened in a text editor, and the paths replaced. In the event that a `.qpdata` file has already been created, and now won't open, there are two workarounds to handle this:; 1. Put the original image back in the location where it previously was, or; 2. Create a new project, and add the image to the project in its new location. Whenever any data relating to this image is saved within the project, QuPath will create a new `.qpdata` file inside the `data` directory of the project. If you replace this `.qpdata` file with the old one (after renaming it), then QuPath will treat it as the proper data from then on. Several morals of this story:; - If possible, don't move images to different directories after starting to analyse them with QuPath; - If you do (or might) need to move images, it's better to use projects - since they can be updated more easily later; - QuPath ought to handle moved images in a better way than it currently does...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/9#issuecomment-256318716:1204,update,updated,1204,https://qupath.github.io,https://github.com/qupath/qupath/issues/9#issuecomment-256318716,2,['update'],['updated']
Deployability,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-497471530:3,update,update,3,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530,4,"['install', 'update', 'upgrade']","['installing', 'update', 'upgraded', 'upgrades']"
Deployability,"And is the same server being used for both? I am not sure why it would not be, but I am not sure how much the installations may have been modified.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/891#issuecomment-1016538196:110,install,installations,110,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1016538196,1,['install'],['installations']
Deployability,Another workaround for this bug is to try out the [pre-release for v0.1.3](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html)...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/74#issuecomment-399181470:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/74#issuecomment-399181470,2,"['release', 'update']","['release', 'updates']"
Deployability,"Are you able to share an example file that doesn't work? It sounds like the problem is in either QuPath or Bio-Formats, and much has changed in both. Either way, since the log isn't recording anything very obviously wrong I'd need to test it with a failing file to identify where it is going wrong. If it's not possible to share a file, then I'd be trying to fix it through guesswork... to have a chance, I'd need to know more about how it works in v0.1.2, e.g.; * under the 'Image' tab, what is the 'Server type' when the image is correctly opened?; * if the type is 'Bio-Formats', which version of Bio-Formats is installed? v0.2.0 is using Bio-Formats v6.0.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472005071:615,install,installed,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472005071,1,['install'],['installed']
Deployability,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-606731627:149,release,release,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627,3,"['release', 'update']","['release', 'released', 'update']"
Deployability,"As a workaround, I launch QuPath with installed JAVA on my PC(e.g. OpenJDK or Amazon Corretto). Do you have a plan to fix this issue in QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612963510:38,install,installed,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612963510,1,['install'],['installed']
Deployability,"As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407442971:215,update,update,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407442971,1,['update'],['update']
Deployability,"As you wish. For me it is not urgent at all, the next milestone will not be the final release version and I need to work on many other things.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479846872:86,release,release,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479846872,1,['release'],['release']
Deployability,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/287#issuecomment-473682408:484,install,install,484,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408,1,['install'],['install']
Deployability,At long last this issue should be resolved without need for an extra script if you use the version of QuPath described in [this blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-374199736:195,update,updates,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-374199736,1,['update'],['updates']
Deployability,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:410,release,releases,410,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811,1,['release'],['releases']
Deployability,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:352,install,install,352,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726,3,['install'],"['install', 'installation']"
Deployability,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497262635:139,install,install,139,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635,1,['install'],['install']
Deployability,"Because I'm not great with git :) Could probably have cherry-picked it, but `main` has a *lot* of other changes, since the intention was that the next release would be v0.5.0 - and these should not be part of any v0.4.4 release. My aim this morning was to create tests, working off the original v0.4.3 code to ensure that the tests were failing initially. This revealed another issue that wasn't covered through your fix (namely that deserializing a `PathClass` only works properly via a `PathObject`). So I approached it a different way by first introducing a new `PathClass.readResolve()` method, which solved that problem and also most of the original issue. I then found it was still possible to work around the use of `readResolve()` alone when deserializing legacy JSON - so I followed your approach to update the `getSingleton` method as you'd suggested as well to try to cover all scenarios. The end result is that there are now 4 different deserialization tests, but it required the combination of approaches to pass all of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1307#issuecomment-1699143030:151,release,release,151,https://qupath.github.io,https://github.com/qupath/qupath/pull/1307#issuecomment-1699143030,3,"['release', 'update']","['release', 'update']"
Deployability,"Before doing that, could you check if there's anything is in https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html that could help?. I *think* the issue may be because there's no test for the event type in your current code - and so it could be fired on a mouse move event as well (with the middle button down). So I think you need to check for a pressed, released or click event (I forget which... this is a place were cross-platform stuff can be annoying). I've never used [`isStillSincePressed()`](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html#isStillSincePress()) because I don't discovered it recently, but perhaps it can also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857:383,release,released,383,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857,1,['release'],['released']
Deployability,"Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java; On line 438 you closed the imageserver for the current image, but not for the other entries?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635240856:25,release,release,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240856,1,['release'],['release']
Deployability,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/325#issuecomment-514589547:67,release,releases,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547,1,['release'],['releases']
Deployability,Channel names are included now in the v0.2.0 milestone releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/186#issuecomment-518313426:55,release,releases,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-518313426,1,['release'],['releases']
Deployability,"Check out the updates described [in this blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) - it explains how projects can be arranged and descriptions added. Also, in the version described there, you can press *Enter* and then add some description text for annotations. (*Viewing* the description remains rather sub-optimal... either press *Enter* again, or see it as a tooltip when hovering over the annotation under the *Annotations* tab on the left.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144#issuecomment-374198719:14,update,updates,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/144#issuecomment-374198719,2,['update'],['updates']
Deployability,"Cheers, hope you don't mind! Thanks for flagging these, added the badges with some other changes needed to update the ReadMe in a single commit.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/656#issuecomment-791557989:107,update,update,107,https://qupath.github.io,https://github.com/qupath/qupath/pull/656#issuecomment-791557989,1,['update'],['update']
Deployability,Closed due to lack of activity and at least some of the issue has been resolved :); Next milestone release should support setting pixel sizes for images in a project from within QuPath by double-clicking them under the 'Image' tab.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-494363347:99,release,release,99,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-494363347,1,['release'],['release']
Deployability,Closed due to the lack of any update.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/242#issuecomment-494372482:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/242#issuecomment-494372482,1,['update'],['update']
Deployability,"Closing this because it has been quiet, and because the original issue should be fixed in the latest release. Positioning scenes in 2D remains a possible future improvement, but is a little tricky/risky because of uncertainty in how exactly to interpret position information consistently across formats. See https://forum.image.sc/t/improve-bio-formats-image-position-metadata/30770",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-632241436:101,release,release,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-632241436,1,['release'],['release']
Deployability,Closing this because it has gone quiet and the issue could not be reproduced... hopefully the issue has been fixed along the path to v0.2.0 as a stable release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-632235419:152,release,release,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-632235419,1,['release'],['release']
Deployability,"Closing this because of lack of activity, and it is addressed in the latest milestone release (especially through the pixel classifier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-471152043:86,release,release,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-471152043,1,['release'],['release']
Deployability,Closing this because:. * I see no way to fix it completely; * there's now a preference to toggle whether the system menubar is used by QuPath... which provides a way in which to deal with the issue,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/6#issuecomment-632217898:90,toggle,toggle,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/6#issuecomment-632217898,1,['toggle'],['toggle']
Deployability,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495#issuecomment-641183465:553,update,updated,553,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465,2,['update'],['updated']
Deployability,"Closing this issue as it has gone quiet - feel free to reopen if there is more information. The recent [update to the Bio-Formats extension](https://groups.google.com/d/msg/qupath-users/78PpZuu2J1s/su6ZjY0mAgAJ) addresses numerous memory & performance issues, and should help with CZI images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-359880979:104,update,update,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-359880979,1,['update'],['update']
Deployability,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/327#issuecomment-549053462:292,release,releases,292,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462,2,['release'],['releases']
Deployability,"Concerning the intensity, in fact we are trying to calculate an area above a threshold for different condition. De : Pete <notifications@github.com>; Envoyé : Monday, July 23, 2018 2:04 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you au",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407035378:813,install,installed,813,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378,1,['install'],['installed']
Deployability,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607483340:213,release,release,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340,2,['release'],['release']
Deployability,"Currently, you can do that via the workflow tab - assuming you've run it once before on that image. Or you can leave the window open when switching images - assuming they are the same type... bad things may happen if not, e.g. fluorescence to brightfield. Although that led me to see that bad things happen with this PR when the image type changes: QuPath isn't able to adjust and update the available options. So if I run cell detection for brightfield, then I can't use it for fluorescence within that QuPath session - because it will be stuck with the same available channels the first time it was run.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318:381,update,update,381,https://qupath.github.io,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318,1,['update'],['update']
Deployability,"Dear @Svidro . You gave me the best Christmas gift !!! Amazing help indeed! I thank you so much to help me for that. _I give you the following update and also put forward a few queries if you don't mind:_. **1.** **I was not sure how you found the following values for the Stain 1 and 2.** I mean, these:. ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""**0.18752 0.65887 0.72851** "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""**0.72191 0.55664 0.41109** "". Did you use the technique (shown in this video https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s) to assign colour values for each ROI for each stain?; ![image](https://user-images.githubusercontent.com/44507241/50432704-490b3300-0899-11e9-89b5-87f5653ffc0f.png). **2.** **You mentioned in your post:** ""Certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough."". **>My comment:** Essentially, they are the valid population of cells, so I would not like to exclude them. Would it be possible to classify them as a third type? . **>Also,** can I somehow make the Qupath learn that they belong to Stain 2/ DAB, by setting the ""Stain vector for their ROI""? I mean:; ![image](https://user-images.githubusercontent.com/44507241/50433088-aacc9c80-089b-11e9-9bb7-f975b4fbab7e.png). I hope you'll kindly take your time to help me with this again. I'm sorry that I get back to you lately each time - this is because I carefully go through your comments, try to replicate it, and gather questions for you. I hope you'll not misunderstand it. But I am grateful to you how you are helping!. Thanks again. sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-449906512:143,update,update,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449906512,2,['update'],['update']
Deployability,"Dear Arnulf,. Certainly I'm agreed with you on the benefits of fluorescence for image analysis. I intended that the cell detection should work with fluorescence, but since I have primarily been working with brightfield until now, this was not taken very far. Success with fluorescence cell detection previously relied upon several undocumented tricks in terms of choosing parameters, and the good fortune of having your nuclear counterstain in the first channel. This morning I tried to address this, and hopefully you find it functions better in [v0.0.5](https://github.com/qupath/qupath/releases/tag/v0.0.5), which I've just uploaded. An example image from a fluorescence microscope is shown below. ![qupath_fluorescence_cells](https://cloud.githubusercontent.com/assets/4690904/20115597/cf2682ae-a5f0-11e6-88c9-82298e3cd1ea.jpg). A few important points (which will eventually be documented on the Wiki):; - QuPath tries to identify brightfield and fluorescence images when they are opened (although you can ask it not to under _Auto-estimate image type on opening_ option in the _Preferences_); if it gets it wrong, you will need to double-click the `Image type` in the _Image_ tab to set this manually to fluorescence.; - The `Image type` needs to be set before running the _Cell detection_ command, to make sure that the right options are displayed; - The _Threshold_ option under _Intensity parameters_ will be important, and will likely need to be adjusted... the default is simply selected for all images of that type and bit-depth, and not based on the information present in the image; - If you are working with images at a relatively low resolution (such as in the screenshot I showed), it can be helpful to decrease the _Detection line thickness_ parameter in the _Preferences_ so that the cell or nucleus outlines do not obscure your view too much.; - The _Brightness/Contrast_ options currently misbehave somewhat with fluorescence. If you want to show/hide specific channels, it's actua",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259250203:589,release,releases,589,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259250203,2,['release'],['releases']
Deployability,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:581,install,installExtension,581,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['install'],['installExtension']
Deployability,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:86,install,installation,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,2,['install'],"['installation', 'installed']"
Deployability,"Dear Pete,. Thanks a lot for the fast response!; You are right it seems related to that issue. As the problem only occurs after labeling for quite a while ; (and is resolved by a new start of QuPath); i thought QuPath might hand over to Java a variable on when to ""forget"" old points; or ""how many to store"". . If not, I just stick to the two workarounds described above.; I can not write Java, but I guess the problem might be solved in future Java releases. Thanks again & Kind regards. Tobias",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549459616:450,release,releases,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549459616,1,['release'],['releases']
Deployability,"Definitely should axe jet, maybe add turbo in a future release",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1471#issuecomment-1966630170:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/pull/1471#issuecomment-1966630170,1,['release'],['release']
Deployability,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527339421:715,install,installed,715,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421,3,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,"Did you try right-click and Open?. Here's the info from the docs: https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos. The right-click + open trick might be required both for the installer and for the app itself on first launch (I'm not sure, the behavior on a Mac can vary a bit).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199#issuecomment-1363847204:114,install,installation,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199#issuecomment-1363847204,2,['install'],"['installation', 'installer']"
Deployability,"Did you try right-click, as described at https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#installation ?. Edit: I've occasionally found I need to try to open the app by right-click twice (the first time macOS stops me, the second it relents).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352080849:89,install,installation,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352080849,2,['install'],['installation']
Deployability,"Do you have any more information on what you are doing (in QuPath),; operating system and version, etc?. Does the unresponsiveness occur before you try to run anything? Are other; programs running in the background?. On Thu, Feb 7, 2019, 9:31 AM Bjarne Thorsted <notifications@github.com>; wrote:. > After working some time (can be anything from a few minutes to half an; > hour) the menus stop responding. The only fix for me is to save and restart; > the software. I've recently updated to the latest dev build and the issue; > persists here.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/267>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-QSuGR2aghxKXt5rME9eLnnFPi-Wks5vLGL0gaJpZM4anysq>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461524342:481,update,updated,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461524342,1,['update'],['updated']
Deployability,"Don't really know the distinction between `.pkg` and `.app`, it'd be the output of `./gradlew jpackage -P git-commit=true -P package=installer mergedJavadoc`. But if possible within gradle that'd be much easier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727754758:133,install,installer,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727754758,1,['install'],['installer']
Deployability,"Due to the problem with straight line ROIs shifting when reloading previously-saved image data (Issue #71), I've already upgraded to v0.1.3 ( #71 fixed). Unfortunately the 90 degree point bug remains in effect.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409484563:121,upgrade,upgraded,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409484563,1,['upgrade'],['upgraded']
Deployability,Easily done I guess! . I for one really appreciate the updated docs with the new example. Thats much more than I was expecting and I am looking forward to testing it out. Thanks again!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-264866312:55,update,updated,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-264866312,1,['update'],['updated']
Deployability,"Eventually I managed to create a new Linux download for [v0.0.6](https://github.com/qupath/qupath/releases/tag/v0.0.6) using OpenJDK and OpenJFX. Still, two troubles remain: one minor, one major. The minor trouble is that (at least on Ubuntu 16.04) the build process is not entirely seamless, and `jfxrt.jar` needs to be manually copied into the distribution at the end (perhaps because it's not included in OpenJDK, but rather only a symbolic link is made with installing `openjfx` with Synaptic?). The major trouble is that OpenSlide continues not to be distributed in a ready-to-run fashion (as mentioned [here](https://github.com/qupath/qupath/wiki/Installing-QuPath#linux)). Indeed, I'm not sure if it will work on anyone's machine other than the one I was using. It is likely clear that my Linux use and experience is limited. The suggestions of someone who is more familiar with this would be very welcome. I think one of the following is required:; - Inclusion of OpenSlide and all its dependencies, precompiled (in the same way as QuPath provides for Windows and macOS), or; - A method of ensuring the Java library path in the packaged version of QuPath includes all the places that would be required to find a local installation of OpenSlide. In the second case, the user would still be asked to download and install it... but if this step goes smoothly, it can be expected to work. I plan to investigate this more in the future, but it may take some time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-261056258:98,release,releases,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-261056258,9,"['Install', 'install', 'release']","['Installing-QuPath', 'install', 'installation', 'installing', 'releases']"
Deployability,"Everyone's forum :). You might want to check out [this new blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) describing how to try out lots of new QuPath improvements early. Especially check out the bit about *Positive pixel count* (about half-way down the page), which describes now & improved outputs that the command can give.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-374165232:126,update,updates,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-374165232,1,['update'],['updates']
Deployability,"Excellent, thanks @ajay1685! I hadn't been able to test tensorflow on Windows yet, that's great news. Some of the more recent commits have hopefully resolved lingering issues with OpenSlide/Bio-Formats, and restored the version number to the application name on Windows. I *think* this is a good thing for people using the .msi installer, since it means they can easily have multiple versions installed. But I don't use Windows enough to know for sure if that's a desirable feature for most people.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-805568183:328,install,installer,328,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805568183,2,['install'],"['installed', 'installer']"
Deployability,"Fair enough - I've also gone rogue in including the version number in the name, e.g. `QuPath-0.5.5.app`. It's not the Mac way to do things, but I figure there is a strong possibility people will want to have multiple versions installed (or at least I do... and suspect everyone should).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732345950:226,install,installed,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732345950,1,['install'],['installed']
Deployability,"Fantastic, that's a relief, thanks!; I saw those errors tile width/height too, only with MRXS files... but yes, they don't seem to cause trouble. For reference, this is what happened:; I recompiled OpenSlide for Mac back for v0.0.7, to address issues related to opening MRXS files with certain types of compression (possibly BMP or PNG). However, I appear to have accidentally included the previous versions of the library + dependencies in the Mac download, possibly because the machine on which I finally compiled the Mac version of QuPath for distribution had cached the original libraries, which had the same version number (since they traced back to the same version of OpenSlide). So v0.1.1 was the first download to actually contain the Mac OpenSlide updates intended for v0.0.7. And it turned out that those updates were missing a couple of required files, but which were available on my development machines... lulling me into a false sense of security that all was well. Anyhow, I've now repackaged OpenSlide + dependencies, added in the license notices for the additional required files, and bumped up the version number to 3.1.4_2 to make it clear which OpenSlide should be included in all future versions of QuPath compiled for Mac - regardless of machine. Outcome:; * OpenSlide included with the Mac distribution of v0.1.1 should be able to handle slightly more kinds of image than previous versions... but in the overwhelming majority of cases, it will look the same; * None of this matters for QuPath running on anything other than Mac; * I was never going to figure out there was a problem on my own, since it was working for me... so thanks for letting me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265679401:758,update,updates,758,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265679401,4,['update'],['updates']
Deployability,Finally we got to the bottom of the problem. Thanks you for the patience and for merging it!. When can we expect the next release?; I'm interested in updating all the old (v0.3) installations of QuPath in my laboratory so that we can all use some scripts i wrote taking advantage of a couple of features of v0.4+ ^^,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1691841233:122,release,release,122,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1691841233,2,"['install', 'release']","['installations', 'release']"
Deployability,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/288#issuecomment-514592598:54,release,releases,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/288#issuecomment-514592598,1,['release'],['releases']
Deployability,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; (Please reopen if this has caused any other unwelcome behavior...),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/285#issuecomment-514593091:54,release,releases,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/285#issuecomment-514593091,1,['release'],['releases']
Deployability,"For 1. you didn't need to install OpenSlide yourself - just excluding/disabling Bio-Formats is enough, and QuPath should default to using OpenSlide. This has support for at least [some .scn](https://openslide.org/formats/leica/) files, but not necessarily all of them and I guess not yours. > Note: This is true for Windows, Mac and some variations of Linux. The default version of OpenSlide might not work currently on all kinds of Linux. For 2. I fully understand you need the full-resolution image; my point is that it may not be the full-resolution image that you have opened. If there are multiple images in the file and you drag it onto QuPath, then one of these multiple images will be displayed - but it might not be the full-resolution image you want. I describe in my last answer how you can access the other images in the file from within QuPath (either under the 'Image' tab or through a project). Nevertheless, if you need to rely on Bio-Formats then the 'pink' issue has to be resolved, and the problem appears to be in Bio-Formats and not QuPath. If it hasn't been fixed yet, then if you are able to export your image in another format (e.g. .svs) then this may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435651179:26,install,install,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435651179,1,['install'],['install']
Deployability,"For now I'd suggest trying to link up with the source code directly through IntelliJ: https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ. I was finally convinced of the value of Javadocs recently, and also discovered that those for QuPath v0.1.2 didn't compile nicely due to illegal characters and various other issues... I think I've resolved most of these problems and plan to have them working and online somewhere for the next release, once the necessary refactoring for Java 11 is completed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/230#issuecomment-431095054:451,release,release,451,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431095054,1,['release'],['release']
Deployability,"For the macos-latest builds on github actions, it might suffice to add a step (assuming we set the version in an env variable somehow):. ```yaml; - name: Set version number; if: matrix.platform == 'macos-latest'; shell: bash; run: defaults write /Applications/QuPath.app/Contents/Info.plist CFBundleShortVersionString {{env.version}}; ```. and (remembering to) manually run the same command locally for the mac m1 builds, until GitHub finally releases m1 runners into the wild.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727709163:443,release,releases,443,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727709163,1,['release'],['releases']
Deployability,"For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage. Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; But I wanted to answer here quickly in empathy for the impending submission deadline...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519550791:30,install,installing,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519550791,1,['install'],['installing']
Deployability,"From [v0.1.2](https://github.com/qupath/qupath/releases/tag/v0.1.2), *Measure &rarr; Show Annotation Measurements* should be recorded in the command history - and able to generate a script line, including filtering by specified columns if required. The syntax looks like this:; ```java; saveAnnotationMeasurements('/path/to/exported/file.txt', 'Area', 'Length'); ```. There is also now a small trick that can be used to run short scripts that affect the GUI (which must be run in the [JavaFX Platform thread](https://docs.oracle.com/javase/8/javafx/api/javafx/application/Platform.html#runLater-java.lang.Runnable-)), namely to include ```guiscript=true``` at the top of the script. This isn't a good idea routinely (since it will result in the entire script being run on that thread), but it avoids needing to use ```Platform.runLater(...)``` every time this is required. An example is given [here](https://gist.github.com/petebankhead/6f73a01a67935dae2f7fa75fabe0d6ee).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/25#issuecomment-269880610:47,release,releases,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/25#issuecomment-269880610,1,['release'],['releases']
Deployability,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614145319:1054,release,release,1054,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319,1,['release'],['release']
Deployability,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567689754:220,update,update,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754,2,['update'],['update']
Deployability,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/648#issuecomment-739896593:305,release,release,305,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593,1,['release'],['release']
Deployability,"Great! Yes, I think we shouldn't increase the download by too much. My suggestion is to use a command line flag e.g. `-Pdocs=all` to activate this. Possible options:. * `all` - all javadocs, devs building locally may (rarely) want this; * `none` - don't include any javadocs; * `qupath` - jars that include `qupath` as the first element in the name only (should include extensions); * `default` - curated list of jars; I'd say `qupath` + JTS + ImageJ as a starting point. I think the default list should only add ~10MB or so. This also allows the gradle to be simplified and `mergedJavadocs` can be removed as a task (in preparation for a nicer javadoc viewer). **Note:** Currently, I can't build this PR fully with `./gradlew jpackage` because I get either. ```; The specified installation directory '/path/to/qupath/qupath-app/build/install/QuPath-0.6.0-SNAPSHOT' is neither empty nor does it contain an installation for 'QuPath-0.6.0-SNAPSHOT'.; ```; or (if I delete that directory); ```; Entry lib/qupath-gui-fx-0.6.0-SNAPSHOT.jar is a duplicate but no duplicate handling strategy has been set. Please refer to https://docs.gradle.org/8.7/dsl/org.gradle.api.tasks.Copy.html#org.gradle.api.tasks.Copy:duplicatesStrategy for details.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369:778,install,installation,778,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369,6,['install'],"['install', 'installation']"
Deployability,"Great, shall I push out a proper release of the blosc jar, then?. > Will take a bit of thought to figure out how to do it. Maybe we need an 'Open image directory' option? But then people might assume that it opens all the images in a directory (which, I suppose, it something it could do...). Both useful, but should be distinguished semantically in some way",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1971366708:33,release,release,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1971366708,1,['release'],['release']
Deployability,"Great, thanks - no need to update here, I'll add that into a new PR I'm making to use the latest changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731070755:27,update,update,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731070755,1,['update'],['update']
Deployability,"Great, thanks! I'll merge it for inclusion in the next point release then, I don't think the old behavior can count as anything other than a bug. If you spot any other similar problems please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/846#issuecomment-974648914:61,release,release,61,https://qupath.github.io,https://github.com/qupath/qupath/pull/846#issuecomment-974648914,1,['release'],['release']
Deployability,"HI,. Thanks for you help!. File format: .tif . This is all the info of the image. I didn’t try with another version. Will do now. . Info under show log:. INFO: Initializing type adapters; INFO: Bio-Formats version 6.7.0; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.7.0) (18 ms); INFO: Loaded extension ImageJ extension (69 ms); INFO: Loaded extension Processing extension (30 ms); INFO: Loaded extension Rich script editor extension (81 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Update check for https://github.com/qupath/qupath; INFO: Starting QuPath with parameters: []; INFO: Setting max Bio-Formats readers to 4; WARN: Temp memoization directory created at /var/folders/_v/1nq60v556l5cbwcdv47wq76w0000gn/T/qupath-memo-4532483650866269942; WARN: If you want to avoid this warning, either specify a memoization directory in the preferences or turn off memoization by setting the time to < 0; INFO: Image data set to ImageData: Not set, 16.tif - Series 0. Again, thank you very much for your incredible help!. Manuel. > El 30 may. 2022, a las 13:52, Pete ***@***.***> escribió:; > ; > ; > Hi, some questions:; > ; > What is the file format?; > Under the 'Image' tab, what is shown at the entry 'Server type'?; > Have you been able to view the whole slide image with any other version of QuPath (e.g. on Windows)?; > Is there any relevant information under View → Show log?; > If you have an mrxs image, this may be relevant: https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917 <https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917>; > If you have an mrxs or vsi image, you might be missing the folder the should exist alongside the main image file (the folder contains the high-resolution data).; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/973#issuecomment-1141062643>, or unsubscribe <https://gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758:545,Update,Update,545,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758,1,['Update'],['Update']
Deployability,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630295536:56,release,release,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536,1,['release'],['release']
Deployability,Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431919:72,update,updated,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431919,1,['update'],['updated']
Deployability,"Have you tried the troubleshooting instructions here?; https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos. Right-click + open has always worked for me, across multiple Mac computers - but Apple do sometimes change things. Recently, I find I need to right-click + open for the installer, and then also right-click + open for the app itself the *first* time I use it (but a simple double-click works after that).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068:103,install,installation,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068,4,['install'],"['installation', 'installer']"
Deployability,"Hello @petebankhead, I apologize for being out of network for a while. You asked me two questions above. Please let me answer them:. 1. Did you also try it without Bio-Formats, e.g. before installing it or by turning it off for .scn (as was reported to workaround the problem at #141 (comment)? ; Answer: Sure, I did that as before I wrote my first comment, but it says ""sorry I can't open *.scn"". That perhaps says that OpenSlide is not being used by default on my system. . In order to let OpenSlide help in some ways externally, I went back to Openslide.org, specifically to https://files.openslides.org/releases/1.3/INSTALL-1.3.txt , followed the instruction to install openslide on Windows 32bits. But could not have success in installing finally (couldn't run on cmd). I even didn't know whether or how I could link this to QuPath. Anyway, just letting you know my attempt. 2. is it possible that you're actually looking at an overview image/thumbnail rather than the full resolution image? ; Answer: I am afraid, it's not possible as I'll have to quantify the signals in the fully resolved scanned brightfield image (X20). That is the main goal of using QuPath for my project. I already had success in segregating my signals based on their intensity in the extracted region of the entire image, but I am stuck in loading the whole image on QuPath. If I can solve this, I am all set. Looks like this is challenging now!! I have in my mind to convert these .scn files to tiff if it is possible. I thank you for your care and suggestions. Please let me know if you have something in mind. I'll appreciate your help. Sorry again for the belated comment. Many thanks, Sincerely, Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435641891:189,install,installing,189,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435641891,5,"['INSTALL', 'install', 'release']","['INSTALL-', 'install', 'installing', 'releases']"
Deployability,"Hello!. I wanted to ask if there are any updates on this potential ImageJ macro runner extension. I have a similar case as @bpavie and would be interested in finding a way to send a single channel (DAB) from QuPath to ImageJ. Also, @bpavie if you found a way to get this to work, I´d be very happy about any input. Thank you!. Best, ; Julia",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68#issuecomment-1999765237:41,update,updates,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/68#issuecomment-1999765237,1,['update'],['updates']
Deployability,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-716174039:257,patch,patch,257,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039,2,['patch'],['patch']
Deployability,Here's the complete output:; ```; > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 14; /home/gordon/src/jdk-14.0.1+7; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Linux 5.4.39-1-MANJARO amd64; Use -Ptensorflow-cpu=true or -Ptensorflow-gpu=true if you wish to include experimental TensorFlow module; Excluding project ':qupath-extension-tensorflow'; Copying license directories: ; /home/gordon/src/qupath/qupath-core/src/main/resources/licenses; /home/gordon/src/qupath/qupath-core-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-bioformats/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-openslide/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-pen/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-script-editor/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-svg/src/main/resources/licenses; /home/gordon/src/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /home/gordon/src/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /home/gordon/src/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-exte,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630769356:286,install,installed,286,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356,1,['install'],['installed']
Deployability,"Hi @Edwinterb this seems to be a duplicate of https://github.com/qupath/qupath/issues/1250 with a potential fix. I'm not sure if/how the proposed fix could be incorporated into the build process using `jpackage` though. Is that something you've explored at all?. There's a description of the build process at https://qupath.readthedocs.io/en/0.4/docs/reference/building.html - it automatically generates the installers, and [jpackage doesn't like versions that start with 0](https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/CFBundleVersion.java).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1723256378:408,install,installers,408,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1723256378,1,['install'],['installers']
Deployability,"Hi @KidElectric I agree that's a bit odd and it took me a while to figure out what was going on. I think it's a consequence of QuPath evolving a bit and the old docs not being kept updated. And me hardly ever working with TMAs for years now. Basically, the TMA core is locked. The locking happens whenever the core is used for object detection. It's essentially inheriting the same behavior as for annotations. Unfortunately it's not very clear when an object is locked; QuPath v0.4.0 will make this more obvious through the UI thanks to; * #924. In the meantime, calling `getTMACoreList().each { it.setLocked(false) }` should resolve it. I suspect - but don't entirely remember - that `TMACoreObject.isEditible()` existed before object locking became a thing in QuPath, and when [the object hierarchy was more strict](https://petebankhead.github.io/qupath/2019/11/17/changing-the-hierarchy.html), as a way to make it harder to completely mess up TMA data by shifting a core ROI by a few pixels. It should possibly be removed, since locking gives a better way to control ROI editability than checking for detections. (I hope that helps - I'll keep this issue open at least until the javadocs are updated.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1190617712:181,update,updated,181,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1190617712,4,['update'],['updated']
Deployability,"Hi @cossiomanuel . thanks for sharing an image. The underlying bug seems to be the same as these:; * https://github.com/qupath/qupath/issues/904; * https://github.com/qupath/qupath/issues/894. It will be fixed in the next QuPath release. In the meantime, the workaround is to [add images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) first. I'll close the issue because that resolved it for me on Monterey, but please do let me know if it works for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973#issuecomment-1141214361:229,release,release,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141214361,1,['release'],['release']
Deployability,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:112,release,release,112,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547,2,['release'],['release']
Deployability,"Hi @hubutui could you try building with `gradlew` (Gradle wrapper) instead? That's the 'proper' way to build QuPath - see https://qupath.readthedocs.io/en/stable/docs/reference/building.html. The part you link to in `build.gradle` isn't actually trying to specify the toolchain, but rather to recover the Java version for the toolchain that is already being used. When it comes to *specifying* the toolchain, it looks like the example you give is just copied from the code I wrote here :); https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.java-conventions.gradle#L11. That's what QuPath already uses, so you can already pass it a `-Ptoolchain=20` if you like. **However** I think the problem is that QuPath's build is locked to Gradle 7.5.1 because of ; * https://github.com/bytedeco/gradle-javacpp/issues/28. There hasn't been another `gradle-javacpp` release yet, and I don't want to switch to a snapshot - so I'm waiting for that before updating our build scripts. Since Gradle releases break stuff pretty often, I suspect other changes will be needed. Also, older Gradles can't build using toolchains for newer Javas and Java 20 wasn't around when Gradle 7.5.1 was released - so you're probably stuck building QuPath v0.4.x on Java 17-19. But using Gradle wrapper avoids most of those problems, as long as you use a compatible toolchain version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346:879,release,release,879,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346,3,['release'],"['release', 'released', 'releases']"
Deployability,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-716163314:192,install,installation,192,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314,3,['install'],"['install-and-start-qupath-ubuntu-', 'installation', 'installing']"
Deployability,"Hi @ipaine01 this sounds like the issue reported at https://forum.image.sc/t/bug-channel-name-changed-when-changing-color/95010/6. If so, I have already fixed it at https://github.com/qupath/qupath/pull/1508 and the fix will be available in the next QuPath release. In the meantime, the workaround is to double-click on the channel (rather than clicking the color box) since this will allow you to choose a custom color in a different way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988:257,release,release,257,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988,1,['release'],['release']
Deployability,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/829#issuecomment-946818399:74,patch,patch,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399,2,['patch'],['patch']
Deployability,"Hi @petebankhead , Hi @belliveau13 . The growing need coming from our users and [lacan](https://github.com/lacan)'s curiosity for the QuPath ""extension"" made him write a tool which allow the user to :; - Save/Load the current display settings; - Apply the settings to the similar images in the project . From @lacan : “_It requires QuPath 0.1.4, which is a minor update released by our group, that has a few functions made public. We’ve also created a small extension (which is currently only compatible with v0.1.4) that can handle saving and reapplying brightness and contrast settings (NEED DOC). ; Howeever, we would like to point out that you can use this version at your own risk. We will, of course merge all we can with @petebankhead’s new and coming release and modify what we need, but some functionality may be broken in between._”. In case you are interested, you can find some links on our [documentation page](https://c4science.ch/w/bioimaging_and_optics_platform_biop/image-processing/qupath/). Best,. Romain. ![image](https://user-images.githubusercontent.com/8309560/51099846-5a2dcc80-17d3-11e9-95e4-e967c8afedcc.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453955094:363,update,update,363,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453955094,3,"['release', 'update']","['release', 'released', 'update']"
Deployability,Hi @petebankhead - thank you for your helpful reply! That does the trick. It totally makes sense to lock annotations once a detection is performed. I got distracted by isEditable and didn't realize to check what other relevant methods might be inherited. I agree with removing isEditable() and I look forward to the locked/unlocked annotation update! Thank you for the great tool!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1190645393:343,update,update,343,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1190645393,1,['update'],['update']
Deployability,"Hi @petebankhead, . RGB may be the main target of QuPath and they have no such issue. But honestly the lack of ability to conveniently set B&C for all fluorescent images of the same kind is pretty annoying. We regularly have users with k.10's of multichannel images. The workaround with the retain option is okish but clearly not as convenient as a 'set B&C for all images of the same kind'. > So that remains a task for a future version... So why not letting the issue open and add a tag for a future release ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632599816:502,release,release,502,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632599816,2,['release'],['release']
Deployability,"Hi @petebankhead, apologies for creating this new enhancement without properly searching exisintg ones! ; I have read up the links and the previous request and I understand the predicament you have now. Unfortunately I do not have any experience with jpackage to be able to offer any insights, other than of course changing the verion to 1.4.4, but I appreciate this may not be desired.; Perhaps the package could be created using Xcode in future? Again not something I have much experience with as I am not a developer, but it may also aid you in future if there is a desire to sign and notorize future releases. Gatekeeper on macOS Ventura is a bit more agreesive with unsigned apps and may notify users on first launch that the app is damaged. This can be bypassed by right clicking and selecting Open. This is when we deploy the Qupath pkg to managed devices using MDM tools:; <img width=""328"" alt=""App is damaged - Gatekeeper warning Ventura"" src=""https://github.com/qupath/qupath/assets/47144936/10b13e47-916f-4ce9-a904-dd4e1c7b97bc"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727468792:604,release,releases,604,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727468792,2,"['deploy', 'release']","['deploy', 'releases']"
Deployability,"Hi @petebankhead, thank you for looking at this. Does Preview work for you on this image? I was struck by the way Preview and QuPath fail in the same way for me. Do you have a homebrew install?. You're probably doing all this already, but my macos .app builds have all native libraries in `Contents/Resources/lib/`, then a wrapper script in `Contents/MacOS/` that sets `DYLD_LIBRARY_PATH` to point to the lib directory. I include my own libtiff. My macOS build scripts are here:. https://github.com/jcupitt/build-osx/. It's gtk-osx plus some tweaks. You probably have something much fancier!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715506343:185,install,install,185,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715506343,1,['install'],['install']
Deployability,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996226418:71,install,installation,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418,2,['install'],['installation']
Deployability,"Hi @pssaha did you also try it without Bio-Formats, e.g. before installing it or by turning it off for .scn (as was reported to workaround the problem at https://github.com/qupath/qupath/issues/141#issuecomment-400023655 ? Further instructions are at https://github.com/qupath/qupath-bioformats-extension#performance; This would leave the job of reading the image to OpenSlide; I don't know what the status of .scn support is there. Regarding the script, I don't see why my code should be limited in the resolution; is it possible that you're actually looking at an overview image/thumbnail rather than the full resolution image? Many slide formats contain multiple images, and versions of the same image. Under the 'Image' tab you can explore the 'Image list' and 'Associated images'. Or if you're working with a [Project](https://github.com/qupath/qupath/wiki/Projects) then all images in the file should be added to the project immediately. Nevertheless, I don't really recommend my script. It was just put together to try to help explore the issue, but it is rather inconvenient to use and I don't know if the image it produces in the end really matches with the original or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435301582:64,install,installing,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435301582,1,['install'],['installing']
Deployability,"Hi Arnulf,. Thanks very much for reporting this, and I'm glad you like the software!. From what you say, the Bio-Formats extension is probably installed correctly. It doesn't appear in the 'Extensions' menu because it isn't associated with any particular command you need to run - rather, QuPath will simply start using it if it needs to. When an image is opened, QuPath will go through a list of possible image readers and take the first that works. These include:; - OpenSlide (included by default); - ImageJ (included by default); - Bio-Formats (if it's installed). The _Server type_ entry in the table that appears under the _Image_ tab on the right of QuPath shows you which reader was used for whichever image is currently open - in the screenshot below, OpenSlide was used. ![mirax](https://cloud.githubusercontent.com/assets/4690904/19970686/a81eaf8a-a1d4-11e6-810e-491db8fb6612.jpg). Unfortunately, to the best of my knowledge Bio-Formats cannot handle MIRAX files - there is some information [here](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/). Bio-Formats also cannot handle CZI files with JPEG-XR compression (which seems to be the default for whole slide scanners) - although the good news is that [this is being worked on](https://www.openmicroscopy.org/community/viewtopic.php?f=13&t=8138). OpenSlide also cannot handle CZI files (possibly for [license reasons](https://github.com/openslide/openslide/issues/144)), although this is discussed on the mailing list sometimes. However, OpenSlide should be able to handle [MIRAX](http://openslide.org/formats/mirax/) (at least 2D RGB images), and I've tried QuPath successfully with several MIRAX files that I [downloaded from the OpenSlide website](http://openslide.cs.cmu.edu/download/openslide-testdata/Mirax/). From the examples I've seen, the MIRAX images consist of two parts: a `*.mrxs` file and a separate directory containing a lot of other data files. These need to:; - have the same name (exce",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258165973:143,install,installed,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258165973,4,['install'],['installed']
Deployability,"Hi Benjamin,. Great! Glad it works, thanks for letting me know. Regarding including the extension by default, that would definitely be handy. It should also be quite easy technically (thanks to Maven), but until now I've been a bit apprehensive about what requirements it would place on QuPath in terms of the GPL... i.e. providing source code, licenses for Bio-Formats and all its dependencies etc. So while I'm still learning about that side of things, I thought that requiring a separate download direct from the OME website makes things simpler in one way, even if it's a bit inconvenient. I'll give it a bit more thought though, and hopefully will be able to come up with a more streamlined way to install it at some point. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266709923:703,install,install,703,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266709923,2,['install'],['install']
Deployability,"Hi Benjamin,. It should work already. If you download the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension), then so long as you add the latest Bio-Formats 5.3.0 then you should get CZI support immediately. I've tried it with a couple of images and it seems to work well. I have some plans to update the Bio-Formats extension to incorporate [memoization](https://www.openmicroscopy.org/site/support/bio-formats5.3/developers/matlab-dev.html#improving-reading-performance) to see if it improves performance... although it shouldn't be needed for CZI support in general. Please let me know if it works for you as well, or if you find any problems. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266703994:329,update,update,329,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266703994,1,['update'],['update']
Deployability,"Hi Egor, I was meaning to get to this - but ended up swamped by so many huge things to sort before the next release, and this one requires switching to an old computer with a small screen and no battery life... which I never quite found time to do. I've just merged in the >200 commits since this. If it builds ok I'll try to have a look in the next day or two.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298:108,release,release,108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298,1,['release'],['release']
Deployability,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753634843:212,integrat,integrate,212,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843,2,['integrat'],['integrate']
Deployability,"Hi Marcel, if you want to try the version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-408029691:115,update,updates,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-408029691,1,['update'],['updates']
Deployability,Hi Mike and Pete. Thanks for looking into it. I haven't been able to get the issue to reproduce on my end either since I made the report. I also updated to 4.4 and haven't encountered the issue with this version either. Perhaps it was just a weird day with a strange software gremlin. 🤷🏼,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1288#issuecomment-1721348517:145,update,updated,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/1288#issuecomment-1721348517,1,['update'],['updated']
Deployability,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635237844:35,upgrade,upgrade,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,Hi Pete! I've updated my pull request by basing it on `dev-0.3` and changing the parameter passing as requested.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-795593240:14,update,updated,14,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795593240,1,['update'],['updated']
Deployability,"Hi Pete, ; it happend two more times and I found in the log file, that the chosen channel 4 does not offer information for celldetection. After that QuPath switches automatically into channel 1. But Cell detection errors happen. Maybe because the switch is to slow?. You can see the nature of the cell detection errors in the screenshots. It happens, that QuPath copies celldetections form one part of the image into another one. I marked that in the screenshot above with the red polygons. . I changed the script using directly channel 1 instead of channel 4. ; Now it seems like not to happen anymore. I keep you updated. Since I changed the channel, I analysed only two more images. . The script uses fluorescence type on a DAB only stained jpg image for watershed cell detection. ; That seems to make no sence in the first place. But I found out by accident, that it allows cell detection in white areas if nuclei are not stained at all. ; This is very useful for many applications. . Is there any argument against this way for image processing of a brightfield image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370400288:615,update,updated,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370400288,1,['update'],['updated']
Deployability,"Hi Pete, and thanks for putting us in the loop!; It is true that the` RegionRequest` bits are a bit verbose, and any ease on that part would be welcome. . The proposed changes will have little effect on our scripts, as most calls are for `IJTools.createPathImage()` in any case... Concerning Warpy, and other extensions, we are happy to modify them and to update them no problem, and make sure to freeze the previous versions. On a personal note, breaking changes let us keep an eye on scripts that are still being used (often for projects that have little to do with the original requirements), so we kind of see it as a good thing when people come to us because something ""no longer works"". Helps us make sure that not too many weird things are being done with our scripts :) . I am pinging @rdornier, for completion, as he was working on the OMERO-RAW part we have here and might need to make some changes there, if we keep that extension after the 0.4 update. . One argument for making more intensive changes, without too much backwards compatibility is that it really forces us to keep up with the new developments, rather than let it linger on until it's too late. So I'm more in favor of ""breaking"" than keeping full backwards compatibility. Though admittedly, our user base is not as large as yours, so we won't see as much of a tidalwave... > include this in QuPath v0.4.0 (hopefully later this month). Awesome. > remove the default implementation of readRegion in v0.5.0, forcing any subclass of ImageServer to be updated to work... but still allowing scripts to use readBufferedImage, with the deprecation message logged. OK for us, though if the scripts end up breaking, this would not be a problem, kind of a nice extra way of announcing that things have changed. > remove readBufferedImage later, e.g. in v0.6.0. Not in v0.5.0 already? . Thanks again for the discussion! Looking forward to notes and comments from others!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547:356,update,update,356,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547,3,['update'],"['update', 'updated']"
Deployability,"Hi Pete, here is a set of screenshots replicating my steps. Now that you mention this, I am not sure if the issue generates due to user privilege's. One of the user here is an admin, the second one isn't, the same first user credentials were used to install both QuPath's. From this test I was able to navigate to all the folders of the first user. ; ; [qupath_security.pdf](https://github.com/qupath/qupath/files/9930678/qupath_security.pdf)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302305950:250,install,install,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302305950,1,['install'],['install']
Deployability,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-409252791:564,update,updates,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791,1,['update'],['updates']
Deployability,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414685806:829,install,installing,829,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806,1,['install'],['installing']
Deployability,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753650048:728,integrat,integrate,728,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048,2,['integrat'],['integrate']
Deployability,"Hi Pete,. I just ran the `paquo` test suite against the `qupath` snapshot version from this PR and all tests pass. So there are no concerns from our side. Also, since the current release of `paquo` supports any QuPath from `0.2.0-m9` to (now tested) `0.4.0+snapshot` (https://github.com/qupath/qupath/pull/1072/commits/a91c5bfc865710308dc22f11fd6a3f4709eaf799) having a small breaking change would also be fine. We're maintaining a bunch of checks to support the different QuPath versions anyways. So what I am saying is: please don't keep any cruft around just because it might break `paquo`. Cheers,; Andreas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273266885:179,release,release,179,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273266885,1,['release'],['release']
Deployability,"Hi Pete,. I’ve attached the classifier file. Thanks very much for your help,. Cam. From: Pete [mailto:notifications@github.com]; Sent: 22 March 2018 15:07; To: qupath/qupath <qupath@noreply.github.com>; Cc: Camilla Coulson-Gilmer <>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] loading classifier error (#160). I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that might affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the .qpclassifier file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the QuPath user forum on Google Groups<https://groups.google.com/forum/#!forum/qupath-users> I can contact you directly. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/160#issuecomment-375339965>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Aj60nFu_XkbrWH1Xr6vaENeGtItS4XCuks5tg74MgaJpZM4S3J1c>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375346429:481,update,updates,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375346429,2,['update'],['updates']
Deployability,"Hi Pete,. Just as on twitter. Let me know if I can help with Javadocs or creating; tutorials on Groovy for Qupath. On Thu, Oct 18, 2018 at 6:29 PM Pete <notifications@github.com> wrote:. > For now I'd suggest trying to link up with the source code directly; > through IntelliJ:; > https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ; >; > I was finally convinced of the value of Javadocs recently, and also; > discovered that those for QuPath v0.1.2 didn't compile nicely due to; > illegal characters and various other issues... I think I've resolved most; > of these problems and plan to have them working and online somewhere for; > the next release, once the necessary refactoring for Java 11 is completed.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/230#issuecomment-431095054>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AqMBwxGT_h-Sk7VfVcCIJT9OMzy4USR9ks5umLqDgaJpZM4XtyUr>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/230#issuecomment-431349486:663,release,release,663,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431349486,1,['release'],['release']
Deployability,"Hi Pete,. Whaoou, indeed, it works perfectly, thanks a lot!; Why not to include this extension by default in the installer (or may be add an option to install it) ?; Thanks again!; Benjamin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266705423:113,install,installer,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266705423,2,['install'],"['install', 'installer']"
Deployability,"Hi Pete,. thanks for your answer. I want to learn all functions of QuPath. I like ; your documentation a lot. Its well done work. Do you develop QuPath all alone by yourself?. Another question: is there a log file, QuPath is writing, that can help ; you to track and find the reason for bugs and system crashes?. We did that with our software in the past. It is very helpful. Best. David. Am 23/01/2017 um 21:44 schrieb Pete:; >; > Thanks for reporting this. I have not been working with CZI images ; > myself, but I recently received one example image with this problem. ; > Unfortunately, I have not yet been able to identify the exact cause, ; > beyond the fact that too much memory is used. Because the image is not ; > being read by QuPath directly (but rather Bio-Formats) it is a bit ; > harder for me to track down where exactly the problem lies. However, I ; > will continue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; G",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:911,update,update,911,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,2,['update'],['update']
Deployability,"Hi Pete,. there's no much else I can do on this for now. It's ready to be tested by someone else in case I missed anything, and I don't have a mac to test on so I just can't guarantee this will work on all platforms. Also, the code is probably over-annotated and over-verbose on the console side, but that's just so that you can check what's going on in case there are issues I didn't notice myself. Once okayed, the code can be both toned down and cleaned up :-). If this is too much to test before the new release, we can reconsider this change for later. In fact, for this to be complete, I would also need to document my change (wouldn't be fair to let *you* do it if I wrote the feature) and add a middle button to your ""input viewer"". Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231:508,release,release,508,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231,1,['release'],['release']
Deployability,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:406,install,installed,406,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['install'],['installed']
Deployability,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614153366:218,toggle,toggle,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366,1,['toggle'],['toggle']
Deployability,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:20,install,install,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hi Romain,. You should be able to double-click on the 'Min display' or 'Max display' labels and input values manually there. As you've likely seen, the values should persist when the image is closed/reopened within the same QuPath session, but not when QuPath is reopened. I'll give some thought to where this information could best be added to the ```.qpdata``` file, and how to set the values through scripting (similar to ImageJ's ```setMinAndMax(min, max, channels)```. If both of these can be done, then running such a script would be one way to use the same values across the whole project. I'll post an update here when I've made progress on this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-261924933:610,update,update,610,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-261924933,1,['update'],['update']
Deployability,"Hi Shushan,. I think this relates to your last question: https://groups.google.com/d/msg/qupath-users/89AbDQSknm8/SCAbYzA2CAAJ; I've written a script linked to that tries to do the job of converting cells into region annotations. The bigger question of creating full image annotations is one that I'm very interested in and (kind of) working on. Currently, I often use [QuPath + ImageJ + conventional image processing](https://github.com/qupath/qupath/wiki/Working-with-ImageJ) to generate detailed annotations; I suspect that in your case, converting to 8-bit, Gaussian smoothing and thresholding would do a pretty good job of mimicking the red annotation; if you have that, then it's possible to 'invert' the annotation to get everything else - either for the entire image, or constrained to a larger (coarse, hand-drawn) annotation. It's still quite a laborious process, but armed with QuPath, ImageJ and a few short scripts (e.g. to invert annotations) it's possible to create much better annotations than could be done by hand. I've also made some steps towards creating brush/wand annotations that can't overlap but rather snap to the boundary of existing annotations when pressing a specific key (although it's hard to not get tangled up in the various keyboard modifiers this involves, so it may need more work). I don't actually remember if it's included [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) or is more recent... but it may be worth investigating if you haven't already. Slightly further in the distance (but hopefully not too far), I've also got a prototype pixel classifier working... but again some more work needs to be done to convert this into something usable and annotation-generating. And having a very large number of annotations across a full slide might raise some performance issues that needs to be addressed to. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/222#issuecomment-424650877:1427,update,updates,1427,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424650877,2,['update'],['updates']
Deployability,"Hi Sorry for the delay, I replicated the steps with a clean installation no plugins and saw the same access to the files. I went to the registry and it shows the paths for the first user that installed QuPath, . did a quick search and it seems that it can be a problem with the msix packages, ; https://techcommunity.microsoft.com/t5/msix/registry-keys-created-after-installation-and-left-behind-after/m-p/1802357. [QuPath Clean installation.pdf](https://github.com/qupath/qupath/files/9973964/QuPath.Clean.installation.pdf)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309180858:60,install,installation,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309180858,5,['install'],"['installation', 'installation-and-left-behind-after', 'installed']"
Deployability,"Hi again,. In v0.1.2. the servertype is set as Openslide.; Installed Bio-Formats is 5.9.2. I could share a one-time link with you for an example file (due to privacy concerns).; Do you have a preference?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472017812:59,Install,Installed,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472017812,1,['Install'],['Installed']
Deployability,"Hi all!. I'm trying to understand the bottom line of what seems to be a tricky bug. I do not really understand all of it... what I can tell is simply that Oli (@lacan) helped me to make a 'derived path class' in order to label if a Roi is on the left or on the right part of the brain:. https://github.com/BIOP/qupath-extension-abba/blob/d9384ba7e198a454cb8e9da4661988eac7ee285c/src/main/java/qupath/ext/biop/abba/AtlasTools.java#L248. After, the serialisation was delegated to QuPath, there was nothing custom here. The abba extension has been in use since the v0.3, so both projects with the 0.3 serialization way and projects with the 0.4 serialisation way exist in the wild. Since there won't be any new release of QuPath 0.4, I think I should look at solving this issue in the extension. Is there a way to do that ?. Again, sorry for my lack of understanding, I think I need to spend a full hour to understand it and I do not know when I'll be afford it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1687573535:708,release,release,708,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1687573535,2,['release'],['release']
Deployability,"Hi everyone,. I hope I'm not too late but I wanted to update the feed based on my own experience with the .mrxs format from 3DHISTECH. . It's a problematic format and we have found at least 2 issues related to interoperability with both OpenSlide and Bio-Format. 1) Bio-Format: When scanning in high throughput the software piloting the scanner sometime saves as a snapshot for the current slide the snapshot of the previous slide. Bio-Format by default loads the snapshot so you have to be carefull if you're planing to do some analysis at very low resolution. 2) OpenSlide: Because of the issue above we started to use OpenSlide and grab the low-res from the stack but this also is problematic. For some slides the lowres is larger (in terms of area on the slide) then the actual scanned area on the consecutive higher resolution stack representations. We do not know why it happens only on a few slides of the batch. the converter is an option but this means you have to duplicate the data and when you have a lot slides it is such a pain when you think about the amount of actual data generated.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-340702105:54,update,update,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-340702105,1,['update'],['update']
Deployability,"Hi! I just wanted to quickly verify that you are using Pete's newest Bioformats extension (updated 20 days ago) and Bioformats 5.7.3. . I suspect everything is up to date since the 4plex works, but I had some problems a few weeks ago, and realized I had not updated Bioformats (separately from the extension) in a while, which turned out to be my problem. And being sure you have both of those may help Pete troubleshoot the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145#issuecomment-363809051:91,update,updated,91,https://qupath.github.io,https://github.com/qupath/qupath/issues/145#issuecomment-363809051,2,['update'],['updated']
Deployability,"Hi!. Yes, for ""portable"" I was meaning a version quich does not require installation and thus admin priviledges.; Silly me, I hadn't tried the .zip distribution even if it was written _and it should work without further installation_ :-/. Anyway, I just tried and works as intended.; Thank you! I can flag this as closed",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570505027:72,install,installation,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570505027,1,['install'],['installation']
Deployability,"Hi, . I got IT to reinstall as you suggested and it solved the problem. I was looking for my post to close it but can’t find it, can you close it for me please?. Thanks for your help. . Rivka. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-521570540:296,install,installing,296,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-521570540,1,['install'],['installing']
Deployability,"Hi, ah, silly error on my part. Thanks. . Ok, so now the imports seem to work, but something isn't connecting right for the jep section of the script. ```. INFO: Mean red (from Java): 86.81525; INFO: Mean green (from Java): 72.492275; INFO: Mean blue (from Java): 68.141675; INFO: java.lang.UnsatisfiedLinkError: no jep in java.library.path. ```. I tried the script you sent and received:; ```. INFO: Current image data: ImageData: Fluorescence, IMG_5_11_sq; INFO: Current image server: ImageJ server: /home/bl/Documents/IMG_5_11_sq.png (IMG_5_11_sq.png). ```. I should say that I think jep is installed ok, though I have only played with for a second this morning. But I can start jep, and do the basic test on the jep git Getting Started page (the python to java one).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262781834:594,install,installed,594,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262781834,1,['install'],['installed']
Deployability,"Hi, it looks like in your script the coordinates of the points will be export in pixel units. The annotations (in the second export) will be export in µm (probably) or pixel units depending upon the image - but the column heading should tell you which. (I edited your post to update the code formatting to make it more readable)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-690897795:276,update,update,276,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-690897795,1,['update'],['update']
Deployability,"Hi, sorry I'm coming to this a bit late... From looking at the image, I agree that it would be good to try to find a way to detect the regions you want with a threshold (maybe *Simple tissue detection* or an ImageJ macro). However, I can't really say very confidently how well this will work since I have not tried an application like this before. With regard to *Trainable Weka segmentation*, you might be able to run it through QuPath by pointing the ImageJ plugins directory (under *Edit &rarr; Preferences...*, double-click on the text field beside *ImageJ plugins directory*) somewhere where the *Trainable Weka segmentation* plugin and all its dependencies can be found (e.g. the *plugins* directory of a Fiji installation).; Then use *Send region to ImageJ* to send all or part of the image to ImageJ for processing, and call the *Trainable Weka segmentation* from there. > Note that QuPath won't actually use Fiji itself, but rather ImageJ1, so whenever you set the *plugins* directory to be that of a Fiji installation you may find that some commands don't work (if they have Fiji-specific dependencies). But I think *Trainable Weka segmentation* is ok. However, that might not be necessary. QuPath doesn't offer a pixel classifier like *Trainable Weka segmentation* or *ilastik*, but you can use QuPath's object classifiers to get a similar result. The process would be something like this:. * Create an annotation around an area of interest (e.g. manually, or with *Simple tissue detection*); * Run *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Create tiles* to create square tiles of any size (*don't* choose 'Make annotation tiles' in this case!); * Run *Analyze &rarr; Calculate features &rarr; Add Intensity features (experimental)* and choose a few color transforms along with *Mean* and *Compute Haralick features* from the bottom (and others if you like). If your square tiles are tiny, set *Region* to be either *Square tiles* or *Circular tiles* and choos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-288506877:716,install,installation,716,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-288506877,4,['install'],['installation']
Deployability,"Hi, the instructions are for QuPath v0.1.2 (which uses Maven) but the repo contains the code for the next release (which uses Gradle and has a build.gradle instead of pom.xml). As part of that, the API is also changing rather considerably. The goal is to stabilize things to make it easier to add extensions, but limited by a chronic lack of time and the fact I'm the only person working on the software (although there's [a position being advertised to join me](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500)...). I don't know what's the goal of your extension, but my advice would be to focus on scripting first. It's generally much faster to get things working, and you can convert your Groovy script to a Java extension at some point in the future. I often prototype extensions first as scripts (and usually never actually need to convert the scripts to extensions). My instructions for getting started with IntelliJ are on the Wiki, which you've seen. I don't know what specifically 'I was unsuccessful' means, so really can't expand on that without knowing _exactly_ where or how it went wrong. Note that the instructions were written for v0.1.2 and need updated, but this won't happen until v0.2.0 is ready. Note also that the Q&A forum is at https://forum.image.sc/tags/qupath and this is the place to ask questions that are not directly related to a bug in the software.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/338#issuecomment-511680035:106,release,release,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/338#issuecomment-511680035,2,"['release', 'update']","['release', 'updated']"
Deployability,"Hi, this looks to be the same issue as #74 . It should only affect images that are being read with ImageJ, because of the way in which a cropped region is extracted (when you're unlucky, a second thread might call ```setRoi``` at an inopportune moment). One potential quick fix in the code could be to make [this method](https://github.com/qupath/qupath/blob/v0.1.2/qupath-extension-ij/src/main/java/qupath/imagej/images/servers/ImageJServer.java#L175) synchronized, although this could be refined a bit further. To the best of my knowledge, images accessed any other way (including all whole slide images) should be unaffected. This should be fixed in the next QuPath update. In the meantime, restricting the number of threads should work too.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-336955291:669,update,update,669,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-336955291,1,['update'],['update']
Deployability,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/262#issuecomment-458652442:415,release,release,415,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442,3,['release'],['release']
Deployability,"Hi,. Looking back that the documentation, I see it wasn't the clearest... I've just tested the following on macOS Sierra with a downloaded QuPath and I was able to run the script in the docs after the following steps:. 1. If you don't already have a QuPath extensions directory, you can either set one under *Edit &rarr; Preferences* or follow the process to install any extension that takes your interest [here](https://github.com/qupath/qupath/wiki/Extensions). 2. Next, locate where JEP is installed and create a symbolic link in your QuPath extensions directory to its Jar file. For me, this was the command:; ```; ln -s /usr/local/lib/python2.7/site-packages/jep/jep-3.5.3.jar /Users/pete/QuPath/extensions/jep.jar; ```. 3. Alongside the Jar, there were also two native files ```jep.so``` and ```libjep.jnilib```. The easiest way to get QuPath to see them is simply to copy these into your QuPath directory containing ```QuPathApp.jar``` (there should already be other native libraries there too). I haven't tested this on Linux, but would be very interested to know if it works (or, indeed, if other things are working fine for you with Fedora). If so I'll update the docs to be a bit clearer. Note that I never took the use of JEP with QuPath far enough for it to be genuinely useful, since I didn't have a sufficient need for it myself until now. But I think the ability to run Python scripts could be really valuable, so I'd be happy to help with setting this up or coming up with a neat way to wrap or convert data structures. If you'd like to discuss more the kind of applications you see this being useful for (e.g. segmentation, classification, manipulating objects, statistical analysis...) just let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262733775:359,install,install,359,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262733775,6,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"Hi,. Strange... my quick attempt on Ubuntu also didn't work, but apparently for a different reason... An alternative method to add to your library path would be to track down the ```QuPath.cfg``` file within your QuPath installation, and amend it - something like the following:; ```; [JVMOptions]; -Djava.library.path=.:/usr/local/lib/python2.7/dist-packages/jep/; ```. With this, it shouldn't be necessary to copy the files. Does this help at all, or is it the same error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262835928:220,install,installation,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262835928,1,['install'],['installation']
Deployability,"Hi,; I just quickly built your branch on Linux and can see no NUL in the image name anymore. Unfortunately I am a bit busy and can't build on Windows right now - but my SIS-TIFF files need further fixes that will (hopefully) show up in the next Bioformats tag version anyway so this should probably not delay the QuPath release today. 👍 . (FYI: The pixel calibration is completely off for SIS-TIFFs but this should be fixed in Bioformats HEAD and will likely show up in the next release - https://github.com/ome/bioformats/pull/3535)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664984542:320,release,release,320,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664984542,2,['release'],['release']
Deployability,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346#issuecomment-518195636:88,install,install,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636,2,['install'],['install']
Deployability,"Hi. Your right it is (maybe) not a bug. But the beauty of QuPath is/was the ease of use and ease of installing. We run it on 20+ workstations. But these new extensions that use the DeepJava Library are (for me) a big pain. Maybe you (not me) can after installing all the prerequisites and tweaking get it working. But it will be impossible to install it next to many other programs on all our workstations. There must be a easier way. Or a better explanation. And for just using the CPU only. I still had to do all the Cuda and tweaking. Out of the box it does not support CPU only. Best, Ron. And just to be clear. I love your work!!! I love QuPath!!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352862393:100,install,installing,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352862393,6,['install'],"['install', 'installing']"
Deployability,"Hmm, I am no longer seeing this behavior (no changes that I am aware of). It was the full release of M9. I am actually using the same project now that I was before, with untyped files still in the project Scripts folder when I was testing it before. I will reopen if I can reproduce the exact steps, since it seems to be more involved than simply happening every time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/433#issuecomment-613481580:90,release,release,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613481580,2,['release'],['release']
Deployability,"Hmm, I worry about burying the option in the preferences. It reminds me of ImageJ's 'Black background' option where a hidden preference causes different results for different users, making it harder to give instructions to anyone else. If you want to run as script as a command (with menu item), you can use this:; ```groovy; getQuPath().installGroovyCommand(""Objects>Select children"", ; """"""; def children = getSelectedObject().getChildObjects(); selectObjects(children); """"""; ); ```. To make it always available without the hassle of creating an extension, you can include it in a startup script file - basically any Groovy file, which can be set in the preferences under 'Startup script path'. This should allow you to add multiple custom commands in menus of your choosing, to run any short scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777:338,install,installGroovyCommand,338,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777,1,['install'],['installGroovyCommand']
Deployability,"Hmmm, this isn't a scenario I ever had to deal with myself... it looks like an unfortunate limitation of how the project arranges ```.qpdata``` files simply according to the image name stored for the entry in the image. There's no 'good' way to fix it currently, unless you're willing to put all your images in separate projects... which would kind of defeat the purpose of using a project. So you could try this as a workaround:. ```groovy; guiscript=true. // Get QuPath & project; def qupath = getQuPath(); def project = qupath.getProject(). // Loop through images, setting the name; // (actually accessing a private field... therefore 'bad'); project.getImageList().each {; def path = it.getServerPath(); int ind = path.lastIndexOf(':'); def scene = path[ind+1..-1]; def name = new File(path[0..ind-2]).getName(); it.putMetadataValue('Slide_ID', name); it.imageName = name + ' (' + scene + ')'; print it.imageName; }. // Need to set to null first to force update; qupath.setProject(null); qupath.setProject(project). // Be very careful is you use this to write the project!; // The logic is a bit weird and it will probably overwrite ; // the existing project - so duplicate your .qpproj file to be safer; //qupath.lib.projects.ProjectIO.writeProject(project); ```. Basically, this should rename the images in the project to include both the original file name and the scene. This should then be used by QuPath when arranging the ```.qpdata``` files afterwards. It won't automatically update the names of any existing data files - this would have to be done manually. It has the added bonus of setting the 'Slide_ID' keyword; if you right-click on the project, you can then choose to *Sort by &rarr; Slide ID*.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332598953:959,update,update,959,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332598953,4,['update'],['update']
Deployability,"However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](https://petebankhead.github.io).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1665,release,release,1665,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['release'],['release']
Deployability,"I also had some problems using the bioformats package and scn files. After installing the plugin, when I try to open my images on qupath, qupath tries to open my scn files using the bioformats server (not openslide) and it cannot determine the magnification metadata I tried manually editing the metadata into the qpproj file, but this had no effect. Turning off the bioformats plugin in edit>preferences resolved my error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-400023655:75,install,installing,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-400023655,1,['install'],['installing']
Deployability,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:218,deploy,deploy,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,20,['deploy'],['deploy']
Deployability,"I assume so as well, although I've never done it. I generally use Eclipse for working with the full QuPath source/extensions, and IntelliJ for most other things. I dabbled briefly with dl4j in IntelliJ, but never introduced it to QuPath and never took the time to figure out how to set up QuPath in IntelliJ. I wouldn't claim my Eclipse setup is particularly elegant, but there is some information [here](https://github.com/qupath/qupath/blob/076fb69112b22a299e70819b5af31bd469e47e8a/src/main/resources/eclipse/README.md). The ability to run in debug more, and even to change the code in a running application (within limits), is extremely useful. If you did want to keep the worlds separate, with QuPath in Eclipse (or as a standalone application) and dl4j in IntelliJ, then you might have some benefit in creating a symbolic link in your QuPath extensions folder to wherever your dl4j jars are located; if I remember correctly, QuPath should look into subdirectories (symbolically linked or otherwise) for dependencies. At least that may allow the jars to be managed by IntelliJ, and updated without needing to copy them over to QuPath again. Native libraries will still need to be handled, but this only involves setting the path to the directory containing them anyway.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-301229258:1086,update,updated,1086,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-301229258,1,['update'],['updated']
Deployability,"I attempted to replicate this on a standard system (Win10 Pro, no active directory, no abnormal group policy) and was not able to. The normal user with the admin installed QuPath was not able to access any of the admin folders, nor could they see projects that had been opened/created by the admin user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309474176:162,install,installed,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309474176,1,['install'],['installed']
Deployability,"I briefly explored this, and can confirm that incorporating following logic into `readRegion` **didn't** solve things... ```java; // Fix output size to match tiles, if necessary; 		// See https://github.com/qupath/qupath/issues/1527; 		if (request.getDownsample() > 1 && nResolutions() > 1; 				&& request.getMaxX() <= getWidth() && request.getMaxY() <= getHeight(); 				&& request.getMinX() >= 0 && request.getMinY() >= 0) {; 			int minX = Integer.MAX_VALUE;; 			int minY = Integer.MAX_VALUE;; 			int maxX = -Integer.MAX_VALUE;; 			int maxY = -Integer.MAX_VALUE;; 			for (var tile : tiles) {; 				minX = Math.min(minX, tile.getRegionRequest().getMinX());; 				minY = Math.min(minY, tile.getRegionRequest().getMinY());; 				maxX = Math.max(maxX, tile.getRegionRequest().getMaxX());; 				maxY = Math.max(maxY, tile.getRegionRequest().getMaxY());; 			}; 			if (minX != request.getMinX() || minY != request.getMinY() || maxX != request.getMaxX() || maxY != request.getMaxY()) {; 				var request2 = request.intersect2D(minX, minY, maxX, maxY);; 				logger.debug(""RegionRequest updated from {} -> {}"", request, request2);; 				request = request2;; 			}; 		}; ```; This *did* crop the `RegionRequest`, but the output image was still 1432, due to rounding up after being calculated to be 1431.5... and then Java's rendering pipeline still left the black line. It seems to be especially subtle and hard to address...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527#issuecomment-2124491582:1073,update,updated,1073,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527#issuecomment-2124491582,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"I can also confirm both are working for me in v0.1.2 - I don't believe I made any changes with v0.1.3 that should affect it working, but there are changes that are likely to improve performance. I'm running it on a Mac. I'd suggest making sure you have the latest versions of Bio-Formats at the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension). If the latest (v0.0.6) doesn't work, then try removing it and going back to v0.0.5. It's best to do this by adding/removing the `.jar` files from the extensions folder directly whenever QuPath isn't running, to make sure there aren't old versions lingering (unfortunately v0.0.5 and v0.0.6 were accidentally given different filenames... so installing one won't overwrite the other). If there's any double about the location of the extensions folder, you could try this script: https://gist.github.com/petebankhead/e687cbcc2e35195e177104e05b633072. Please let me know if this works (or doesn't); if there are any problems, I'd like to try to resolve them before updating the extension. One small(ish) thing: the original brightness/contrast settings applied in QuPath for these images are pretty bad, and so you'll need to adjust the sliders to something sensible. One reason they are so bad is that at least some channels of some of the images are quite severely clipped at the low end (i.e. lots of pixels with 0 values).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409095677:722,install,installing,722,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409095677,1,['install'],['installing']
Deployability,"I can confirm this is a QuPath problem, not a Bio-Formats one. It actually seems to already be fixed in my code (without realising it was ever broken...), so should work in the next milestone. Thanks for reporting this, it helps to remind me I need to check this specifically before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509303832:292,release,release,292,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509303832,1,['release'],['release']
Deployability,"I can open Camelyon16 images with QuPath on macOS 10.13, Ubuntu 16.04 and Windows 10 (the last two through VirtualBox). So it definitely *should* work. I'd certainly like to find a way to resolve it since it doesn't. I didn't have any luck with Bio-Formats though - so that suggestion can be discarded. My best guess is that you're using Linux and the solution involves building/installing OpenSlide separately. You can then remove/replace any OpenSlide-related files from within the *qupath/app* directory. If you copy your own OpenSlide files into that directory then it should be ok; otherwise, you probably need to set the Java library path within *QuPath.cfg* (which is also in the same directory).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371769693:379,install,installing,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371769693,1,['install'],['installing']
Deployability,"I can replicate this if I open the slide label under the 'Image' tab. It turns out, the label **is** updated if it is shown via *View &rarr; Show slide label*. I agree it's confusing to have different behavior, although I'm not sure what is the best way to fix it because both ways of showing the label have different aims:. * Under the 'Image' tab, the aim is to show all the associated images and be able to freely choose.; * With *View &rarr; Show slide label*, QuPath tries to determine which associated image corresponds to the slide label, and uses that. The second command is more complicated, because there's no guarantee that any image will have an associated label - and, if it does, there's no guarantee what precisely it will be called. Here's the awkward code that tries to figure that out:. https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-gui-fx/src/main/java/qupath/lib/gui/panes/SlideLabelView.java#L130-L148. I'm not sure if either command can or should fully replace the other. Maybe it would be better if *View &rarr; Show slide label* was more prominent (e.g. somewhere under the 'Image' tab as well)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1246#issuecomment-1481503527:101,update,updated,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/1246#issuecomment-1481503527,1,['update'],['updated']
Deployability,"I couldn't spot anything in the ""package"" parts that would change what's included in the output. I can get that list into the output directory by adding `assembleJavadocs` to the gradle build command. I would've guessed that adding `tasks.jpackage.dependsOn(""assembleJavadocs"")` in `build.gradle` would work too, but apparently not... I can update the github action for now, and try to fix the gradle logic after?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652#issuecomment-2457072276:341,update,update,341,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652#issuecomment-2457072276,1,['update'],['update']
Deployability,"I didn't have a more elegant solution - and I like @Svidro's approach of reusing (and renaming) an existing ```.qpdata``` file. If you do this, I'd suggest trying to create one from any similar image you have that works - since it will also do things like set the image type (brightfield, fluorescence, stain colors...), and it makes sense to use values from related images rather than have to update them later. I always planned vaguely to make it possible to create a manual TMA grid, but the automated dearrayer never failed catastrophically enough on any image that I encountered to make this necessary; I only ever added/removed rows as needed. Nevertheless, in the absence of a user-friendly way to do something, it's generally possible to resort to a script. If you draw a rectangle around where the grid should be, you could try running this:. ```groovy; import qupath.lib.objects.TMACoreObject; import qupath.lib.objects.hierarchy.DefaultTMAGrid. // Enter the number of horizontal & vertical cores here; int numHorizontal = 12; int numVertical = 9; // Enter the core diameter, in millimetres; double diameterMM = 1.2. // Convert diameter to pixels; double diameterPixels = (diameterMM * 1000) / getCurrentImageData().getServer().getAveragedPixelSizeMicrons(). // Get the current ROI; def roi = getSelectedROI(). // Create the cores; def cores = []; double xSpacing = roi.getBoundsWidth() / numHorizontal; double ySpacing = roi.getBoundsHeight() / numVertical; for (int i = 0; i < numVertical; i++) {; for (int j = 0; j < numHorizontal; j++) {; double x = roi.getBoundsX() + xSpacing / 2 + xSpacing * j; double y = roi.getBoundsY() + ySpacing / 2 + ySpacing * i; cores << new TMACoreObject(x, y, diameterPixels, false); }; }. // Create & set the grid; def tmaGrid = new DefaultTMAGrid(cores, numHorizontal); getCurrentHierarchy().setTMAGrid(tmaGrid); ```. Note that there are a few variables at the top that should be specified (i.e. the number of cores horizontally and vertically, and the an",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-301234930:394,update,update,394,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-301234930,2,['update'],['update']
Deployability,"I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that *might* affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the `.qpclassifier` file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the [QuPath user forum on Google Groups](https://groups.google.com/forum/#!forum/qupath-users) I can contact you directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375339965:149,update,updates,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375339965,2,['update'],['updates']
Deployability,"I don't know; to better understand what has gone wrong I'd need to know more information about what might be different in this case from previous times when you loaded scripts and didn't have a problem (e.g. anything appearing in the log, where QuPath is installed / where the script is located, if other scripts have the same effect). Since I can't replicate the problem myself, I'm afraid I can't really help much- also since the underlying issue should already be fixed in v0.2.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422#issuecomment-606432591:255,install,installed,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606432591,1,['install'],['installed']
Deployability,"I don't recall any memoization-related changes in v0.3.0-SNAPSHOT, except for the fact it will be using a different JDK and updated version of Bio-Formats itself. Unless I'm missing a key part, the git blame suggests the memoization code was last changed 2 years ago. v0.2 made a change from v0.1.2 to no longer store the .bfmemo files in the same directory as the image, because this was causing problems for some users and confusion with new files being generated unexpectedly. Since v0.2, you can specify a memoization directory in the preferences, and also a memoization time in ms. If the time is <= 0, then no memoization files should be created. Otherwise, a file will be [generated either in the specified directory or in a temp directory](https://github.com/qupath/qupath/blob/dev-0.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1314). Could it be that you have a directory set in the preferences? If you don't, I would expect the memoization files to be temporary and automatically removed. In any case, the warning you see has been [logged by Bio-Formats](https://github.com/ome/bioformats/blob/25645389e076a7bd0011e04c4dd8982c0f0614ed/components/formats-bsd/src/loci/formats/Memoizer.java#L923). I don't know why it is unable to delete the file, but my guess is that it relates in some way to https://github.com/ome/bioformats/issues/3659 and the fact QuPath is now using Java 16. This is likely to cause various memoization problems involving kyro. I can think of two potential workarounds:; * Add `--illegal-access=warn` to the Java options for QuPath (based on [this](https://openjdk.java.net/jeps/396)); * Turn off memoization entirely, at least by default. I'm not sure which is preferable; neither feels great. I think you should be able to try the first option by editing the `.cfg` file - if you try, please let me know if it works",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717#issuecomment-828490219:124,update,updated,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-828490219,1,['update'],['updated']
Deployability,"I feel that is likely to cause more confusing and maintenance headaches as the software develops, mostly for the reasons I outlined above. Commands will change and improve. The same command (e.g. *Load object classifier*) might meaningfully only work for detections now, but handle other object types in the future (I think that, in principle, it already *does* support other object types, if you can somehow create and save a classifier that applies to annotations). There had been a *Train detection classifier* in earlier versions, so the renaming in that case was to reduce confusion because there was a transition period during which both commands were maintained in parallel. If we move things, we need to update the documentation - and some of the docs are in the form of videos, so that's not straightforward. And if we push the term 'detection classifier' it will likely confuse *someone* who thinks it isn't relevant to them because they have cells, not detections. I don't think the current arrangement is ideal, but we are always trying to balance the current software with the past, the future, the docs, and a large number of users with very different needs and expectations... and a very small number of developers. Added to that are the people who write extensions, for whom changing menu structures can cause trouble. It is not an easy project to manage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506:712,update,update,712,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506,1,['update'],['update']
Deployability,I fixed the two things. I updated the javadoc-viewer snapshot on maven.scijava.org so Intellij might not directly see it.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1519#issuecomment-2129621413:26,update,updated,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/1519#issuecomment-2129621413,1,['update'],['updated']
Deployability,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409140774:492,update,update,492,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774,1,['update'],['update']
Deployability,"I hadn't seen the problem where some lines require multiple corrections, but from your explanation I think I understand what has happened. The issue should be predictable and reproducible; here's the background:. * When a line is drawn, it is represented inside QuPath by the coordinates of its end points, ```(x1,y1)``` and ```(x2,y2)```; * When the line is saved, these coordinates are written (correctly) into the ```.qpdata``` file; * When the ```.qpdata``` file is loaded again later, the first thing QuPath does is read the coordinates and convert them into ```(x1, y1)``` and ```(x2-x1, y2-y1)```. This last step is a bug; there is no need to subtract the first coordinates from the second. It happens because, long ago (and before being released), QuPath stored its lines differently (with the first coordinate and then displacement).... and this bit of the code was not updated when it should have been, and lines were used rarely enough for it to go unnoticed. With that in mind, the error can be cumulative; if you open a ```.qpdata``` file and the lines display wrongly, and then you save it again, QuPath will now save the wrong coordinates... and, when reading them, make them even more wrong, i.e. ```(x2-x1-x1, y2-y1-y1)```. You'd have to run the script twice to fix such lines. Therefore it is important to have all your lines corrected before you save, and then run the script to fix them immediately after opening the image. This avoids having a combination of correct and incorrect lines on the image at the same time. The purpose of the script is to go through and fix the second coordinate for all your lines by adding the first coordinate. It does this for all lines, regardless of whether or not they are correct. If you want to change only some of the lines then @Svidro's idea is great - select the lines you want to change (e.g. in the list at the top of the *Annotations* tab on the left of the screen) and run this script instead:. ```groovy; getSelectedObjects().each {; ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-299623260:745,release,released,745,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-299623260,2,"['release', 'update']","['released', 'updated']"
Deployability,"I have installed the new extension with the same results. I tried to exclude the .scn file from bioformats so that OpenSlide opens it to no avail it comes up with file can't open, however, I downloaded a sample of the .scn file from openslide it opens OK ; It could well be the issue @Svidro illuded to.; Its seems like this is an ongoing issue https://github.com/openslide/openslide/issues/189, The files I have here are produced by Leica Versa while our older .scn from SCN400 work OK",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358745153:7,install,installed,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358745153,1,['install'],['installed']
Deployability,"I have lots of QuPath's installed, and for me and `QuPath` (presumably v0.1.2) and `QuPath-0.3.0.app` are the only ones that show up in launchpad. v0.4.3 doesn't. To be honest, I forgot launchpad exists. I suspect the issue is related to the macOS version stored in the app. For v0.1.2 this is 0.1.2, but for all subsequent releases it is 1.0.0. The issue has come up a couple of times:; * https://github.com/qupath/qupath/issues/1250; * https://github.com/qupath/qupath/issues/1337. I spent several days trying to address it, but ultimately trying to embed the 'true' version number caused subtle, release-destroying issues: ; * https://github.com/qupath/qupath/pull/1379; Most annoyingly, the failure only emerged at the very end when *downloading* QuPath - local builds were ok, which meant that it's possible to believe it's fixed when it isn't. Therefore unless anyone else can spot a fix and confirm it works with downloaded versions, I'm afraid it's not something we can address. If my theory is correct, it will hopefully go away for QuPath >1.0.0, when we get there. For now, it's a restriction imposed by `jpackage` and macOS.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102:24,install,installed,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102,3,"['install', 'release']","['installed', 'release-destroying', 'releases']"
Deployability,"I have replicated the issue on:; * MacBook Pro (M1, macOS Ventura 13.5.1); * MacBook Pro (Intel, macOS Big Sur 11.7.9). I could **not** replicate it on a Windows 10 laptop - colors using both screenshot methods were identical. Therefore it seems to affect all macOS releases, but probably not other platforms (although Linux hasn't been checked yet).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1309#issuecomment-1703759077:266,release,releases,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/1309#issuecomment-1703759077,1,['release'],['releases']
Deployability,"I haven't been able to replicate this - but I was trying to do it by adjusting screen size, and not installing extensions (since creating an extension to add a button would be quite a hassle...). Questions:; * How are you opening the project (e.g. button, menu, drag & drop), and does it matter?; * Can you see the issue *without* any custom extensions installed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352368210:100,install,installing,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352368210,2,['install'],"['installed', 'installing']"
Deployability,"I haven't noticed any changes with this behavior recently on Win10; I just tested with the 3 kinds of image servers I normally use. . 0.2.0 release. Is this happening on a particular OS? I take it Pete is seeing it on his end. I am seeing the magnification get smaller as I zoom out, and larger as I zoom in.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640780209:140,release,release,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640780209,1,['release'],['release']
Deployability,"I haven't seen this problem - does it happen consistently or intermittently? If you restart QuPath and open the same image again, does the problem persist? Also, is the image on your local hard disk or on a network drive?. If you are able to share an image, then I can investigate some more - otherwise if I can't reproduce it I can only really look out for it in the future. In the meantime, for .ndpi it should be possible to open the image with either OpenSlide or Bio-Formats, and the settings described at the bottom of this page give ways to toggle Bio-Formats on/off for specific file extensions: https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/224#issuecomment-425106079:548,toggle,toggle,548,https://qupath.github.io,https://github.com/qupath/qupath/issues/224#issuecomment-425106079,1,['toggle'],['toggle']
Deployability,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-631451060:449,release,release,449,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060,2,['release'],['release']
Deployability,"I know there are some updates to how OpenCV operates with the newest version of QuPath. Are you running that one or the older 1.2? (I don't know that it is entirely official yet, but you can find it here https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). I don't have anything immediately useful, just wanting to check which version the error is happening in!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375334835:22,update,updates,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375334835,2,['update'],['updates']
Deployability,"I made two recent commits:; * https://github.com/petebankhead/qupath/commit/a0e1ec253dd790dfceb89b845848c037183d46e7; * https://github.com/petebankhead/qupath/commit/05aaf8f83b8de9166832d64fa6cdba53163e8d92. I'm not entirely sure if the issues have been resolved, but I haven't been able to reproduce any viewer synchronization issues since then. If you have a chance to build m8-SNAPSHOT (or wait until v0.2.0-m8 is released) please let me know if you can replicate the problems (or find new ones) connected to multiple viewers.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284#issuecomment-562845276:417,release,released,417,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562845276,1,['release'],['released']
Deployability,I recently found resources like this:. Release hash:; https://github.com/MCJack123/ghaction-Generate-Release-Hashes. Release signing:; https://wiki.debian.org/Creating%20signed%20GitHub%20releases (which equally allows one to verify a given download),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309:39,Release,Release,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309,3,['Release'],"['Release', 'Release-Hashes']"
Deployability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor). ; Now my QuPath program doesn't work at all. ; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail. ; Any advice?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686:11,update,updated,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686,1,['update'],['updated']
Deployability,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409247462:278,update,updates,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462,2,['update'],['updates']
Deployability,"I see the same - I don't think it was the case before v0.1.2 was released (I developed it on a Mac and think I'd have noticed...). So my guess is that some macOS update in between could be responsible, but I'm not certain. As a workaround, under the _Preferences_ try turning on the option _Use tile brush_. This will change the behavior of the brush if you happen to be using superpixels... but otherwise it shouldn't. However, it _will_ avoid the attempted use of a custom cursor, which appears to be what is causing the trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/194#issuecomment-409582139:65,release,released,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/194#issuecomment-409582139,2,"['release', 'update']","['released', 'update']"
Deployability,"I should probably admit that I didn't know anything about shapefiles - I'll look out for them from now on! If you happen to know of other pathology software that can export/import them (can Definiens do both?) that would be very good to know. I actually made a half-hearted attempt to incorporate Jython support in the early days, before I went all-in for Groovy because trying to be multilingual took extra effort that (at the time) didn't seem worth it. _However_, this means that if you download the Jython standalone jar and drag it onto QuPath then a new 'Jython' option will appear as an available scripting language. Now the half-hearted bit: there's a tiny error in the default import statement for Jython in v0.1.2 - so until that's fixed you'll need to *uncheck* the option *Run &rarr; Include default bindings*. This means that the normal [`QPEx` things](https://github.com/qupath/qupath/wiki/Writing-custom-scripts#default-methods--imports) will not be available in the script, and you'll need to import these separately... and possibly remember to turn the default imports back on if your Groovy scripts require them. The following works for me, after installing the jar and setting the script language to `Jython`:; ```python; from qupath.lib.scripting.QPEx import *; annotations = getAnnotationObjects(); print annotations; ```. The fix to address this in the code appears trivial (switching `+` to `,` in the code), so potentially this won't be necessary in later versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945546:1165,install,installing,1165,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945546,1,['install'],['installing']
Deployability,"I suspect that one computer is opening the image with OpenSlide, and the other with Bio-Formats.; My guess is that this one (with the black background) is using Bio-Formats. If you have a recent version of the Bio-Formats extension installed, you can force it not to be used (or always to be used) for the `.scn` files - there are instructions at the bottom of https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/189#issuecomment-408123949:232,install,installed,232,https://qupath.github.io,https://github.com/qupath/qupath/issues/189#issuecomment-408123949,1,['install'],['installed']
Deployability,"I tested some old mice (that got hidden away for a reason), and their wheel button triggered multiple events at times. This behaviour was corrected with a 10ms debounce. Am I OK to add a (if you're happy with the variable name) :. ```; 	private long lastMousePressedWheel = 0L;; ```. and then, the `e.isMiddleButtonDown()` event would be handled as such:; ```; 			else if (e.isMiddleButtonDown()) {; 				//For 10ms after the first click, ignore all additional events; 				long time = System.currentTimeMillis();; 				if (time - lastMousePressedWheel < 10); 					return;. 				// Here we toggle between the MOVE tool and any previously selected tool; 				if (getSelectedTool() == PathTools.MOVE); 					setSelectedTool(previousTool);; 				else; 					setSelectedTool(PathTools.MOVE);; 				lastMousePressedWheel = time;; 			}; ```. I'm hoping to reuse the same variable to debounce the horizontal scroll buttons as well, hence the name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219652529:586,toggle,toggle,586,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219652529,1,['toggle'],['toggle']
Deployability,"I think I found the problem -- it's the libtiff in homebrew. It's a vanilla build of libtiff 4.1 and it's missing a series of patches which Ubuntu have applied to fix problems with things like YCbCR and JPEG-in-TIFF. This means that TIFFs created on mac tend to be broken :(. Sorry for the noise, I'll close.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715898223:126,patch,patches,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715898223,1,['patch'],['patches']
Deployability,"I think it would be better to post a question like this on [the forum](https://forum.image.sc/) along with a clear description of what you tried, which software versions you're working with, etc. > So no InstanSeg and other Deep Learning models that depend on this Deep Java Library for me. DJL generally and InstanSeg specifically should still work with CPU support only. > There just must be a way to make it work more easily. We have indeed done our best to do so; it's not necessarily easy to handle all of the possible configurations people have",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352697439:524,configurat,configurations,524,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352697439,2,['configurat'],['configurations']
Deployability,"I think so, it's probably the most relevant link. But it can vary depending on what exactly you want, e.g.; * if you are working with brightfield/fluorescence images; * if you need the pixel size to be stored in microns within the image or not; * if you want compressed images or not; * if you're using QuPath v0.1.2 (the stable one) or the more recent milestones (which are a work in progress and requires some scripts to be updated). I'd suggest giving it a try, and starting a thread at https://forum.image.sc/tags/qupath if more customization is needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494035194:426,update,updated,426,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494035194,1,['update'],['updated']
Deployability,"I think the current answer is 'no'. As I understand your question, you mean tiles containing pixel data - is that right?. I have been working on some related things that could change this situation, making it possible to overlay different images and apply a (rigid) transformation if necessary to aid alignment... but as one project among many, it could take some time for the changes I'm making to become really useful. And I'm not actively working on any more complex registration - just shifts and rotations. Can you say more about what your aim is? For example,; * Do you primarily want this for visualization or analysis?; * Do you have different tissue sections, or the same tissue restained? (I guess the first, but the second is certainly easier on the image processing side...); * Which stains (colors) are you using for each TMA?. I'm not sure if it helps or you have already seen it, but with [Multiple viewers](https://github.com/qupath/qupath/wiki/Multiple-images) it is already possible to view different TMA cores side-by-side, and then navigate the grid using the arrow keys. TMA cores at the same grid location will be displayed together. You could also export each TMA core as a TIFF image from QuPath, and explore aligning these using some of Fiji/ImageJ's [image registration](https://imagej.net/Category:Registration) tools on a core-by-core basis. This could require quite a bit of effort. > Sidenote: I'm using [this blog](https://petebankhead.github.io) to describe some of the updates I'm working on, but which aren't yet in a QuPath release - it's also a good place to give feedback/suggestions to help shape where the changes go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377154596:1502,update,updates,1502,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377154596,4,"['release', 'update']","['release', 'updates']"
Deployability,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:423,release,release,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906,1,['release'],['release']
Deployability,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424744221:644,update,update,644,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221,2,['update'],['update']
Deployability,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407441080:293,update,updates,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080,1,['update'],['updates']
Deployability,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632628884:61,upgrade,upgrade,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884,2,['upgrade'],['upgrade']
Deployability,"I think you're right, fortunately I don't see any obvious code path that could call it with anything other than 0 for those values but I'll look a bit deeper before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/649#issuecomment-740503008:174,release,release,174,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740503008,1,['release'],['release']
Deployability,"I tried `defaults` first, but quickly ran into the permissions problem - so switched to `PlistBuddy` as suggested at https://github.com/qupath/qupath/issues/1250. That *seemed* to work, but it turned out to still fail in confusing and subtle ways after downloading & installing. After very many hours spent trying to sort it out, I had to admit defeat because it was blocking the release - details are at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372:267,install,installing,267,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372,2,"['install', 'release']","['installing', 'release']"
Deployability,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996246433:11,install,install,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433,2,['install'],['install']
Deployability,"I understand, it is hard to capture the idea. Overall I see that after installing QuPath using the "".msi"" in two different users in the same computer when opening QuPath in the second one I notice that I have access to the first user files. . I'll proceed to close this ticket, Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309223445:71,install,installing,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309223445,1,['install'],['installing']
Deployability,I updated my [pull request](https://github.com/qupath/log-viewer/pull/59) with these changes,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1729327335:2,update,updated,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1729327335,1,['update'],['updated']
Deployability,"I updated the `MetadataStore` and changed `Project` and `DefaultProject` accordingly. I didn't update other classes that were using `MetadataStore` like `TMACoreObject`, and I didn't make `ProjectImageEntry` implements `MetadataStore`. Should I do that here, or create another PR?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1584#issuecomment-2285962728:2,update,updated,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1584#issuecomment-2285962728,2,['update'],"['update', 'updated']"
Deployability,I was also wondering how to do this. Looking into the doc how it could be programatically accessed for read/write operations. I will keep updated if I find something,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-349589480:138,update,updated,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-349589480,1,['update'],['updated']
Deployability,"I will close this issue because of a lack of a response, and I haven't been able to replicate it. Please reopen it again if you are able to replicate it with the latest release (currently v0.2.0-m10) and provide further information.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/416#issuecomment-617786012:169,release,release,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/416#issuecomment-617786012,1,['release'],['release']
Deployability,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-966046117:620,install,installer,620,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117,1,['install'],['installer']
Deployability,"I would start by using another computer temporarily and ensuring you can open your data set with another installation of QuPath on that computer. Even better if it is a Win10 computer where you had not installed QuPath before. If it is a time crunch, using another computer might be the best short term bet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519191277:105,install,installation,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519191277,2,['install'],"['installation', 'installed']"
Deployability,I'd be very interested to know if the [JavaFX update v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) has resolved this.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-549051596:46,update,update,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-549051596,2,"['release', 'update']","['releases', 'update']"
Deployability,"I'd like to give generic examples of how others might (and will, IMHO) find this problematic in the future. Let's get more specific then:. My use cases include QuPath exports that do not align with the true image dimensions. The IIPImage server does not auto-crop images or read these bounds from server files. My files do not even store this data. ML researchers work with libraries (TF, pytorch...), and they might rely on OpenSlide/BioFormats to read the data, they might as well be unaware of behind the scenes and be surprised later. The output of a convolutional network is probably misaligned to the original data. We are writing ML pipeline data loaders for OME-TIFF and DICOM that use, for example, [wsidicom](https://github.com/imi-bigpicture/wsidicom). I don't know (but doubt it) whether this library delivers by default cropped data. . >I'll give it some more thought. Thank you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630907596:640,pipeline,pipeline,640,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630907596,1,['pipeline'],['pipeline']
Deployability,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-632239499:61,release,release,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499,2,['release'],['release']
Deployability,I'll close this because `jdk.jsobject` is now included in the `build.gradle` for the next release - thanks!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639#issuecomment-811283033:90,release,release,90,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-811283033,1,['release'],['release']
Deployability,"I'll close this because there's now an Apple Silicon build of QuPath, other QuPath updates, JavaCPP updates, macOS updates... and I can't remember the last time I saw the problem. So let's assume it's no longer a problem at all. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602:83,update,updates,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602,3,['update'],['updates']
Deployability,"I'll close this issue as part of my Saturday repo-cleaning, since support for overlays in SVG exports has now been merged and will be available in the next release (v0.5.0).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239:156,release,release,156,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239,1,['release'],['release']
Deployability,"I'll close this issue, because it has been over a year and QuPath v0.4.x has come along in the meantime with other changes that may have helped (including Bio-Formats updates)... or at least taken us further away from figuring out what happened in v0.3.2 specifically. v0.5.0 will also be long soon; feel free to reopen if the issue reoccurs with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1732337755:167,update,updates,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1732337755,1,['update'],['updates']
Deployability,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-549051719:148,release,releases,148,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719,2,"['release', 'update']","['releases', 'update']"
Deployability,"I'll close this, since it has been 2 years since the last reply and I want to optimistically believe that means @yli-hallila's solution is working well enough. In any case, it relates to an old QuPath release and I want to clean up our open issues to remove ones we won't realistically be able to solve. QuPath v0.5.0 is coming soon; if there are still problems with it and CentOS, feel free to open a new issue then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-1732336555:201,release,release,201,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-1732336555,1,['release'],['release']
Deployability,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:201,Update,Update,201,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434,1,['Update'],['Update']
Deployability,"I'll merge this because I think it solves the initial problem with exceptions due to the extensions directory not existing. I couldn't replicate the other issue on my Mac, although I'm not certain I was following the steps correctly. I first dragged https://github.com/qupath/qupath-extension-wsinfer from a browser, and then https://github.com/qupath/qupath-extension-stardist. Both extensions seemed to install 'properly', except WSInfer wasn't compatible so that confused things slightly by throwing exceptions (rightly). Immediately after installation, the extension manager wrongly showed the StarDist extension version as being v0.5.0-SNAPSHOT, but after relaunching QuPath this was corrected to v0.4.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1415#issuecomment-1798044775:405,install,install,405,https://qupath.github.io,https://github.com/qupath/qupath/pull/1415#issuecomment-1798044775,2,['install'],"['install', 'installation']"
Deployability,"I'm afraid I don't have much experience of handling dependencies on Linux. There is a little more information the binaries were created at https://github.com/qupath/qupath/issues/2. Basically I compiled it on Ubuntu 16.04 and have not tested it on 14.04. The possibilities that I can think of that might help would be:; * Try a newer version of Ubuntu if possible.; * Make sure Java is installed in Ubuntu. I don't think this should be necessary (since it is included in the QuPath download)... but perhaps.; * Try removing any ```.jar``` files connected to OpenSlide / OpenCV / JInput / JPen from within QuPath (the libraries should be mentioned in the ```qupath-***.jar``` file name). Apart from the Java Runtime Environment (JRE) itself, these are the parts that depend on native libraries. QuPath should still work without them, but will miss some features - such as whole slide image handling and classification. If the JRE is not the problem then hopefully this would enable QuPath to start, and you can recover some of the missing functionality by downloading [extensions](https://github.com/qupath/qupath/wiki/Extensions) that don't require native libraries.; * Try compiling QuPath from source from within Eclipse. You may find this easier to set up using Oracle's Java Development Kit than OpenJDK... but both should work.; * Try launching QuPath from the command line, setting the ```java.library.path``` variable and possibly using a different JRE if required... figuring out how to do this could be tricky, although [this](https://github.com/qupath/qupath/issues/27) may help a little bit. I hope something in there might be useful. If you are able to find a solution, it would be great if you could post it here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280861844:386,install,installed,386,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280861844,1,['install'],['installed']
Deployability,"I'm afraid I don't know of any way to open at 16-bit .mrxs files within QuPath... and I don't know of any current developments that will change that situation. Basically, there are two libraries that can be used to read whole slide images into QuPath: OpenSlide and Bio-Formats. However, OpenSlide only supports a subset of 8-bit RGB .mrxs files (16-bit multichannel would require a very substantial redesign), and is [not officially supported](https://lists.andrew.cmu.edu/pipermail/openslide-users/2012-July/000377.html).; [This blog post](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/) explains why there is no support for .mrxs files within Bio-Formats. If another library became freely available that could read .mrxs files, then potentially this could be used to add support within QuPath. But I'm not personally aware of any such library, and the blog post above suggests that creation one would be a difficult task. I've tagged this post as 'help wanted', in case anyone sees a possibility to help by creating such a library/integration.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333917237:1068,integrat,integration,1068,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333917237,1,['integrat'],['integration']
Deployability,"I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see [docs](https://qupath.readthedocs.io/en/stable/docs/intro/installation.html#macos)). Does that method give the installation failed result for you? Could you find any solution?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956030617:32,install,installed,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956030617,3,['install'],"['installation', 'installed']"
Deployability,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534118216:299,update,updated,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216,2,['update'],['updated']
Deployability,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630152060:511,release,release,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060,1,['release'],['release']
Deployability,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/206#issuecomment-416021080:109,install,installed,109,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080,2,['install'],['installed']
Deployability,"I'm afraid that some of the commands flagged 'experimental' are more experimental than others... and that's one that is more experimental than most. It was added as a very simple counting method, but I only used it myself for some TMAs to have a quick comparison of the results against 'full' cell-by-cell analysis. It turns out to have some troubles that need to be fixed, especially when used in other contexts. The problem @Svidro mentions is that it requires at least one 'hematoxylin' pixel to be able to return anything.; Another strange feature is that, if you look at the hierarchy, the 'Positive' region is _inside_ the 'Negative' one.; And a third is that the 'Num pixels' value is a count of the pixels at the downsample level used. This isn't necessarily 'wrong', but it is not ideal because the measurement name doesn't say what downsample was used. It would be preferable to have a value converted to µm. > Some of these problems arose because the command was initially designed to generate 'Any staining' and 'DAB' regions; at that time, it was logical to return nothing if 'Any staining' was 0. It was also logical to put the 'DAB' region inside 'Any staining' in the hierarchy. Unfortunately, these aspects weren't updated when 'Any staining' was switched to become 'Hematoxylin'. Added to all that, the command doesn't handle fluorescence or other stain types. For all these reasons, I expect that this command will be replaced or substantially changed at some point. Therefore, while you could maybe work around the limitations of the positive pixel command, I'd suggest trying to use other commands for now if possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-297915004:1232,update,updated,1232,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-297915004,2,['update'],['updated']
Deployability,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631377861:87,install,installed,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861,1,['install'],['installed']
Deployability,"I'm not sure about this. It has been a long time, but I think the reason I excluded sum from non-nucleus measurements is because it is common for people to train classifiers using all features. Because cell expansion is only distance-based, I felt that sum measurements outside the nucleus could be extremely unreliable. Also, the sum depends upon the resolution at which the measurement is calculated; for the default cell detection, this is the detection resolution, but that might not be what the user expects. The need for a nucleus sum, however, seemed sufficiently common that it should be included - and the nucleus ROI is likely to be more reliable, which reduces the problems slightly. I realise it's a judgement call and people may disagree. I'm reluctant to change the built-in cell detection, since the current behavior hasn't changed across releases and any modifications can impact classifiers. I'd rather we focus on moving away to alternative cell detection methods, and decouple measurement from detection to improve flexibility.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883:854,release,releases,854,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883,1,['release'],['releases']
Deployability,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497588046:313,install,install,313,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046,4,['install'],['install']
Deployability,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570329327:98,install,installation,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327,2,['install'],['installation']
Deployability,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/328#issuecomment-499254844:274,update,updated,274,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844,1,['update'],['updated']
Deployability,"I've attempted a fix at https://github.com/qupath/qupath/pull/1344 - it seems to be working on my computer, so if no new problems arise the correct version should be available in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244:188,release,release,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244,1,['release'],['release']
Deployability,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-558638519:143,release,release,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519,1,['release'],['release']
Deployability,"I've flagged this as ready for review now. It definitely needs more testing. As described by @carlocastoldi the server is loaded whenever *any* change to the metadata is made. The server can be loaded more often might be expected, sometimes for subtle, hard-to-address reasons. Some relevant facts:; * `ImageServerMetadata` *isn't usually saved with an image when it is first added to a project*. This only happens the first time the data file is saved.; * The `ImageServerMetadata` is updated as soon as an image is opened in a project to ensure that the name specified in the project matches that in the server metadata. This triggers the server to be loaded if; * The `ImageServerMetadata` isn't available, or; * The `ImageServerMetadata` is available, but contains the wrong name (e.g. the name was changed in a project, but then the data file wasn't saved afterwards); * *Run for project* will always force the `ImageServer` to be loaded, because it will always save the data - and this act of saving requires the `ImageServer`. So you can only get advantages if you avoid *Run for project*, e.g. by using *Run for project (without save)* instead.; * We can't rely on not saving if there have been no changes, because the script editor now automatically fires a hierarchy change after completion. This means QuPath *always* thinks that the script may have changed the `ImageData`, so `ImageData.isChanged()` returns true. We didn't used to do this, but then we had to keep telling users to add `fireHierarchyUpdate()` at the end of many otherwise simple-looking scripts, and that was a pain for everyone. This basically means that lazy-loading only works if the data for an image has been saved at least once, and the user hasn't messed around too much with image names within their project. The 'easy' way to trigger an image to be saved once is to do a 'Run for project' script - even if the script doesn't do anything. This should be enough to prompt the `ImageServerMetadata` to become embedd",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037:486,update,updated,486,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037,2,['update'],['updated']
Deployability,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925125755:197,release,releases,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755,1,['release'],['releases']
Deployability,"I've installed Debian + i3 in VirtualBox to experience the issue and can conclude... QuPath really doesn't seem to work very nicely under these conditions, but it's not clear to me if/how this can be resolved. It also might be my lack of familiarity with i3 that is causing the trouble. QuPath v0.2.0 includes a *File &rarr; Quit* option and removes the startup screen... so this should at least address some of the problems reported. Otherwise, it uses standard JavaFX windows. If most of these work, but an identifiable minority do not, then these is something that could potentially be fixed by providing other ways to close these windows. But if there is a more fundamental issue with i3 and JavaFX then this likely cannot be handled in QuPath alone. Is this issue still of sufficient interest to anyone to explore in more detail what does/doesn't work and help try to construct a plan to resolve it? If so, please let me know what issues remain.; If not, or if the changes in v0.2.0 have been enough, I'd like to close the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-641999427:5,install,installed,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-641999427,2,['install'],['installed']
Deployability,I've just built v0.6.0-SNAPSHOT from source and this problem seems to have gone anyway... I guess through a Java/JavaFX dependency update. So I think we can close this since it'll be fixed in the next release (even though we didn't intentionally change anything to fix it)?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1436#issuecomment-2256309017:131,update,update,131,https://qupath.github.io,https://github.com/qupath/qupath/issues/1436#issuecomment-2256309017,2,"['release', 'update']","['release', 'update']"
Deployability,I've just made a pull request above that should strip off any null characters at the end of image names provided by Bio-Formats. This may not fix existing projects (since the image names have already been set) but hopefully is enough to prevent it occurring in new projects. If you've a chance to check it please let me know how it goes. I was in the process of setting up the v0.2.2 release when this issue emerged; if it looks basically ok then the proposed fix could be included in the release tomorrow.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664581368:384,release,release,384,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664581368,2,['release'],['release']
Deployability,"I've just made a pull request that I think resolves this. The underlying issue is that QuPath has stored the requested maximum memory value from another installation, but this isn't consistent with the cfg file of the current installation. If you request that the max memory is identical to the value stored in the preference, then it isn't updated. Setting it to anything else (higher or lower) should work. (There is possibly no need to store the memory in a persistent preference at all - this was more relevant in v0.1.2 when memory could be handled differently. The pull request doesn't go quite that far though.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/582#issuecomment-669019754:153,install,installation,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-669019754,3,"['install', 'update']","['installation', 'updated']"
Deployability,"I've just updated the Mac release [here](https://github.com/qupath/qupath/releases/tag/v0.1.1).; It works for me on all three computers now. Please let me know if it also solves things on your side. (Thanks again for reporting this - it appears to have been connected to libraries I have installed on my own computers but didn't include in the distribution, so I assume the Mac version was not working for anyone else... so it was a pretty big problem!)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265556833:10,update,updated,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265556833,4,"['install', 'release', 'update']","['installed', 'release', 'releases', 'updated']"
Deployability,"I've made a fix for the 'double-point' issue in one of my branches for inclusion in the next release. Depending on your use case and why this is causing you problems, it may help to edit an existing polygon with the Brush tool, which can address small (or large) defects. Potentially the problematic final point for existing annotations could be removed by scripting, if really necessary. Switching tools while in the process of drawing isn't really intended...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-438962953:93,release,release,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438962953,1,['release'],['release']
Deployability,"I've made an update that will be included in v0.1.2 so that QuPath can recover more gracefully if it finds that OpenSlide cannot be loaded. Previously, it recovered only the first time... but subsequent attempts to open images were thwarted by a particularly nasty error - which caused the trouble you found. Therefore while it still remains a mystery why OpenSlide cannot be used on one of your computers, at least there should be no need to manually disable OpenSlide through renaming from now on. (Note: I'd recommend uninstalling QuPath before installing the update, since otherwise it is likely that the current files, renamed and not, will hang around within Windows... they shouldn't cause trouble, but uninstalling manually can help make sure.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268797552:13,update,update,13,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268797552,3,"['install', 'update']","['installing', 'update']"
Deployability,"I've made changes on my fork at https://github.com/petebankhead/qupath/commit/bfaa0bc7aed21c28497be064da3cd2009db249cb#diff-c197962302397baf3a4cc36463dce5ea but haven't merged these back yet. For now, jpackage remains a moving target and the build script will probably need further updates as it develops...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/311#issuecomment-487147127:282,update,updates,282,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487147127,1,['update'],['updates']
Deployability,I've merged a proposed fix at https://github.com/qupath/qupath/pull/1620 which will be in the next QuPath release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1586#issuecomment-2339638253:106,release,release,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/1586#issuecomment-2339638253,1,['release'],['release']
Deployability,"I've now added a reference to this in the documentation: https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux. I'll close the issue since it seems that the bug is outside QuPath and therefore I don't think it's something we can resolve, beyond documenting the workaround.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614#issuecomment-709417032:108,install,installation,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/614#issuecomment-709417032,1,['install'],['installation']
Deployability,"I've now updated the documentation on using ImageJ with QuPath at https://github.com/qupath/qupath/wiki/Working-with-ImageJ. I'll close this issue now, but please reopen it if things aren't working as described. The use of visibility status to influence what is sent to ImageJ should be available in the v0.0.4 release of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253767302:9,update,updated,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253767302,2,"['release', 'update']","['release', 'updated']"
Deployability,"I've only set up the entire project with Eclipse, using the approach briefly described at https://github.com/qupath/qupath/tree/v0.1.2/src/main/resources/eclipse - I'm afraid I don't know how to address the issues when using other IDE's.; (Incidentally, those instructions are a little old now, not all steps may be necessary. For example, from memory I think only the .project file needs updated, not the .classpath file.). However, here are some notes that might be helpful:. * Most of the POM files should descend from the 'base' POM, which specifies that the compiler should be compatible with [Java 8 here](https://github.com/qupath/qupath/blob/v0.1.2/pom.xml#L176). I believe this should then be inherited across the project.; * slf4j-api is a dependency of logback-classic. This is specified in the base POM, and so Maven should still take care of slf4j even if it isn't mentioned directly. I don't know why anything involving javax.script would be troublesome.; * The jar files alone required for QuPath are reasonably small, but the JRE is required for running it. The JavaFX packager can be used to put them all together in one (larger) installer, but if you already have a compatible JRE installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:389,update,updated,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['update'],['updated']
Deployability,"I've rebased my patches on main, now that I understand that main is the correct branch to use, so I'll make a separate pull request and close this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/651#issuecomment-740692600:16,patch,patches,16,https://qupath.github.io,https://github.com/qupath/qupath/pull/651#issuecomment-740692600,1,['patch'],['patches']
Deployability,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518022687:661,update,update,661,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687,1,['update'],['update']
Deployability,"I've tested this on two computers and found:. * It works for me on Windows; * It works from me on Mac if I build the code from source... but not if I use the installer. This makes me think it *might* be a permissions issue within the operating system, but I'm not sure. Any more info you can provide would be helpful. In case it cannot be resolved, I've added documentation on setting the memory manually to; https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-631258118:158,install,installer,158,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631258118,1,['install'],['installer']
Deployability,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:596,update,update,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828,1,['update'],['update']
Deployability,"I've updated one of my old incorrect javadocs - assuming it still builds fine I think this is good to merge, thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-2085691166:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-2085691166,1,['update'],['updated']
Deployability,I've updated the ReadMe to remove the (out-of-date) reference to needing to build it yourself.; https://github.com/qupath/qupath/commit/3d2331fb2f0f169c35a3bd04f6026bd0d7bfecc9,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-489080862:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-489080862,1,['update'],['updated']
Deployability,"I've updated the page to clarify that it refers to v0.1.2. Everything will need to be revised for v0.2.0, but the priority for now is to work on the code. You'll need to clone the repository to get the code, the sources are no longer included in the distribution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/350#issuecomment-518597688:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/350#issuecomment-518597688,1,['update'],['updated']
Deployability,I've updated these limits in v0.2.1. Hopefully that is enough to avoid this issue resurfacing.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/96#issuecomment-644847539:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/96#issuecomment-644847539,1,['update'],['updated']
Deployability,"If you double-click on the number, you can get lots of digits... is that sufficient?. If not, it looks like something we should be able to change by switching the [formatting here](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/BrightnessContrastCommand.java#L202) (to use a `NumberFormatter`, so that decimal places aren't added when not needed) @melvingelbard . (PS. I'd really rather use [the forum](http://image.sc/tag/qupath) for discussions/ requests, and GitHub only for bugs/dev use for specific releases)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/669#issuecomment-785239425:588,release,releases,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-785239425,1,['release'],['releases']
Deployability,"If you get it working I would be curious to see a sample script. ; For clarity since I have not played with this... updateClassifier will add the input list of objects to the current list of objects from all previous slides? Or restart the classifier with only the current slide input, but same choice of classifier and variables?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/208#issuecomment-417789387:116,update,updateClassifier,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417789387,1,['update'],['updateClassifier']
Deployability,"If you remove the jar file with 'qupath-extension-script-editor' in the name from your installation, QuPath is supposed to fall back to use a simpler script editor that lacks any kind of syntax highlighting. This may be worth trying as a workaround if the bug is more problematic than the loss of highlighting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314#issuecomment-491329554:87,install,installation,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/314#issuecomment-491329554,2,['install'],['installation']
Deployability,"If you try the latest [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) you can get the channel names by scripting. And if you combine it with my QuPath fork, you can see them in the _Brightness/Contrast_ window. There are more details [here](https://petebankhead.github.io/qupath/2018/08/03/bioformats-update.html#support-for-32-bit-multichannel-images)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/186#issuecomment-410657364:332,update,update,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-410657364,1,['update'],['update']
Deployability,"If you use VisualVM then you should be able to find exactly what takes time. Thumbnail generation can't safely be done in parallel because there's no guarantee the images will be pyramidal, so there is a high risk of out of memory errors. That being said, I'm not certain thumbnail generation is the problem. If it's once per day, there could be some issue associated with update checking... but I can't see why that would be a problem and it wouldn't happen with the project is requested. VisualVM should resolve it one way or another in any case. One other thing: is there anything conventional about where the project/images are stored? The need for a reboot makes me think there could be an operating system component. I've never seen it myself and don't recall anyone having reported it before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611:373,update,update,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611,1,['update'],['update']
Deployability,"If you zoom in more, by default the brush will be effectively smaller and so it's easier to select a region without changing the shape. Of you change just switch to the *Move* tool to select another region by double-clicking on it, without any risk of changing its shape. You can toggle between tools by just pressing `M` and `B`. In general, you might find 'locking' annotations helpful - that helps avoid changing them accidentally, and also allows you to draw _new_ regions inside an existing annotation with the brush. To do so, select the annotation and then right-click on it, and choose *Annotations &rarr; Lock*. Finally, if you are doing a lot of painstaking annotations be sure to save regularly (*Ctrl + S*)... or consider trying the beta/pre-release version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). Installation is a bit more awkward, but it does provide (limited) undo support along with many other improvements - so may be worth it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399201573:280,toggle,toggle,280,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399201573,7,"['Install', 'release', 'toggle', 'update']","['Installation', 'release', 'toggle', 'updates']"
Deployability,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479821853:388,Update,Update,388,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853,2,"['Update', 'release']","['Update', 'released']"
Deployability,"In the `QuPath.cfg` file of your installation, under `[JavaOptions]`, the exact line to add is; ```; java-options=--illegal-access=warn; ```; I've just tried this and it has resolved another problem that I expect to be related (the inability to add metadata to project entries in the current v0.3.0-SNAPSHOT).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717#issuecomment-829898314:33,install,installation,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-829898314,1,['install'],['installation']
Deployability,"In the end I had to revert the changes that 'fixed' this because they ended up causing much bigger problems, which only emerged when preparing the next release candidate. More details at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750316605:152,release,release,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750316605,1,['release'],['release']
Deployability,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411576889:171,Update,Update,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889,1,['Update'],['Update']
Deployability,"Interesting, I can get the file, and when I look inside it, I see the same .qpdata structure as ones I have with only annotations, but when I load it there are no annotations. I am unsure if the reason I do not get any annotations is related to your problem, or something else related to regional settings/commas/periods. One last try before I leave this for Pete... sometimes cells can get trapped ""outside"" of the annotations, and you need to force an update. I honestly forget when this happens, but I have an example of it right now where the Annotations tab shows the annotation with no cells, and the Hierarchy tab shows the annotation at the top (but empty) and a list of polygons below it, all on the first level. In order to resolve the above case, you can either select and ""jiggle"" the annotation slightly, or to be more precise, use the following script to try and force it to update. Be aware it may seem to freeze if you have a large number of detections. For ~600,000 detections it took about 10-15 minutes on my fairly fast computer since it only runs on one CPU core. https://gist.github.com/Svidro/5829ba53f927e79bb6e370a6a6747cfd#file-force-update-selected-annotation-groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/147#issuecomment-365453095:454,update,update,454,https://qupath.github.io,https://github.com/qupath/qupath/issues/147#issuecomment-365453095,3,['update'],"['update', 'update-selected-annotation-groovy']"
Deployability,Intriguing - if you download the x86 build does it have the same behavior? I guess you may have to rename any Apple silicon installation beforehand (I'm not sure if/how the general package installer deals with multiple installations with the same name).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309:124,install,installation,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309,3,['install'],"['installation', 'installations', 'installer']"
Deployability,Is an sha256 hash available for the current Qupath (0.3.2) release? (specifically the windows distribution?),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738:59,release,release,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738,1,['release'],['release']
Deployability,Is it worth revisiting the idea of a draft release pipeline using actions? Manually triggered,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935805125:43,release,release,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935805125,2,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,"Is there a scenario when this causes a problem, or is it just unexpected?. I can make a change easy to use the pixel size of the image at the time the `LabeledImageServer` is created (I'll think more about it, but I haven't come up with a reason not to do this yet). However, this still won't be able to recognize any changes to the metadata of the underlying image... so if you were to change the pixel size after creating the labeled server this change would not filter through. That might then also be unexpected. An alternative (but consistent) change would be for the labeled server to *always* be uncalibrated. And as you may have seen, labelled servers can't currently have their metadata updated at all. Perhaps they should permit this. I tend towards the first proposal (use the pixel size at the time the `LabeledImageServer` is created, but before committing to any one solution I'd like to better understand when the pixel size matters for labelled images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591#issuecomment-673115164:696,update,updated,696,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673115164,1,['update'],['updated']
Deployability,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956259133:12,install,installer,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133,2,['install'],"['installer', 'installer-encountered-an-error-that-caused-the-installation-to-fa']"
Deployability,"Is this able to add it to the `.pkg`, or only the .`.app`?. If it's only the `.app`, we could build that separately with `jpackage` but then need to somehow get it properly into a `.pkg` (which might not be that hard, but I don't know...). Actually, now that I think of it, it might be doable in Gradle as well - which has the benefit of knowing the version. Will try to look into it, but not sure if I'll have time before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727749527:432,release,release,432,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727749527,1,['release'],['release']
Deployability,"It does happen constantly. It didn't at first, and then started to appear. I don't know why,... but thought it might be worst reporting in case it had anything to do with QuPath. I might just try to re-install QuPath and see if it comes back.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518388476:202,install,install,202,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518388476,1,['install'],['install']
Deployability,"It has been a while, but I do not think you should have to install anything for Bioformats. All you need is the JAR file off of their website, and the JAR file from Pete, both at: https://github.com/qupath/qupath-bioformats-extension; And as it says, just drag them into the open QuPath window to add them to QuPath. I am not sure why you are having issues with a visual C++ redistributable; I am not entirely sure if that is related. At least, I do not recall having to install anything else when adding bioformats to QuPath, even when it was one of the first things I put on my computer. Is the error a QuPath error? It would probably be best to include a picture or at least the text of the error, and exactly when the error pops up (when you drag the bioformats extension into the QuPath window? when you try to open the CZI file?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-356998068:59,install,install,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-356998068,2,['install'],['install']
Deployability,"It looks like OpenSlide may need to be recompiled (maybe with a different libtiff) to handle these files. In the meantime, it should be possible to get QuPath to use an alternative version of OpenSlide by removing the OpenSlide-related files from QuPath, and amending the ```java.library.path``` used when launching QuPath if needed. I do not have much experience of handling native libraries with Java on Linux, but Issue #27 may be of some use for reference. Basically you can launch QuPath from the command line and set ```-Djava.library.path``` or modify the ```QuPath.cfg``` file. If you would prefer to avoid this, as a shortcut do either of these two methods work?. * Install the Bio-Formats extension, as described [here](https://github.com/qupath/qupath-bioformats-extension), to use Bio-Formats as an alternative; * Copy ```libopenslide.so.0``` from your working OpenSlide distribution to replace the corresponding file in your QuPath installation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65#issuecomment-296463668:675,Install,Install,675,https://qupath.github.io,https://github.com/qupath/qupath/issues/65#issuecomment-296463668,2,"['Install', 'install']","['Install', 'installation']"
Deployability,"It looks like the root problem is that OpenSlide can't be loaded, which I presume is somehow related to the upgrade - but I don't know how. I would suggest trying the zipped version of QuPath v0.1.2 and running it from your desktop (or at least a folder where you definitely have full write permissions): https://github.com/qupath/qupath/releases/tag/v0.1.2; (You will need to extract all the files from the zipped file and the .exe you need to run will be among them.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519087329:108,upgrade,upgrade,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519087329,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"It looks like this is a JavaFX bug/limitation:. * https://bugs.openjdk.org/browse/JDK-8239590; * https://bugs.openjdk.org/browse/JDK-8241973. I'll explore whether I can find any workarounds for the next QuPath release, but it looks like it could be a more fundamental problem of how JavaFX and macOS work.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1701617743:210,release,release,210,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1701617743,1,['release'],['release']
Deployability,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414650057:236,install,installing,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057,1,['install'],['installing']
Deployability,It seems YouTube changed the access settings a while ago - they should be visible again now. (Note that the wiki hasn't been updated since QuPath v0.1.2 - the current documentation is at https://qupath.readthedocs.io/ ),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880:125,update,updated,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880,1,['update'],['updated']
Deployability,"It should be possible - the classifier interface is fairly simple, and once you've got a classifier you just need to update it. See https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathObjectClassifier.java#L69. The default is the [RTreesClassifier](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-opencv/src/main/java/qupath/opencv/classify/RTreesClassifier.java), and there are some useful helper methods in the [PathClassificationLabellingHelper](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathClassificationLabellingHelper.java) class.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/208#issuecomment-417774812:117,update,update,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417774812,2,['update'],['update']
Deployability,"It shouldn't be file size. Under *Help &rarr; Show setup options* I can restrict the RAM available to QUPath to 1GB and can still open the image without problems. You can also try the memory monitor from https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. The log says `Not a file that OpenSlide can recognize`. It's not clear to me if *any* images are working for you using OpenSlide. I asked above: under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? If you see that for any images, then we can conclude that OpenSlide is (at least partially) working. But if you always see *ImageJ server* or *Bio-Formats server*, then it probably isn't and that's the problem that needs to be solved. In that case, it would help to know if a separate installation of OpenSlide on your machine can read the image at all through any means.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371850256:799,install,installation,799,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371850256,2,['install'],['installation']
Deployability,"It was never stated, but I assume the basics were tried? Redownload the program, or try installing some other open source software to make sure it is not a general installer issue?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956184479:88,install,installing,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956184479,2,['install'],"['installer', 'installing']"
Deployability,It will be possible to set the grid spacing from the preference pane in the next release.; https://github.com/petebankhead/qupath/commit/9f337258120125724e17c7f6985fdce495a230f0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/252#issuecomment-450680141:81,release,release,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/252#issuecomment-450680141,1,['release'],['release']
Deployability,"It will still be possible to change the RAM, it just wouldn't be such a prominent option on startup. I'm not sure what the best default is, but I have the impression that more users will have too little RAM than too much - and the proportion needs to be defined when QuPath is built (I don't know any way to change it after it is installed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986#issuecomment-1171921970:330,install,installed,330,https://qupath.github.io,https://github.com/qupath/qupath/issues/986#issuecomment-1171921970,1,['install'],['installed']
Deployability,"It's a long time since I wrote that bit (and I probably should have used `Set.of(...)` instead of the `HashSet`...), but I'm not sure that adding `MOUSE_RELEASED` would be correct. The purpose of the `EventFilter` in general is to block UI events under some circumstances, e.g. when a script is running. We'd want mouse pressed & released events to be blocked (and not ignored... since ignoring them would let them through. I realise that's not entirely intuitive naming...). To make minimal changes I think you'd just need to check for the event you want and leave the rest as it was, e.g.; ```java; ...; } else if (e.getEventType() == MouseEvent.MOUSE_CLICKED && e.getButton() == MouseButton.MIDDLE) {; ...; }; ```. (Not certain I've understood, since that comment is only from reading - not running)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1313439231:330,release,released,330,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1313439231,2,['release'],['released']
Deployability,"It's intentional to have a 'user directory' rather than an 'extensions directory', as described here: https://qupath.github.io/QuPath-v0.2.0 (no direct links to headings yet...). The idea is much the same though. Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... Does setting it to _any_ other location fail, or does it fail _only_ if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. > Note that it's not a good idea to use an existing directory extension because older extensions can be horribly incompatible because of the many code changes. I could look at failing more elegantly in this case, but I only know of a couple of other people who had installed extensions other than Bio-Formats or Weka...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-476237704:868,install,installed,868,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476237704,2,['install'],['installed']
Deployability,"It's not clear to me if this is a QuPath question or an eclipse question, or if you are already familiar with eclipse. There are various other posts if you search for ""eclipse"" either here or on the [QuPath Google Group](https://groups.google.com/forum/#!forum/qupath-users) and I don't know what you've read or tried. In any case, I'm working on my own fork currently and making major changes (including a switch to Java 11, and from Maven to Gradle). The code here was always a bit awkward to set up, but once I have merged in the changes the process will be different... I'm afraid I can't write up any more extensive documentation on setting up this version, because it will soon be out of date and all my spare time to work on this really needs to be devoted to the update. Someone else may be able to help more.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/257#issuecomment-456983998:771,update,update,771,https://qupath.github.io,https://github.com/qupath/qupath/issues/257#issuecomment-456983998,2,['update'],['update']
Deployability,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-402686585:261,integrat,integration,261,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585,4,"['integrat', 'update']","['integration', 'update']"
Deployability,It's now possible to call `DnnModel.close()`. It will also be possible to call `StarDist2D.close()` in the next release of the extension.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/841#issuecomment-1336094677:112,release,release,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-1336094677,1,['release'],['release']
Deployability,"It's the same process to install extensions on Windows: drag the jar onto QuPath when it's running and (generally) accept the default extensions directory. You might need to restart QuPath, but maybe not. Files inside `QuPath\app\jars` aren't automatically picked up, rather they need to be added to the classpath explicitly. There's a file `QuPath.cfg` that defines this for the built-in jars.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/238#issuecomment-434396341:25,install,install,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/238#issuecomment-434396341,1,['install'],['install']
Deployability,Ive just downloaded and re-installed on my mac and its working now! What a pallava! I think I was tried to add extensions on the mac where they weren't needed and it seems to be working now. Ive just had a look at some tissue detections and it seems to be functional! I will continue using the software and would you mind if I checked in again if I continue having problems?. Thank you again,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357061650:27,install,installed,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357061650,1,['install'],['installed']
Deployability,Let me know when this is tested on different platforms so I can do a non-snapshot blosc release,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1966588492:88,release,release,88,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1966588492,1,['release'],['release']
Deployability,"Library(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:748); 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 13:20:08.256 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 13:20:17.509 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Calling Platform.exit();; ```. In Centos 6, I found some information about the error message ""j java.lang.Object.<clinit>()V+0"" : this may be a stack problem. I tried to change the thread stack size with -Xss in QuPath.cfg [JVMOptions], but I can not do it : . ```; 13:11:03.460 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; QuPath Error invoking method.; QuPath Failed to launch JVM; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:2571,update,update,2571,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,1,['update'],['update']
Deployability,"Licenses are up-to-date. For the release of the natives Jar for the final 0.5 release I'd like to have everything semi-cleanly coming from one repo, rather than currently taking their dll directly from openslide.org for windows. Therefore this is good to go, unless you want to clean up the loading code",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764700837:33,release,release,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764700837,2,['release'],['release']
Deployability,Linux binaries are only available for the very first release (v0.0.1). There hasn't yet been any audible demand for updated binaries... but they should at least be provided for v0.1. Ideally these would use OpenJDK and OpenJFX... although so far it has proven easier to create them using Oracle's JDK. Any Linux users who would like to see Linux binaries are invited to comment here...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-258683889:53,release,release,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-258683889,2,"['release', 'update']","['release', 'updated']"
Deployability,"Looking into this some more, it is more awkward than I had realised. I had thought that wrapping everything in a `PointerScope` would help, by ensuring that the `Net` was closed properly without further effort - however the use if [`Net.retainReference()`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/OpenCVDnn.java#L651) thwarts this. Calling `System.gc()` before/after using a DNN can help patch over the problem, however a better solution is likely to require a more thorough revision of `OpenCVDnn` - possibly by updating `DnnModel` to implement `AutoCloseable`. This makes it more of a v0.4.0 issue than a v0.3.1 issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/841#issuecomment-969247636:482,patch,patch,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-969247636,1,['patch'],['patch']
Deployability,"Looks good but unfortunately doesn't work on a Mac :( Or, rather, it seems to copy fine - but then immediately overwrite the clipboard contents with a screenshot of the current viewer (from the *Edit &rarr; Copy to clipboard... &rarr; Current viewer* shortcut). Switching to an event filter or to use key released didn't resolve it. I can think of three workarounds:. 1. Add a context menu, so that Mac users have an alternative option; 2. Disable copying to clipboard if the viewer isn't directly in focus; 3. Turn off the copying a current viewer screenshot to the clipboard shortcut altogether, so that it can't conflict with Ctrl/Cmd + C (I guess copying a screenshot isn't *that* common a task?). What do you think? I can't use Ctrl/Cmd + C in a measurement table of any kind, I guess because of the eagerness of QuPath to make screenshots.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/720#issuecomment-831461238:305,release,released,305,https://qupath.github.io,https://github.com/qupath/qupath/pull/720#issuecomment-831461238,1,['release'],['released']
Deployability,"Looks good! I'll merge this as it looks small enough to be a good candidate for v0.5.1 (if we make a release). Feel free to refactor according to the new style as a separate PR, but it's not urgent if it's currently working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1455#issuecomment-1910501486:101,release,release,101,https://qupath.github.io,https://github.com/qupath/qupath/pull/1455#issuecomment-1910501486,1,['release'],['release']
Deployability,"Looks great - is there any way to run it before merging? I think it's possible if it's on a branch of this repo, but not a fork. Is it also possible to separate out the draft of the release - or check what happens if running twice without a change of version? I imagine sometimes we might want to make builds without creating a release - but having the option to make a draft release as well is a fantastic improvement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943515233:182,release,release,182,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943515233,3,['release'],['release']
Deployability,"Looks like I need to also get my head around `includeBuild`, though the gradle documentation is as abstract as ever. I don't really see a huge difference either way. Would we be pushing updates to the openslide (or other ""core"" extensions) without making a new QuPath release?. I guess it would make issue tracking (and responsibilities) more granular if we can gradually slim down the qupath repo, though if that has the side-effect of making issues harder to find, then it's not really great. It is straightforward to extract the git history: https://docs.github.com/en/get-started/using-git/splitting-a-subfolder-out-into-a-new-repository",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343:186,update,updates,186,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343,2,"['release', 'update']","['release', 'updates']"
Deployability,"Maybe it's a legitimate memory leak in Rosetta? Did you check that? It appears a lot of people are having problems with it, like this: https://feedback-readonly.photoshop.com/conversations/lightroom-classic/lightroom-classic-desktop-disk-readwrite-to-ssd-m1-macs-with-rosetta/5fd7cefe7288d52d004c5a1c. Anyway, I'm waiting after a couple of things myself before the next release of JavaCPP, so if you figure out anything in the next week or so and find something, please do let me know! Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344:370,release,release,370,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344,2,['release'],['release']
Deployability,Might be an idea to do releases with & without javadocs as I guess many users won't use scripting at all,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2088504244:23,release,releases,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2088504244,1,['release'],['releases']
Deployability,"More info on using x64 build on Apple Silicon + OpenCV DNN:. * OpenCV 4.6.0 - **works!** But warns JavaCPP versions are incompatible (mixing 1.5.9 and 1.5.8); * OpenCV 4.7.0 - **fails**; * OpenCV 4.8.1 - **works!** But requires JavaCPP snapshot, `4.8.1-1.5.10-SNAPSHOT`, and a small change to QuPath's source due to an API difference (related to `Model.setScale(Scalar)`). So there seems to be 3 options, none ideal:; * Revert to OpenCV 4.6.0, *solely* for the benefit of Apple Silicon users with .czi images; * Use OpenCV 4.7.0, but require Apple Silicon users with .czi images to convert the images if they want to use StarDist; * Use OpenCV 4.8.1, but be relying on a snapshot rather than full release (of JavaCPP)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406#issuecomment-1782837510:697,release,release,697,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406#issuecomment-1782837510,1,['release'],['release']
Deployability,"My best guess is that it's related to user permissions. But I really don't know - I haven't seen this either. There's also one obscure tip that might be relevant at the very bottom of [this page](https://github.com/qupath/qupath/wiki/Paths-&-configuration). Basically, inside the QuPath installation there should be a file `QuPath.cfg`. You could try opening that in a plain text editor and on a line below [JVMOptions] adding `-Xmx8G` for 8 GB (for example). I haven't tested this to check it works, but then my memory settings are being read from my preferences so I can't replicate the exact problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-391973431:242,configurat,configuration,242,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-391973431,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"My experience with ISH makes me prefer straight measurement of estimated spot count versus using or creating H-scores. Sets of numbers representing+1 to +4 can be useful to distinguish populations with both high and low members versus a medium number of spots, but once you want to compare samples by a single number you might be better off with the spot count Mean/Median/Standard deviation, since those are all probably one or two lines of code. Plus I am not sure how well the new version of the H-score would compare to older publications, even if the math was adjusted to a 0-300 scale. I second using the Brightfield (other) when eliminating yellow areas like that for brightfield ISH. Sometimes once you have enough colors, though, you have to apply multiple sets of measurements to the ISH spots (select the subcellular detections, pick your color vectors, Add Intensity Measurements), and then filter them in a script, and update a ""Filtered Red Estimated Num spots"" or something like that. Two color brightfield ISH with red blood cells in the background gets to be a real pain. For a first pass you could try moving the color vectors in Estimate color vectors to something like :; ![image](https://user-images.githubusercontent.com/23145209/36652180-ed8010a8-1a61-11e8-8d09-d639962fd706.png); One vector picks up as much red as possible, and one to get ""the rest"" of what is in your sample. They do not need to be the same as when you did the cell detection. Picking up Groovy isn't bad if you understand programming basics like variables, if/for loops, etc. The main trick (for me) is learning the QuPath specific functions to use, and making use of either Gists, the forums, or IntelliJ to figure out how doable my plans actually are! I mostly just modify other people's scripts. I'm trying to fill out some of what I have learned in my Gists as I go along. On the image, it looks like you are missing quite a few of the smaller spots. If that isn't intentional, I would try turning off a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368380554:932,update,update,932,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368380554,2,['update'],['update']
Deployability,New color maps included in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3). Further information in [this tweet](https://twitter.com/petebankhead/status/1145616588823040000).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/315#issuecomment-514590018:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/315#issuecomment-514590018,1,['release'],['releases']
Deployability,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956171629:90,install,installation,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629,3,['install'],"['installation', 'installer']"
Deployability,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494029538:11,install,install,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538,1,['install'],['install']
Deployability,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650188152:259,release,releases,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152,2,"['release', 'update']","['releases', 'update']"
Deployability,"No problem! The same bug has turned up in surprising ways, but all should be resolved in the next release. Thanks for confirming the workaround works for now!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1023#issuecomment-1192464518:98,release,release,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/1023#issuecomment-1192464518,1,['release'],['release']
Deployability,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-449019237:243,update,update,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237,1,['update'],['update']
Deployability,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:322,install,installation,322,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['install'],['installation']
Deployability,"No worries, I looked at the Wiki multiple times as well and completely missed it :). I've also updated the [Working with Python](https://github.com/qupath/qupath/wiki/Working-with-Python) section of the Wiki and started adding a bit of info about [Paths & configuration](https://github.com/qupath/qupath/wiki/Paths-&-configuration) that might be useful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-264699698:95,update,updated,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-264699698,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"No worries, thanks for the reply. I revived the thread because so far only you and @evan-bailey have reported this issue and that was before various further changes were made for the v0.2.0 release. In general, I try to employ a utilitarian approach to QuPath development, and prioritise things that will benefit as many people as possible. In this case I don't have a very clear idea of what remains to be solved - and whether or not it remains important to anyone. The overwhelming majority of QuPath users use Windows or Mac, and most Linux users also shouldn't be affected by this... so if it's not terribly important to either you or Evan, it's probably not worth spending time on.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-642210602:190,release,release,190,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-642210602,2,['release'],['release']
Deployability,"No, it just picks up my system libopenslide.so before the Jar version, which I think is not ideal, but hopefully fine once the versions get pushed to homebrew/apt/rpm. So yeah @petebankhead if this works on apple silicon and x86 Mac it should be good to publish a release of the natives and be done. Linux seems to work fine for me, and I'm grabbing the windows binary directly from them",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1762376097:264,release,release,264,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1762376097,1,['release'],['release']
Deployability,"Not currently... do you think off is a better default? My thinking is that:. * names often aren't used (might be different for you); * most people won't know names can be displayed at all if they are not revealed by default; * pressing `n` doesn't cost much. It might well become persistent in the next release, but for now it's not worth the risk of getting it wrong and introducing late bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/499#issuecomment-632639493:303,release,release,303,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632639493,1,['release'],['release']
Deployability,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612965106:16,release,releases,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106,2,['release'],['releases']
Deployability,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/271#issuecomment-467942230:50,update,updated,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230,2,['update'],"['update', 'updated']"
Deployability,"Not really intended, but I think it's a limitation that was always there - I don't think it's a new regression. Not sure how much the grid view is used. We should address it in a future release if it turns out to be extremely useful (to us or others), but I think it's obscure enough to ignore for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1478#issuecomment-1976306381:186,release,release,186,https://qupath.github.io,https://github.com/qupath/qupath/pull/1478#issuecomment-1976306381,1,['release'],['release']
Deployability,"Not sure it's better, but quicker for now without changing the API - so if we both think it should solve the issue I'll merge it. Your insights from exploring this ugly bit of the code are welcome any time for refactoring in a major release :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1476#issuecomment-1973328681:233,release,release,233,https://qupath.github.io,https://github.com/qupath/qupath/pull/1476#issuecomment-1973328681,1,['release'],['release']
Deployability,"OK when QuPath failed, I try to install Openslide independently, becauses my project needs. I have installed openslide in \usr\local\Celluar. and openslide python interface by Anaconda in /anaconda/lib/python36. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371784054:32,install,install,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371784054,2,['install'],"['install', 'installed']"
Deployability,"OK, I updated the PR",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1457#issuecomment-1916693983:6,update,updated,6,https://qupath.github.io,https://github.com/qupath/qupath/pull/1457#issuecomment-1916693983,1,['update'],['updated']
Deployability,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:412,update,update,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,1,['update'],['update']
Deployability,"Oh dear, sorry, I see now I didn't reply to this (although I was away from QuPath at the time and I think we discussed it elsewhere...). I recall at the time I wondered about how this would impact supporting RGB/non-RGB images with the same command and also maintaining scripting compatibility. In the meantime, the code has diverged rather a lot and other issues with _Simple Tissue Detection_ have emerged, e.g.; * https://github.com/qupath/qupath/issues/124; * https://github.com/qupath/qupath/issues/248. I'm reluctant to try to resolve the code conflicts to incorporate this small change that may complicate scripting compatibility whenever it looks like the whole simple detection command really needs a thorough overhaul. There are now also other ways to gain more control over tissue detection, e.g.; * https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html; * the pixel classifier (not yet complete, but I hope it will become a 'standard' way). The pixel classifier is also being designed to support different kinds of classification, which could eventually also include a simple threshold applied to an original or transformed image. It has the benefit of allowing the classification to be applied at a higher resolution through tiling, and to interactively show preliminary results (e.g. with a threshold slider). I think that this is needed in the longer term, and _Simple tissue detection_ will move into retirement. Sorry again for not replying here sooner. If this change is still of interest to you, please feel free to reopen the issue. To integrate it, we'd need to; * update the code to be compatible with the current codebase; * test the impact on scripts created before/after the change",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-518571384:1590,integrat,integrate,1590,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-518571384,4,"['integrat', 'update']","['integrate', 'update']"
Deployability,"Oh dear... could you try [v0.3.0-rc1](https://github.com/qupath/qupath/releases) to see if it has been fixed? There have been some fixes in that part of the code that may help, but I'm not sure. If that doesn't resolve things, could you please post the script that's failing? There are several on the linked page and so I'm not sure which exactly is going wrong and where.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777#issuecomment-876724096:71,release,releases,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-876724096,1,['release'],['releases']
Deployability,"Ok, I tested the ""Offline TMA Data Viewer"" (not sure what to call this method!). I exported TMA data (qptma) for all 6 TMA slides. I loaded one file in the TMA Data Viewer in a new QuPath instance which seem to load data for all the qptma files present in the folder ! is that expected behavior ?. With this method the table is very smooth. It makes sense to work offline if I want to look at the combined data from multiple TMAs after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:942,toggle,toggle,942,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['toggle'],['toggle']
Deployability,"Ok, good, since it's building ok can you have a look for a `.jar` file inside QuPath starting `qupath-extension-openslide` and then move/rename it (so that QuPath won't find it)? My hope is this will prevent QuPath trying to load the troublesome library. You may not be able to open whole slide images then (although adding the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) could work around that, at least for some formats). But if it at least starts ok then hopefully you could install OpenSlide with your package manager, and the problem changes to getting QuPath to find it whenever you put the `.jar` file back...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368859872:513,install,install,513,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368859872,1,['install'],['install']
Deployability,"Ok, had a quick check on my Mac since you mentioned it - and I'm afraid the scroll isn't working very nicely :( The 'magic mouse' makes horizontal scrolling really easy - which is handy for panning around the image if you turn *View &rarr; Multi-touch gestures &rarr; Scroll gestures*. However here it means that tools switch *really* easily... and continually happen by accident during normal use. How useful is this aspect of the PR? Would you miss it badly if that part was removed...?. I think (but haven't thoroughly checked) that the middle button should be less troublesome, partly because Mac mice don't have middle buttons. But I remain a bit apprehensive about needing a debounce delay, and worry about adding even more complexity to the various event filters and handlers that are active when interacting with the viewer. Can you say a bit more about how useful you've found this, and when?. The option remains to add the functionality through an extension or startup script, to give it a bit more time before possibly integrating it into the core software later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312793422:1030,integrat,integrating,1030,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312793422,1,['integrat'],['integrating']
Deployability,"Ok, much revised and extended PR at https://github.com/qupath/qupath/pull/1318. Please do check out the explanation of the changes. I *think* it's a substantial improvement to handling multiple viewers, and other aspects of the code should be healthier than they were before. But there's a good chance it could be improved - and potentially things are broken in ways I haven't yet spotted. Unless something terrible emerges, I will merge the PR soon so there is still a reasonable amount of time to explore and fix anything it before release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1713197089:534,release,release,534,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1713197089,1,['release'],['release']
Deployability,"Ok, so there's a polyline tool in the current milestone releases.; ![Line](https://user-images.githubusercontent.com/4690904/62520963-8cae1e00-b826-11e9-9e21-4cbc94065b33.jpg). I've updated the 'Expand annotations' command for v0.2.0-m4 as follows. Previously, expanding line/polyline annotations would expand in all directions - and 'remove interior' had no effect (since the line had no thickness):; ![Rounded](https://user-images.githubusercontent.com/4690904/62520803-38a33980-b826-11e9-946a-c3365e251bd2.jpg). Now, there is an option to set the 'line cap' to be round (as before), flat or square. Also, 'Remove interior' will remove an approximately 1-pixel thick line if requested.; ![Flat](https://user-images.githubusercontent.com/4690904/62521003-a9e2ec80-b826-11e9-81b8-a16db61769af.jpg). This is enough to make a separation. You can then use _Objects &rarr; Annotations &rarr; Split annotations_...; ![Split](https://user-images.githubusercontent.com/4690904/62521123-f1697880-b826-11e9-965e-12510c734579.jpg). ...which allows you to separate the inner/outer expansion regions.; ![After split](https://user-images.githubusercontent.com/4690904/62521078-d72f9a80-b826-11e9-8a1b-cc1293b44d60.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-518552859:56,release,releases,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518552859,2,"['release', 'update']","['releases', 'updated']"
Deployability,Ok. Attempted resolution in this commit https://github.com/petebankhead/qupath/commit/c7b07e5919aa76de19a81a71286dd8b434284017; Look out for changes in the next milestone release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479832407:171,release,release,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479832407,1,['release'],['release']
Deployability,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401542503:1481,integrat,integrated,1481,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503,2,['integrat'],['integrated']
Deployability,On the thought of not passing the parameters: you could indeed do this by saying:; ```java; fullRequest = fullRequest.updateT(t); fullRequest = fullRequest.updateZ(z); ```; in the loop in `getTiledRegionRequests` and then reinstating these two lines in `splitRegionRequests`:; ```java; t = request.getT(); z = request.getZ(); ```; So it's a balance between four extra lines of code on the one hand and two extra parameters on the other.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-740816876:118,update,updateT,118,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740816876,2,['update'],"['updateT', 'updateZ']"
Deployability,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/725#issuecomment-836523049:595,update,updates,595,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049,1,['update'],['updates']
Deployability,"One problem I have occasionally seen with CZI is that a request for the *entire* image is made whenever only a small part is needed. This inevitably causes memory problems, but I have not yet been able to investigate when and why this might happen only for specific images. In the meantime I'd rather avoid suggesting that a huge amount of memory is required to use QuPath; it shouldn't be. Certainly with less memory available there may be problems if running something especially intensive (e.g. cell detection, even subcellular detection) across very large regions, but in that case the easiest solution is simply to restrict the analysis to smaller regions. But yes, if you can spare a few more GB it would be very good to increase what is available to QuPath. For what it's worth, my laptop has 16 GB RAM and I give about 8 GB to QuPath, although I've also used 4 GB for analysis (or less for just browsing and annotation). There are also some more memory-related tips at https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits. It would be good to confirm whether the trouble only occurs when working with cell detection on large regions (at least hundreds of thousands of cells). My suspicion is that this isn't the case, and it is more likely to be related to the current patchy support for CZI - which is something I hope can be improved within the next few months. But I could be wrong on this if the behavior is fine whenever only small regions are considered.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343393030:1300,patch,patchy,1300,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343393030,2,['patch'],['patchy']
Deployability,"Perhaps this is related to the bounding box?. man. 2. sep. 2019, 22:46 skrev Tuatini Godard <notifications@github.com>:. > Yep, somehow the libpixman used is the one from my system:; >; > $ cat /proc/30668/maps | grep pixman; > 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; >; > On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works; > fine while 0.2.0 doesn't... that doesn't make sense...; > Ideally it would be great if it could ship with a QuPath release with the; > fix.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/355?email_source=notifications&email_token=AH7WSL7NBM4OQKNC45FLTKTQHV3THA5CNFSM4IS736B2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5WQ2XY#issuecomment-527240543>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AH7WSL5AXNFIGZVZNNQDLOTQHV3THANCNFSM4IS736BQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527253897:874,release,release,874,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527253897,1,['release'],['release']
Deployability,"Polyline could be troublesome, as it still hasn't got an icon & I think for many people (possibly including me) it's going to prove a gateway to wanting a multi-polyline tool... which then introduces questions around whether 'Areas' should really be multi-polygons, and the whole ROI system being revised more in line with Java Topology Suite - with all kinds of backwards compatibility complications : ). But yeah, some form of polyline is planned for the next (big, Java 11) release, which will include this fix also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-438964450:477,release,release,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438964450,1,['release'],['release']
Deployability,"Possibly... Java should take care of any requests exceeding the ```Integer.MAX_VALUE```, but the maximum memory should probably be involved in the calculation somewhere. I faintly recall adding a limit because I kept accidentally crashing/hanging by requesting regions that were much too large, and the macro runner doesn't do any kind of smart breaking-a-large-region-into-tiles. So I wanted to protect me from myself. It's complicated by the fact that large continuous regions of memory need to be found for the arrays and QuPath has no idea how much memory the macro is going to require (i.e. how many image duplicates it will make). And maybe sometimes the macro will be run in parallel. I still tend towards having a fixed limit, just a much bigger one. And preferably one implemented as a static field somewhere. Then it could be modified by a script in an emergency - or possibly even within the macro runner dialog itself. I definitely would agree that hard-coding a relatively small limit in the middle of a method wasn't the optimal way...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68#issuecomment-300088603:460,continuous,continuous,460,https://qupath.github.io,https://github.com/qupath/qupath/issues/68#issuecomment-300088603,1,['continuous'],['continuous']
Deployability,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715571233:198,install,install,198,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233,1,['install'],['install']
Deployability,"Probs makes sense to allow co-development around releases, so snapshot makes sense to me",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1509#issuecomment-2087551832:49,release,releases,49,https://qupath.github.io,https://github.com/qupath/qupath/pull/1509#issuecomment-2087551832,1,['release'],['releases']
Deployability,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-579362758:183,update,update,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758,1,['update'],['update']
Deployability,"Putting this here for future reference. ""Note: CellProfiler has limited capability with handling large, high-resolution images. We recommend using a field of view limited to a maximum number of two gigapixels in (x,y) to count cells and punctate dots present within cell boundaries. To perform whole slide image (WSI) analysis using your CellProfiler pipeline, Glencoe sells a plugin to allow you to interface CellProfiler with the open source platform QuPath. The plugin works through the OMERO + platform. Information on this plugin can be found by contacting Glencoe through their webpage: https://www.glencoesoftware.com/contact/. Other open source options to perform whole slide image (WSI) analysis include QuPath, Orbit, and SlideToolkit.""; https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=2ahUKEwjqguGA7IboAhXPtp4KHbgJBp0QFjAAegQIARAC&url=https%3A%2F%2Facdbio.com%2Fsystem%2Ffiles_force%2FTechNote_CellProfiler_20190920.pdf%3Fdownload%3D1&usg=AOvVaw2e7VjKojkOHZMrtc4Ibedg",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123#issuecomment-595983646:351,pipeline,pipeline,351,https://qupath.github.io,https://github.com/qupath/qupath/issues/123#issuecomment-595983646,1,['pipeline'],['pipeline']
Deployability,"QuPath can handle TIFF files much bigger than 1.49 GB. But it is important that they are stored in a pyramidal format, with the image data stored at different resolutions - as it typical if the images are from a whole slide scanner. Is that the case for your image? Or can you say more about how it was created?. If your image is pyramidal, and you haven't already installed the QuPath Bio-Formats extension, you could try this to see if it helps by increasing the range of supported images: https://github.com/qupath/qupath-bioformats-extension. > Note the installation instructions at the bottom of the page; if it does not work immediately, consider adding `.tif` to the *Always use Bio-Formats for the specified image extensions* preference option, to make sure that no other image reader tries to handle the TIFF instead. But if you do this and encounter problems with other TIFFs, remember to reset this option to let QuPath decide which reader is most appropriate - which is the default behavior. Otherwise, this link may help: https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371739798:365,install,installed,365,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371739798,2,['install'],"['installation', 'installed']"
Deployability,"QuPath does not include any code that directly relates to the GPU - everything happens through OpenCV/JavaCPP (and sometimes also PyTorch/TensorFlow/DJL). If you search for `the provided PTX was compiled with an unsupported toolchain` you should find lots of discussions separately from QuPath; it seems that the issue is normally related to the driver. I tried to replicate the issue with the only Windows computer I have access to (including a GeForce 1060) and could not - it runs without errors, and `DnnTools.isCudaAvailable()` returns true. > Given that issue https://github.com/qupath/qupath/issues/841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?. I don't think that can be relevant here. I'm not sure that there is any bug here that can be fixed within QuPath. I have seen such error messages before, but the solution was always to update my graphics card driver. Have you tried this?. Note that QuPath v0.4.0 gives a range of options for deep learning, but CUDA incompatibilities will mean that probably not all can work at once (e.g. I could get PyTorch with GPU acceleration today by installing CUDA 11.7, but TensorFlow seems to require 11.3... I'm not sure there's a combination that gets both working together). I don't see that there's really anything much more we can do apart from simply removing the option of GPU acceleration altogether and not documenting it as an option - but that seems a shame when often it does work. > I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Because QuPath doesn't directly access the GPU, please check the .jar files within each installation. I don't know what the problem could be, unless it is somehow related to the inclusion of some Deep Java Library dependencies - or if you have other extensions installed that are",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127:965,update,update,965,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127,2,['update'],['update']
Deployability,"QuPath is a Java application, and the memory behavior is complicated and implementation-dependent: https://www.baeldung.com/gc-release-memory. The memory monitor uses the `Runtime` class, and makes calls to `System.gc()` for garbage collection.; The [javadocs](https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Runtime.html#freeMemory()) contain statements like `""Calling the gc method may result in increasing the value returned by freeMemory`""... where that 'may' is interesting. In some cases (such as the tile cache), QuPath retains a (soft or weak) reference to objects for 'as long as it can' to help performance, but will release them before any out-of-memory error is produced. In short, this doesn't sound like a bug to me. Unless there can be shown to be a memory leak within QuPath itself, there are too many other possible reasons beyond our control why memory use reported by the JVM might increase.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105:127,release,release-memory,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105,2,['release'],"['release', 'release-memory']"
Deployability,"QuPath shouldn't be limited by the file size, however it is very possible that an .svs file from a Huron scanner differs in some way from an .svs file from another source. In general, .svs is based on .tif, and .tif images can have all kinds of internal differences in terms of data representation and compression. Have you tried opening the image with Bio-Formats?; See https://github.com/qupath/qupath-bioformats-extension - in particular note the installation instructions at the bottom of the page, and how you can force QuPath to use Bio-Formats rather than OpenSlide to open files with a specific extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436165047:450,install,installation,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436165047,1,['install'],['installation']
Deployability,"Quick answer to 2: you can show/hide multiple channels by selecting them, and then right-clicking on the channel list before choosing 'Show channels', 'Hide channels' or 'Toggle channels'. Ctrl+A should also work to quickly select all channels before right-clicking. I'll look into the limited resizing later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201#issuecomment-1366618917:171,Toggle,Toggle,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201#issuecomment-1366618917,1,['Toggle'],['Toggle']
Deployability,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-762152617:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617,1,['update'],['update']
Deployability,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-757141337:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337,2,"['release', 'update']","['release', 'update']"
Deployability,"ROI; import qupath.lib.roi.RoiTools. // Adjust THIS (n : Number of Tiles); int n = 10; def trimToROI = true; //parentClass = ""IL-left""; childClass = ""Tiles"". // Get the QuPath viewer and check if an object is currently selected; QuPathViewer viewer = QuPathGUI.getInstance().getViewer(); def objSelected = viewer.getSelectedObject(); parentClass = objSelected.getPathClass(). // Calculate the width and height of the ROI; if (objSelected != null && objSelected instanceof PathAnnotationObject){; ROI roi = ((PathAnnotationObject)objSelected).getROI(). int w = roi.getBoundsWidth(); int h = roi.getBoundsHeight(). int tW, tH. // devide tiles based on the width ; tW = Math.floor(w/n)+1; tH = h. // Create a list of ROIs by using the makeTiles method from the RoiTools class, which divides the ROI into tiles based on the specified width and height.; List<ROI> pathROIs = RoiTools.makeTiles(roi, tW, tH, trimToROI). // Create a list of PathObject tiles and assigns a name to each tile; List<PathObject> tiles = new ArrayList<>(pathROIs.size()). Iterator<ROI> iter = pathROIs.iterator(); int idx = 0; while (iter.hasNext()) {; try {; PathObject tile = PathObjects.createAnnotationObject(iter.next(), getPathClass(childClass)) ; if (tile != null) {; idx++; tile.setName(""Tile "" + idx); tiles.add(tile); }; } catch (InterruptedException e) {; lastMessage = ""Tile creation interrupted for "" + objSelected; return; } catch (Exception e) {; iter.remove(); }; }. // Add the tiles to the selected annotation object and update the viewer; ((PathAnnotationObject)objSelected).addPathObjects(tiles);; viewer.getImageData().getHierarchy().fireHierarchyChangedEvent(this, objSelected);; }. parentAnnotation = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(parentClass)}[0]; childAnnotation = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(childClass )}. for (it_Child in childAnnotation) { ; getCurrentHierarchy().addPathObjectBelowParent(parentAnnotation, it_Child, true) }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178:1861,update,update,1861,https://qupath.github.io,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178,1,['update'],['update']
Deployability,"Remembered this a few days ago and tried to get the fix into the new milestone release: https://github.com/qupath/qupath/commit/45820e625872b14197e4f784dbb71a37e96ef17d. Closing this issue as it should now be fixed, but please reopen if you find it is not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/197#issuecomment-471152442:79,release,release,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/197#issuecomment-471152442,1,['release'],['release']
Deployability,"See also https://github.com/qupath/qupath/issues/1636. > Maybe just use the python version (like BIOP/Cellpose does). In that case you depend on a single python environment!. My understanding is that the BIOP CellPose extension will [write all the tiles to disk, then effectively run CellPose from a command line](https://github.com/BIOP/qupath-extension-cellpose/blob/b97efdad82df59ace5a149ca91f7fb963549bcc5/src/main/java/qupath/ext/biop/cellpose/Cellpose2D.java#L390). That may be easier for configuration, but it will surely reduce the benefits of using the GPU. It can be justified for CellPose because it is infeasible to recreate the required postprocessing in Java, but for InstanSeg we would suggest instead; 1. just using the CPU; 2. use InstanSeg [entirely from Python ](https://github.com/instanseg/instanseg) (generating QuPath-compatible output would be a different question for that repo or the forum, not this one); 3. discussing on the forum; perhaps someone there might figure out instructions that work where our existing ones do not. I will close this because there is no bug in QuPath described here that we can fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001:495,configurat,configuration,495,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001,1,['configurat'],['configuration']
Deployability,Shape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrumbBarSkin.java:161); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.lambda$new$1(BreadCrumbBarSkin.java:147); > at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at co,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:3085,update,updateBreadCrumbs,3085,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['update'],['updateBreadCrumbs']
Deployability,"Should clarify that m4 isn't released yet, but the change is in the last commit linked to above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-518553184:29,release,released,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518553184,1,['release'],['released']
Deployability,"Should definitely mention this in the release notes, because v0.5+ will be newer than v1 (until the ""real"" v1 happens)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732342967:38,release,release,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732342967,1,['release'],['release']
Deployability,"Since I think the trouble started with JavaFX 21.0.1, from the [release notes](https://gluonhq.com/products/javafx/openjfx-21-release-notes/#21.0.1) my guess was the webkit update... but not sure..",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1358#issuecomment-2056313473:64,release,release,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/1358#issuecomment-2056313473,3,"['release', 'update']","['release', 'release-notes', 'update']"
Deployability,Since the release of v0.2.0-m10 the master branch should work with OpenJDK 14 and I've updated the docs accordingly.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-617995278:10,release,release,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-617995278,2,"['release', 'update']","['release', 'updated']"
Deployability,"Slightly off QuPath- I don't know what scanner you are using, but if you have access to it, I think most should have a brightfield compensation image adjustment setting (it takes a picture of a blank slide and adjusts). We had some yellowing in ours after some software updates, and that took care of the background.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282609510:270,update,updates,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282609510,1,['update'],['updates']
Deployability,"Slightly updated script showing there is indeed some badness going on (note the counts don't match!). ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 1000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))); println(""Count files: "" + countFilesExist(files)); println(""Count paths: "" + countPathsExist(paths)). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }; ```. Windows:; ```; INFO: Same: false; INFO: Count files: 51; INFO: Count paths: 38; INFO: Paths 	4.273 s; Files 	1.838 s; Total duration	6.111 s; Average per checkpoint: 3.055 s; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125:9,update,updated,9,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125,1,['update'],['updated']
Deployability,"Small update on this issue for QuPath v0.4.3. I previously mentioned; > It is unclear if this may cause data corruption or any other negative consequences. after closing QuPath to cancel a running script. However, this action now causes a corruption of the .qpdata file for the project entry that the script is currently running on. This corruption results in QuPath being unable to read the hierarchy data for the project entry. See https://forum.image.sc/t/hierarchy-is-null-cannot-invoke-can-anyone-help/78488/10 for details.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1167#issuecomment-1467865538:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/1167#issuecomment-1467865538,1,['update'],['update']
Deployability,"Some undo support is now available in v0.2.0-m1 (and beyond), and explained [on my blog](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#new-limited-support-for-undo).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-518580699:145,update,updates,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-518580699,2,['update'],['updates']
Deployability,"Something that is a little more complicated that I have done in cases like this (when I did not want to look into sub-classifications) was create a per-cell measurement for positivity in each channel. The additional measurements would look something like:; Ch1 Positive 1; Ch2 Positive 0; Ch3 Positive 0. Then I would use another putMeasurment command to place a summary measurement in the parent annotation for each value. For my purposes I would create a single Percent Positive per channel for the annotation, so ended up with 3 new annotation measurements (that would only update when I ran the script). This way, I could keep re-running the script with different thresholds, though they would only update when the script is run (deleting cells or recreating the cells does not change the annotation measurements until you rerun the script).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/16#issuecomment-391780783:577,update,update,577,https://qupath.github.io,https://github.com/qupath/qupath/issues/16#issuecomment-391780783,2,['update'],['update']
Deployability,"Sorry for commenting on this. But by checking the old versions it seems that this behavior changed from 0.2m9 to 0.2m10. I do not know if this was intentional? . I can confirm that 0.2m9 opens by double clicking in Ubuntu 20.04, while 0.2m10 (and any more recent releases do not).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650125578:263,release,releases,263,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650125578,1,['release'],['releases']
Deployability,"Sorry for the delay, it's a crazy grant-writing time for the next month, and any coding time has been spent trying to get v0.3 ready for release soon - so I'm afraid I haven't had a chance for a proper look. Our main changes are happening on the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch, where we have updated to use JDK 16 and use the newer TensorFlow Java jars. I think this demonstrates that we really need a way to switch between TensorFlow/OpenCV/OpenVINO/something else without changing any of the StarDist code. That should allow the OpenVINO extension to be added separately just by dragging the jars onto QuPath. I'm not sure how best to do this. If we can come up with a quick-but-maintainable solution we may be able to include it in v0.3, but otherwise I should have a bit more time to think about it in a month.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-811252714:137,release,release,137,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811252714,2,"['release', 'update']","['release', 'updated']"
Deployability,"Sorry this has taken so long, but v0.3.0 has finally been released (within the past few minutes....). It finally has better support for extensions, and so the [QuPath TensorFlow extension](https://github.com/qupath/qupath-extension-tensorflow) can now be in its own repository. We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-912009706:58,release,released,58,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706,2,['release'],['released']
Deployability,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484671442:520,update,update,520,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442,1,['update'],['update']
Deployability,"Sounds good, as long as it doesn't enforce any tag until we *actually* release. Also, if you want to take it on... I think this PR fails because the two mac builds become 'pkg' and only one survives.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935865136:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935865136,1,['release'],['release']
Deployability,"Sounds like a healthy & commendable fear :) But there will be no more updates to v0.1.2, so any fix (if not already there) will be through that path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471605278:70,update,updates,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471605278,1,['update'],['updates']
Deployability,"Strange... if you install gradle separately, then you can also use `gradle clean jpackage` (i.e. avoid relying upon gradle wrapper). I'm not sure if that'll help. I have limited experience using Linux, and none using CentOS. I don't know whether JavaFX 18 (used by QuPath now) is compatible with CentOS 7 so even if you overcome the building issue, I don't know if it will run.; * https://github.com/qupath/qupath/issues/825; * https://github.com/qupath/qupath/issues/949",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506:18,install,install,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506,1,['install'],['install']
Deployability,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411636630:436,update,updates,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630,1,['update'],['updates']
Deployability,"Tested on m5 on another machine with ubuntu 18.04. Worked fine. So I guess it may be my local installation of OpenCV, java or some other issue. Will close this for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561079092:94,install,installation,94,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561079092,1,['install'],['installation']
Deployability,"Tested on my fork and seems to work, but definitely one to watch in future releases. Will merge for now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1694#issuecomment-2459650284:75,release,releases,75,https://qupath.github.io,https://github.com/qupath/qupath/pull/1694#issuecomment-2459650284,1,['release'],['releases']
Deployability,"Thank yo for the reply and your re-repeat :) of what you had already told me. I admit that I am really bad at understanding this part. This is what I think I understand:. The approach we used creates an issue with the way `ImageDisplay` is currently implemented because saving display settings to the .qpdata file is not good practice? ; But doing this via scripting is OK because it's less important if scripts break upon QuPath updates?. The risk is that if these are made public, other people could call upon these methods, and that would break something in the GUI whenever changes will be made to the code?. Currently there is no other way than to use `ImageDisplay` to set these properties for the channels (and save and recall them) which is bad because this will be revised in the future?. Let me know what I got wrong there if you have time. I think that in the meantime I will test a script to do what we used to be able to do, and dive into the wonderful world of Reflection for my sake.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632635935:430,update,updates,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632635935,1,['update'],['updates']
Deployability,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407444374:74,update,update,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374,2,['update'],['update']
Deployability,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640759146:499,release,release,499,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146,2,['release'],['release']
Deployability,"Thank you for prompt reply.; I have updated Qupath and tried TMA dearryer again, as same as I mentioned above.; But it still doesn't work. ![new version QuPath TMA dearrayer work flow](https://user-images.githubusercontent.com/51498119/59235646-39fa1200-8ba7-11e9-9c6b-aea5593b341b.PNG); ![new version QuPath TMA dearrayer](https://user-images.githubusercontent.com/51498119/59235653-40888980-8ba7-11e9-9291-27aee29b9e84.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/329#issuecomment-500643829:36,update,updated,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500643829,1,['update'],['updated']
Deployability,"Thank you for taking your time into understanding our problem and coming up with possible alternative solutions!. I absolutely get your notes on the classifier. I assumed that the ObjectClassifier would _never_ need to read pixels because it currently only uses the detections' measurements. Surely the code must be changed in preparation of the advent of the `FeatureExtractor`. And for this, using `ProjectImageEntry.readHierarchy()` is probably the better option.; > [...] creating a classifier without needing to go through the UI [...]. I am not sure about this, though. You often want to leverage the live-update feature when creating a classifier. That is one of the most handy feature when tweaking a classifier. If that option was removed, it would be unfortunate. -------------------------. However i think you missed a point. The major issue this PR wants to address is the ability to a script in batch as fast as possible (and when it is possible); > an alternative approach [...] that doesn't involve any big API changes - and which can be used when you can know in advance that the image doesn't need to be accessed. Just to be clear, this PR's only API change is adding in [`ProjectImageEntry.java:L195`](https://github.com/qupath/qupath/pull/1488/files#diff-14ed5cabf5566ab4eb5d1ae31a25d75c8dd49e3c50e1cc05ce10ff21936b9a9fR195), where it adds a new public method `readImageData(boolean)` asking whether to read or not the image file. It also provides a default implementation `readImageData()` that always reads it, so that all previous code relied on this assumption don't break.; Furthermore, as you suggested the current approach can be used when _you know in advance_ that the image doesn't need to be accessed:; ![image](https://github.com/qupath/qupath/assets/34198340/3525d599-2609-422b-a5f8-64c1660d505c). Now, I agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the be",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:612,update,update,612,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,2,['update'],['update']
Deployability,Thank you for the tips. I'm using JIdea for the compilation but I will have a look at the Eclipse page above. I will update the thread once I get it working.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-315304305:117,update,update,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-315304305,1,['update'],['update']
Deployability,"Thank you for your prompt response!. When I was searching for resolution of similar bug in previous issues I couldn’t find any. Perhaps because I thought the problem appears only for vsi (Olympus) format. I agree #894 refers to the similar problem as mine although they were launching Hamamatsu slides. Looking forward to the next release of my favourite platform QuPath! 😊. Have a nice weekend,; Malgorzata Szolkowska; ____________; Malgorzata Szolkowska, MD, PhD, DSc, Assoc. Prof.; The Institute of Tuberculosis and Lung Diseases; Department of Pathology; Plocka 26; PL-01138, Warsaw, Poland; Tel.: +48 22 43 12 257. > Wiadomość napisana przez Pete ***@***.***> w dniu 16.07.2022, o godz. 06:07:; > ; > ; > Thanks @MalgorzataSzolkowska <https://github.com/MalgorzataSzolkowska> , this comes from the same underlying bug as these:; > ; > #894 <https://github.com/qupath/qupath/issues/894>; > #904 <https://github.com/qupath/qupath/issues/904>; > #973 <https://github.com/qupath/qupath/issues/973>; > I've already fixed it in the code, so it should work in the next release.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/A2CTSQHEGFTSDUI5NRQGJQLVUIYORANCNFSM53XGOATA>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186103119:331,release,release,331,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186103119,2,['release'],['release']
Deployability,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494027815:1091,install,install,1091,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815,1,['install'],['install']
Deployability,"Thank you very much for looking into this problem so quickly!. In the meantime, I was able to open the TMA (multi-scene) file in Fiji - at least partially. . The Bio-Formats import dialog asked ""Please specify the image series you wish to import. Use commas ... There are 690 total series."" I requested all 690 series to be imported. I indeed got the stitched (!) version of all the scenes in the *.czi file. So, finally, the Bio-Formats importer is able to do the stitching!. However, so far I have only imported one channel, because I did not check the ""Open all series"" option. When I do check ""Open all series"", the import dialogue tells me that I don't have enough memory. (I need around 80 GB, have 24). I tried it anyway and it failed. ![image](https://user-images.githubusercontent.com/23238491/60874753-ccd6ac80-a238-11e9-85d0-22e268bfef8b.png). @Svidro Thank you very much! I am aware of the option to split the scenes and I have made extensive use of that possibility in projects with TMA specimens back when QuPath was not able to read multi-scene *.czi at all. I have also tried hard to convince the guys at Zeiss to include a ""merge all scenes"" option in ZEN because for us the scenes offer no benefit. Unfortunately, this does not seem to be a priory for them although I have not checked for ZEN updates in a while. Also, if Bio-Formats can now stitch the scenes and the latest development version of QuPath already works with multi-scene *.czi files, as Pete stated, the request is obsolete anyway. So, thanks again. I'm looking forward to 0.2.0-m3!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509559753:1311,update,updates,1311,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509559753,1,['update'],['updates']
Deployability,"Thank you very much for your replies. I’m going to try what you have suggested tomorrow and will definitely report back. Apologies for posting in the wrong bit and thanks again for the very fast replies!. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519633891:308,install,installing,308,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519633891,1,['install'],['installing']
Deployability,"Thank you! I managed to get things working as it happens however. I removed and re-installed several times and it seemed to like that! . > On 18 Jan 2018, at 17:35, Pete <notifications@github.com> wrote:; > ; > There's a new Bio-Formats extension now here. It may help with the CZI files.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-359426438:83,install,installed,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-359426438,1,['install'],['installed']
Deployability,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620601601:399,install,installed,399,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601,1,['install'],['installed']
Deployability,"Thanks @Edwinterb yes, we used to provide a dmg but recent macOS releases thwarted that - they were particularly unhappy if this was downloaded, and seemed to work extra hard to make it non-runnable. The pkg has proven the 'least painful' distribution method, and the right-click trick is documented [here](https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos). I do most of my development on a Mac, so suffer the pain directly. `jpackage` integrates well with our build tools, and seems to be the 'official' way to make installers for Java applications. I'm not good enough with XCode, build tools or GitHub Actions to figure out a way to piece together an alternative that gives an opportunity to squeeze in a proper version number. @alanocallaghan would have a better chance of figuring it out than I do, but I don't see how I can possibly mention it to him when he's already [embroiled in other macOS-related woes](https://github.com/qupath/qupath/issues/629#issuecomment-1723504495) - without actually being a Mac user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329:65,release,releases,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329,4,"['install', 'integrat', 'release']","['installation', 'installers', 'integrates', 'releases']"
Deployability,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-579836335:394,update,updates,394,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335,1,['update'],['updates']
Deployability,"Thanks @MalgorzataSzolkowska , this comes from the same underlying bug as these:; * #894 ; * #904 ; * #973. I've already fixed it in the code, so it should work in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543:173,release,release,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543,1,['release'],['release']
Deployability,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1093,install,installed,1093,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374,3,['install'],"['installed', 'installing']"
Deployability,"Thanks @OpenScienceProject I can replicate the problem. The issue comes from how the icon colors are set; ultimately, it's connected to some changes that were made to overcome some awkward JavaFX/ControlsFX behavior that was making the icon colors wrong in dark mode. I'll look into it, but I suspect a new release will be needed to have an effective workaround. > Sidenote: I see that changing the *Default object color* in the preferences doesn't change the icon colors properly; this is probably a related issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1375325780:307,release,release,307,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1375325780,1,['release'],['release']
Deployability,"Thanks @Rylern and @alanocallaghan - good call making me right the tests, that helped identify and fix some bugs, and address some suboptimal behavior concerning rounding and out-of-range values. > Is there a reason for defining the BufferedImageNormalizer interface, instead of just using [Function<BufferedImage, BufferedImage>](https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html) or [UnaryOperator<BufferedImage>](https://docs.oracle.com/javase/8/docs/api/java/util/function/UnaryOperator.html)?. I've updated this to use [`BufferedImageOp`](https://docs.oracle.com/en/java/javase/21/docs/api/java.desktop/java/awt/image/BufferedImageOp.html), which then; 1. allows the classes to be used directly with [`Graphics2D.drawImage`](https://docs.oracle.com/en/java/javase/21/docs/api/java.desktop/java/awt/Graphics2D.html#drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)).; 2. makes it possible to control whether in-place image conversion is used. Potentially one of the other standard Java interfaces could be used, but I want to avoid giving the impression that it's a good idea to use arbitrary methods or lambda expressions. These can be convenient for testing, but will fail when images are added to a project - because we need the methods to be JSON-serializable. The JSON serialization is taken care of through the `ImageServers` class, and we have to explicitly register every normalization class so that it can be used within a project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1554#issuecomment-2209250698:529,update,updated,529,https://qupath.github.io,https://github.com/qupath/qupath/pull/1554#issuecomment-2209250698,1,['update'],['updated']
Deployability,Thanks @ayushnoori do you maybe need to install additional versions? I guess the garbled text should be bold and I'm not sure if that requires another file.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996245078:40,install,install,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996245078,1,['install'],['install']
Deployability,"Thanks @carlocastoldi . The change looks a bit scary to me - although it's possible the existing behavior is already a bit scary. I see the [javadocs](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)) state the following regarding `Files.copy` with `REPLACE_EXISTING`; > The check for the existence of the file and the creation of the new file may not be atomic with respect to other file system activities. Nevertheless, I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. Is there any easy way for us to replicate the issue? Or, if not, could you give the full stack trace for what exception you get without these changes?. I wonder whether creating a method for copy/move that attempts the old behavior, and reverts to the new one if that fails for some reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339:814,release,releases,814,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339,1,['release'],['releases']
Deployability,"Thanks @core-code I've attempted a fix at https://github.com/qupath/qupath/pull/1344 by splitting the build into two parts and using `PlistBuddy` in between. It seems to be working on my computer, so hopefully this will be working in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1732323504:243,release,release,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1732323504,1,['release'],['release']
Deployability,"Thanks @crobbins327 could you update the PR (or create a new one) to remove the settings file please?. > I basically set the bounds to be the entire image. Ah, I think that's the key bit - I see the problematic behavior for a full image annotation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1039#issuecomment-1219581620:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/1039#issuecomment-1219581620,1,['update'],['update']
Deployability,"Thanks @jameshball for the PR and thorough description. All looks good to me, but I need to find a bit more time to check in detail (and try to remember if there was any logical reason to ignore annotations in the first place... I suspect there was not and it was just an oversight). The reason I want to check a bit more is that this highlights a bit of weirdness in how [QuPath provides different `MeasurementList` implementations](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core/src/main/java/qupath/lib/measurements/MeasurementListFactory.java#L44), so the annotation isn't guaranteed to have the same type of list after deserialization as it previously had. This was for reasons of efficiency, and because in an early version there was a 'dynamic measurement' feature that only annotations supported (but this isn't now used). That's a good chance that doesn't matter, but keeping this PR open is a handy reminder to think about measurement lists and GeoJSON in more detail before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/835#issuecomment-957197679:1038,release,release,1038,https://qupath.github.io,https://github.com/qupath/qupath/pull/835#issuecomment-957197679,1,['release'],['release']
Deployability,"Thanks @jcupitt , hmmm it seems to be working for me in Catalina 10.15.7.; I see the same (full) image in Preview and in QuPath v0.2.3, using either OpenSlide or Bio-Formats. It sounds like QuPath must be doing something wrong with linking, but I don't know what. More generally, attempting to include OpenSlide within QuPath has proven troublesome before - I'm a lot happier with Java classpaths than trying to get it to properly handle native libraries (particularly with subdependencies). I have been considering whether to drop OpenSlide support or leave it up to people to install it separate via a package manager in general... but it is still very useful for some file formats. I'd be grateful for any tips or suggestions to resolve the tiling problem, or the inclusion of OpenSlide in general.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715471359:578,install,install,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715471359,1,['install'],['install']
Deployability,"Thanks @jesusdpa1 although I either don't understand the issue or couldn't replicate it. I'd also be confused if the .msi and .exe behave differently in this regard, since they are built at exactly the same time from the same code. I created a new account and installed QuPath from the .msi, and it did not have an user/extensions directory set by default - as it shouldn't. The directory is only set whenever the user needs it for some reason (usually they install an extension), and at that point they have the option to set its path to whatever they choose. This is then stored in the user preferences, using Java's default preferences mechanism... which should keep the path restricted to wherever the user requests. Since you mention viewing the extensions directory immediately after installation - but not installing any extensions - I feel like something must be missing somewhere. Note I only have a Windows 10 system to test this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302244800:260,install,installed,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302244800,4,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Thanks @ofrag and @alanocallaghan, I'll close this issue because it's really one for the StartDist extension repo. We already have an open PR for compatibility at https://github.com/qupath/qupath-extension-stardist/pull/36 and plan to ensure it's compatible when v0.6.0 is finalized. We're reluctant to do it too early, because then QuPath v0.5.x users might receive notifications to upgrade their extension... and the new one won't be compatible with v0.5, which would cause a new set of problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2346021169:384,upgrade,upgrade,384,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2346021169,1,['upgrade'],['upgrade']
Deployability,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554910235:340,update,update,340,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235,1,['update'],['update']
Deployability,Thanks @petebankhead following the upgrade it works like charm 👍,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471611800:35,upgrade,upgrade,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471611800,1,['upgrade'],['upgrade']
Deployability,"Thanks @pyushkevich :) I'm also curious as to whether this was solved. I'm chipping in to mention that the positive pixel count should be quite a bit better if you use the beta version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) (involves compiling it, but it's not really a painful process...). You might also see some benefits by [adjusting the stain vectors](https://github.com/qupath/qupath/wiki/Preprocessing) - but the staining you mention is intriguingly new and different to me, and not something I've encountered before. (In the longer term, I plan that there will be much better alternatives to the pixel count - but realistically that is still some months away...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-391770756:258,update,updates,258,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-391770756,1,['update'],['updates']
Deployability,"Thanks @saramcardle! My lack of using TMAs for years means that the documentation for the ID is only for v0.1.2 at https://github.com/qupath/qupath/wiki/TMA-CD3-analysis. > If I have a project with TMAs in 0.3.2, will this change leave me unable to open in in 0.4?. That shouldn't be a problem. It could potentially also update the IDs to use the v0.4.0 key. It's just that if you go back to v0.3.2, the IDs will seem to have been lost and needed added again. > Also, I vote that ID is capitalized in set and get functions. Thanks! Me too I think. Do you feel the same about URI...?. I tried to check what Java itself does and it seems a bit inconsistent with both of those.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1304432307:321,update,update,321,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1304432307,1,['update'],['update']
Deployability,"Thanks @saudet good point! Alas, I'm currently stuck on macOS Big Sur 11.6.2 on (work's) M1, so can't upgrade to the latest OS - it would be nice (I think) to discover any issue has already been fixed there, and both QuPath and JavaCPP were fine all along. I'll certainly let you know if I discover anything further - thanks for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024452486:102,upgrade,upgrade,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024452486,1,['upgrade'],['upgrade']
Deployability,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:146,update,updated,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980,1,['update'],['updated']
Deployability,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/830#issuecomment-957188687:836,release,release,836,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687,1,['release'],['release']
Deployability,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-741703766:28,update,update,28,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766,8,"['integrat', 'release', 'update']","['integrating', 'integration', 'release', 'update']"
Deployability,"Thanks Benjamin! That's really good to know, I had not realised that installing the redistributable was necessary. I have added the link to https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi. On the topic of CZI support, I have recently learned there may be some memory issues connected to reading CZI files that have been 'prestitched' using QuPath + Bio-Formats... is this something you have encountered / solved at all?. In the example I looked at, reading a single tile at the highest resolution would require preallocating an array that is the size of the entire full-resolution image whenever JPEG-XR compression was used... which would lead to out-of-memory errors in most cases. However I am not clear on the exact cause of this, and any insights would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43#issuecomment-272952005:69,install,installing,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/43#issuecomment-272952005,2,['install'],['installing']
Deployability,"Thanks Nick!. For an average DAB value (which [isn't terribly quantitative](http://www.mecourse.com/landinig/software/cdeconv/cdeconv.html)) you could create an annotation, then try _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_. For something area-based (which may be preferable), there is _Analyze &rarr; Region identification &rarr; Positive pixel count (experimental)_ or even _Analyze &rarr; Region identification &rarr; Create cytokeratin annotations (TMA, experimental)_. . As you can tell from the _(experimental)_ in the names, I wasn't entirely convinced either of these was quite as refined as they ought to be. I've done a bit of work to [improve the pixel count](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#more-useful-output-for-positive-pixel-count-experimental), but I plan to incorporate newer, better approaches for this kind of thing over the next few months. Given those caveats and limitations, you might find it better to try [creating your own method with ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ). Finally, most questions & answers are at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users) - you might try posting your question there (ideally with an example image/screenshot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/220#issuecomment-422573137:766,update,updates,766,https://qupath.github.io,https://github.com/qupath/qupath/issues/220#issuecomment-422573137,1,['update'],['updates']
Deployability,"Thanks Pete 😄! I will try to replicate the error without the extension to see if that might be the issue. . Miniconda should not be bringing any error since that is only use to create the virtual environment to install Cellpose. What is shown in the extensions window is just the path to the location of that python environment that contains the installation of Cellpose. I just used those settings to show how paths set from the first installation were being drag to the second one. . I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. . From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. The solution from my end was to proceed and install the zip version and uninstall the .msi version. Sorry for not being able to explain this more straight forward",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161:211,install,install,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161,8,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Thanks Pete, it works, although it generate a multiple times the following error message:. `; ERROR: QuPath exception; at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236); at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423); at javafx.scene.Parent$2.onProposedChange(Parent.java:367); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:113); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:108); at com.sun.javafx.scene.control.skin.LabeledSkinBase.updateChildren(LabeledSkinBase.java:575); at com.sun.javafx.scene.control.skin.TreeCellSkin.updateChildren(TreeCellSkin.java:197); at com.sun.javafx.scene.control.skin.LabeledSkinBase.handleControlPropertyChanged(LabeledSkinBase.java:204); at com.sun.javafx.scene.control.skin.TreeCellSkin.handleControlPropertyChanged(TreeCellSkin.java:125); at com.sun.javafx.scene.control.skin.BehaviorSkinBase.lambda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:570,update,updateChildren,570,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,2,['update'],['updateChildren']
Deployability,"Thanks Pete,. As you can see, I'm not a sophisticated github user, but I love QuPath!. I'll try again. Regan. Regan Fulton, M.D., Ph.D.; CEO and Co-Founder; Array Science, LLC; 475 Gate 5 Road, #100; Sausalito, CA 94965; (415) 577-7360. www.arrayscience.com. On Wed, Jul 19, 2023 at 9:17 AM Pete ***@***.***> wrote:. > Have you tried the troubleshooting instructions here?; > https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos; >; > Right-click + open has always worked for me, across multiple Mac computers; > - but Apple do sometimes change things. Recently, I find I need to; > right-click + open for the installer, and then also right-click + open for; > the app itself the *first* time I use it (but a simple double-click works; > after that).; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ANU5KKI5I3C4RIZ6WYUK5D3XRACBDANCNFSM6AAAAAA2QFEV3E>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281#issuecomment-1642387865:424,install,installation,424,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281#issuecomment-1642387865,4,['install'],"['installation', 'installer']"
Deployability,"Thanks Pete.; I removed the `qupath-extension-bioformats.jar`before installing the new version, so having 2 versions at the same time should be reason why I cannot open .scn file with the v0.0.6 and v0.0.7 version. If you have time and can find a solution for that it would be great. At the moment I am doing fine with v0.0.5. Many thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-470479317:68,install,installing,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-470479317,1,['install'],['installing']
Deployability,"Thanks Svidro, the getParent() idea seems to be working. I will update this thread with the full script once I have tile export working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/62#issuecomment-293105049:64,update,update,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/62#issuecomment-293105049,1,['update'],['update']
Deployability,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-468670846:134,install,installed,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846,5,"['install', 'update', 'upgrade']","['install', 'installed', 'update', 'upgrade']"
Deployability,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409927029:762,update,updates,762,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029,2,['update'],"['update', 'updates']"
Deployability,"Thanks a lot for your help! Only one last question: Is it possible to use 3; thresholds for the tumor cells (e.g. by using the classifier first) and; distinguish afterwards only the stroma cells with help of; setcellintensityclassifications into positive/negative cells? If so what do; I have to put in the script?; I'm sorry for my bad skills in programming. 2017-04-13 6:32 GMT+02:00 Pete <notifications@github.com>:. > You would need to run the classifier first to distinguish (for example); > tumor vs. stromal cells.; >; > Once you are happy with that, be sure to turn off the 'Auto-update'; > setting if you were using it... and then run; > setCellIntensityClassifications to further subclassify cells of each type; > according to their intensities.; >; > Note that you can use a single intensity threshold, to distinguish; > positive/negative cells only, e.g.; >; > setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2); >; > or 3 thresholds to get positive/negative, 1+, 2+, 3+ and H-scores; >; > setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); >; > It's true that the sliders that allow you to set intensity classifications; > when you create the classifier at the start will only result in tumor cells; > being classified. At the time I wrote that command, I was only interested; > in classifying tumor cells.... and it was much later that I realized that; > applying intensity classifications to other kinds of cell would be; > important too. There is no button/menu item for that yet, so the; > setCellIntensityClassifications script is the best way to do that; > currently.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/64#issuecomment-293778069>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AaDxo7t3HoNaYO5n-YVuTD1ZdZj5Z1a-ks5rvaVhgaJpZM4M641S>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/64#issuecomment-293894576:588,update,update,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/64#issuecomment-293894576,1,['update'],['update']
Deployability,"Thanks a lot. I downloaded tif from camelyon16 datasets. A single one is over 1GB. I have installed bioformats extension, but it seems cannot help. Should I need some format transformed? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371740975:90,install,installed,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371740975,1,['install'],['installed']
Deployability,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:46,update,updates,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updates']
Deployability,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:88,Update,Updated,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,2,"['Update', 'install']","['Updated', 'installed']"
Deployability,"Thanks for logging this after our chat about it, I agree QuPath should provide this option somewhere. I thought the LUT method was cleverer (and more effort to get working...), and it avoids some of the 'my image is all black' bug reports that otherwise ensue when exporting grayscale images that all have low pixel values and previewing them in the operating system's default viewer. But Iit is indeed a bit annoying that it requires setting the `mode` to `L` when using PIL - and also requires getting that option somehow passed through to PIL if using some library on top of it (like `imageio`). I'll try to get an optional alternative for the next QuPath release that can just output grayscale labelled images instead.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159781538:659,release,release,659,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159781538,1,['release'],['release']
Deployability,Thanks for opening the feature request. Your suggestion it is a good starting point to see how cell profiler and QuPath could be integrated together and see for potential computational benefits of doing so. I will post some scripts I'm using with my local installation. I will be glad to help with anyway I can do so.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123#issuecomment-350436680:129,integrat,integrated,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/123#issuecomment-350436680,2,"['install', 'integrat']","['installation', 'integrated']"
Deployability,"Thanks for reporting this. I have not been working with CZI images myself, but I recently received one example image with this problem. Unfortunately, I have not yet been able to identify the exact cause, beyond the fact that too much memory is used. Because the image is not being read by QuPath directly (but rather Bio-Formats) it is a bit harder for me to track down where exactly the problem lies. However, I will continue to investigate, and add an update here when I learn more. In the meantime, I have been told that the Zeiss ZEN software is able to export the different scenes as separate images, which can then be read into a [QuPath project](https://github.com/qupath/qupath/wiki/Projects). Therefore this may be a workaround that enables you to work with the images in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274611030:455,update,update,455,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274611030,2,['update'],['update']
Deployability,"Thanks for reporting this.; Am I right to understand that you have tried this on two Windows computers, and one works but the other does not?. I am not at a computer right now to explore more, but my first question is does the computer that fails to work have a 32-bit version of Windows installed?. From the log, there appears to be a problem loading the OpenSlide library (for which I think only 64-bit support is included). This should not prevent Bio-Formats from opening the image, but conceivably it could since QuPath tries out all the possible libraries that it has when opening a new image.... and if it fails badly enough with its OpenSlide attempt, perhaps it does not try Bio-Formats. You can prevent this if you find where QuPath is installed, and delete (or copy to another location) the OpenSlide component - probably called qupath-openslide-0.1.1.jar or similar. You can then restart QuPath and try again. Could you try this and see if it makes a difference? Thanks.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268206675:288,install,installed,288,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268206675,2,['install'],['installed']
Deployability,"Thanks for the dedtail answer.; What I wanted to do was more something similar to what Ilastik or the Trainable Weka segmentation plugin for ImageJ offer, meaning you select manually some areas (in my case, I could define 3 classes of pixels, adipocytes, background and others) and after having applied multiple filters (gaussian, hessian etc...), the classifier is generated from my selection and applied to the rest of the image's pixels. I first thought that the integration of Weka was doing that but I realized then that it is used to classify annotations based on intensity and shape features, which is a bit different. It would be interesting to perform this kind of analysis because sometime that which give the best result in term of segmentation.; The threshold based approach didn't give me similar result, especially because background and inside of adipocyte have similar intensity.; The main advantage to use it in qpath instead of ImageJ will be to run it on the max resolution to get more precise result. ![image](https://cloud.githubusercontent.com/assets/1775952/23906471/53031de0-08ce-11e7-88ce-d89736289278.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286447290:466,integrat,integration,466,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286447290,1,['integrat'],['integration']
Deployability,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/666#issuecomment-790729141:134,integrat,integration,134,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141,2,['integrat'],['integration']
Deployability,Thanks for the reply!; I will get to it and update you with the outcome.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/255#issuecomment-454432990:44,update,update,44,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454432990,1,['update'],['update']
Deployability,"Thanks for the update. I don't think that can be the explanation because (as best I recall, and from rechecking the code briefly) there is no difference in how the dearrayer handles H-DAB or H&E, although there is definitely a difference in how it handles fluorescence vs. everything else - and the initial size estimate for each core is critical. But good that it can be worked out one way or another.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-411738253:15,update,update,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-411738253,1,['update'],['update']
Deployability,"Thanks for the update. Looks great 👍, I will continue testing dev-0.3 branch. I am closing this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/669#issuecomment-791936700:15,update,update,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-791936700,1,['update'],['update']
Deployability,"Thanks for your answer, no worries.; I have additional questions regarding .scn files:. - Using the following script:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411572502:771,update,updates,771,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502,1,['update'],['updates']
Deployability,"Thanks for your fast answer Pete! We started to train people to use QuPath in our institute for a research purpose, so far I've got really go feedback! Thanks again for having release this great software and in opensource!; Could we find somewhere the API like the ImageJ project did ( https://imagej.nih.gov/ij/developer/api/index.html ) ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332442980:176,release,release,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332442980,2,['release'],['release']
Deployability,"Thanks for your help, yes that (QuPath v0.5.0 release candidate) seems to be opening the WSI as one image rather than several separate dcm images. However like you said it still displays the list of dcm files in the Image List which may not be desired. . Not sure what's next in terms of this ticket - the main concern is addressed but the open UX issue may want to be handled separately.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1779286034:46,release,release,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1779286034,2,['release'],['release']
Deployability,"Thanks for your quick answer.; I renamed the file `C:\Program Files\QuPath\app\qupathqupath-extension-openslide-0.1.1.jar` to `qupath-extension-openslide-0.1.1.jar.TMP` as suggested and it solved the issue.; The program is installed with windows 10 64 bits on both computer, I don't know why on one openslide is not correctly loaded. Many thanks anyway!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268235442:223,install,installed,223,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268235442,1,['install'],['installed']
Deployability,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:358,install,installed,358,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,1,['install'],['installed']
Deployability,Thanks for your suggestions. I found another computer and installed 16.04. It ran without any issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280864702:58,install,installed,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280864702,1,['install'],['installed']
Deployability,"Thanks for your update!. Please let me know if you ever find any improved solution, or possibly a library/SDK that could be used. In the last few days I've seen there is now an open source C++ library for Zeiss czi images [here](https://github.com/zeiss-microscopy/libCZI). It's something I plan to explore a bit more, but I don't know of anything similar for .mrxs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-341029135:16,update,update,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-341029135,1,['update'],['update']
Deployability,"Thanks to you both. Off for a long weekend, but will try command line and let you know how that goes. I suspect there's something there from being upgraded so often that's causing issues. Thanks again!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495922615:147,upgrade,upgraded,147,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495922615,1,['upgrade'],['upgraded']
Deployability,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-776801532:179,release,release,179,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532,1,['release'],['release']
Deployability,"Thanks! The packages I provided should be easier to work with, e.g. to uninstall/upgrade once the ubuntu repositories provides 0.40. Manually replacing libraries can cause a mess when you want to upgrade to the next ubuntu version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-734310793:81,upgrade,upgrade,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-734310793,2,['upgrade'],['upgrade']
Deployability,"Thanks!. > Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing gradlew when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later. Hmmm, that can happen if you've installed the latest JDK and it's now the system default, but you haven't built QuPath in a while. I tend to update gradlew as soon as I see there's a new stable release, although that tends to come a bit after the JDK. If that's the issue that got you, the 'solution' can be to set an older JDK to be the system default (e.g. Java 11) and run gradlew using that... or find some other way to run gradle with a different, older JDK. It's able to download separately the JDK it actually needs to build QuPath, separately from the JDK used to run gradle itself - if that makes any sense. More info about [toolchains here](https://docs.gradle.org/current/userguide/toolchains.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161:268,install,installed,268,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161,3,"['install', 'release', 'update']","['installed', 'release', 'update']"
Deployability,"Thanks, @petebankhead! I'll definitely try it once new release will be published.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/827#issuecomment-1319890779:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319890779,1,['release'],['release']
Deployability,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-436907818:101,update,updated,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818,3,['update'],"['updated', 'updates']"
Deployability,"Thanks, I can't see any good reason for the old behavior either - I'll merge the change :). Equalizing views would be a bit too big a change for a 0.0.x release... perhaps one day, but the whole brightness/contrast/color code is pretty horrible, and so it probably is a case of rewriting it entirely rather than trying to push it much further. (It was thanks to @melvingelbard that the issue was found so quickly, I was hesitant to delve into the mess myself...). For reference, the logic of the update is:; * retain the settings from the previous image in the current viewer, if it's compatible with the one being opened; * if there wasn't a compatible image already open, find the first viewer that *does* have a compatible image and use the display settings from that",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/601#issuecomment-689625384:153,release,release,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689625384,2,"['release', 'update']","['release', 'update']"
Deployability,"Thanks, I made minor edits to ensure `super.close()` is called as well, and made some variables final. One worry, possibly obscure: it looks like `dedicatedStore` is being set as a side-effect or calling `getStore()`. That's fine if the builder is only used once, but if it is reused and passed a different `store` (or `findViewer()` gives a non-null result) before the second use then I think we could still end up closing a store that is being used elsewhere. Possible workarounds:; 1. Move the `getStore()` logic into `build()` so that `dedicatedStore` doesn't need to be a field of the builder; 2. Reset the value of `dedicatedStore` whenever its value may change (e.g. `findViewer(imageData)` doesn't return `null`, or `store` is updated); 3. Build the store inside the `RenderedImageServer` if the store it is given is `null` - and then set `dedicatedStore` only within `RenderedImageServer` (which knows whether or not it created a store). I tend to think Option 3. might be the easiest to code, and most robust.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612:735,update,updated,735,https://qupath.github.io,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612,1,['update'],['updated']
Deployability,"Thanks, I remain confused because I can see you're using https://github.com/BIOP/qupath-extension-cellpose - which is developed separately by another group. That's where all the CellPose/Miniconda things arise, since they aren't part of QuPath. Your steps don't mention installing the extension, miniconda or Cellpose though, so I can't tell when or why any problem occurs. Also, if the files are accessible via Windows Explorer / the file chooser then I also don't know see where this would be a QuPath problem... so I remain unclear that there is any bug here, at least in QuPath. @lacan may be able to help from the CellPose extension side, or the community forum may be a better place for the discussion that spreads across different software: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302320391:270,install,installing,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302320391,1,['install'],['installing']
Deployability,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:588,install,installed,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282,1,['install'],['installed']
Deployability,"Thanks, I understand better now that the bug is connected to deserializing. I see that your JSON uses an 'old' (pre-v0.4) syntax:; ```json; { ""name"": ""Example"", ""parentClass"": {""name"": ""Parent""}, ""colorRGB"": 0}; ```; If I run the following in v0.4.3; ```groovy; def pc = getDerivedPathClass(getPathClass(""First""), ""Second""); println GsonTools.getInstance(true).toJson(pc); ```; I see; ```json; {; ""names"": [; ""First"",; ""Second""; ],; ""color"": [117, 210, 222]; }; ```; which was changed in v0.4 for better readability and easier support in other languages. Also, for deserializing you should use `gson = GsonTools.getInstance()` rather than `new Gson()`, because QuPath installs its own `TypeAdapters` to handle custom classes, including `PathClass`. So I implemented these changes in your script, randomizing the class names to avoid being thwarted by caching:; ```groovy; import qupath.lib.objects.classes.PathClass. for (useLegacyJson in [true, false]) {. String parentName = Math.random() as String; String childName = Math.random() as String; String json; if (useLegacyJson); json = """"""{ ""name"": ""${childName}"", ""parentClass"": {""name"": ""${parentName}""}, ""colorRGB"": 0}""""""; else; json = """"""{ ""names"": [""${parentName}"", ""${childName}""], ""color"": [0, 1, 2]}""""""; ; def gson = GsonTools.getInstance(); PathClass pathClass = gson.fromJson(json, PathClass.class); pathClass = PathClass.getSingleton(pathClass); PathClass parent1 = pathClass.getParentClass(); PathClass parent2 = PathClass.fromString(parentName); ; if (useLegacyJson); println ""With legacy JSON""; else; println ""With v0.4 JSON""; println(""getSingleton: "" + parent1.hashCode() + "" ("" + parent1 + "")""); println(""fromString: "" + parent2.hashCode() + "" ("" + parent2 + "")""); println(""Are equal: "" + (parent1===parent2)) ; println ""----------""; }; ```; From a typical run I see; ```; INFO: With legacy JSON; INFO: getSingleton: 1714766410 (0.07271672325316691); INFO: fromString: 2014375544 (0.07271672325316691); INFO: Are equal: false; INFO: --",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778:668,install,installs,668,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778,1,['install'],['installs']
Deployability,"Thanks, I will attempt to upgrade and report if it helps (I admit I was afraid to upgrade so not to introduce new bugs 😄 )",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471603918:26,upgrade,upgrade,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471603918,2,['upgrade'],['upgrade']
Deployability,"Thanks, I'll close this now because v0.3.0 is finally released - and the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) has now been separated out to its own repository. This should make it much easier to create forks and/or develop it at a faster pace, without needing to fit it in with QuPath's (currently rather slow) release cycle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/714#issuecomment-912011086:54,release,released,54,https://qupath.github.io,https://github.com/qupath/qupath/pull/714#issuecomment-912011086,2,['release'],"['release', 'released']"
Deployability,"Thanks, I've updated the javadoc to; ```java; /**; 	 * Create ROIs from labels in an image.; 	 *; 	 * @param ipLabels the labeled image; generally this should be a ByteProcessor or ShortProcessor; 	 * @param n the total number of labels; often this is equal to the maximum value in the image; 	 * @return an array of length n; output[i] is the ROI for label i+1, or null if no Roi is found; 	 * with that label.; 	 */; ```; The class generally remains awkward to use and could benefit from some less ambiguous methods, but they aren't really used much for any new QuPath commands.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1354#issuecomment-1741726252:13,update,updated,13,https://qupath.github.io,https://github.com/qupath/qupath/issues/1354#issuecomment-1741726252,1,['update'],['updated']
Deployability,"Thanks, can you try the QuPath v0.5.0 release candidate - https://github.com/qupath/qupath/releases/tag/v0.5.0-rc1 ?. This behaves different from v0.4.4, using OpenSlide to read the image. To me, it appears to behave properly - although has the limitation that if you add more than one of the dicom files, then the same image is effectively duplicated in the project. I'm not sure if that's expected or acceptable, but addressing it is probably not straightforward. Dicom is the only format I know that behaves in this way, and QuPath tries to avoid having to treat formats as a special case (relying upon OpenSlide or Bio-Formats to untangle the meaning of the image file paths provided).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1773053854:38,release,release,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1773053854,2,['release'],"['release', 'releases']"
Deployability,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:332,release,release,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119,1,['release'],['release']
Deployability,"Thanks, that sounds good! In that case I prefer the minimal implementation for now - it *might* require a compatibility-breaking change in the future (and therefore an update on your side), but I strongly suspect we will be the only people using it for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/699#issuecomment-815558343:168,update,update,168,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815558343,1,['update'],['update']
Deployability,"Thanks, that's quite strange... I've just downloaded it again, and it is working here on two different Macs. Are you running macOS Sierra, or some other version?. If QuPath can't load OpenSlide, then I expect it can't load any other whole slide formats (unless you have the Bio-Formats extension installed). In that case, I would expect it to fall back to using ImageJ for MRXS images to read only the low-resolution data. If you right-click on QuPath.app and select 'Show package contents', you should be able to see something like what is shown below:. ![libopenslide](https://cloud.githubusercontent.com/assets/4690904/20973479/a23ad306-bc90-11e6-9863-e9281c2c9110.jpg). I suspect the issue may be connected to differences in the many ```lib*``` files. One way to test this is to copy all the ```lib.*``` files from a QuPath version that works (i.e. anything before v0.1.1?) and paste it into the QuPath that doesn't. This may cause v0.1.1 to function. If these instructions make any sense, could you try this?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265486923:296,install,installed,296,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265486923,1,['install'],['installed']
Deployability,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-479346732:402,update,updated,402,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732,1,['update'],['updated']
Deployability,"Thanks, this should be fixed in the next release (code linked above).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/819#issuecomment-922814352:41,release,release,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/819#issuecomment-922814352,1,['release'],['release']
Deployability,"Thanks, this should now be fixed. To update older scripts, you can convert the list of names to a String array by adding `[` at the start and `] as String[]` at the end. It should look something like this; ```groovy; removeMeasurements(qupath.lib.objects.PathCellObject, [""Name 1"", ""Name 2"", ..., ""Name X""] as String[]); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/915#issuecomment-1087825570:37,update,update,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/915#issuecomment-1087825570,1,['update'],['update']
Deployability,"That is usually Gatekeeper (since the app is not signed and notarized). You can either turn off Gatekeeper or right-click on the program and choose Open (only needs to be done once). Sent from my iPhone. On Jul 19, 2023, at 12:10 PM, ReganFulton ***@***.***> wrote:. ﻿. I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail.; Any advice?. —; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABMJCNSIL52UXHDWZGSRNS3XRABFXANCNFSM6AAAAAA2QBRGYY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536:281,update,updated,281,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536,1,['update'],['updated']
Deployability,"That sounds much easier, once integrated, than my method of downsampling the whole image to a size where I could submit it to ImageJ, greyscaling a merged image of the channels, and then sending back the annotation region! I haven't tested it yet, but can it work on multiple channels at once?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323493294:30,integrat,integrated,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323493294,1,['integrat'],['integrated']
Deployability,"That's @SoerenXD QuPath makes such minimal use of commons-text (and doesn't use `StringLookup`) that it's tempting to just remove it, but for now I've updated the dependency for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1141#issuecomment-1318327873:151,update,updated,151,https://qupath.github.io,https://github.com/qupath/qupath/issues/1141#issuecomment-1318327873,2,"['release', 'update']","['release', 'updated']"
Deployability,"That's perfect Pete.; No need to include a new menu command if I can create it myself :-). Here is my final startup script:. ```; getQuPath().installGroovyCommand(""Objects>Select...>Select children"", ; """"""; def selectedObjects = getSelectedObjects(); if (!selectedObjects); return; def children = []; for(obj in selectedObjects) {; if (obj.isAnnotation()){; //println obj; def tmpchilds = obj.getChildObjects(); children += tmpchilds; }; }; selectObjects(children); """"""; ); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1852099160:142,install,installGroovyCommand,142,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1852099160,1,['install'],['installGroovyCommand']
Deployability,"That's really great. I will give it a spin and let you know if I come up; against any problems. On Mon, Nov 28, 2016 at 12:04 AM, Pete <notifications@github.com> wrote:. > While not directly related to the Python problem, v0.0.7; > <https://github.com/qupath/qupath/releases/tag/v0.0.7> will hopefully do; > away with the exceptions you were seeing related to OpenSlide and OpenCV; > (some info here <https://github.com/qupath/qupath/issues/2>).; >; > At least, I was able to run the this release on a clean installation of; > Fedora (25) through VirtualBox without major trouble... albeit it still not; > quite as smoothly as under macOS, Windows or Ubuntu.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/27#issuecomment-263157993>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APkEar0xe5TkOXBQe4CzEpPWcbxH0v5Nks5rChqhgaJpZM4K7UrB>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-263166949:266,release,releases,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-263166949,3,"['install', 'release']","['installation', 'release', 'releases']"
Deployability,The TMA core grid view doesn't update when the TMA grid is deleted / re-created / modified. Is that intended?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1478#issuecomment-1976286327:31,update,update,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/1478#issuecomment-1976286327,1,['update'],['update']
Deployability,"The `.pkg` wraps up the `.app` in an installer. I think `jpackage` will create the `.app` first, then the `.pkg` if required - but I don't think it gives space in between to do anything useful. I've never used `defaults` (didn't know it existed...) so don't know if it requires the `.app`. We use `package=installer` to get the `.pkg` because otherwise I think the `.app` has all sorts of scary quarantine flags set that mean it can't be launched without recursively removing them all (at least that's my vague memory of what happened, I may well be misremembering). The flags only occurred when downloading - so on my local build I thought all was fine...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157:37,install,installer,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157,2,['install'],['installer']
Deployability,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623497951:560,update,update,560,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951,12,['update'],"['update', 'updated']"
Deployability,"The code has been fixed, so this should work again in the next QuPath release (v0.4.0). Until then, the workaround is to **open the image through a project**. I'm leaving this issue open because the question understandably comes up quite often, and I want to make the solution easier to find. Duplicates:. * #904 ; * #973; * #1020 ; * #1023",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/894#issuecomment-1186392664:70,release,release,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/894#issuecomment-1186392664,1,['release'],['release']
Deployability,"The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding _'a way to calculate the intensity for fluorescence above a threshold'_ do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:; * Using _Send region to ImageJ_ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like [this one](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html); * Using a script, macro or _Simple tissue detection_ to generate the QuPath annotation first, then within QuPath calling _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407034348:420,install,installed,420,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407034348,1,['install'],['installed']
Deployability,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-467853740:116,upgrade,upgrade,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740,1,['upgrade'],['upgrade']
Deployability,"The extension update is now [here](https://github.com/qupath/qupath-bioformats-extension/releases/tag/v0.0.4). If it doesn't solve the problem, try going to *Edit &rarr; Preferences...* and find the entry called *Never use Bio-Formats for image extensions*. Type `.scn` there and QuPath should default to using OpenSlide... which may possibly help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358716701:14,update,update,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358716701,2,"['release', 'update']","['releases', 'update']"
Deployability,"The fix seems straightforward, just to remove the `getPath()` method from; https://github.com/qupath/qupath/blob/v0.4.2/qupath-gui-fx/src/main/java/qupath/lib/gui/images/servers/PathHierarchyImageServer.java#L151. I'll submit a PR, the main question is whether there will be a v0.4.3 or if the next release will be v0.5.0 (further in the future).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1217#issuecomment-1403554482:299,release,release,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/1217#issuecomment-1403554482,1,['release'],['release']
Deployability,"The following library is under active development, but has been proven to be handy. No complex installation such as openslide. @jcupitt @petebankhead ; https://github.com/bayer-science-for-a-better-life/tiffslide",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-932810687:95,install,installation,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932810687,1,['install'],['installation']
Deployability,The import issue should be fixed [on my fork](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945892:102,update,updates,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945892,1,['update'],['updates']
Deployability,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-541389834:134,release,release,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834,2,['release'],['release']
Deployability,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409052439:763,update,updates,763,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439,1,['update'],['updates']
Deployability,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184#issuecomment-403369967:140,install,installing,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967,1,['install'],['installing']
Deployability,"The method of opening the project doesn't matter. I just tested drag&drop, open dialog and recent dialog. All have the same problem. Regarding your other question, only if I add enough buttons to the source to cause the problem. For example, if I add; ```java; nodes.add(ActionTools.createToggleButton(ActionTools.createAction(() -> {; 	}, ""something"", IconFactory.createNode(QuPathGUI.TOOLBAR_ICON_SIZE, QuPathGUI.TOOLBAR_ICON_SIZE,; 	PathIcons.BRUSH_TOOL), null), true, true));; nodes.add(new Separator(Orientation.VERTICAL));; nodes.add(ActionTools.createButton(ActionTools.createAction(() -> {}, ""Convert""), false));; ```; (sorry for the formatting) to qupath-gui-fx/src/main/java/qupath/lib/gui/ToolBarComponent.java line 170 (just before `toolbar.getItems().setAll(nodes);`) it demonstrates the issue. This is simply adding one toggle button, one separator and one text button to the end (sorry, I'd forgotten about the toggle button). I have no actions on these buttons which would interfere, nor any accelerator etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352389017:834,toggle,toggle,834,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352389017,4,['toggle'],['toggle']
Deployability,"The next release of QuPath (v0.1.2, planned before the end of the year) will contain an option to show the label in a floating window under *View &rarr; Show slide label*. This is automatically updated any time a new image is opened, and the option should remain selected (or unselected) whenever QuPath is restarted. I also created a [FAQs section in the Wiki](https://github.com/qupath/qupath/wiki/FAQs) to link to this answer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/36#issuecomment-268792433:9,release,release,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/36#issuecomment-268792433,2,"['release', 'update']","['release', 'updated']"
Deployability,"The problem may be that the file format you are using results in a large black region that is probably confusing the dearrayer threshold. If you try in v0.2.0-m2 you may find that this background not included and the problem is resolved. If so, it should work in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/329#issuecomment-500507167:272,release,release,272,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500507167,1,['release'],['release']
Deployability,"The reason I chose the more general 'Object classification' is thinking about the future. Even though the existing commends mostly focus on object classification for detections only, future commands might not be. And extensions might add commands to classify in a different way. For example, here's a script that adds a basic command to classify annotations based on the shape of the ROI:; ```groovy; import javafx.application.Platform; import javafx.scene.control.MenuItem; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.dialogs.Dialogs; import qupath.lib.objects.PathObject; import qupath.lib.objects.classes.PathClass. commandName = ""Classify annotations"". Platform.runLater {; installCommand(); Dialogs.showInfoNotification(commandName, ""Command installed!""); }. def installCommand() {; def menu = QuPathGUI.getInstance().getMenu(""Classify > Object classification"", false); def mi = menu.getItems(); .stream(); .filter(m -> commandName.equals(m.getText())); .findAny().orElse(null); if (mi == null) {; mi = new MenuItem(commandName); menu.getItems().add(mi); }; mi.setOnAction {e -> classifyAnnotations()}; }. def classifyAnnotations() {; def imageData = QuPathGUI.getInstance().getImageData(); def annotations = imageData == null ? [] : imageData.getHierarchy().getAnnotationObjects(); if (annotations.isEmpty()) {; Dialogs.showWarningNotification(""Classify annotations"", ""No annotations found!""); return; }; for (def annotation in annotations); classifySingleAnnotation(annotation); imageData.getHierarchy().fireObjectClassificationsChangedEvent(this, annotations); }. def classifySingleAnnotation(PathObject pathObject) {; def roiName = pathObject.getROI()?.getRoiName(); pathObject.setPathClass(PathClass.getInstance(roiName)); }; ```. I think it makes sense for such classifiers to be added to a single *Object classification* submenu, rather than split between *Detection* and *Annotation* (also, there might one day be a need to classify *TMA cores*, which don't fit into either cat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2075386110:689,install,installCommand,689,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2075386110,6,['install'],"['installCommand', 'installed']"
Deployability,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925051403:269,install,installed,269,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403,2,"['install', 'update']","['installed', 'updated']"
Deployability,"The setting doesn't exist in v0.1.2, and this version will not be updated further. Even if you do not wish to switch to v0.2.0 yet (while it is still unstable/regularly changing, and not backwards compatible with v0.1.2) I would be interested to know if the issue remains there or if it has already been resolved by one of the changes in the new version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/393#issuecomment-576193690:66,update,updated,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576193690,1,['update'],['updated']
Deployability,"The stardist extension hasn't been updated for QuPath 0.6 yet. I'd suggest one of these three options:. 1. Test stardist using QuPath 0.5.1; 2. Build the latest stardist extension from source, ideally this branch: https://github.com/qupath/qupath-extension-stardist/pull/36; 3. Use the Jar file attached below in QuPath 0.6.0-rc1. [qupath-extension-stardist-0.6.0-SNAPSHOT.zip](https://github.com/user-attachments/files/16977870/qupath-extension-stardist-0.6.0-SNAPSHOT.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2345968313:35,update,updated,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2345968313,1,['update'],['updated']
Deployability,"The test isn't perfect, it might fail sometimes because the JVM may not be able to release the memory in time for whatever reason. The fact that it passes most of the time is OK. So that works. However, the base load for ""internal"" memory seems to be around 640 MB, which sounds big to me, it's typically less than 100 MB, but maybe that's normal for Rosetta, not sure...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066:83,release,release,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066,1,['release'],['release']
Deployability,"The third option listed above is now integrated, and locale information is added to `.qpdata` files. This has been done in a way that should not break compatibility with any existing saved files. Testing involved varying the locale using commands such as those below (one at a time):. ``` groovy; Locale.setDefault(Locale.UK);; Locale.setDefault(Locale.GERMAN);; Locale.setDefault(Locale.JAPAN);; Locale.setDefault(Locale.CHINA);; ```. ...and then testing whether files written with one locale could then be read using another. This appears to be working, but further insights and bug-reports relating to location-specific issues would be welcome. The fix will be included in `v0.0.5`. (Note: I could conceive of trouble with `ClassNotFoundExceptions` in the event of attempting to deserialize a `.qpdata` file where the saved `Locale` is not available... however it's not clear to me whether this could or would ever actually happen. In the even that it does, QuPath should default to not changing the locale at all - and so would still have a reasonable chance of succeeding.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/18#issuecomment-258824636:37,integrat,integrated,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/18#issuecomment-258824636,2,['integrat'],['integrated']
Deployability,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-803035454:4,update,updates,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454,4,"['install', 'release', 'update']","['installation', 'release', 'update', 'updates']"
Deployability,"There is indeed a need to install the redistributables on Windows, as far as I know - it's mentioned [here](https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi). But the Mac trouble suggests it's something else. I know that the support for CZI in QuPath using the Bio-Formats is pretty varied. Sometimes it works, but I've learned of cases recently where it doesn't. I think TMAs (with lots of scenes?) are especially troublesome. I have spotted a few ways to fix the QuPath Bio-Formats extension that I believe will help, and I hope to have these changes made by the middle/end of next week, and I'll write another update here. Hopefully they will fix the issue with your files, but if not then I will investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357022776:26,install,install,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357022776,4,"['install', 'update']","['install', 'update']"
Deployability,"There is no issue with QuPath-0.2.3 from the GitHub releases. When I build from dev-0.3.0 branch using jdk-15.0.0.36-hotspot, it does not correctly set the memory from the help menu. The config file for 0.2.3 looks like this:; Before setting memory; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; After setting memory to 50gb, and it works fine.; ```; [JavaOptions]; -Xmx51200M; ```. With the dev-0.3.0 and jdk-15.0.0.36-hotspot; Before setting memory:; ```; [JavaOptions]; java-options=-XX:MaxRAMPercentage=50; ```; After setting memory to 45gb; ```; [JavaOptions]; -Xmx46080M; ```; ""java-options="" is missing after setting the memory and QuPath fails to set the correct memory (and defaults to 16gb on my system)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/640#issuecomment-727047100:52,release,releases,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727047100,1,['release'],['releases']
Deployability,"There is some information [here](https://github.com/qupath/qupath/blob/076fb69112b22a299e70819b5af31bd469e47e8a/src/main/resources/eclipse/README.md) about how to set things up in eclipse. You should be able to run in debug mode then. You will probably need to set ```-Xmx``` in your debug configuration, since the maximum memory settings chosen in the GUI won't take effect when run from within eclipse.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65#issuecomment-297603658:290,configurat,configuration,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/65#issuecomment-297603658,1,['configurat'],['configuration']
Deployability,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/225#issuecomment-427051030:673,install,installation,673,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030,4,"['install', 'update']","['installation', 'updates']"
Deployability,"There shouldn't be any need to pass `z` and `t` as separate parameters to `splitRegionRequests` - rather `fullRequest` can be updated to include these, which would be good to reduce the number of necessary `int` parameters. Sorry, I don't really have the bandwidth to look at this in detail or handle pull requests in the near future, so this is likely to linger for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-740743550:126,update,updated,126,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740743550,1,['update'],['updated']
Deployability,There's a new Bio-Formats extension now [here](https://github.com/qupath/qupath-bioformats-extension/releases/tag/v0.0.4). It may help with the CZI files.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-358722518:101,release,releases,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-358722518,1,['release'],['releases']
Deployability,"These changes from @melvingelbard update the way the points are saved/loaded, which makes them more portable and can retain the classification: https://github.com/petebankhead/qupath/pull/42",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/410#issuecomment-600574775:34,update,update,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-600574775,1,['update'],['update']
Deployability,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956212704:246,install,installation,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704,3,['install'],"['installation', 'installer', 'installing']"
Deployability,"They use the standard Java Preferences API so for Windows that is (I believe) the registry.; In the future (and on my build-able fork), classifications will also be maintained in .qpproj files to make it easier to switch between different lists: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-454705287:302,update,updates,302,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454705287,1,['update'],['updates']
Deployability,"This appears to be working perfectly, thank you! I haven't done much testing yet either, and I will update if something goes awry.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/256#issuecomment-455695541:100,update,update,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455695541,1,['update'],['update']
Deployability,"This has been much improved in [v0.0.4](https://github.com/qupath/qupath/releases/tag/v0.0.4), with the addition of [connection groups](https://github.com/qupath/qupath/tree/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-core-processing/src/main/java/qupath/lib/objects) - which enable Delaunay computations to be separated from [display](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/PathHierarchyPaintingHelper.java#L716). Nevertheless, the design will continue to be refined and shouldn't be relied upon yet...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/7#issuecomment-256326873:73,release,releases,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/7#issuecomment-256326873,1,['release'],['releases']
Deployability,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495874974:209,install,installation,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974,1,['install'],['installation']
Deployability,"This is intended, even if it's not optimal. And because it could be better, it will change in the next version:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects. ### Current situation (v0.1.2) & planned changes; Currently, the class list is saved in the preferences - and not any individual project or data file. In the next release, I plan that the class list will be saved in the preferences as _also_ in the project. Furthermore, it will be possible to import class lists from different projects. I hadn't realised when I was writing it at first how long or complex the class lists would become... and I understand that losing a long list can be very frustrating. ### The class list & object classes in the image; The classes actually applied in the image _don't_ need to correspond to the class list. The purpose of the class list is only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/243#issuecomment-437784159:169,update,updates,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159,4,"['release', 'update']","['release', 'updates']"
Deployability,"This is the approach I use now. And it works great. I guess that if you want the line or polyline to do the same then you would need to define the start and end of the line and say that (-) is always to the right and (+) is always to the left from the perspective of the line itself. However, you will loose the expansion in both direction unless a third option expand from line is added (might be useful anyway for cases when you want a ring around the outer border of an object). Perhaps I will try to approach this at some point in time. If I am able to upgrade my poor java skills....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430146028:557,upgrade,upgrade,557,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430146028,1,['upgrade'],['upgrade']
Deployability,"This isn't actually a bug... showing/hiding the names is an `overlay option`. These are not global, and none are persistent. They are like showing/hiding detections or annotations, which are also not persistent. There is probably an argument for making them persistent, but this gets tricky because multiple non-identical instances of [OverlayOptions](https://github.com/qupath/qupath/blob/42cedef3d9252f974f77d2af6d3d3445081406c9/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/OverlayOptions.java) can exist - in which case QuPath would need to distinguish between which options are persistent and which aren't. This would be doable, but would take a bit of thought. I don't really want to introduce several more persistent preferences at this stage, immediately before the stable release, when the current behavior is not actually buggy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/499#issuecomment-632624472:785,release,release,785,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632624472,1,['release'],['release']
Deployability,"This isn't really a bug, and is already covered in the documentation: https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1228#issuecomment-1420795098:118,install,installation,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/1228#issuecomment-1420795098,1,['install'],['installation']
Deployability,This issue is hopefully now resolved in [v0.0.6](https://github.com/qupath/qupath-bioformats-extension/releases).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/164#issuecomment-383477860:103,release,releases,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/164#issuecomment-383477860,1,['release'],['releases']
Deployability,"This issue is not yet resolved (i.e. script recording of annotation export still needs to be implemented), but there is one relevant update in [v0.1.1](https://github.com/qupath/qupath/releases/tag/v0.1.1). It's now possible to request, and then fire, a [JavaFX MenuItem](http://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/MenuItem.html) from the main QuPath GUI if required. This [gist](https://gist.github.com/petebankhead/c19186a30707b5c51aa5a8a9c0d2c6b1) shows the (not entirely obvious) steps involved - maybe it's useful as a workaround for now, for anyone in need of the ability to do run arbitrary commands from the menus.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/25#issuecomment-265210130:133,update,update,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/25#issuecomment-265210130,2,"['release', 'update']","['releases', 'update']"
Deployability,"This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640758278:158,release,release,158,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640758278,2,['release'],['release']
Deployability,"This looks like a small typo in the original code (calling `getInteger` instead of `parseInt`), which should be easily fixed in the next QuPath release. The relevant bit of the code is [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/io/PointIO.java#L207). If you need a temporary workaround, that bit could be extracted into a separate Groovy script with the fix. If you just save the `.qpdata` file (the standard file format with QuPath, also used within projects), then all the points should be retained with the appropriate color/name/classification... so the problem should only affect points that have been manually exported/imported. I've never had much call to reimport exported points (and so didn't notice the bug)... is there a particular workflow where this is important?. An alternative workaround might be to use the 'name' for the points, and then write a script to assign all your reimported points a color or classification based upon their name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/218#issuecomment-420276787:144,release,release,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/218#issuecomment-420276787,1,['release'],['release']
Deployability,"This looks magnificent! It should make new releases so much less painful. Can't think of any other requests, unless you want to see a better way to handle javadocs: https://github.com/qupath/javadoc. But I've tended to just update javadocs for v0.x.0 releases, since the API shouldn't change substantially and so it's rather less important.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943720304:43,release,releases,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943720304,3,"['release', 'update']","['releases', 'update']"
Deployability,"This looks really good, thanks. I've added one small commit to handle ARGB conversion. Initially, when I converted `CMU-1.svs` to `ome.zarr` I was unable to read it again. This was because `BioFormatsImageServer` recognized that the image should be RGB, and therefore created an `ARGB` `ColorModel` (compatible with a packed int representation). But `OMEPixelParser` created an incompatible `BufferedImage` because it received byte arrays, and didn't previously convert to packed int. The reason that QuPath converts *all* (A)RGB images to a packed int representation is somewhat historical, and because I believe this is more optimized in Java's rendering pipeline. It's possible that this belief is out-of-date though, and we should profile one day to check: perhaps ARGB conversion is no longer required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1641#issuecomment-2353587248:657,pipeline,pipeline,657,https://qupath.github.io,https://github.com/qupath/qupath/pull/1641#issuecomment-2353587248,1,['pipeline'],['pipeline']
Deployability,"This may well be because of the image format, or QuPath might be having trouble for some other reason (not enough memory?). If you choose *View &rarr; Show log* does anything informative appear?. It may also be beneficial to update your version of Bio-Formats, if you have not already done so. I see on the [changelog for version 5.4.0](http://www.openmicroscopy.org/site/support/bio-formats5.4/about/whats-new.html) there is a mention of improved performance of large, uncompressed CZI files. Is exporting as CZI an option?. Currently, QuPath works best for images that are small enough to handle directly, or large whole slide images stored in a tiled, pyramidal format of some kind.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/69#issuecomment-298743270:225,update,update,225,https://qupath.github.io,https://github.com/qupath/qupath/issues/69#issuecomment-298743270,1,['update'],['update']
Deployability,"This problem should be fixed in the next release, alongside a few other changes to help give more control over performance-related options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145#issuecomment-363923313:41,release,release,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/145#issuecomment-363923313,1,['release'],['release']
Deployability,"This relates to https://github.com/qupath/qupath/issues/1634. Because CUDA detection and PyTorch downloading is all performed by DeepJavaLibrary, we are very limited in what we can do on the QuPath side. Then there is the issue of how Java loads native library dependencies - and especially the platform-specific fun of how *sub*-dependencies are handled. And the potential interference of environment variables or other things that could be installed. It is, in short, hard. The page on the docs is currently our best 'general' approach to help with this, based on many hours trying to find something workable across computers: https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#gpu-support. We will continue to try to improve this, but I'll close the issue because I don't think there is any clearly-defined QuPath bug here that we can address. To try to avoid fragmenting the discussion in multiple places, I suggest posting on the forum. There are more users active on the forum who might potentially be able to help from their own experience, and there are already some related discussions, e.g. https://forum.image.sc/search?q=qupath%20gpu%20order%3Alatest",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057:442,install,installed,442,https://qupath.github.io,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057,2,['install'],['installed']
Deployability,"This script may be useful as a workaround, but I haven't checked if it has any unwelcome side-effects. The bug will need fixed in a later release.; ```groovy; def hierarchy = getCurrentHierarchy(); hierarchy.clearTMAGrid(); hierarchy.tmaGrid = null; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/646#issuecomment-734918607:138,release,release,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-734918607,2,['release'],['release']
Deployability,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/386#issuecomment-566096742:651,update,updated,651,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742,2,"['release', 'update']","['release', 'updated']"
Deployability,This should be address in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) (and earlier milestones).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-514596348:71,release,releases,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-514596348,1,['release'],['releases']
Deployability,This should be addressed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) (and earlier milestones).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/74#issuecomment-514596506:73,release,releases,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/74#issuecomment-514596506,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it isn't!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/292#issuecomment-514591501:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-514591501,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it turns out not to be!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-514590532:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-514590532,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Please reopen this issue if problems arise.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/326#issuecomment-514593645:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/326#issuecomment-514593645,1,['release'],['releases']
Deployability,This should be fixed in the latest milestone release https://github.com/qupath/qupath/commit/6be3e55afa7e36cb3543ee3c06df56209ee913d1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-471151818:45,release,release,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-471151818,1,['release'],['release']
Deployability,"This should be fixed now in the next release, so that the visibility of an object is used to determine whether it is sent to ImageJ or not. This also includes whether cells are shown with their boundaries and/or nuclei. Regarding converting to ImageJ selections, that should already happen. It should already be the case that the objects are sent as ImageJ Rois on top of an ImageJ overlay - so you can either remove the overlay, or send its Rois to the ROI manager. If you do the latter, you should also see that the names of the Rois have also been set according to their names/classifications within QuPath. Also, the 'primary' selected object (i.e. the one that was currently active whenever the _Extract region to ImageJ_ command was run) should automatically be converted to an ImageJ Roi and set as the active selection in ImageJ - _unless_ it was a rectangle. There isn't really so much point in sending rectangles Rois, since they will simply occupy the whole image (and can easily be recreated in ImageJ if necessary with _Edit &rarr; Selection &rarr; Select All_) - but all non-rectangles should be transferred, as shown below. Hopefully that works well enough to be suitably heroic... ![ij_screenshot](https://cloud.githubusercontent.com/assets/4690904/19360208/7cf2f31c-9175-11e6-9a60-b8878b6e7543.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253588979:37,release,release,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253588979,2,['release'],['release']
Deployability,This should be improved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) but isn't fully resolved... so the issue remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/345#issuecomment-549052690:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-549052690,1,['release'],['releases']
Deployability,"This should be improved in the next QuPath release (v0.4.0) - and I've marked `isEditable()` as deprecated, with a note that it now just returns the opposite of `isLocked()`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1287130611:43,release,release,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1287130611,1,['release'],['release']
Deployability,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - if not please feel free to reopen the issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/358#issuecomment-549052324:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/358#issuecomment-549052324,1,['release'],['releases']
Deployability,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - please reopen if you find it isn't.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/359#issuecomment-549052239:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/359#issuecomment-549052239,1,['release'],['releases']
Deployability,"This should have been addressed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3)... but unfortunately it seems it wasn't. There's a 'rotate image' option when importing images, but at some point late fixes appear to have broken this. Targeted again for v0.2.0-m4...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/293#issuecomment-514591068:80,release,releases,80,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-514591068,1,['release'],['releases']
Deployability,This should no longer be the case in the latest milestone releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/24#issuecomment-494339173:58,release,releases,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/24#issuecomment-494339173,1,['release'],['releases']
Deployability,This should now be addressed in the latest milestone release: https://github.com/qupath/qupath/releases/tag/v0.2.0-m1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-471152180:53,release,release,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-471152180,2,['release'],"['release', 'releases']"
Deployability,"This should now be fixed, and will be included in the upcoming v0.2.2 release.; Please reopen the issue if you find any problem with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/549#issuecomment-662331988:70,release,release,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/549#issuecomment-662331988,1,['release'],['release']
Deployability,"This situation is hopefully much improved in v0.0.7. OpenSlide and OpenCV were both recompiled, and I attempted to ensure all non-standard, required dependencies are now included - with an appropriate ```rpath``` setting so that they may find one another. Most of the steps taken are documented under the ['Maven' directory](https://github.com/qupath/qupath/tree/master/maven). The Linux version 0.0.7 was created using Ubuntu 16.04 running through VirtualBox on an iMac. I also tested the compiled QuPath on a clean installation of Fedora 25, also through VirtualBox. Both were able to run QuPath, including commands depending on OpenSlide and OpenCV - although things did run a bit more smoothly on Ubuntu (e.g. the *Brush* tool misbehaved on Fedora). Additionally, the Linux version is created using [OpenJDK](http://openjdk.java.net) and [OpenJFX](http://openjdk.java.net/projects/openjfx/) - as opposed to the [Oracle JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) used for Windows and Mac.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-263157251:517,install,installation,517,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-263157251,1,['install'],['installation']
Deployability,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:655,release,release,655,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['release'],['release']
Deployability,"This update does allow the export to run as expected when saving as ""ome.tif"". It might be useful to have a check/warning prior to attempting to write a file that is too large to a basic .tif. If I attempt the same export to .tif, after a long pause I get:. `WARN: Unable to write image; ERROR: IOException at line 22: Unable to write F:\filepath\Sox2 region_0_annotationLabels.tif! No compatible writer found.`. Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing `gradlew ` when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515:5,update,update,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515,2,['update'],['update']
Deployability,This was closed automatically when I merged the PR... but I *think* it's fixed. Feel free to reopen if you can replicate it in [v0.5.0-rc2](https://github.com/qupath/qupath/releases/tag/v0.5.0-rc2).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1400#issuecomment-1781795461:173,release,releases,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1400#issuecomment-1781795461,1,['release'],['releases']
Deployability,"This wasn't working for me, but I've updated the PR and also incorporating the architecture into the package name for macOS (since it should then be easier to have x64 and aarch64 installed side-by-side)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1368#issuecomment-1748159654:37,update,updated,37,https://qupath.github.io,https://github.com/qupath/qupath/pull/1368#issuecomment-1748159654,2,"['install', 'update']","['installed', 'updated']"
Deployability,"This would be perfect for our needs!. Integrating it with menu items and other areas of QuPath is perhaps something to think about (is a built-in read-only mode something people want? -- perhaps you want to view a project without making any modifications?). Currently I can disable any (most?) buttons / menu items by using `QuPathGUI.lookupActionByText(...);`, so I personally don't need a more complex implementation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/699#issuecomment-815541015:38,Integrat,Integrating,38,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815541015,1,['Integrat'],['Integrating']
Deployability,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426#issuecomment-606410721:16,install,installation,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721,3,"['install', 'release']","['installation', 'release']"
Deployability,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430150335:85,update,update,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335,2,['update'],['update']
Deployability,"True, lambdas are the only incompatibility that has particularly bothered me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for di",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:487,release,releasenotes,487,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,['release'],['releasenotes']
Deployability,"Turns out it wasn't permissions - thanks for reporting the problem, it should now be fixed in the final release :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-631420619:104,release,release,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631420619,1,['release'],['release']
Deployability,"Under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? It might be using Bio-Formats or something else. I'm curious as to whether OpenSlide is working for you at all. Also, if you have OpenSlide installed some other way (e.g. with Python), can it read the file?. I know there can also be trouble if there are any non-English characters in the path to the file, but it doesn't look like the case from the log.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371780923:218,install,installed,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371780923,1,['install'],['installed']
Deployability,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436386267:17,install,installed,17,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267,1,['install'],['installed']
Deployability,"Unfortunately, though, I don't know how to tell GitHub that this patch should be against dev-0.3 rather than against main. So I'll close this PR and submit a new one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-795596084:65,patch,patch,65,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795596084,1,['patch'],['patch']
Deployability,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-631299162:59,update,updated,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162,1,['update'],['updated']
Deployability,"Update to 1: I've removed the dialog height limit in v0.4.2, which has just been released. I'll close this issue now since selecting/deselecting all is possible as in my last answer. We might add buttons/checkboxes with these options in the future, but I think we need to explore the whole topic of UX more first - to try to make QuPath's options easier to find, but without making the user interface too cluttered and confused. I don't know what the solution to that is, but I hope someone can figure it out :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201#issuecomment-1397436014:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201#issuecomment-1397436014,3,"['Update', 'release']","['Update', 'released']"
Deployability,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482720:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720,1,['Update'],['Update']
Deployability,"Updated SNAPSHOT is live, @finglis could you try to run this branch and see if OpenSlide loads/works on Windows?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748517478:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748517478,1,['Update'],['Updated']
Deployability,Updated classifications based on classloaders. ![Screenshot from 2023-10-03 12-09-12](https://github.com/qupath/qupath/assets/10779688/1296295b-28dc-4cd7-9fa4-717c1b2f0842),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1744758115:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1744758115,1,['Update'],['Updated']
Deployability,"Updated script to try...; ```groovy; import javafx.application.Platform; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.helpers.DisplayHelpers; import qupath.lib.io.PathIO; import qupath.lib.projects.ProjectIO; import qupath.lib.projects.ProjectImageEntry. import java.awt.image.BufferedImage. // Get the current project; def project = getProject(); if (project == null) {; DisplayHelpers.showErrorMessage(""Project from .qpdata"", ""Create a project first!""); return; }. // Get the base directory; def dirBase = QuPathGUI.getSharedDialogHelper().promptForDirectory(null). // Get all the .qpdata files; def qpdataFiles = new ArrayList<File>(); dirBase.eachFileRecurse {; if (!it.isFile()); return; if (it.getName().endsWith('.qpdata')); qpdataFiles << it; }. // For each .qpdata file, look for the image & copy it to the data folder; def entries = new ArrayList<ProjectImageEntry>(); for (file in qpdataFiles) {; // Look for an image with the same name; def path = PathIO.readSerializedServerPath(file); def name = new File(path).getName(); def tiff = new File(file.getParentFile(), name); if (!tiff.exists()) {; print('Could not find file for ' + name); continue; }; // Create a new image entry & copy the bytes; def imageName = tiff.getParentFile().getName() + ""-"" + name.replace('.tif', ''); def entry = new ProjectImageEntry<BufferedImage>(project, tiff.getAbsolutePath(), imageName, Collections.emptyMap()); def fileData = QuPathGUI.getImageDataFile(project, entry); fileData.bytes = file.bytes; entries << entry; }; project.addAllImages(entries); ProjectIO.writeProject(project). Platform.runLater {; getQuPath().setProject(null); getQuPath().setProject(project); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461190784:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461190784,1,['Update'],['Updated']
Deployability,"Very good to know about the workaround, thanks. The latest update to the extension should improve CZI support, and hopefully there's no need to split the image any more. There are more details [here](https://groups.google.com/d/msg/qupath-users/78PpZuu2J1s/su6ZjY0mAgAJ).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/47#issuecomment-358750045:59,update,update,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/47#issuecomment-358750045,1,['update'],['update']
Deployability,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:122,release,release,122,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272,6,['release'],['release']
Deployability,"We don't currently officially support installation using package managers, although there have been some community efforts to make it supported for homebrew, see eg: https://forum.image.sc/t/installing-qupath-via-homebrew/92388",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1536#issuecomment-2138938368:38,install,installation,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1536#issuecomment-2138938368,2,['install'],"['installation', 'installing-qupath-via-homebrew']"
Deployability,"We don't have a code signature step... release candidate must be available within the next couple of hours, ahead of a workshop next week, so won't have time to make any more changes ahead of that. The easiest way to explore would be to build for source with gradle: https://qupath.readthedocs.io/en/0.4/docs/reference/building.html. The PR should point towards the parts that needed to be reverted to get things working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267:39,release,release,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267,1,['release'],['release']
Deployability,"We'd also need to know the version of QuPath you're using, and any other changes that could be relevant (e.g. installing a new version, moving files).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/613#issuecomment-708514862:110,install,installing,110,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708514862,1,['install'],['installing']
Deployability,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:118,release,release,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['release'],['release']
Deployability,"Weirdly I can't get it to open. MacOS says '""QuPath.app"" is damaged and can't be opened. You should move it to the bin'. Even when I go into the package and manually run the QuPath script from the terminal I get the same error. I'll maybe try installing Java JDK 17 x86 and see if I can compile it, unless you have another suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799:243,install,installing,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799,1,['install'],['installing']
Deployability,"Well, that definitely did something - I managed to crash QuPath. One thing - I am trying to run a 64 bit installation, perhaps that is causing some kind of conflict? I checked just to be sure and my python is 64 bit and the error message below discusses a 64-bit Open-JDK server, so this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExt",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:105,install,installation,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['install'],['installation']
Deployability,"What a curious bug... didn't know about it, but I could replicate it and noticed that the points also increased in size as the rotation got closer to 90 degrees. Anyhow, both phenomena had the same cause and it should be fixed in the next version. You can try it out early, including the fix, if you follow the instructions at the bottom of [this page](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). (There should be a few other fixes there related to the _Point tool_ - such as when deleting a point with _Alt_ pressed might enthusiastically remove a neighboring point, but not actually the one you were aiming for)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409309963:409,update,updates,409,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409309963,1,['update'],['updates']
Deployability,"What happens if you try to open the `.scn` file with Fiji (www.fiji.sc)? If this is successful (even to open part of the image - probably not all), then it is likely an issue with the QuPath Bio-Formats extension. But if not, then it is unlikely to be something that can be solved on the QuPath side. QuPath does not handle proprietary file formats, and depends on Bio-Formats and OpenSlide; and OpenSlide is inherently limited to 8-bit RGB images, which really means that Bio-Formats is the only option here. I plan to make some updates to the QuPath Bio-Formats extension soon, and I'll investigate `.scn` specifically with the few sample images I have access to tomorrow. But I don't know if the changes I plan to make will be relevant to the issue you are seeing. If you are able to share an example image that isn't working, I can investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409025091:530,update,updates,530,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409025091,1,['update'],['updates']
Deployability,"What is really interesting with the interaction with Cellprofiler is that we could use already developed and validated pipelines without starting from scratch. We have delopped a few extra CP python modules to handle specific analytical problems. The new version of CP is entirely python based. They do not support ImageJ anymore (no need to deal with javabridge which was a headache for us for while) and very attractive to deploy on a cluster environment. But what you suggest is a good idea, i.e. add it as a new feature request and see how it goes from there. But to my opinion the really interesting aspect with CP and the underlying python+addition libraries (so far) is the computational one, i.e. memory consumption and parallelisation. It would be very efficient to handle a very granular analysis (down to cell/organelle level) in python. We are running with up to 1*10^6 #objects per slide and you quickly go up to 12GB of RAM consumption for a single process in QuPath. The tiling of the slide before analysis is something I'm exploring with QuPath. The streamlining of QuPath and python is an excellent idea. It would allow interaction with CellProfiler modules and other python packages. . Great work. It's being very helpful to us. The interface is great and the other technical problems you can always find a solutions in one way or another even if it is not optimal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350242806:119,pipeline,pipelines,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350242806,2,"['deploy', 'pipeline']","['deploy', 'pipelines']"
Deployability,"When trying to run this I get; ```; qupath.fx.dialogs.Dialogs - QuPath exception: Exception in Application start method; java.lang.RuntimeException: Exception in Application start method; 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:893); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195); 	at java.base/java.lang.Thread.run(Thread.java:833); Caused by: java.lang.NullPointerException: Cannot invoke ""qupath.lib.gui.viewer.QuPathViewer.downsampleFactor()"" because ""this.viewer"" is null; ```. But even if this is fixed, would it have any visible impact? The label text should already be updated. I agree that downsample factor should be exposed as a property, but I think it will require a cautious approach; if it's not a `ReadOnlyDoubleProperty` then the user should be able to assume that they can also *set* the downsample via the property, but I expect that would require a bigger refactoring of `QuPathViewer`. It's old-fashioned and suboptimal, but for now adding a [`QuPathViewerListener`](https://github.com/qupath/qupath/blob/007b18108b9f43954279403cb1f796d7ada4b521/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/QuPathViewerListener.java) is the expected way to identify any kind of viewer change. Definitely a move towards a more property-based approach would be welcome, but then so would a viewer that uses JavaFX more natively (rather than lots of legacy Graphics2D stuff)... so I think the question is whether to invest time in refactoring the current viewer, or take on the task of writing an entirely new viewer?. I definitely think a new viewer would be nice at some point - would be good to discuss what to do along the way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283:666,update,updated,666,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283,1,['update'],['updated']
Deployability,"When you save the classifier, QuPath really just saves what it needs to apply the classification - but it doesn't store all the information about where exactly the training information came from. That's why you aren't able to load the classifier again and update it... not enough information has been saved in the ```.qpclassifier``` file to make that possible. The ```.qpclassifier``` file should therefore be considered 'locked-down', since you can't really change that classifier again directly. Fortunately, so long as you've saved the data for each image as you went along (including your annotations), you can work around this. To do so, you start by creating a new detection classifier and starting to train it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:256,update,update,256,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['update']
Deployability,"While not directly related to the Python problem, [v0.0.7](https://github.com/qupath/qupath/releases/tag/v0.0.7) will hopefully do away with the exceptions you were seeing related to OpenSlide and OpenCV (some info [here](https://github.com/qupath/qupath/issues/2)). At least, I was able to run the this release on a clean installation of Fedora (25) through VirtualBox without major trouble... albeit it still not quite as smoothly as under macOS, Windows or Ubuntu.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-263157993:92,release,releases,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-263157993,3,"['install', 'release']","['installation', 'release', 'releases']"
Deployability,"While there is still no way to classify easily by intensities through the GUI, starting from [v0.1.2](https://github.com/qupath/qupath/releases/tag/v0.1.2) several new functions make it very easy by scripting, e.g. [this one](https://github.com/qupath/qupath/blob/master/qupath-core-processing/src/main/java/qupath/lib/scripting/QP.java#L1156). For example, to classify all cells as negative, 1+, 2+ or 3+ according to nuclear DAB staining, you may use; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); ```. Or to classify cells as positive or negative after running the new subcellular detection command, you could try; ```groovy; setCellIntensityClassifications(""Subcellular: DAB: Num spots estimated"", 2.5); ```. Finally, a more sophisticated example where the classifications for all cells are first reset, and then a reclassification according to intensity for tumor cells applied:; ```groovy; // Reset all existing intensity classifications; resetIntensityClassifications(). // Select all tumor objects; def tumor = getPathClass(""Tumor""); def tumorObjects = getObjects({p -> tumor.isAncestorOf(p.getPathClass())}). // Apply intensity classification; setIntensityClassifications(tumorObjects, ""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6). // Fire an update event to see the results; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/16#issuecomment-269880806:135,release,releases,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/16#issuecomment-269880806,2,"['release', 'update']","['releases', 'update']"
Deployability,"With; ```; ./gradlew clean jpackage; ```. I end up with what I guess is the full list:. ```; ij-1.54k-javadoc.jar; jts-core-1.20.0-javadoc.jar; qupath-app-0.6.0-SNAPSHOT-javadoc.jar; qupath-bioimageio-spec-0.1.0-javadoc.jar; qupath-core-0.6.0-SNAPSHOT-javadoc.jar; qupath-core-processing-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-bioformats-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-openslide-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-processing-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-script-editor-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-svg-0.6.0-SNAPSHOT-javadoc.jar; qupath-fxtras-0.1.5-javadoc.jar; qupath-gui-fx-0.6.0-SNAPSHOT-javadoc.jar; ```. If I add `-P package=installer` then I do wonder ""Is this the life?"" (by which I mean, I only get the shorter list).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652#issuecomment-2456992383:692,install,installer,692,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652#issuecomment-2456992383,1,['install'],['installer']
Deployability,"Works great on my Linux box, an Ubuntu 22.04 derivative with GNOME desktop environment:. ```; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. Would probably be worthwhile checking a KDE plasma version, will look into that quickly",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1671#issuecomment-2393474058:126,Release,Release,126,https://qupath.github.io,https://github.com/qupath/qupath/pull/1671#issuecomment-2393474058,1,['Release'],['Release']
Deployability,"Wow, thanks, that replicates the issue for me too. This sounds like a bug / intuitive behavior within the Delaunay triangulation. It's concerning that measurements can be added multiple times to the same objects. It suggests that the results might not be fully deterministic, depending upon the status of the object hierarchy and precisely which annotations are selected. I'm reluctant to fix the underlying issue in a 0.0.x release, but we should try to replace the command entirely. An implementation with [`DelaunayTools`](https://github.com/qupath/qupath/blob/df81345068455f09f42f50e97dc7b69a591e27f7/qupath-core/src/main/java/qupath/lib/analysis/DelaunayTools.java#L77) should be cleaner than the current OpenCV-based one. **As I understand it, this shows that the existing Delaunay command should not be used for nested annotations that contain detections.**. Single annotations, or annotations arranged in a 'flat' way (so that the same detection is not a descendent of more than one selected annotation) should be ok.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1943698902:425,release,release,425,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1943698902,2,['release'],['release']
Deployability,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527233194:379,install,installation,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194,4,"['install', 'update']","['installation', 'update']"
Deployability,"Yeah, I am using Windows 10 (updated regularly) and it doesn't matter if I have several or no programs running in the background. I am doing complete image annotations on whole slide scans, so I have a lot of rather large and complex annotations. The unresponsiveness happens after I have been doing the annotations. I am also using a stylus to help with getting the finer details right in my annotations.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461525894:29,update,updated,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461525894,1,['update'],['updated']
Deployability,"Yep, somehow the libpixman used is the one from my system:; ```; $ cat /proc/30668/maps | grep pixman; 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; ```; On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works fine while 0.2.0 doesn't... that doesn't make sense...; Ideally it would be great if it could ship with a QuPath release with the fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527240543:736,release,release,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527240543,1,['release'],['release']
Deployability,"Yes - as a Mac user, it's annoys me too :). Sadly, it looks like the version number is still enforced by `jpackage`. The relevant part is at:. * https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/CFBundleVersion.java. Attempting to build results in the message:. ```; Bundler Mac Application Image skipped because of a configuration problem: The first number in an app-version cannot be zero or negative. ; Advice to fix: Set a compatible 'app-version' value. Valid versions are one to three integers separated by dots.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1467726628:365,configurat,configuration,365,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1467726628,1,['configurat'],['configuration']
Deployability,"Yes and no... not in any publicly available way, and it remains on my todo list before the next release. This is taking longer than I'd hope as I find more and more to do, but some talks and workshops in March give me a pretty hard deadline.... However, amidst all the changes I'm making for the next release I've introduced an option to 'retain the display settings' when opening a new image. This means that if you have an image open with certain brightness/contrast settings (and color channels turned on/off), then if you open another image in the project it will (optionally) keep the settings constant:; https://github.com/petebankhead/qupath/commit/5750e42574cf34f9c868c9d2b133da3daaecf5e1. My hope is that it reduces the need to apply settings across all images in a project through a script, because the min/max settings (optionally) don't automatically change per image. How does that sounds to you?. Alongside that, I've added the ability to turn on/off multiple channels at once (by selecting them and right-clicking), and given a bit more control on what the 'Auto' button does when adjusting brightness/contrast per channel. I think these changes make the Brightness/Contrast dialog considerably easier to use; at least, I find it less annoying now than it previously was. (I still do need to revisit saving settings though, because it needs to be possible to set channel names if these are wrong or missing. And if it's possible to save channel names, it may as well be possible to save display settings per channel as well...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453637134:96,release,release,96,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453637134,2,['release'],['release']
Deployability,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956131733:67,install,installation,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733,5,['install'],"['install', 'installation', 'installed']"
Deployability,"Yes, I have `mirax` file that has dimensions of 105185 X 221772 pixels. By 'true dimensions' I mean the pixel dimensions stored in the raw file. Converted to a tiff image I get:. tiffinfo:; ````; TIFF Directory at offset 0x27e43676 (669267574); Image Width: 105185 Image Length: 221772; Tile Width: 512 Tile Length: 512; Resolution: 10, 10 pixels/cm; Bits/Sample: 8; Sample Format: unsigned integer; Compression Scheme: JPEG; Photometric Interpretation: YCbCr; Orientation: row 0 top, col 0 lhs; Samples/Pixel: 3; Planar Configuration: single image plane; Reference Black/White:; 0: 0 255; 1: 128 255; 2: 128 255; JPEG Tables: (574 bytes); ...; ````. Opening in QuPath (mirax + crop), QuPath (mirax + no crop / tiff), Web Viewer (tiff - IIPImage):; ![image](https://github.com/qupath/qupath/assets/34658867/0e4248ff-add4-469f-a95b-6c5061ad9dbe). Full image annotation rectangle from QuPath (crop):; ```{""type"":""FeatureCollection"",""features"":[{""type"":""Feature"",""id"":""e23c4b41-3966-4e64-af97-665f7edf753d"",""geometry"":{""type"":""Polygon"",""coordinates"":[[[0, 0],[76832, 0],[76832, 190655],[0, 190655],[0, 0]]]},""properties"":{""objectType"":""annotation""}}]}```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631156949:521,Configurat,Configuration,521,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631156949,1,['Configurat'],['Configuration']
Deployability,"Yes, at the time the build scripts were written it seemed to be impossible to have a version number starting with 0.x on macOS - at least when building using `jpackage`. Attempting to do this would result in a ""first number in a CFBundleVersion cannot be zero or negative"" exception, as described at https://forum.image.sc/t/error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative/48713. The build script explicitly sets the wrong version number in an attempt to get builds working at all, see https://github.com/qupath/qupath/blob/v0.4.3/qupath-app/build.gradle#L40. I'll check if the situation has changed with more recent `jpackage` releases. If not, I'm afraid we're probably stuck with it until there's eventually a QuPath 1.x release, unless someone can come up with a solution that doesn't overly complicate the build/release process.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136:679,release,releases,679,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136,3,['release'],"['release', 'releases']"
Deployability,"Yes, it's possible to use 3rd party libraries without recompiling, although I'm not sure how easy it will be to set up in this case. Firstly, you need all the (Java) jar files visible to the classloader in QuPath; the easiest way to do that is to put them in the *extensions* folder - normally just by dragging them onto QuPath when it's running. You might need to restart QuPath to make sure they are picked up. Secondly, in this case, you need all the native libraries of dl4j to be visible as well; these might have been distributed in jar files, in which case they need to be extracted (as far as I know - unless dl4j is doing something different here). There is some more information about where to put them to get them on the ```java.library.path``` [here](https://github.com/qupath/qupath/wiki/Paths-&-configuration). That is probably the easiest approach... if it works. Alternatively, if you choose to use Eclipse instead, you don't necessarily need to fork QuPath since you shouldn't need to modify it, you just an Eclipse project to be set up with the source. You can then create an extension and set up everything specific to your project there. You could choose an existing extension as a base and then modify it, using Maven to manage all the dl4j dependencies, and then add it to the build path for the main QuPath project. I haven't tried this exact configuration myself. Since this requires some knowledge of Eclipse, Maven, library paths, QuPath and dl4j, I imagine it isn't the easiest thing to get working... but I think it should be doable.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-300999633:809,configurat,configuration,809,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-300999633,2,['configurat'],['configuration']
Deployability,"Yes, that may be necessary. Until now it has not been an issue, but I recently updated `build.gradle` on the dev branch to optionally include all modules to make this easier:; ```; ./gradlew clean build test createPackage -PjreModules=all; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-613250191:79,update,updated,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-613250191,1,['update'],['updated']
Deployability,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:327,install,install,327,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,1,['install'],['install']
Deployability,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/343#issuecomment-515174436:397,update,updates,397,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436,1,['update'],['updates']
Deployability,"Yes, this is important and should be addressed to avoid confusion. (I think _File &rarr; Revert_ can be used to 'update' the data by reading it from the [now changed] data file, but this isn't documented...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/340#issuecomment-513528764:113,update,update,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-513528764,1,['update'],['update']
Deployability,"You can set the RAM in the configuration: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory; You can also set other command line arguments there, including `-q` to start up in 'quiet' mode. Check out the command line help for more. Imagine the overhead we have dealing with issues raised by users from anywhere.... I will close this because, as before, there is no bug. We may discuss further improvements on the forum for future versions, but really for now my focus is on any remaining issues for v0.2.0. There is no time for further enhancements at this late stage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632633425:27,configurat,configuration,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632633425,1,['configurat'],['configuration']
Deployability,"You can try building the v0.2.0-m10 snapshot from the `dev` branch to see if the change helps, or alternatively wait until it is released (should be in the next week or so). To build, you'll need to use JDK 14 (there's no longer any need to add jpackage separately as described [here](https://qupath.readthedocs.io/en/latest/docs/reference/building.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607685002:129,release,released,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607685002,1,['release'],['released']
Deployability,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-487908711:69,release,release,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711,2,['release'],"['release', 'releases']"
Deployability,"You would need to run the classifier first to distinguish (for example) tumor vs. stromal cells. Once you are happy with that, be sure to turn off the 'Auto-update' setting if you were using it... and then run ```setCellIntensityClassifications``` to further subclassify cells of each type according to their intensities. Note that you can use a single intensity threshold, to distinguish positive/negative cells only, e.g.; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2); ```; or 3 thresholds to get positive/negative, 1+, 2+, 3+ and H-scores; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); ```. It's true that the sliders that allow you to set intensity classifications when you create the classifier at the start will only result in tumor cells being classified. At the time I wrote that command, I was only interested in classifying tumor cells.... and it was much later that I realized that applying intensity classifications to other kinds of cell would be important too. There is no button/menu item for that yet, so the ```setCellIntensityClassifications``` script is the best way to do that currently.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/64#issuecomment-293778069:157,update,update,157,https://qupath.github.io,https://github.com/qupath/qupath/issues/64#issuecomment-293778069,1,['update'],['update']
Deployability,[v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) now shows a warning message whenever using _Run for project_ on the current image.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/340#issuecomment-549053056:45,release,releases,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-549053056,1,['release'],['releases']
Deployability,"` returns byte arrays in a format very similar to Bio-Formats, and the logic convert these into a `BufferedImage` (with suitable `ColorModel` etc.) is complex. This should be extracted from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. I",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4533,update,update,4533,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['update'],['update']
Deployability,"ackup` (works as we are sure the target doesn't exists already). If this fails, you have the `<file.tmp>` as the newest version; 4. `mv <file>.tmp <file>` (same, as the previous operation worked). If this fails, you have the `<file.backup>` as the backup version; 5. `rm <file>.backup`, if desired. > could you give the full stack trace for what exception you get without these changes?. The ""problem"" is that there is no exception thrown. It just fails on step 3 and/or 4 because `source` is identified as the same file as `target`, so it just [does not do anything](https://github.com/openjdk/jdk/blob/cbfddf4e1d3ff8dddb95bcb9242b31c175b768fc/src/java.base/windows/classes/sun/nio/fs/WindowsFileCopy.java#L363). As if the `target` was the `source`.; This means that a project saved on an SFTP server will always end up with three files, `project.qpproj`, `project.qpproj.backup` and `project.qpproj.tmp`, where the latter is the ""real"" project.; But it also means that when a project is saving the image data it does the following if there was a previous backup:; * `mv <pathData> <pathBackup>` -> **FAILS** : `<pathBackup>`now has the older backup saved, while `<pathData>` still exists.; * `write <pathData>` -> dangerous operation: if it fails for whatever reason, the only saved state is the one from an older backup. > Is there any easy way for us to replicate the issue?. Not that I know of. You have to connect to an SFTP server with windows to do this. Finally, i think `DefaultProject.java` could be the only source file that would need to be modified to improve SSH support from windows. The other operations are internal to QuPath, and I doubt people would install the windows version of QuPath in an Linux server and run it with `sshfs-win` 😅. Regarding the `copy` operation, instead, isn't it only ever used when duplicating an Image? In that case how could there be another file in the new data entry's path? I don't think you evern needed the `REPLACE_EXISTING` attribute over there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1898959824:2077,install,install,2077,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1898959824,1,['install'],['install']
Deployability,"after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total); INFO: Parsed 84 from HS-5_Scan1.ome.tif.qptma (420 total); INFO: Parsed 84 from HS-6_Scan1.ome.tif.qptma (504 total); WARN: Unable to find censored column - survival data will be uncensored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: No p-values < 0.05; INFO: Smoothing log-rank test p-values by 1; INFO: Longest stretch of",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:1482,Update,Update,1482,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['Update'],['Update']
Deployability,"ain it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information from the old slide that you are closing and also the new slide that you are opening) or not (i.e. discard all the training information from the slide that was previously open). Again, the ```More...``` button can be useful. You can use it to find out how many objects have been used for training for each image in the project (*Show training object counts*). You can also use this button to apply the current classifier to all images in the project (*Classify project images*). Probably, you would want to train a classifier that works reasonably across all your TMA cores and all your slides, and then apply this across all your slides at the end - to make sure they all have the same classifier applied the sa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:1730,update,updated,1730,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['updated']
Deployability,ainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6781,update,updateSuggestedOverlayColorFromThumbnail,6781,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,"aining in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information from the old slide that you are closing and also the new slide that you are opening) or not (i.e. discard all the training information from the slide that was previously open). Again, the ```More...``` button can be useful. You can use it to find out how many objects have been used for training for each image in the project (*Show training object counts*). You can also use this button to apply the current classifier to all images in the project (*Classify project images*). Probably, you would want to train a classifier that works reasonably across all your TMA cores and all your slides, and then apply this across all your slides at the end - to make sure they all have the same classifier applied the same way. You can either do this with the *Classify project images* option under ```More...```, by opening each image in turn and loading/running the classifier, or by using a script to automate the process. I hope that helps explain things a bit. I admit that things get a bit more complicated whenever you need to train a classifier across multiple images, and then update it later... but sometimes I also find that it is necessary.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:3077,update,update,3077,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['update']
Deployability,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2706,update,update,2706,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556,3,"['release', 'update']","['release', 'update']"
Deployability,"and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only distinction I could dig out was those that implement GitHubProject (or ImageServerProvider). I could hard code them, but that seems a bit fragile. What I have gone with in the current version is ""Editable"" vs ""non-editable"", but this is... well just wrong really. Relatedly, that means that some of the user-installed extensions also can't be updated, so those buttons will need to be disabled also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:3008,install,installed,3008,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,4,"['install', 'update']","['installed', 'updated']"
Deployability,"and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. I'm afraid not any time soon... QuPath is just displaying the images as Bio-Formats provides them, and here they are as distinct 'series' (as presumably the scanner writes them separately as well to the file). Deciphering exactly which series belong together and where to position them in the viewer wouldn't be an easy task, especially as it would need to be solved for different scanners - which may have their own complexities. For example, I think series (scenes) can overlap in .czi files, and indeed there might be different z-slices and time points. It's also a little scary... if a scene is wrongly positioned, and then this is identified and fixed, previous analysis of the same image won't match any more. Therefore it is a big and complex job; I look into it every now and then, but don't plan to take it on any time soon. > regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?). Bio-Formats needs to have read the channel names from the file, and I'm not sure that it does for .scn - it doesn't appear to in the images of yours that I've seen. So this would require a change in Bio-Formats. I added some descriptions of scn-related issues on the Bio-Formats issue tracker on GitHub https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-410024564. There are other ways to contact the Bio-Formats team to discuss more or check if this has been discussed elsewhere, e.g. https://www.openmicroscopy.org/support/. > is it possible to delete scripts within the script editor (such as empty ""untitled"" scripts that get created by default when opening the editor)?. As @Svidro mentions, there's a _File &rarr; Close script_ option - I use the shortcut `Ctrl + W`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411649825:3507,update,update,3507,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411649825,1,['update'],['update']
Deployability,"ankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. I hope the above comments explain why this is the case. The possibilities with Groovy are pretty limitless - sometimes all it takes is to ask. But the software is being used by hundreds of groups across the world for very different applications (if you see the [Citing QuPath](https://github.com/qupath/qupath/wiki/Citing-QuPath) page you will observe that others _do_ manage to use it in 'practical workflows'), and from what you describe you aren't working with whole slide images. Adding the functionality you want to the core software would potentially not benefit anyone else using it... which is why the ability to script things is so essential. I wish the software could do everything already, but it's a process. Bu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401546472:3032,integrat,integrated,3032,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472,2,['integrat'],['integrated']
Deployability,"ar counterstain in the first channel. This morning I tried to address this, and hopefully you find it functions better in [v0.0.5](https://github.com/qupath/qupath/releases/tag/v0.0.5), which I've just uploaded. An example image from a fluorescence microscope is shown below. ![qupath_fluorescence_cells](https://cloud.githubusercontent.com/assets/4690904/20115597/cf2682ae-a5f0-11e6-88c9-82298e3cd1ea.jpg). A few important points (which will eventually be documented on the Wiki):; - QuPath tries to identify brightfield and fluorescence images when they are opened (although you can ask it not to under _Auto-estimate image type on opening_ option in the _Preferences_); if it gets it wrong, you will need to double-click the `Image type` in the _Image_ tab to set this manually to fluorescence.; - The `Image type` needs to be set before running the _Cell detection_ command, to make sure that the right options are displayed; - The _Threshold_ option under _Intensity parameters_ will be important, and will likely need to be adjusted... the default is simply selected for all images of that type and bit-depth, and not based on the information present in the image; - If you are working with images at a relatively low resolution (such as in the screenshot I showed), it can be helpful to decrease the _Detection line thickness_ parameter in the _Preferences_ so that the cell or nucleus outlines do not obscure your view too much.; - The _Brightness/Contrast_ options currently misbehave somewhat with fluorescence. If you want to show/hide specific channels, it's actually better to simply type the number of the channel you want to hide or show several times (i.e. just the number 1, 2 or 3 etc.). This should toggle it on or off. Actually, this last trick to change visible channels also works for brightfield, except that 1 indicates the RGB image, 2 the first color deconvolved channel, 2 the second... and so on through multiple color transforms. I hope this is useful. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259250203:2143,toggle,toggle,2143,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259250203,2,['toggle'],['toggle']
Deployability,"ass = annotation.getPathClass(); ; def roi = annotation.getROI(). tw = (int) roi.getBoundsWidth(); th = (int) roi.getBoundsHeight(). if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; //if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500)){; //print result; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");; //IJ.run(imp, ""Median..."", ""radius=5"");; IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; // python code for normalisation and structure convolution; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");; //getHistogram(values, counts, 256); IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");; ; rm = RoiManager;; rm = RoiManager.getInstance(); ; ; if((rm==null) || (rm.getCount()<1)){; print(""No objects found""); }else{; //print rm.getCount(); //RoiManager.roiManager(""count""); //rm.runCommand(imp,""Measure"");; //rm.runCommand(imp,""Update"");; IJ.run(imp, ""Send Overlay to QuPath"", ""choose_object_type=Detection include_measurements"");. // Get a suitable file name; //String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; //File file = new File(dirOutput, name); // Save the image; //IJ.save(imp, file.getAbsolutePath()); // Print progress; //imp.show() ; rm.reset() ; ; }; ; //counter++",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357429324:1714,integrat,integrated,1714,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357429324,2,['integrat'],['integrated']
Deployability,"atformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); 	at qupath.lib.images.servers.ImageServe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3425,release,release,3425,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['release'],['release']
Deployability,"ath, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes it easier to use different IDEs. The combination of Java 8, JavaFX, Maven, Ant and native libraries makes it more difficult than a project using Java alone, and there wasn't previously a critical need. Still, the portability is something that I hope will be improved in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2886,install,installation,2886,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['install'],['installation']
Deployability,"athPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1505,update,update,1505,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['update'],['update']
Deployability,bda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:526); at javafx.scene.control.TreeCell.lambda$new$256(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TreeView.setRoot(TreeView.java:470); at qupath.lib.gui.panels.ProjectBrowser.setProject(ProjectBrowser.java:271); at qupath.lib.gui.QuPathGUI.setProject(QuPathGUI.java:4186); at qupath.lib.gui.QuPathGUI$setProject$0.call(Unknown Source); at org.codehaus.groovy.runtime.callsite.C,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:1957,update,updateItem,1957,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,1,['update'],['updateItem']
Deployability,beside the library above there was also javax.script that was not installed properly. After adding two entries for the lib above with the last version of github I could run it in debug mode with JIdea and then create a single JAR including all jar files. . Somehow (maybe because of Intelli JIdea) the target version of interpreter and java compiler did not match. I had to change for all the different modules to 1.8. . The ant build did not work but finally the jar file is fine for our needs. Somehow it is also much smaller then the Windows install. It makes about 30MB instead of 300MB for the windows install but maybe there is some lib I didn't include. Anyway If something comes up will update the thread.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-315890621:66,install,installed,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-315890621,4,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"can you help me to fix this problem , i were using flutter in vscode macos10.14, ; the problem happens after i updated the sdk , ; the problem faces even i created new project, ; it affects all of the code in flutter; <img width=""925"" alt=""Screen Shot 2019-12-31 at 10 53 48 AM"" src=""https://user-images.githubusercontent.com/58293521/71614299-e6d7c300-2bbb-11ea-9e1f-30c171196373.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/281#issuecomment-569884029:111,update,updated,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/281#issuecomment-569884029,1,['update'],['updated']
Deployability,"clipse - I'm afraid I don't know how to address the issues when using other IDE's.; (Incidentally, those instructions are a little old now, not all steps may be necessary. For example, from memory I think only the .project file needs updated, not the .classpath file.). However, here are some notes that might be helpful:. * Most of the POM files should descend from the 'base' POM, which specifies that the compiler should be compatible with [Java 8 here](https://github.com/qupath/qupath/blob/v0.1.2/pom.xml#L176). I believe this should then be inherited across the project.; * slf4j-api is a dependency of logback-classic. This is specified in the base POM, and so Maven should still take care of slf4j even if it isn't mentioned directly. I don't know why anything involving javax.script would be troublesome.; * The jar files alone required for QuPath are reasonably small, but the JRE is required for running it. The JavaFX packager can be used to put them all together in one (larger) installer, but if you already have a compatible JRE installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you w",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:1147,install,installer,1147,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,2,['install'],"['installed', 'installer']"
Deployability,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6233,release,release,6233,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,8,"['install', 'release']","['installed', 'installs', 'release', 'releases']"
Deployability,"d from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1537,update,update,1537,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['update'],['update']
Deployability,"dd the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1042,deploy,deploy,1042,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy;,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2744,deploy,deploy,2744,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launc,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2739,deploy,deploy,2739,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1687,deploy,deploy,1687,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"e pretty small. You would detach a viewer by right-clicking on it. It's just intended for exploration - I suspect there will be niggly issues. > I think it can be helpful because this feature is already present in several software like ImageJ, and I don't think it will be confusing for new users as I guess it will just require to add a new button to implement this. I think you're right, although in ImageJ there *is* no main window. In QuPath there is, so having a viewer separated from it feels a bit weirder to me - if nothing else is open, there's a big area of empty space. > Is that a request that has already been mentioned on the Image.sc forum? If not, shouldn't we ask the opinions of the QuPath users there? . Not that I remember - I thought here would be good to start the discussion, could move to the forum if it proves controversial / we need a vote :). > > Detaching one viewer (and leaving the rest of the 'viewer grid' intact); > ; > Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. This isn't exactly what I meant, but anyway: it's already the case. You can use *View &rarr; Multi-view... &rarr;* to create a grid of viewers, and the toggles apply across all of them. I agree it's sometimes restrictive, but my feeling is that it would cause more trouble if that didn't happen. What I really meant though was that a single viewer could be extracted into its own window, but the main QuPath window would remain as it always was. That's the approach in the PR. The alternative was that viewers are either all in grid mode or all in 'detached' mode (floating windows), but not a combination of both. > Final thought is, if we implement this, we need to consider what should be the advantage of having one QuPath instance with two viewers over having two QuPath instances open each with one viewer, and we should probably aim our design in that direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081:1173,toggle,toggles,1173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081,2,['toggle'],['toggles']
Deployability,"e](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1046). In this iteration, if you have time to test it, I've also added the side-to-side wheel clicks (or shift + normal mousewheel scrolling). I've spent some time trying to understand how [Mouse Events](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/input/MouseEvent.html) are handled in JavaFX and I *think* I managed to sort out the issues I was initially having: Behaviour when dragging with middle button pressed, fast clicks, when to consume events or not, debouncing... Incidentally, the debouncing code is not strictly necessary, but it was an interesting exercise in working with a broken mouse. Also, I *think* `MouseEvent.MOUSE_RELEASED` should be added to the [list of ignored events here](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1039) as without, I had to deal with the (middle) button release event multiple times as part of the events generated by JavaFX in the course of pressing a mouse button. Finally, I've also UX tested the behaviours we discussed in the [forum.sc post](https://forum.image.sc/t/tool-selection-via-mousewheel-side-scrolling-button-press/70796/4?u=ep.zindy) and reproduced in the first comment. For now,; * Windows,; * with my ""fancy"" mouse; * with the shift+scrollwheel substitute for side-to-side scrolling; * my Lenovo T460 touchpad; * with scroll touch gestures enabled or disabled; * with inverted mouse enabled or disabled; * with ctrl to modify opacity; ; I couldn't use ""Zoom"" or ""Rotate"" touch gestures, because I don't think my very basic touchpad understands them, so I couldn't see any effects on QuPath. Panning does work as expected (with my very last commit). ~~**todo** I will edit my comment when I test a Linux build on my old powerbook with Mint, which (maybe) will let me use more touch gestures.~~ I haven't been able to use touch gestures with QuPath in my Cinnamon",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123:1108,release,release,1108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123,2,['release'],['release']
Deployability,"ed .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not enti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1130,release,release,1130,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['release'],['release']
Deployability,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:6526,update,updateChildren,6526,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,37,['update'],['updateChildren']
Deployability,"enCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths wou",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1603,update,update,1603,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['update'],['update']
Deployability,"eneral, when something is used internally by QuPath, we have a much better idea of what we might be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things for anyone else. We can even move it up into `QP` so that it works without knowing anything about the viewer at all. I think that as a compromise this is more than fair. It means you get the outcome you want, and we did not have to compromise to do something that I strongly believe will end up wasting a lot of time in the future (be that mine or someone else's). QuPath remains a 0.x.x release and so the API shouldn't be interpreted as stable. I don't encourage writing extensions for that reason. But I do recognise that extensions are important, and so if someone wants to do it (aware of the risks) then it is supported. I hope that more clearly explains my logic. Since it feels like we've discussed this subject many times, I thought I should be thorough in this answer. Now I've no time to shorten it.... I hope it is useful. v0.2.0 has been a rather... intense experience. Pretty much the entire software has been rewritten, while still trying to keep it basically functional and respond to the ever-increasing questions and requests from users. Sometimes it gets exhausting. QuPath is by no means finished, but I do think it is substantially better and more coherent than it previously was. The goal of v0.2.0 was to get decent foundations as quickly as possible - but the task turned out to be huge. The importance of many of the new features will only become clear in future releases. v0.3.0 won't have ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:5611,release,release,5611,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['release'],['release']
Deployability,"eport them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(Pa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1229,update,update,1229,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['update'],['update']
Deployability,"er the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total); INFO: Parsed 84 from HS-5_Scan1.ome.tif.qptma (420 total); INFO: Parsed 84 from HS-6_Scan1.ome.tif.qptma (504 total); WARN: Unable to find censored column - survival data will be uncensored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: No p-values < 0.05; INFO: Smoothing log-rank test p-values by 1; INFO: Longest stretch of p-values < 0.05: 12294.9 - 13980.4 (18 entries, 5 observed); INFO: Smoothing log-rank test p-values by 11; INFO: Longest stretch of p-values < 0.05: 12294.9 - 13980.4 (18 entr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:1668,Update,Update,1668,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['Update'],['Update']
Deployability,"erably, because the command must also be scriptable and then somehow the units need to incorporated into any script. Additionally, QuPath is moving towards greater generality. It is increasingly used for images where µm is an inappropriate unit, so I'm reluctant to add additional code that assumes µm as the only alternative to pixels. And a properly generic system will take a lot more effort to develop (not helped by the fact that Java has no built-in support for converting units... it's a recurring theme, e.g. [here](https://jcp.org/en/jsr/detail?id=385), but as far as I'm aware there are a multiple implementations and it's not clear which, if any, we should use). This also affects the sparse image server: at the point the dialog is shown, we don't know if the pixel size is available in µm for the regions that will be required to generate the server. Furthermore, the dialog itself is [auto-generated from a `ParameterList`](https://github.com/qupath/qupath/blob/main/qupath-extension-processing/src/main/java/qupath/process/gui/commands/CreateTrainingImageCommand.java#L90), which limits the ability to toggle between units. Added to that, I'm not terribly happy with the generation of 'dynamic' training images generally; the code is really complex (since the images can be quite heterogeneous), and performance can be poor whenever many images need to be accessed to create the final result. Therefore I wonder if creating a new command that defaults to writing the image as a new file would be preferable anyway. I'll leave this open for a while in case there are further comments, but my feeling is that the development-and-maintainence-time-to-benefit ratio isn't favorable enough to work on this in the core QuPath software; there are too many higher priorities, and if I'd rather focus efforts on simplicity, maintainability and generalizability in the code. Anyone else can create a new extension to provide an alternative implementation for any of the commands if they want to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932:1280,toggle,toggle,1280,https://qupath.github.io,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932,2,['toggle'],['toggle']
Deployability,"ers"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrum",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:2097,update,updateShape,2097,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['update'],['updateShape']
Deployability,extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1624,deploy,deploy,1624,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"fusing for new users as I guess it will just require to add a new button to implement this. I think you're right, although in ImageJ there *is* no main window. In QuPath there is, so having a viewer separated from it feels a bit weirder to me - if nothing else is open, there's a big area of empty space. > Is that a request that has already been mentioned on the Image.sc forum? If not, shouldn't we ask the opinions of the QuPath users there? . Not that I remember - I thought here would be good to start the discussion, could move to the forum if it proves controversial / we need a vote :). > > Detaching one viewer (and leaving the rest of the 'viewer grid' intact); > ; > Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. This isn't exactly what I meant, but anyway: it's already the case. You can use *View &rarr; Multi-view... &rarr;* to create a grid of viewers, and the toggles apply across all of them. I agree it's sometimes restrictive, but my feeling is that it would cause more trouble if that didn't happen. What I really meant though was that a single viewer could be extracted into its own window, but the main QuPath window would remain as it always was. That's the approach in the PR. The alternative was that viewers are either all in grid mode or all in 'detached' mode (floating windows), but not a combination of both. > Final thought is, if we implement this, we need to consider what should be the advantage of having one QuPath instance with two viewers over having two QuPath instances open each with one viewer, and we should probably aim our design in that direction. Otherwise it could both be a lot of work and even end up with ambiguity in user experience (eg ""if I press this button, which image is affected...? or both...?""). We already have the ambiguity - it's 'resolved' by there being a red boundary around the 'active' window, and it'",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081:1450,toggle,toggles,1450,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081,2,['toggle'],['toggles']
Deployability,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2888,deploy,deploy,2888,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,22,['deploy'],['deploy']
Deployability,"h/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; C",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3634,deploy,deploy,3634,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"h/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:120); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1092); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:633); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:59); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$106(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:2008,install,installExtension,2008,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['install'],['installExtension']
Deployability,"hed the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened the project again after a few hours, verifying that the thumbnails exist in Windows Explorer. I'm now getting a long project load time (although anecdotally, it feels a bit faster), which means the above fix might not work as it could be tied to something other than thumbnails generated in Explorer. Currently, the project is located on the OS-installed drive (NVMe SSD), but the images are located on a separate local NVMe SSD. I'll see if moving both the project and images onto the OS drive changes anything",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:2347,install,installed,2347,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,1,['install'],['installed']
